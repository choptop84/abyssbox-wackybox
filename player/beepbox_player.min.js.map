{"version":3,"names":["TypePresets","sampleLoadingState","constructor","this","statusTable","urlTable","totalSamples","samplesLoaded","SampleLoadedEvent","Event","super","SampleLoadEvents","EventTarget","sampleLoadEvents","startLoadingSample","url","chipWaveIndex","presetSettings","rawLoopOptions","customSampleRate","sampleLoaderAudioContext","AudioContext","sampleRate","closedSampleLoaderAudioContext","chipWave","Config","chipWaves","rawChipWave","rawChipWaves","rawRawChipWave","rawRawChipWaves","fetch","then","response","ok","arrayBuffer","Promise","reject","Error","decodeAudioData","audioBuffer","samples","centerWave","Array","from","getChannelData","integratedSamples","performIntegral","length","dispatchEvent","close","catch","error","alert","loadScript","resolve","willReloadForCustomSamples","script","document","createElement","src","head","appendChild","addEventListener","event","loadBuiltInSamples","set","defaultIntegratedSamples","defaultSamples","name","expression","isSampled","isPercussion","extraSampleDetune","startIndex","index","integratedChipWave","dictionary","chipWaveSamples","kicksample","snaresample","pianosample","WOWsample","overdrivesample","trumpetsample","saxophonesample","orchhitsample","detatchedviolinsample","synthsample","sonic3snaresample","comeonsample","choirsample","overdrivensample","flutesample","legatoviolinsample","tremoloviolinsample","amenbreaksample","pizzicatoviolinsample","timallengruntsample","tubasample","loopingcymbalsample","kickdrumsample","snaredrumsample","closedhihatsample","foothihatsample","openhihatsample","crashsample","pianoC4sample","liverpadsample","marimbasample","susdotwavsample","wackyboxttssample","peppersteak1","peppersteak2","vinyl","slapbass","hdeboverdrive","sunsoftbass","masculinechoir","femininechoir","southtololoche","harp","panflute","krumhorn","timpani","crowdhey","warioland4brass","warioland4organ","warioland4daow","warioland4hourchime","warioland4tick","kirbykick","kirbysnare","kirbybongo","kirbyclick","funkkick","funksnare","funksnareleft","funksnareright","funktomhigh","funktomlow","funkhihatclosed","funkhihathalfopen","funkhihatopen","funkhihatopentip","funkhihatfoot","funkcrash","funkcrashtip","funkride","chipWaveIndexOffset","chipWaveSample","chronoperc1finalsample","synthkickfmsample","woodclicksample","acousticsnaresample","catpaintboxsample","gameboypaintboxsample","mariopaintboxsample","drumpaintboxsample","yoshipaintboxsample","starpaintboxsample","fireflowerpaintboxsample","dogpaintbox","oinkpaintbox","swanpaintboxsample","facepaintboxsample","console","log","wave","sum","i","average","push","Float32Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","cumulative","newWave","getPulseWidthRatio","pulseWidth","pulseWidthRange","getDrumWave","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","round","ultraboxnewchipnoiserand","pow","clz32","b3","b4","b5","b6","b0","b1","b2","white","lastOut","waveLength","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","highIndex","min","retroWave","combinedAmplitude","lerped","log2","amplitude","radians","PI","cos","sin","generateSquareWave","phaseWidth","sineWaveLength","centerPoint","generateSawWave","inverse","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","value","result","effectsIncludeTransition","effects","effectsIncludeChord","effectsIncludePitchShift","effectsIncludeDetune","effectsIncludeVibrato","effectsIncludeNoteFilter","effectsIncludeDistortion","effectsIncludeBitcrusher","effectsIncludePanning","effectsIncludeChorus","effectsIncludeEcho","effectsIncludeReverb","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","octaveMin","octaveMax","echoDelayRange","echoDelayStepTicks","echoSustainRange","echoShelfHz","echoShelfGain","reverbShelfHz","reverbShelfGain","reverbRange","reverbDelayBufferSize","reverbDelayBufferMask","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentCountMin","layeredInstrumentCountMax","patternInstrumentCountMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipBaseExpression","fmBaseExpression","noiseBaseExpression","spectrumBaseExpression","drumsetBaseExpression","harmonicsBaseExpression","pwmBaseExpression","supersawBaseExpression","pickedStringBaseExpression","distortionBaseVolume","bitcrusherBaseVolume","raw","newArray","Object","assign","key","rawChipToIntegrated","firstIndexForSamplesInChipWaveList","pitchFilterMult","isSoft","filterFreqStep","filterFreqRange","filterFreqReferenceSetting","filterFreqReferenceHz","filterFreqMaxHz","filterFreqMinHz","filterGainRange","filterGainCenter","filterGainStep","filterMaxPoints","filterTypeNames","filterMorphCount","filterSimpleCutRange","filterSimplePeakRange","fadeInRange","fadeOutTicks","fadeOutNeutral","drumsetFadeOutTicks","transitions","isSeamless","continues","slides","slideTicks","includeAdjacentPatterns","vibratos","type","delayTicks","vibratoTypes","periodsSeconds","period","arpSpeedScale","unisons","voices","spread","offset","sign","effectNames","effectOrder","noteSizeMax","volumeRange","volumeLogScale","panCenter","panMax","panDelaySecondsMax","chorusRange","chorusPeriodSeconds","chorusDelayRange","chorusDelayOffsets","chorusPhaseOffsets","chorusMaxDelay","concat","reduce","x","y","max","chords","customInterval","arpeggiates","strumParts","singleTone","maxChordSize","operatorCount","maxPitchOrOperatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","algorithms6Op","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","feedbacks","indices","feedbacks6Op","spectrumNoiseLength","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","spectrumMax","harmonicsControlPoints","harmonicsRendered","harmonicsRenderedForPickedString","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthStepPower","supersawVoiceCount","supersawDynamismMax","supersawSpreadMax","supersawShapeMax","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","pitchesPerOctave","drumCount","pitchOctaves","modCount","maxPitch","maximumTonesPerChannel","justIntonationSemitones","map","pitchShiftRange","pitchShiftCenter","detuneCenter","detuneMax","detuneMin","songDetuneMin","songDetuneMax","sineWaveMask","sineWave","generateSineWave","pickedStringDispersionCenterFreq","pickedStringDispersionFreqScale","pickedStringDispersionFreqMult","pickedStringShelfHz","distortionRange","stringSustainRange","stringDecayRate","enableAcousticSustain","sustainTypeNames","bitcrusherFreqRange","bitcrusherOctaveStep","bitcrusherQuantizationRange","maxEnvelopeCount","defaultAutomationRange","instrumentAutomationTargets","computeIndex","displayName","interleave","isFilter","maxCount","effect","compatibleInstruments","operatorWaves","asin","generateTriWave","drive","generateTrapezoidWave","generateRoundedSineWave","pwmOperatorWaves","barEditorHeight","modulators","pianoName","maxRawVol","newNoteVol","forSong","convertRealFactor","associatedEffect","promptName","promptDesc","ceil","optionalModify","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","createTextNode","isArray","Symbol","iterator","__spread","Element","_d","e_2","_e","setAttribute","join","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","_c","split","name_2","createElementNS","test","snakeCaseName","replace","ColorConfig","resetColors","colorLookup","clear","getArbitaryChannelColor","channel","usesColorFormula","base","getComputed","noiseChannels","Number","modChannels","pitchChannels","regex","secondaryChannel","exec","primaryChannel","secondaryNote","primaryNote","noiseSecondaryChannelHue","getComputedStyle","_styleElement","getPropertyValue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","newChannelColors","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","floor","getComputedChannelColor","song","getChannelColor","has","get","pitchChannelCount","c_pitchSecondaryChannelHue","c_pitchSecondaryChannelHueScale","c_pitchSecondaryChannelSat","c_pitchSecondaryChannelSatScale","c_pitchSecondaryChannelLum","c_pitchSecondaryChannelLumScale","c_pitchPrimaryChannelHue","c_pitchPrimaryChannelHueScale","c_pitchPrimaryChannelSat","c_pitchPrimaryChannelSatScale","c_pitchPrimaryChannelLum","c_pitchPrimaryChannelLumScale","c_pitchSecondaryNoteHue","c_pitchSecondaryNoteHueScale","c_pitchSecondaryNoteSat","c_pitchSecondaryNoteSatScale","c_pitchSecondaryNoteLum","c_pitchSecondaryNoteLumScale","c_pitchPrimaryNoteHue","c_pitchPrimaryNoteHueScale","c_pitchPrimaryNoteSat","c_pitchPrimaryNoteSatScale","c_pitchPrimaryNoteLum","c_pitchPrimaryNoteLumScale","noiseChannelCount","c_noiseSecondaryChannelHue","c_noiseSecondaryChannelHueScale","c_noiseSecondaryChannelSat","c_noiseSecondaryChannelSatScale","c_noiseSecondaryChannelLum","c_noiseSecondaryChannelLumScale","c_noisePrimaryChannelHue","c_noisePrimaryChannelHueScale","c_noisePrimaryChannelSat","c_noisePrimaryChannelSatScale","c_noisePrimaryChannelLum","c_noisePrimaryChannelLumScale","c_noiseSecondaryNoteHue","c_noiseSecondaryNoteHueScale","c_noiseSecondaryNoteSat","c_noiseSecondaryNoteSatScale","c_noiseSecondaryNoteLum","c_noiseSecondaryNoteLumScale","c_noisePrimaryNoteHue","c_noisePrimaryNoteHueScale","c_noisePrimaryNoteSat","c_noisePrimaryNoteSatScale","c_noisePrimaryNoteLum","c_noisePrimaryNoteLumScale","c_modSecondaryChannelHue","c_modSecondaryChannelHueScale","c_modSecondaryChannelSat","c_modSecondaryChannelSatScale","c_modSecondaryChannelLum","c_modSecondaryChannelLumScale","c_modPrimaryChannelHue","c_modPrimaryChannelHueScale","c_modPrimaryChannelSat","c_modPrimaryChannelSatScale","c_modPrimaryChannelLum","c_modPrimaryChannelLumScale","c_modSecondaryNoteHue","c_modSecondaryNoteHueScale","c_modSecondaryNoteSat","c_modSecondaryNoteSatScale","c_modSecondaryNoteLum","c_modSecondaryNoteLumScale","c_modPrimaryNoteHue","c_modPrimaryNoteHueScale","c_modPrimaryNoteSat","c_modPrimaryNoteSatScale","c_modPrimaryNoteLum","c_modPrimaryNoteLumScale","setThemeProperty","_a","sheet","cssRules","getThemeProperties","cssText","setTheme","theme","themes","undefined","textContent","themeColor","querySelector","trim","c_invertedText","c_trackEditorBgNoiseDim","c_trackEditorBgNoise","c_trackEditorBgModDim","c_trackEditorBgMod","c_trackEditorBgPitchDim","c_trackEditorBgPitch","Map","Glyde","AWeebyssBox","Scratch","Undertale","forest","canyon","midnight","beachcombing","roe","moonlight","autumn","fruit","sunset","toxic","portal","fusion","nebula","energized","neapolitan","mono","blutonium","zefbox","harrybox","brucebox","nerdbox","nepbox","fogbox","foxbox","wackybox","microbox","paandorasbox","midbox","dogebox2","WeebBox","Protanopia","Tritanopia","Deuteranopia","custom","localStorage","getItem","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","whitePianoKeyText","blackPianoKeyText","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","disabledNotePrimary","disabledNoteSecondary","navigator","userAgent","EditorConfig","valueToPreset","presetValue","categoryIndex","presetIndex","presetCategories","presets","midiProgramToPresetValue","program","category","preset","generalMidi","midiProgram","nameToPresetValue","presetName","instrumentToPreset","instrument","factor","countBits","n","isPowerOf2","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","version","versionDisplayName","releaseNotesURL","isOnMac","platform","ctrlSymbol","ctrlName","customType","settings","eqFilter","transition","fadeInSeconds","chord","unison","cutoffHz","linearGain","vibrato","isNoise","filterCutoffHz","filterResonance","filterEnvelope","algorithm","feedbackType","feedbackAmplitude","operators","frequency","target","envelope","customChipWave","feedbackEnvelope","eqFilterType","eqSimpleCut","eqSimplePeak","noteFilterType","noteSimpleCut","noteSimplePeak","noteFilter","panDelay","reverb","harmonics","stringSustain","midiSubharmonicOctaves","interval","bitcrusherOctave","bitcrusherQuantization","distortion","dynamism","shape","envelopeSpeed","discreteEnvelope","eqSubFilters0","noteSubFilters0","chorus","spectrum","pulseEnvelope","drums","pitchShiftSemitones","volume","eqSubFilters1","pan","clicklessTransition","vibratoDepth","vibratoDelay","vibratoSpeed","vibratoType","echoSustain","echoDelayBeats","fastTwoNoteArp","arpeggioSpeed","waveform","noteSubFilters1","customChipWaveIntegral","detuneCents","aliases","isUsingAdvancedLoopControls","chipWaveLoopStart","chipWaveLoopEnd","chipWaveLoopMode","chipWavePlayBackwards","chipWaveStartOffset","Deque","_capacity","_buffer","_mask","_offset","_count","pushFront","_expandCapacity","pushBack","popFront","popBack","peakFront","peakBack","count","remove","oldBuffer","size","events","activeEvents","listeners","raise","eventType","eventData","extraEventData","pop","listen","callback","unlisten","lisen","indexOf","splice","unlistenAll","FilterCoefficients","a","b","order","linearGain0thOrder","lowPass1stOrderButterworth","cornerRadiansPerSample","g","tan","a0","lowPass1stOrderSimplified","highPass1stOrderButterworth","highShelf1stOrder","shelfLinearGain","sqrtGain","allPass1stOrderInvertPhaseAbove","allPass1stOrderFractionalDelay","delay","lowPass2ndOrderButterworth","peakLinearGain","alpha","lowPass2ndOrderSimplified","feedback","highPass2ndOrderButterworth","highShelf2ndOrder","slope","A","Aplus","Aminus","sqrtA2Alpha","peak2ndOrder","bandWidthScale","bandWidth","FrequencyResponse","real","imag","denom","analyze","filter","radiansPerSample","analyzeComplex","realZ1","imagZ1","realNum","imagNum","realDenom","imagDenom","realZ","imagZ","imagTemp","magnitude","angle","atan2","DynamicBiquadFilter","a1","a2","a1Delta","a2Delta","b0Delta","b1Delta","b2Delta","output1","output2","useMultiplicativeInputCoefficients","resetOutput","loadCoefficientsWithGradient","start","end","deltaRate","warpInfinityToNyquist","atan","epsilon","clamp","val","validateRange","parseFloatWithDefault","defaultValue","parseFloat","isNaN","parseIntWithDefault","parseInt","encode32BitNumber","buffer","base64IntToCharCode","decode32BitNumber","compressed","charIndex","base64CharCodeToInt","charCodeAt","encodeUnisonSettings","v","o","e","cleanS","cleanSDivided","cleanO","cleanODivided","cleanE","cleanI","convertLegacyKeyToKeyAndOctave","rawKeyIndex","octave","BitFieldReader","source","_bits","_readIndex","read","readLongTail","minValue","minBits","numBits","readPartDuration","readLegacyPartDuration","readPinCount","readPitchInterval","BitFieldWriter","_index","write","writeLongTail","writePartDuration","writePinCount","writePitchInterval","other","encodeBase64","lengthBase64","makeNotePin","time","Note","pitch","fadeout","pitches","pins","continuesLastPattern","pickMainInterval","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestSize","pin","clone","newNote","getEndPinIndex","part","endPinIndex","Pattern","notes","instruments","cloneNotes","note","reset","toJsonObject","isModChannel","noteArray","mod","volumeCap","getVolumeCapForSetting","modFilterTypes","pointArray","useVol","tick","rhythm","pitchBend","forMod","noteObject","points","patternObject","patternInstruments","fromJsonObject","importedPartsPerBeat","isNoiseChannel","instrumentCount","getMaxInstrumentsPerPatternForChannel","maxNoteCount","beatsPerBar","k","startInterval","pointObject","lowestPitch","highestPitch","Operator","copy","CustomAlgorithm","fromPreset","carriers","modulation","CustomFeedBack","inIndices","SpectrumWave","hash","isHarmonic","markCustomWaveDirty","hashMult","Synth","fittingPowerOfTwo","point","SpectrumWaveState","_hash","getCustomWave","lowestOctave","pitchTweak","controlPointToOctave","value1","value2","octave1","octave2","HarmonicsWave","HarmonicsWaveState","instrumentType","_generatedForType","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","performIntegralOld","FilterControlPoint","freq","gain","freqSetting","gainSetting","getHz","getHzFromSettingValue","getSettingValueFromHz","hz","getRoundedSettingValueFromHz","getLinearGain","peakMult","power","neutral","interpolatedPower","getRoundedSettingValueFromLinearGain","toCoefficients","freqMult","getVolumeCompensationMult","gainPow","freqRelativeTo8khz","warpedFreq","warpedOctave","distanceFromCenter","freqLoudness","FilterSettings","controlPoints","controlPointCount","addPoint","controlPoint","filterArray","filterObject","filtersCanMorph","filterA","filterB","lerpFilters","pos","lerpedFilter","convertLegacySettings","legacyCutoffSetting","legacyResonanceSetting","legacyEnv","legacyFilterMaxRadians","legacyFilterMax","resonant","firstOrder","cutoffAtMax","legacyFilterCutoffRange","envDecays","standardSampleRate","legacyHz","legacyRadians","extraOctaves","targetRadians","curvedHz","finalHz","finalRadians","legacyFilter","legacyFilterGainAtNewRadians","logGain","convertedGain","intendedGain","invertedGain","curvedRadians","legacyFilterGain","convertLegacySettingsForSynth","allowFirstOrder","EnvelopeSettings","envelopeObject","Instrument","chipNoise","eqFilterSimpleCut","eqFilterSimplePeak","noteFilterSimpleCut","noteFilterSimplePeak","eqSubFilters","noteSubFilters","fadeIn","fadeOut","envelopeCount","pitchShift","detune","unisonVoices","unisonSpread","unisonOffset","unisonExpression","unisonSign","legacyTieOver","decimalOffset","supersawDynamism","supersawSpread","supersawShape","stringSustainType","bitcrusherFreq","echoDelay","algorithm6Op","feedbackType6Op","customAlgorithm","customFeedbackType","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modInstruments","invalidModulators","spectrumWave","wavePrev","setTypeAndReset","legacySettings","forceSimpleFilter","filterCutoff","legacyFilterEnv","legacyPulseEnv","legacyOperatorEnvelopes","operatorEnvelopes","legacyFeedbackEnv","noCarriersControlledByNoteSize","allCarriersControlledByNoteSize","noteSizeControlsSomethingElse","addEnvelope","instrumentObject","getChord","detuneToCents","fadeInSettingToSeconds","fadeOutSettingToTicks","getDrumsetEnvelope","operatorArray","operator","customFeedback","Float64Array","useSlowerRhythm","legacyGlobalReverb","legacyEffectsNames","transitionProperty","binary","seamless","sudden","hard","smooth","soft","slide","secondsToFadeInSetting","ticksToFadeOutSetting","chordProperty","legacyChordNames","harmony","unisonProperty","legacyChorusNames","union","fifths","octaves","centsToDetune","vibratoProperty","legacyVibratoNames","findIndex","legacyEnvelopeNames","steady","getEnvelope","drum","legacyWaveNames","triangle","square","sawtooth","spiky","plateau","modboxWaveNames","sax","guitar","viola","brass","lyre","piccolo","squaretooth","flatline","sandboxWaveNames","euphonium","recorder","contrabass","zefboxWaveNames","squaretal","sawtal","pulse","miscWaveNames","test1","intense","paandorasboxWaveNames","kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","synth","sonic3snare","choir","overdriveguitar","flute","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","marimba","susdotwav","wackyboxtts","rawName","table","potentialChipWaveIndex","feedback6Op","operatorObject","filterCutoffMaxHz","filterCutoffRange","filterResonanceRange","LN2","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","envelopeArray","tempEnvelope","getLargestControlPointCount","forNoteFilter","largest","frequencyFromPitch","makeEmpty","supportsEnvelopeTarget","envelopeSettings","automationTarget","useControlPointCount","clearInvalidEnvelopeTargets","envelopeIndex","getTransition","getFadeInSeconds","getFadeOutTicks","Channel","patterns","bars","muted","Song","string","scaleCustom","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","getNewNoteVolume","isMod","modChannel","modInstrument","vol","tempoIndex","tempo","getVolumeCap","modulator","cap","modSetting","filterType","fromBase64String","initToDefault","getChannelCount","modChannelCount","getMaxInstrumentsPerChannel","layeredInstruments","getMaxInstrumentsPerPattern","channelIndex","getChannelIsNoise","getChannelIsMod","andResetChannels","scale","loopStart","loopLength","barCount","patternsPerChannel","title","pattern","bar","toBase64String","bits","_variant","_latestUltraBoxVersion","encodedSongTitle","encodeURIComponent","encodedChannelName","usingSubFilterBitfield","harmonicsBits","encodedLoopMode","encodedReleaseMode","spectrumBits","neededBits","shapeBits","bitsPerNoteSize","getNeededBits","maxInstrumentsPerPattern","neededInstrumentCountBits","neededInstrumentIndexBits","neededModInstrumentIndexBits","instrumentIndex","modFilter","status","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","apply","shapeIndex","unshift","allPitches","pitchIndex","pitchIter","stringLength","digits","prototype","maxApplyArgs","customSamplesStr","customSamples","slice","_envelopeFromLegacyIndex","legacyIndex","_clearSamples","JSON","parse","substring","variantTest","fromBeepBox","fromJummBox","fromGoldBox","fromUltraBox","_latestBeepboxVersion","_oldestBeepboxVersion","_latestJummBoxVersion","_oldestJummBoxVersion","_latestGoldBoxVersion","_oldestGoldBoxVersion","_oldestUltraBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","beforeNine","willLoadLegacySamplesForOldSongs","compressed_array","replaceAll","shift","_restoreChipWaveListToDefault","willLoadLegacySamples","willLoadNintariboxSamples","willLoadMarioPaintboxSamples","customSampleUrls","customSamplePresets","toLowerCase","parseOldSyntax","_parseAndConfigureCustomSample","customSamplePresetsMap","legacySettingsCache","command","instrumentChannelIterator","instrumentIndexIterator","useSlowerArpSpeed","songNameLength","decodeURIComponent","channelCount","instrumentsPerChannel","instrumentsFlagBits","newRhythm","legacyWaves","chipWaveReal","chipWaveCounter","typeCheck","originalControlPointCount","originalSubfilterControlPointCount","sampleLoopInfoEncodedLength","sampleLoopInfoEncoded","sampleLoopInfo","atob","entry","info","Boolean","URL","pregoldToEnvelope","aa","sustainValue","legacyEffects","legacyEnvelopes","originalValue","unisonSpreadNegative","unisonOffsetNegative","unisonExpressionNegative","unisonSignNegative","nextValue","restoreLimiterDefaults","channelNameLength","carrierCountTemp","tempModArray","chipWaveForCompat","freqToGold3","freqToUltraBox","jummToUltraEnvelope","pre3To3g","old","jummToG","byteCount","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","songReverbChannel","songReverbInstrument","songReverbIndex","jumfive","detuneScaleNotes","newPattern","newNotes","noteCount","useOldShape","pinCount","initialSize","bendCount","pinObj","intervalIter","isBackwards","restLength","patternIndex","lowestPart","chn","window","location","setTimeout","reload","_isProperUrl","customSampleUrlIndex","urlSliced","isCustomPercussive","customRootKey","presetIsUsingAdvancedLoopControls","presetChipWaveLoopStart","presetChipWaveLoopEnd","presetChipWaveStartOffset","presetChipWaveLoopMode","presetChipWavePlayBackwards","parsedSampleOptions","optionsStartIndex","optionsEndIndex","rawOptions","rawOption","optionCode","charAt","optionData","parsedUrl","sliceForSampleRate","sliceForRootKey","urlWithNamedOptions","namedOptions","pathname","isCustomSampled","rootKey","customSamplePresetSettings","customSamplePreset","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","patternArray","sequenceArray","l","channelObject","sequence","format","_format","customScale","keyOctave","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","shouldLoadLegacySamples","instrumentObjects","waveName","names","oldNames","veryOldNames","includes","oldScaleNames","enigma","scaleName","letter","toUpperCase","symbol","C","D","E","F","G","B","maxInstruments","maxPatterns","maxBars","newPitchChannels","newNoiseChannels","newModChannels","getPattern","getBeatsPerMinute","maxValue","PickedString","delayLine","allPassG","allPassGDelta","sustainFilterA1","sustainFilterA1Delta","sustainFilterA2","sustainFilterA2Delta","sustainFilterB0","sustainFilterB0Delta","sustainFilterB1","sustainFilterB1Delta","sustainFilterB2","sustainFilterB2Delta","delayIndex","allPassSample","allPassPrevInput","sustainFilterSample","sustainFilterPrevOutput2","sustainFilterPrevInput1","sustainFilterPrevInput2","fractionalDelaySample","prevDelayLength","delayResetOffset","update","instrumentState","tone","stringIndex","roundedSamplesPerTick","stringDecayStart","stringDecayEnd","sustainType","allPassCenter","samplesPerSecond","phaseDeltaStart","phaseDeltas","phaseDeltaScale","phaseDeltaScales","phaseDeltaEnd","radiansPerSampleStart","radiansPerSampleEnd","centerHarmonicStart","centerHarmonicEnd","allPassRadiansStart","allPassRadiansEnd","shelfRadians","decayCurveStart","decayCurveEnd","register","registerShelfCenter","registerLowpassCenter","decayRateStart","decayRateEnd","expressionDecayStart","expressionDecayEnd","tempFilterStartCoefficients","tempFrequencyResponse","allPassGStart","allPassPhaseDelayStart","tempFilterEndCoefficients","allPassGEnd","allPassPhaseDelayEnd","brightnessType","shelfGainStart","shelfGainEnd","cornerHardness","lowpass1stOrderCutoffRadiansStart","lowpass1stOrderCutoffRadiansEnd","lowpass2ndOrderCutoffRadiansStart","lowpass2ndOrderCutoffRadiansEnd","lowpass2ndOrderGainStart","lowpass2ndOrderGainEnd","sustainFilterA1Start","sustainFilterA2Start","sustainFilterB0Start","sustainFilterB1Start","sustainFilterB2Start","sustainFilterPhaseDelayStart","sustainFilterA1End","sustainFilterA2End","sustainFilterB0End","sustainFilterB1End","sustainFilterB2End","sustainFilterPhaseDelayEnd","periodLengthStart","periodLengthEnd","minBufferLength","delayLength","delayLengthEnd","delayLengthDelta","pitchChanged","reinitializeImpulse","likelyMaximumLength","newDelayLine","oldDelayBufferMask","startCopyingFromIndex","delayBufferMask","startImpulseFrom","startZerosFrom","stopZerosAt","impulseWave","impulseWaveLength","impulsePhaseDelta","fadeDuration","startImpulseFromSample","stopImpulseAt","stopImpulseAtSample","impulsePhase","prevWaveIntegral","impulsePhaseInt","nextWaveIntegral","phaseRatio","sample","combinedFade","curvedFade","EnvelopeComputer","noteSecondsStart","noteSecondsEnd","noteTicksStart","noteTicksEnd","noteSizeStart","noteSizeEnd","prevNoteSize","nextNoteSize","_noteSizeFinal","prevNoteSecondsStart","prevNoteSecondsEnd","prevNoteTicksStart","prevNoteTicksEnd","_prevNoteSizeFinal","prevSlideStart","prevSlideEnd","nextSlideStart","nextSlideEnd","prevSlideRatioStart","prevSlideRatioEnd","nextSlideRatioStart","nextSlideRatioEnd","envelopeStarts","envelopeEnds","_modifiedEnvelopeIndices","_modifiedEnvelopeCount","lowpassCutoffDecayVolumeCompensation","computeEnvelopes","currentPart","tickTimeStart","tickTimeStartReal","secondsPerTick","timeScale","atNoteStart","forceContinueAtStart","tickTimeEnd","tickTimeEndReal","beatsPerTick","beatTimeStart","beatTimeEnd","passedEndOfNote","startPin","endPin","startPinTick","endPinTick","ratioStart","ratioEnd","noteStartTick","noteStartPart","noteEndTick","noteEndPart","maximumSlideTicks","prevNote","nextNote","forceContinueAtEnd","usedNoteSize","targetIndex","envelopeStart","computeEnvelope","envelopeEnd","filterSettings","tmpNoteFilterStart","getLowpassCutoffDecayVolumeCompensation","clearEnvelopes","beats","noteSize","noteSizeToVolumeMult","attack","lin","Tone","fill","chordSize","drumsetPitch","prevNotePitchIndex","nextNotePitchIndex","freshlyAllocated","isOnLastTick","ticksSinceReleased","liveInputSamplesHeld","lastInterval","noiseSample","stringSustainStart","stringSustainEnd","phases","directions","chipWaveCompletions","chipWavePrevWaves","chipWaveCompletionsLastWave","expressionDelta","operatorExpressions","operatorExpressionDeltas","prevPitchExpressions","prevVibrato","prevStringDecay","pulseWidthDelta","supersawDynamismDelta","supersawUnisonDetunes","supersawShapeDelta","supersawDelayLength","supersawDelayLengthDelta","supersawDelayLine","supersawDelayIndex","supersawPrevPhaseDelta","pickedStrings","noteFilters","noteFilterCount","initialNoteFilterInput1","initialNoteFilterInput2","specialIntervalExpressionMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","envelopeComputer","pickedString","InstrumentState","awake","computed","tonesAddedInThisTick","flushingDelayLines","deactivateAfterThisTick","attentuationProgress","flushedSamples","activeTones","activeModTones","releasedTones","liveInputTones","synthesizer","noisePitchFilterMult","volumeScale","arpTime","vibratoTime","nextVibratoTime","envelopeTime","eqFilterVolume","eqFilterVolumeDelta","mixVolume","mixVolumeDelta","delayInputMult","delayInputMultDelta","distortionDelta","distortionDrive","distortionDriveDelta","distortionFractionalInput1","distortionFractionalInput2","distortionFractionalInput3","distortionPrevInput","distortionNextOutput","bitcrusherPrevInput","bitcrusherCurrentOutput","bitcrusherPhase","bitcrusherPhaseDelta","bitcrusherPhaseDeltaScale","bitcrusherScale","bitcrusherScaleScale","bitcrusherFoldLevel","bitcrusherFoldLevelScale","eqFilters","eqFilterCount","initialEqFilterInput1","initialEqFilterInput2","panningDelayLine","panningDelayPos","panningVolumeL","panningVolumeR","panningVolumeDeltaL","panningVolumeDeltaR","panningOffsetL","panningOffsetR","panningOffsetDeltaL","panningOffsetDeltaR","chorusDelayLineL","chorusDelayLineR","chorusDelayLineDirty","chorusDelayPos","chorusPhase","chorusVoiceMult","chorusVoiceMultDelta","chorusCombinedMult","chorusCombinedMultDelta","echoDelayLineL","echoDelayLineR","echoDelayLineDirty","echoDelayPos","echoDelayOffsetStart","echoDelayOffsetEnd","echoDelayOffsetRatio","echoDelayOffsetRatioDelta","echoMult","echoMultDelta","echoShelfA1","echoShelfB0","echoShelfB1","echoShelfSampleL","echoShelfSampleR","echoShelfPrevInputL","echoShelfPrevInputR","reverbDelayLine","reverbDelayLineDirty","reverbDelayPos","reverbMult","reverbMultDelta","reverbShelfA1","reverbShelfB0","reverbShelfB1","reverbShelfSample0","reverbShelfSample1","reverbShelfSample2","reverbShelfSample3","reverbShelfPrevInput0","reverbShelfPrevInput1","reverbShelfPrevInput2","reverbShelfPrevInput3","allocateNecessaryBuffers","samplesPerTick","panningDelayBufferSize","chorusDelayBufferSize","safeEchoDelaySteps","safeEchoDelayBufferSize","newDelayLineL","newDelayLineR","oldMask","deactivate","resetAllEffects","compute","getInstrumentSynthFunction","updateWaves","usesDistortion","usesBitcrusher","usesPanning","usesChorus","usesEcho","usesReverb","useDistortionStart","useDistortionEnd","isModActive","getModValue","distortionSliderStart","distortionSliderEnd","distortionStart","distortionEnd","distortionDriveStart","distortionDriveEnd","freqSettingStart","freqSettingEnd","quantizationSettingStart","quantizationSettingEnd","freqStart","freqEnd","scaleStart","scaleEnd","foldLevelStart","foldLevelEnd","eqFilterSettingsStart","eqFilterSettingsEnd","startPoint","startSimpleFreq","startSimpleGain","endSimpleFreq","endSimpleGain","filterChanges","endPoint","eqFilterSettings","tmpEqFilterStart","tmpEqFilterEnd","mainInstrumentVolume","instrumentVolumeToVolumeMult","mixVolumeEnd","startVal","endVal","eqFilterVolumeStart","eqFilterVolumeEnd","delayInputMultStart","delayInputMultEnd","usePanStart","usePanEnd","panStart","panEnd","volumeStartL","volumeStartR","volumeEndL","volumeEndR","maxDelaySamples","usePanDelayStart","usePanDelayEnd","delayStart","delayEnd","delayStartL","delayStartR","delayEndL","delayEndR","useChorusStart","useChorusEnd","chorusStart","chorusEnd","chorusCombinedMultStart","chorusCombinedMultEnd","maxEchoMult","averageEchoDelaySeconds","useEchoSustainStart","useEchoSustainEnd","echoMultStart","echoMultEnd","useEchoDelayStart","useEchoDelayEnd","ignoreTicks","tmpEchoDelayOffsetStart","tmpEchoDelayOffsetEnd","maxReverbMult","useReverbStart","useReverbEnd","reverbStart","reverbEnd","totalDelaySamples","attenuationThreshold","halfLifeMult","delayDuration","attenuationPerSecond","averageMult","averageReverbDelaySeconds","progressInTick","progressAtEndOfTick","_drumsetIndexToSpectrumOctave","getDrumsetWave","drumsetIndexReferenceDelta","ChannelState","singleSeamlessInstrument","syncSongState","channelState","initModFilters","tmpNoteFilterEnd","warmUpSynthesizer","getSamplesPerTick","dummyArray","isPlayingSong","synthesize","computeLatestModValues","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","heldMods","beat","currentBar","instrumentIdx","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","setModValue","usedInstruments","tgtPattern","eqFilterParam","noteFilterParam","modulatorAdjust","tgtInstrument","determineInvalidModulators","tgtInstrumentList","str","operatorAmplitudeCurve","playing","recording","isRecording","playheadInternal","remainder","tickSampleCountdown","isAtStartOfTick","prevBar","getSamplesPerBar","getTicksIntoBar","getCurrentPart","getTotalSamples","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","ended","foundMod","find","sort","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getTotalBars","useLoopCount","loopRepeatCount","preferLowerLatency","anticipatePoorPerformance","liveInputDuration","liveBassInputDuration","liveInputStarted","liveBassInputStarted","liveInputPitches","liveBassInputPitches","liveInputChannel","liveBassInputChannel","liveInputInstruments","liveBassInputInstruments","oscRefreshEventTimer","oscEnabled","enableMetronome","countInMetronome","renderingSong","wantToSkip","nextBar","isAtEndOfTick","liveInputEndTime","browserAutomaticallyClearsAudioBuffer","tempDrumSetControlPoint","loopBar","tonePool","tempMatchedPitchTones","startedMetronome","metronomeSamplesRemaining","metronomeAmplitude","metronomePrevAmplitude","metronomeFilter","limit","tempMonoInstrumentSampleBuffer","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","outputDataR","performance","now","deactivateAudio","computeDelayBufferSizes","setSong","panningDelayBufferMask","chorusDelayBufferMask","activateAudio","bufferSize","latencyHint","webkitAudioContext","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","maintainLiveInput","play","pause","startRecording","resetEffects","freeAllTones","volumeStart","volumeEnd","setting","nextVal","isAnyModActive","unsetMod","isFilterModActive","channelIdx","forceHoldMods","found","holdFor","snapToStart","snapToBar","goToBar","jumpIntoLoop","oldBar","goToNextBar","goToPrevBar","getNextBar","skipBar","outputBufferLength","playSong","skippedBars","firstSkippedBufferIndex","bufferIndex","samplesLeftInBuffer","samplesLeftInTick","runLength","runEnd","determineCurrentActiveTones","playModTone","barVisited","determineLiveInputTones","tonesPlayedInThisInstrument","freeReleasedTone","shouldFadeOutFast","computeTone","playTone","effectsSynth","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","partTimeStart","partTimeEnd","useVibratoSpeed","midBeat","periods","samplesPerPeriod","tempAmplitude","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","isInteger","useEnvelopeSpeed","isFinite","freeTone","newTone","releaseTone","toneIndex","bassPitches","toneList","toneCount","moveTonesIntoOrderedTempMatchedList","clearTempMatchedPitchTones","adjacentPatternHasCompatibleInstrumentTransition","otherPattern","otherNote","forceContinue","otherInstrument","otherTransition","adjacentNotesHaveMatchingPitches","firstNote","secondNote","firstNoteInterval","notePitches","currentTick","prevNotes","nextNotes","fillCount","modToneCount","newInstrumentIndex","sourceInstrumentState","destInstrumentState","prevNoteForThisInstrument","nextNoteForThisInstrument","oldTone","partsPerBar","tonesInPrevNote","tonesInNextNote","prevPattern","lastNote","patternForcesContinueAtStart","chordOfCompatibleInstrument","nextPattern","nextPatternForcesContinueAtStart","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","modSynth","computeChordExpression","chordExpression","intervalScale","secondsPerPart","sampleTime","beatsPerPart","specialIntervalMult","toneIsOnLastTick","intervalStart","intervalEnd","fadeExpressionStart","fadeExpressionEnd","chordExpressionStart","chordExpressionEnd","expressionReferencePitch","baseExpression","pitchDamping","chipWaveLength","firstOffset","lastOffset","getOperatorWave","startTicksSinceReleased","endTicksSinceReleased","pinStart","pinEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","noteLengthTicks","tmpNoteFilter","noteFilterSettingsStart","noteFilterSettingsEnd","intervalDiff","chordSizeDiff","pitchShiftScalarStart","pitchShiftScalarEnd","modDetuneStart","modDetuneEnd","vibratoAmplitudeStart","vibratoAmplitudeEnd","vibratoStart","POSITIVE_INFINITY","getLFOAmplitude","ticksUntilVibratoStart","vibratoLfoEnd","vibratoDepthEnvelopeEnd","vibratoEnd","ticksUntilVibratoEnd","noteFilterExpression","noteAllFreqsEnvelopeStart","noteAllFreqsEnvelopeEnd","noteFreqEnvelopeStart","noteFreqEnvelopeEnd","notePeakEnvelopeStart","notePeakEnvelopeEnd","noteFilterSettings","drumsetFilterEnvelope","drumsetFilterEnvelopeStart","drumsetFilterEnvelopeEnd","sineExpressionBoost","totalCarrierExpression","arpeggioInterval","associatedCarrierIndex","pitchStart","pitchEnd","baseFreqStart","baseFreqEnd","targetFreqStart","targetFreqEnd","freqEnvelopeStart","freqEnvelopeEnd","amplitudeStart","amplitudeEnd","amplitudeCurveStart","amplitudeCurveEnd","expressionStart","expressionEnd","pitchExpressionStart","pitchExpressionEnd","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","freqEndRatio","basePhaseDeltaScale","intervalOffset","endPitch","settingsExpressionMult","basePulseWidth","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","decimalOffsetModStart","decimalOffsetStart","useSustainStart","useSustainEnd","startFreq","unisonEnvelopeStart","unisonEnvelopeEnd","unisonAStart","unisonAEnd","unisonBStart","unisonBEnd","supersawExpressionStart","supersawExpressionEnd","minFirstVoiceAmplitude","useDynamismStart","useDynamismEnd","curvedDynamismStart","curvedDynamismEnd","firstVoiceAmplitudeStart","firstVoiceAmplitudeEnd","dynamismStart","dynamismEnd","initializeSupersaw","accumulator","normalizedPhase","zeroCrossingPhase","prevDrop","nextDrop","phaseDelta","distanceToZeroCrossing","swappedIndex","baseSpreadSlider","useSpreadStart","useSpreadEnd","averageSpreadSlider","curvedSpread","baseShape","useShapeStart","useShapeEnd","shapeStart","shapeEnd","delayLengthStart","pulseExpressionRatio","sustainEnvelopeStart","sustainEnvelopeEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulatorNumber","feedbackIndices","wrappedFmSynth","Function","loopableChipSynth","chipSynth","harmonicsSynth","pulseWidthSynth","supersawSynth","pickedStringSynth","noiseSynth","spectrumSynth","drumsetSynth","fm6SynthFunctionCache","wrappedFm6Synth","wrap","data","chipWaveLoopLength","phaseDeltaA","phaseDeltaB","directionA","directionB","chipWaveCompletionA","chipWaveCompletionB","lastWaveA","lastWaveB","chipWaveCompletionFadeLength","phaseDeltaScaleA","phaseDeltaScaleB","phaseA","phaseB","prevWaveIntegralA","prevWaveIntegralB","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","filters","filterCount","initialFilterInput1","initialFilterInput2","applyFilters","prevWaveA","prevWaveB","sampleIndex","wrapped","waveA","waveB","inputSample","completionFadeA","completionFadeB","nextWaveIntegralA","nextWaveIntegralB","pwia","pwib","phaseA_","phaseB_","output","sanitizeFilters","voiceCount","pickedStringFunction","pickedStringFunctionCache","pickedStringSource","sampleList","voice","lines","usesEqFilter","signature","effectsFunction","effectsFunctionCache","effectsSource","usesDelays","phase","sawPhaseA","sawPhaseB","pulseWave","t","dynamismDelta","unisonDetunes","shapeDelta","supersawSample","detunedPhaseDelta","delaySampleTime","lowerIndex","upperIndex","delayRatio","prevDelaySample","phaseMask","pitchRelativefilter","findRandomZeroCrossing","phaseInt","waveSample","referenceDelta","stereoBufferIndex","dotTarget","lerpEndRatio","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","instrumentVolume","volumeMultToInstrumentVolume","volumeMult","volumeMultToNoteSize","seconds","ticks","lower","upper","cents","beatsPerSecond","partsPerSecond","tickPerSecond","sanitizeDelayLine","lastIndex","mask","input1","input2","button","div","h1","input","canvas","svg","circle","rect","path","isMobile","colorTheme","getLocalStorage","animationRequest","prevHash","id","toString","pauseButtonDisplayed","zoomEnabled","timelineWidth","outVolumeHistoricTimer","outVolumeHistoricCap","oscilascope","_EventUpdateCanvas","directlinkL","directlinkR","ctx","getContext","fillStyle","fillRect","width","height","yl","yr","display","titleText","editLink","copyLink","href","shareLink","fullscreenLink","draggingPlayhead","playButton","playButtonContainer","class","loopIcon","d","loopButton","viewBox","volumeIcon","volumeSlider","step","zoomIcon","cx","cy","r","stroke","zoomButton","timeline","timelineContainer","visualizationContainer","noteFlashElementsPerBar","currentNoteFlashElements","currentNoteFlashBar","notesFlashWhenPlayed","outVolumeBarBg","outVolumeBar","stop1","stop","stop2","stop3","gradient","linearGradient","gradientUnits","defs","volumeBarContainer","preserveAspectRatio","setLocalStorage","setItem","removeFromUnorderedArray","lastElement","loadSong","songString","reuseParams","updatedSongString","hashUpdatedExternally","myHash","parameter","equalsIndex","paramName","renderLoopIcon","renderTimeline","body","pauseIfAnotherPlayerStartsHandle","pauseIfAnotherPlayerStarts","clearInterval","storedPlayerId","onTogglePlay","renderPlayhead","animate","requestAnimationFrame","volumeUpdate","renderPlayButton","useOutVolumeCap","historicOutCap","cancelAnimationFrame","setInterval","onTimelineMouseMove","preventDefault","onTimelineCursorMove","clientX","pageX","onTimelineTouchMove","touches","mouseX","boundingRect","getBoundingClientRect","left","right","onTimelineCursorUp","setSynthVolume","scrollLeft","playheadBar","modPlayhead","noteFlashElementsForThisBar","outsideOfCurrentBar","getAttribute","isInvisible","opacity","noteStart","noteEnd","noteBar","dist","innerHTML","timelineHeight","windowOctaves","windowPitchCount","semitoneHeight","targetBeatWidth","targetSemitoneHeight","barWidth","partWidth","wavePitchHeight","drumPitchHeight","color","noteFlashColor","noteFlashColorSecondary","pitchHeight","configuredOctaveScroll","offsetY","offsetX","drawNote","noteElement","dflash","noteFlashElement","radius","classList","add","renderZoomIcon","top","self","keyCode","nav","clipboard","writeText","prompt","textField","select","succeeded","execCommand","share"],"sources":["../../synth/SynthConfig.ts","../../node_modules/imperative-html/src/elements-base.ts","../../node_modules/imperative-html/src/elements-strict.ts","../../editor/ColorConfig.ts","../../editor/EditorConfig.ts","../../synth/FFT.ts","../../synth/Deque.ts","../../global/Events.ts","../../synth/filtering.ts","../../synth/synth.ts","../../player/style.ts","../../player/main.ts","../../global/Oscilascope.ts"],"sourcesContent":["/*!\nCopyright (c) 2012-2022 John Nesky and contributing authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\nexport interface Dictionary<T> {\n    [K: string]: T;\n}\n\n// @TODO: Not ideal to make this writable like this.\n// export interface DictionaryArray<T> extends ReadonlyArray<T> {\nexport interface DictionaryArray<T> extends Array<T> {\n    dictionary: Dictionary<T>;\n}\n\nexport const enum FilterType {\n    lowPass,\n    highPass,\n    peak,\n    length,\n}\n\nexport const enum SustainType {\n\tbright,\n\tacoustic,\n\tlength,\n}\n\nexport const enum EnvelopeType {\n\tnoteSize,\n    none,\n\tpunch,\n\tflare,\n\ttwang,\n\tswell,\n\ttremolo,\n\ttremolo2,\n    decay,\n    wibble,\n    hard,\n    linear,\n    rise,\n    blip\n}\n\nexport const enum InstrumentType {\n    chip,\n    fm,\n    noise,\n    spectrum,\n    drumset,\n    harmonics,\n    pwm,\n    pickedString,\n    supersaw,\n    customChipWave,\n    mod,\n\tfm6op,\n    length,\n}\n\nexport const TypePresets: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"pulse width\", \"picked string\", \"supersaw\", \"chip (custom)\", \"mod\", \"FM (6-op)\"];\n\nexport const enum DropdownID {\n    Vibrato = 0,\n    Pan = 1,\n    Chord = 2,\n    Transition = 3,\n    FM = 4,\n    PulseWidth = 5,\n    Unison = 6,\n    Envelope = 7,\n\n}\n\nexport const enum EffectType {\n    reverb,\n    chorus,\n    panning,\n    distortion,\n    bitcrusher,\n    noteFilter,\n    echo,\n    pitchShift,\n    detune,\n    vibrato,\n    transition,\n    chord,\n    // If you add more, you'll also have to extend the bitfield used in Base64 which currently uses two six-bit characters.\n    length,\n}\n\nexport const enum EnvelopeComputeIndex {\n    noteVolume,\n    noteFilterAllFreqs,\n    pulseWidth,\n    stringSustain,\n    unison,\n    operatorFrequency0, operatorFrequency1, operatorFrequency2, operatorFrequency3, operatorFrequency4, operatorFrequency5,\n    operatorAmplitude0, operatorAmplitude1, operatorAmplitude2, operatorAmplitude3, operatorAmplitude4, operatorAmplitude5,\n    feedbackAmplitude,\n    pitchShift,\n    detune,\n    vibratoDepth,\n    noteFilterFreq0, noteFilterFreq1, noteFilterFreq2, noteFilterFreq3, noteFilterFreq4, noteFilterFreq5, noteFilterFreq6, noteFilterFreq7,\n    noteFilterGain0, noteFilterGain1, noteFilterGain2, noteFilterGain3, noteFilterGain4, noteFilterGain5, noteFilterGain6, noteFilterGain7,\n    decimalOffset,\n    supersawDynamism,\n\tsupersawSpread,\n\tsupersawShape,\n    length,\n}\n\n/*\nexport const enum InstrumentAutomationIndex {\n    mixVolume,\n    eqFilterAllFreqs,\n    eqFilterFreq0, eqFilterFreq1, eqFilterFreq2, eqFilterFreq3, eqFilterFreq4, eqFilterFreq5, eqFilterFreq6, eqFilterFreq7,\n    eqFilterGain0, eqFilterGain1, eqFilterGain2, eqFilterGain3, eqFilterGain4, eqFilterGain5, eqFilterGain6, eqFilterGain7,\n    distortion,\n    bitcrusherQuantization,\n    bitcrusherFrequency,\n    panning,\n    chorus,\n    echoSustain,\n    //echoDelay, // Wait until tick settings can be computed once for multiple run lengths.\n    reverb,\n    length,\n}\n*/\n\nexport interface BeepBoxOption {\n    readonly index: number;\n    readonly name: string;\n}\n\nexport interface Scale extends BeepBoxOption {\n    readonly flags: ReadonlyArray<boolean>;\n    readonly realName: string;\n}\n\nexport interface Key extends BeepBoxOption {\n    readonly isWhiteKey: boolean;\n    readonly basePitch: number;\n}\n\nexport interface Rhythm extends BeepBoxOption {\n    readonly stepsPerBeat: number;\n    readonly roundUpThresholds: number[] | null;\n}\n\nexport interface ChipWave extends BeepBoxOption {\n    readonly expression: number;\n    samples: Float32Array;\n    isPercussion?: boolean;\n    isCustomSampled?: boolean;\n    isSampled?: boolean;\n    extraSampleDetune?: number;\n    rootKey?: number;\n    sampleRate?: number;\n}\n\nexport interface OperatorWave extends BeepBoxOption {\n    samples: Float32Array;\n}\n\nexport interface ChipNoise extends BeepBoxOption {\n    readonly expression: number;\n    readonly basePitch: number;\n    readonly pitchFilterMult: number;\n    readonly isSoft: boolean;\n    samples: Float32Array | null;\n}\n\nexport interface Transition extends BeepBoxOption {\n    readonly isSeamless: boolean;\n    readonly continues: boolean;\n    readonly slides: boolean;\n    readonly slideTicks: number;\n    readonly includeAdjacentPatterns: boolean;\n}\n\nexport interface Vibrato extends BeepBoxOption {\n    readonly amplitude: number;\n    readonly type: number;\n    readonly delayTicks: number;\n}\n\nexport interface VibratoType extends BeepBoxOption {\n    readonly periodsSeconds: number[];\n    readonly period: number;\n}\n\nexport interface Unison extends BeepBoxOption {\n    readonly voices: number;\n    readonly spread: number;\n    readonly offset: number;\n    readonly expression: number;\n    readonly sign: number;\n}\n\nexport interface Modulator extends BeepBoxOption {\n    readonly name: string; // name that shows up in song editor UI\n    readonly pianoName: string; // short name that shows up in mod piano UI\n    readonly maxRawVol: number; // raw\n    readonly newNoteVol: number; // raw\n    readonly forSong: boolean; // true - setting is song scope\n    convertRealFactor: number; // offset that needs to be applied to get a \"real\" number display of value, for UI purposes\n    readonly associatedEffect: EffectType; // effect that should be enabled for this modulator to work properly. If unused, set to EffectType.length.\n    readonly promptName: string; // long-as-needed name that shows up in tip prompt\n    readonly promptDesc: string[]; // paragraph(s) describing how to use this mod\n    optionalModify?: string; // optional modifications for the mods (eg. flipping all values)\n\n}\n\nexport interface Chord extends BeepBoxOption {\n    readonly customInterval: boolean;\n    readonly arpeggiates: boolean;\n    readonly strumParts: number;\n    readonly singleTone: boolean;\n}\n\nexport interface Algorithm extends BeepBoxOption {\n    readonly carrierCount: number;\n    readonly associatedCarrier: ReadonlyArray<number>;\n    readonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\n}\n\nexport interface OperatorFrequency extends BeepBoxOption {\n    readonly mult: number;\n    readonly hzOffset: number;\n    readonly amplitudeSign: number;\n}\n\nexport interface Feedback extends BeepBoxOption {\n    readonly indices: ReadonlyArray<ReadonlyArray<number>>;\n}\n\nexport interface Envelope extends BeepBoxOption {\n    readonly type: EnvelopeType;\n    readonly speed: number;\n}\n\nexport interface AutomationTarget extends BeepBoxOption {\n    readonly computeIndex: EnvelopeComputeIndex /*| InstrumentAutomationIndex*/ | null;\n    readonly displayName: string;\n    //readonly perNote: boolean; // Whether to compute envelopes on a per-note basis.\n    readonly interleave: boolean; // Whether to interleave this target with the next one in the menu (e.g. filter frequency and gain).\n\treadonly isFilter: boolean; // Filters are special because the maxCount depends on other instrument settings.\n\t//readonly range: number | null; // set if automation is allowed.\n    readonly maxCount: number;\n    readonly effect: EffectType | null;\n    readonly compatibleInstruments: InstrumentType[] | null;\n}\n\nexport const enum SampleLoadingStatus {\n    loading,\n    loaded,\n    error,\n}\n\nexport function getSampleLoadingStatusName(status: SampleLoadingStatus): string {\n    switch (status) {\n\tcase SampleLoadingStatus.loading: return \"loading\";\n\tcase SampleLoadingStatus.loaded: return \"loaded\";\n\tcase SampleLoadingStatus.error: return \"error\";\n    }\n}\n\nexport class SampleLoadingState {\n    public statusTable: Dictionary<SampleLoadingStatus>;\n    public urlTable: Dictionary<string>;\n    public totalSamples: number;\n    public samplesLoaded: number;\n\n    constructor() {\n\tthis.statusTable = {};\n\tthis.urlTable = {};\n\tthis.totalSamples = 0;\n\tthis.samplesLoaded = 0;\n    }\n}\n\nexport const sampleLoadingState: SampleLoadingState = new SampleLoadingState();\n\nexport class SampleLoadedEvent extends Event {\n    public readonly totalSamples: number;\n    public readonly samplesLoaded: number;\n\n    constructor(totalSamples: number, samplesLoaded: number) {\n\tsuper(\"sampleloaded\");\n\tthis.totalSamples = totalSamples;\n\tthis.samplesLoaded = samplesLoaded;\n    }\n}\n\nexport interface SampleLoadEventMap {\n    \"sampleloaded\": SampleLoadedEvent;\n}\n\nexport class SampleLoadEvents extends EventTarget {\n    constructor() {\n\tsuper();\n    }\n}\n\nexport const sampleLoadEvents: SampleLoadEvents = new SampleLoadEvents();\n\nexport function startLoadingSample(url: string, chipWaveIndex: number, presetSettings: Dictionary<any>, rawLoopOptions: any, customSampleRate: number): void {\n    // @TODO: Make parts of the code that expect everything to already be\n    // in memory work correctly.\n    // It would be easy to only instantiate `SongEditor` and company after\n    // everything is loaded, but if dynamic sample loading without a reload\n    // is deemed necessary, anything that involves chip waves has to be\n    // revisited so as to be able to work with a changing list of chip\n    // waves that may or may not be ready to be used.\n    const sampleLoaderAudioContext = new AudioContext({ sampleRate: customSampleRate });\n    let closedSampleLoaderAudioContext: boolean = false;\n    const chipWave = Config.chipWaves[chipWaveIndex];\n    const rawChipWave = Config.rawChipWaves[chipWaveIndex];\n    const rawRawChipWave = Config.rawRawChipWaves[chipWaveIndex];\n    fetch(url).then((response) => {\n\tif (!response.ok) {\n\t    // @TODO: Be specific with the error handling.\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.error;\n\t    return Promise.reject(new Error(\"Couldn't load sample\"));\n\t}\n\treturn response.arrayBuffer();\n    }).then((arrayBuffer) => {\n\treturn sampleLoaderAudioContext.decodeAudioData(arrayBuffer);\n    }).then((audioBuffer) => {\n\t// @TODO: Downmix.\n\tconst samples = centerWave(Array.from(audioBuffer.getChannelData(0)));\n\tconst integratedSamples = performIntegral(samples);\n\tchipWave.samples = integratedSamples;\n\trawChipWave.samples = samples;\n\trawRawChipWave.samples = samples;\n\tif (rawLoopOptions[\"isUsingAdvancedLoopControls\"]) {\n\t    presetSettings[\"chipWaveLoopStart\"] = rawLoopOptions[\"chipWaveLoopStart\"] != null ? rawLoopOptions[\"chipWaveLoopStart\"] : 0;\n\t    presetSettings[\"chipWaveLoopEnd\"] = rawLoopOptions[\"chipWaveLoopEnd\"] != null ? rawLoopOptions[\"chipWaveLoopEnd\"] : samples.length - 1;\n\t    presetSettings[\"chipWaveLoopMode\"] = rawLoopOptions[\"chipWaveLoopMode\"] != null ? rawLoopOptions[\"chipWaveLoopMode\"] : 0;\n\t    presetSettings[\"chipWavePlayBackwards\"] = rawLoopOptions[\"chipWavePlayBackwards\"];\n\t    presetSettings[\"chipWaveStartOffset\"] = rawLoopOptions[\"chipWaveStartOffset\"] != null ? rawLoopOptions[\"chipWaveStartOffset\"] : 0;\n\t}\n\tsampleLoadingState.samplesLoaded++;\n\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\n\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t    sampleLoadingState.totalSamples,\n\t    sampleLoadingState.samplesLoaded\n\t));\n\tif (!closedSampleLoaderAudioContext) {\n\t    closedSampleLoaderAudioContext = true;\n\t    sampleLoaderAudioContext.close();\n\t}\n    }).catch((error) => {\n\t//console.error(error);\n\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.error;\n\talert(\"Failed to load \" + url + \":\\n\" + error);\n\tif (!closedSampleLoaderAudioContext) {\n\t    closedSampleLoaderAudioContext = true;\n\t    sampleLoaderAudioContext.close();\n\t}\n    });\n}\n\nexport function getLocalStorageItem<T>(key: string, defaultValue: T): T | string {\n    let value: T | string | null = localStorage.getItem(key);\n    if (value == null || value === \"null\" || value === \"undefined\") {\n        value = defaultValue;\n    }\n    return value;\n}\n\n// @HACK: This just assumes these exist, regardless of whether they actually do\n// or not.\ndeclare global {\n    const kicksample: number[];\n    const snaresample: number[];\n    const pianosample: number[];\n    const WOWsample: number[];\n    const overdrivesample: number[];\n    const trumpetsample: number[];\n    const saxophonesample: number[];\n    const orchhitsample: number[];\n    const detatchedviolinsample: number[];\n    const synthsample: number[];\n    const sonic3snaresample: number[];\n    const comeonsample: number[];\n    const choirsample: number[];\n    const overdrivensample: number[];\n    const flutesample: number[];\n    const legatoviolinsample: number[];\n    const tremoloviolinsample: number[];\n    const amenbreaksample: number[];\n    const pizzicatoviolinsample: number[];\n    const timallengruntsample: number[];\n    const tubasample: number[];\n    const loopingcymbalsample: number[];\n    const kickdrumsample: number[];\n    const snaredrumsample: number[];\n    const closedhihatsample: number[];\n    const foothihatsample: number[];\n    const openhihatsample: number[];\n    const crashsample: number[];\n    const pianoC4sample: number[];\n    const liverpadsample: number[];\n    const marimbasample: number[];\n    const susdotwavsample: number[];\n    const wackyboxttssample: number[];\n    const peppersteak1: number[];\n    const peppersteak2: number[];\n    const vinyl: number[];\n    const slapbass: number[];\n    const hdeboverdrive: number[];\n    const sunsoftbass: number[];\n    const masculinechoir: number[];\n    const femininechoir: number[];\n    const southtololoche: number[];\n    const harp: number[];\n    const panflute: number[];\n    const krumhorn: number[];\n    const timpani: number[];\n    const crowdhey: number[];\n    const warioland4brass: number[];\n    const warioland4organ: number[];\n    const warioland4daow: number[];\n    const warioland4hourchime: number[];\n    const warioland4tick: number[];\n    const kirbykick: number[];\n    const kirbysnare: number[];\n    const kirbybongo: number[];\n    const kirbyclick: number[];\n    const funkkick: number[];\n    const funksnare: number[];\n    const funksnareleft: number[];\n    const funksnareright: number[];\n    const funktomhigh: number[];\n    const funktomlow: number[];\n    const funkhihatclosed: number[];\n    const funkhihathalfopen: number[];\n    const funkhihatopen: number[];\n    const funkhihatopentip: number[];\n    const funkhihatfoot: number[];\n    const funkcrash: number[];\n    const funkcrashtip: number[];\n    const funkride: number[];\n    const chronoperc1finalsample: number[];\n    const synthkickfmsample: number[];\n    const woodclicksample: number[];\n    const acousticsnaresample: number[];\n    const catpaintboxsample: number[];\n    const gameboypaintboxsample: number[];\n    const mariopaintboxsample: number[];\n    const drumpaintboxsample: number[];\n    const yoshipaintboxsample: number[];\n    const starpaintboxsample: number[];\n    const fireflowerpaintboxsample: number[];\n    const dogpaintbox: number[];\n    const oinkpaintbox: number[];\n    const swanpaintboxsample: number[];\n    const facepaintboxsample: number[];\n}\n\nfunction loadScript(url: string): Promise<void> {\n    const result: Promise<void> = new Promise((resolve, reject) => {\n\tif (!Config.willReloadForCustomSamples) {\n\t    const script = document.createElement(\"script\");\n\t    script.src = url;\n\t    document.head.appendChild(script);\n\t    script.addEventListener(\"load\", (event) => {\n\t\tresolve();\n\t    });\n\t} else {\n\t    // There's not really any errors that show up if the loading for\n\t    // this script is stopped early, but it won't really do anything\n\t    // particularly useful either in that case.\n\t}\n    });\n    return result;\n}\n\nexport function loadBuiltInSamples(set: number): void {\n    const defaultIndex: number = 0;\n    const defaultIntegratedSamples: Float32Array = Config.chipWaves[defaultIndex].samples;\n    const defaultSamples: Float32Array = Config.rawRawChipWaves[defaultIndex].samples;\n\n    if (set == 0) {\n\t// Create chip waves with the wrong sound.\n\tconst chipWaves = [\n\t    { name: \"paandorasbox kick\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox snare\", expression: 3.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox piano1\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 2 },\n\t    { name: \"paandorasbox WOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox overdrive\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -2 },\n\t    { name: \"paandorasbox trumpet\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 1.2 },\n\t    { name: \"paandorasbox saxophone\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -5 },\n\t    { name: \"paandorasbox orchestrahit\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\n\t    { name: \"paandorasbox detatched violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\n\t    { name: \"paandorasbox synth\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -0.8 },\n\t    { name: \"paandorasbox sonic3snare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox come on\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox choir\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\n\t    { name: \"paandorasbox overdriveguitar\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6.2 },\n\t    { name: \"paandorasbox flute\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6 },\n\t    { name: \"paandorasbox legato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -28 },\n\t    { name: \"paandorasbox tremolo violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -33 },\n\t    { name: \"paandorasbox amen break\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -55 },\n\t    { name: \"paandorasbox pizzicato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -11 },\n\t    { name: \"paandorasbox tim allen grunt\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -20 },\n\t    { name: \"paandorasbox tuba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 44 },\n\t    { name: \"paandorasbox loopingcymbal\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17 },\n\t    { name: \"paandorasbox standardkick\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -7 },\n\t    { name: \"paandorasbox standardsnare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"paandorasbox closedhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 5 },\n\t    { name: \"paandorasbox foothihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 4 },\n\t    { name: \"paandorasbox openhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -31 },\n\t    { name: \"paandorasbox crashcymbal\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -43 },\n\t    { name: \"paandorasbox pianoC4\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.5 },\n\t    { name: \"paandorasbox liver pad\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -22.5 },\n\t    { name: \"paandorasbox marimba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -15.5 },\n\t    { name: \"paandorasbox susdotwav\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -24.5 },\n\t    { name: \"paandorasbox wackyboxtts\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17.5 },\n\t    { name: \"paandorasbox peppersteak_1\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.2 },\n\t    { name: \"paandorasbox peppersteak_2\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -47 },\n\t    { name: \"paandorasbox vinyl_noise\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -50 },\n\t    { name: \"paandorasbeta slap bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -56 },\n\t    { name: \"paandorasbeta HD EB overdrive guitar\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60 },\n\t    { name: \"paandorasbeta sunsoft bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -18.5 },\n\t    { name: \"paandorasbeta masculine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\n\t    { name: \"paandorasbeta feminine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60.5 },\n\t    { name: \"paandorasbeta tololoche\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -29.5 },\n\t    { name: \"paandorasbeta harp\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -54 },\n\t    { name: \"paandorasbeta pan flute\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -58 },\n\t    { name: \"paandorasbeta krumhorn\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -46 },\n\t    { name: \"paandorasbeta timpani\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\n\t    { name: \"paandorasbeta crowd hey\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -29 },\n\t    { name: \"paandorasbeta wario land 4 brass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -68 },\n\t    { name: \"paandorasbeta wario land 4 rock organ\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -63 },\n\t    { name: \"paandorasbeta wario land 4 DAOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -35 },\n\t    { name: \"paandorasbeta wario land 4 hour chime\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -47.5 },\n\t    { name: \"paandorasbeta wario land 4 tick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -12.5 },\n\t    { name: \"paandorasbeta kirby kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n\t    { name: \"paandorasbeta kirby snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n\t    { name: \"paandorasbeta kirby bongo\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n\t    { name: \"paandorasbeta kirby click\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n\t    { name: \"paandorasbeta sonor kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\n\t    { name: \"paandorasbeta sonor snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\n\t    { name: \"paandorasbeta sonor snare (left hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\n\t    { name: \"paandorasbeta sonor snare (right hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\n\t    { name: \"paandorasbeta sonor high tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\n\t    { name: \"paandorasbeta sonor low tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\n\t    { name: \"paandorasbeta sonor hihat (closed)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -17 },\n\t    { name: \"paandorasbeta sonor hihat (half opened)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -21 },\n\t    { name: \"paandorasbeta sonor hihat (open)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -54.5 },\n\t    { name: \"paandorasbeta sonor hihat (open tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -43.5 },\n\t    { name: \"paandorasbeta sonor hihat (pedal)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28 },\n\t    { name: \"paandorasbeta sonor crash\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -51 },\n\t    { name: \"paandorasbeta sonor crash (tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -50.5 },\n\t    { name: \"paandorasbeta sonor ride\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46 }\n\t];\n\n\tsampleLoadingState.totalSamples += chipWaves.length;\n\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\n\t// the same number of elements.\n\tconst startIndex: number = Config.rawRawChipWaves.length;\n\tfor (const chipWave of chipWaves) {\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"legacySamples\";\n\t}\n\n\tloadScript(\"samples.js\")\n\t.then(() => loadScript(\"samples2.js\"))\n\t.then(() => loadScript(\"samples3.js\"))\n\t.then(() => loadScript(\"drumsamples.js\"))\n\t.then(() => loadScript(\"wario_samples.js\"))\n\t.then(() => loadScript(\"kirby_samples.js\"))\n\t.then(() => {\n\t    // Now put the right sounds in there after everything\n\t    // got loaded.\n\t    const chipWaveSamples: Float32Array[] = [\n\t\tcenterWave(kicksample),\n\t\tcenterWave(snaresample),\n\t\tcenterWave(pianosample),\n\t\tcenterWave(WOWsample),\n\t\tcenterWave(overdrivesample),\n\t\tcenterWave(trumpetsample),\n\t\tcenterWave(saxophonesample),\n\t\tcenterWave(orchhitsample),\n\t\tcenterWave(detatchedviolinsample),\n\t\tcenterWave(synthsample),\n\t\tcenterWave(sonic3snaresample),\n\t\tcenterWave(comeonsample),\n\t\tcenterWave(choirsample),\n\t\tcenterWave(overdrivensample),\n\t\tcenterWave(flutesample),\n\t\tcenterWave(legatoviolinsample),\n\t\tcenterWave(tremoloviolinsample),\n\t\tcenterWave(amenbreaksample),\n\t\tcenterWave(pizzicatoviolinsample),\n\t\tcenterWave(timallengruntsample),\n\t\tcenterWave(tubasample),\n\t\tcenterWave(loopingcymbalsample),\n\t\tcenterWave(kickdrumsample),\n\t\tcenterWave(snaredrumsample),\n\t\tcenterWave(closedhihatsample),\n\t\tcenterWave(foothihatsample),\n\t\tcenterWave(openhihatsample),\n\t\tcenterWave(crashsample),\n\t\tcenterWave(pianoC4sample),\n\t\tcenterWave(liverpadsample),\n\t\tcenterWave(marimbasample),\n\t\tcenterWave(susdotwavsample),\n\t\tcenterWave(wackyboxttssample),\n\t\tcenterWave(peppersteak1),\n\t\tcenterWave(peppersteak2),\n\t\tcenterWave(vinyl),\n\t\tcenterWave(slapbass),\n\t\tcenterWave(hdeboverdrive),\n\t\tcenterWave(sunsoftbass),\n\t\tcenterWave(masculinechoir),\n\t\tcenterWave(femininechoir),\n\t\tcenterWave(southtololoche),\n\t\tcenterWave(harp),\n\t\tcenterWave(panflute),\n\t\tcenterWave(krumhorn),\n\t\tcenterWave(timpani),\n\t\tcenterWave(crowdhey),\n\t\tcenterWave(warioland4brass),\n\t\tcenterWave(warioland4organ),\n\t\tcenterWave(warioland4daow),\n\t\tcenterWave(warioland4hourchime),\n\t\tcenterWave(warioland4tick),\n\t\tcenterWave(kirbykick),\n\t\tcenterWave(kirbysnare),\n\t\tcenterWave(kirbybongo),\n\t\tcenterWave(kirbyclick),\n\t\tcenterWave(funkkick),\n\t\tcenterWave(funksnare),\n\t\tcenterWave(funksnareleft),\n\t\tcenterWave(funksnareright),\n\t\tcenterWave(funktomhigh),\n\t\tcenterWave(funktomlow),\n\t\tcenterWave(funkhihatclosed),\n\t\tcenterWave(funkhihathalfopen),\n\t\tcenterWave(funkhihatopen),\n\t\tcenterWave(funkhihatopentip),\n\t\tcenterWave(funkhihatfoot),\n\t\tcenterWave(funkcrash),\n\t\tcenterWave(funkcrashtip),\n\t\tcenterWave(funkride)\n\t    ];\n\t    let chipWaveIndexOffset: number = 0;\n\t    for (const chipWaveSample of chipWaveSamples) {\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\n\t\tsampleLoadingState.samplesLoaded++;\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t\t    sampleLoadingState.totalSamples,\n\t\t    sampleLoadingState.samplesLoaded\n\t\t));\n\t\tchipWaveIndexOffset++;\n\t    }\n\t});\n\t//EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {name: \"Legacy Sample Presets\", presets:  { name: \"Earthbound O. Guitar\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"paandorasbox overdrive\", \"unison\": \"none\", \"envelopes\": [] } }, index: EditorConfig.presetCategories.length,};\n    }\n    else if (set == 1) {\n\t// Create chip waves with the wrong sound.\n\tconst chipWaves = [\n\t    { name: \"chronoperc1final\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"synthkickfm\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"mcwoodclick1\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n\t    { name: \"acoustic snare\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 }\n\t];\n\n\tsampleLoadingState.totalSamples += chipWaves.length;\n\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\n\t// the same number of elements.\n\tconst startIndex: number = Config.rawRawChipWaves.length;\n\tfor (const chipWave of chipWaves) {\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"nintariboxSamples\";\n\t}\n\n\tloadScript(\"nintaribox_samples.js\")\n\t.then(() => {\n\t    // Now put the right sounds in there after everything\n\t    // got loaded.\n\t    const chipWaveSamples: Float32Array[] = [\n\t\tcenterWave(chronoperc1finalsample),\n\t\tcenterWave(synthkickfmsample),\n\t\tcenterWave(woodclicksample),\n\t\tcenterWave(acousticsnaresample)\n\t    ];\n\t    let chipWaveIndexOffset: number = 0;\n\t    for (const chipWaveSample of chipWaveSamples) {\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\n\t\tsampleLoadingState.samplesLoaded++;\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t\t    sampleLoadingState.totalSamples,\n\t\t    sampleLoadingState.samplesLoaded\n\t\t));\n\t\tchipWaveIndexOffset++;\n\t    }\n\t});\n    }\n    else if (set == 2) {\n\t// Create chip waves with the wrong sound.\n\tconst chipWaves = [\n\t    { name: \"cat\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\n\t    { name: \"gameboy\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 7 },\n\t    { name: \"mario\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n\t    { name: \"drum\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 4 },\n\t    { name: \"yoshi\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\n\t    { name: \"star\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\n\t    { name: \"fire flower\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\n\t    { name: \"dog\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\n\t    { name: \"oink\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 3 },\n\t    { name: \"swan\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 1 },\n\t    { name: \"face\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -12 }\n\t];\n\n\tsampleLoadingState.totalSamples += chipWaves.length;\n\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\n\t// the same number of elements.\n\tconst startIndex: number = Config.rawRawChipWaves.length;\n\tfor (const chipWave of chipWaves) {\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"marioPaintboxSamples\";\n\t}\n\n\tloadScript(\"mario_paintbox_samples.js\")\n\t.then(() => {\n\t    // Now put the right sounds in there after everything\n\t    // got loaded.\n\t    const chipWaveSamples: Float32Array[] = [\n\t\tcenterWave(catpaintboxsample),\n\t\tcenterWave(gameboypaintboxsample),\n\t\tcenterWave(mariopaintboxsample),\n\t\tcenterWave(drumpaintboxsample),\n\t\tcenterWave(yoshipaintboxsample),\n\t\tcenterWave(starpaintboxsample),\n\t\tcenterWave(fireflowerpaintboxsample),\n\t\tcenterWave(dogpaintbox),\n\t\tcenterWave(oinkpaintbox),\n\t\tcenterWave(swanpaintboxsample),\n\t\tcenterWave(facepaintboxsample)\n\t    ];\n\t    let chipWaveIndexOffset: number = 0;\n\t    for (const chipWaveSample of chipWaveSamples) {\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\n\t\tsampleLoadingState.samplesLoaded++;\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n\t\t    sampleLoadingState.totalSamples,\n\t\t    sampleLoadingState.samplesLoaded\n\t\t));\n\t\tchipWaveIndexOffset++;\n\t    }\n\t});\n    }\n    else {\n        console.log(\"invalid set of built-in samples\");\n    }\n}\n\nexport class Config {\n    // Params for post-processing compressor\n    public static thresholdVal: number = -10;\n    public static kneeVal: number = 40;\n    public static ratioVal: number = 12;\n    public static attackVal: number = 0;\n    public static releaseVal: number = 0.25;\n\n    public static willReloadForCustomSamples: boolean = false;\n\n    public static readonly scales: DictionaryArray<Scale> = toNameMap([\n\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\n\t\t{ name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\n        { name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\n        { name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\n        { name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\n        { name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\n        { name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\n        { name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\n        { name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\n        { name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\n        { name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\n        { name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\n        { name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\n        { name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\n        { name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\n        { name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\n        { name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\n        { name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\n        { name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\n        { name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\n        { name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\n        { name: \"No Dabbing\", realName: \"no dabbing\", flags:[true, true, false, true, true, true, true, true, true, false, true, false] },\n\t//modbox\n\t{ name: \"Jacked Toad\", realName: \"jacked toad\", flags: [true, false, true, true, false, true, true, true, true, false, true, true] },\n\t{ name: \"Dumb\", realName: \"Originally named, currently named, and will always be named 'dumb.'\", flags: [true, false, false, false, false, true, true, true, true, false, false, true] },\n        { name: \"Test Scale\", realName: \"**t\", flags: [true, true, false, false, false, true, true, false, false, true, true, false] },\n\t// todbox\n\t{ name: \"die\", realName: \"death\", flags: [true, false, false, false, false, false, false, false, true, false, false, false] },\n\t//wackybox\n        // { name: \"Rythmic\", realName: \"Pretty straightforward.\", flags: [true, false, false, false, false, false, false, false, false, false, false, false] },\n        //todbox\n\t{ name: \"Custom\", realName: \"custom\", flags: [true, false, true, true, false, false, false, true, true, false, true, true] }, // Custom? considering allowing this one to be be completely configurable\n\t]);\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\n\t\t{ name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\n\t\t{ name: \"C♯\", isWhiteKey: false, basePitch: 13 },\n\t\t{ name: \"D\", isWhiteKey: true, basePitch: 14 },\n\t\t{ name: \"D♯\", isWhiteKey: false, basePitch: 15 },\n\t\t{ name: \"E\", isWhiteKey: true, basePitch: 16 },\n\t\t{ name: \"F\", isWhiteKey: true, basePitch: 17 },\n\t\t{ name: \"F♯\", isWhiteKey: false, basePitch: 18 },\n\t\t{ name: \"G\", isWhiteKey: true, basePitch: 19 },\n\t\t{ name: \"G♯\", isWhiteKey: false, basePitch: 20 },\n\t\t{ name: \"A\", isWhiteKey: true, basePitch: 21 },\n\t\t{ name: \"A♯\", isWhiteKey: false, basePitch: 22 },\n        { name: \"B\", isWhiteKey: true, basePitch: 23 },\n\t\t\t\t// { name: \"C+\", isWhiteKey: false, basePitch: 24 },\n\t\t//taken from todbox, called \"B#\" for some reason lol\n\t\t// { name: \"G- (actually F#-)\", isWhiteKey: false, basePitch: 6 },\n        // { name: \"C-\", isWhiteKey: true, basePitch: 0 },\n\t    //brucebox\n\t\t//g- isn't actually g-???\n\t\t// { name: \"oh no (F-)\", isWhiteKey: true, basePitch: 5 },\n\t\t//shitbox\n\t]);\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\n\tpublic static readonly tempoMin: number = 1;\n\tpublic static readonly tempoMax: number = 500;\n\tpublic static readonly octaveMin: number = -2;\n\tpublic static readonly octaveMax: number = 2;\n    public static readonly echoDelayRange: number = 24;\n    public static readonly echoDelayStepTicks: number = 4;\n    public static readonly echoSustainRange: number = 8;\n    public static readonly echoShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay echoes.\n    public static readonly echoShelfGain: number = Math.pow(2.0, -0.5);\n    public static readonly reverbShelfHz: number = 8000.0; // The cutoff freq of the shelf filter that is used to decay reverb.\n    public static readonly reverbShelfGain: number = Math.pow(2.0, -1.5);\n\tpublic static readonly reverbRange: number = 32;\n    public static readonly reverbDelayBufferSize: number = 16384; // TODO: Compute a buffer size based on sample rate.\n    public static readonly reverbDelayBufferMask: number = Config.reverbDelayBufferSize - 1; // TODO: Compute a buffer size based on sample rate.\n    public static readonly beatsPerBarMin: number = 1;\n\tpublic static readonly beatsPerBarMax: number = 64;\n\tpublic static readonly barCountMin: number = 1;\n\tpublic static readonly barCountMax: number = 1024;\n    public static readonly instrumentCountMin: number = 1;\n    public static readonly layeredInstrumentCountMax: number = 10;\n\t//this still hasn't been properly tested...\n    public static readonly patternInstrumentCountMax: number = 10;\n\tpublic static readonly partsPerBeat: number = 24;\n\tpublic static readonly ticksPerPart: number = 2;\n\tpublic static readonly ticksPerArpeggio: number = 3;\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7] ];\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\n\t\t{ name: \"÷1 (whole notes)\", stepsPerBeat: 1, /*ticksPerArpeggio: 6, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]],*/ roundUpThresholds: [3] },\n\t\t{ name: \"÷2 (half notes)\", stepsPerBeat: 2, /*ticksPerArpeggio: 5, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]],*/ roundUpThresholds: [3, 9] },\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\n\t\t{ name: \"÷6 (sextuplets)\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\n\t\t{ name: \"÷8 (eighth notes)\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\n\t\t{ name: \"÷12 (twelfth notes)\", stepsPerBeat: 12, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1]]*/ roundUpThresholds: null },\n\t\t{ name: \"freehand\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\n\t]);\n\n    public static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"Picked String\", \"supersaw\", \"custom chip\", \"mod\", \"FM6op\"];\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, false, false, false, false];\n    public static readonly chipBaseExpression: number = 0.03375; // Doubled by unison feature, but affected by expression adjustments per unison setting and wave shape.\n    public static readonly fmBaseExpression: number = 0.03;\n    public static readonly noiseBaseExpression: number = 0.19;\n    public static readonly spectrumBaseExpression: number = 0.3; // Spectrum can be in pitch or noise channels, the expression is doubled for noise.\n    public static readonly drumsetBaseExpression: number = 0.45; // Drums tend to be loud but brief!\n    public static readonly harmonicsBaseExpression: number = 0.025;\n    public static readonly pwmBaseExpression: number = 0.04725; // It's actually closer to half of this, the synthesized pulse amplitude range is only .5 to -.5, but also note that the fundamental sine partial amplitude of a square wave is 4/π times the measured square wave amplitude.\n    public static readonly supersawBaseExpression:  number = 0.061425; // It's actually closer to half of this, the synthesized sawtooth amplitude range is only .5 to -.5.\n    public static readonly pickedStringBaseExpression: number = 0.025; // Same as harmonics.\n    public static readonly distortionBaseVolume: number = 0.011; // Distortion is not affected by pitchDamping, which otherwise approximately halves expression for notes around the middle of the range.\n    public static readonly bitcrusherBaseVolume: number = 0.010; // Also not affected by pitchDamping, used when bit crushing is maxed out (aka \"1-bit\" output).\n\tpublic static rawChipWaves: DictionaryArray<ChipWave> = toNameMap([\n        { name: \"rounded\", expression: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\n        { name: \"triangle\", expression: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\n        { name: \"square\", expression: 0.5, samples: centerWave([1.0, -1.0]) },\n        { name: \"1/4 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\n        { name: \"1/8 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n        { name: \"sawtooth\", expression: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\n        { name: \"double saw\", expression: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\n        { name: \"double pulse\", expression: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\n        { name: \"spiky\", expression: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\n        { name: \"sine\", expression: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\n        { name: \"flute\", expression: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\n        { name: \"harp\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\n        { name: \"sharp clarinet\", expression: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\n        { name: \"soft clarinet\", expression: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n        { name: \"alto sax\", expression: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\n        { name: \"bassoon\", expression: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\n        { name: \"trumpet\", expression: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\n        { name: \"electric guitar\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\n        { name: \"organ\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\n        { name: \"pan flute\", expression: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\n        { name: \"glitch\", expression: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\n        { name: \"trapezoid\", expression: 1.0, samples: centerWave([1.0 / 15.0, 6.0 / 15.0, 10.0 / 15.0, 14.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 14.0 / 15.0, 10.0 / 15.0, 6.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -6.0 / 15.0, -10.0 / 15.0, -14.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -14.0 / 15.0, -10.0 / 15.0, -6.0 / 15.0, -1.0 / 15.0,])},\n   \t//normal\n{ name: \"modbox 10% pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n\t{ name: \"modbox sunsoft bass\", expression: 1.0, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, 1.0, 0.6875, 0.5, 0.625, 0.625, 0.5, 0.375, 0.5625, 0.4375, 0.5625, 0.4375, 0.4375, 0.3125, 0.1875, 0.1875, 0.375, 0.5625, 0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\n\t{ name: \"modbox loud pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.7, 0.1, 0.1, 0, 0, 0, 0, 0, 0.1, 0.2, 0.15, 0.25, 0.125, 0.215, 0.345, 4.0]) },\n\t   { name: \"modbox sax\", expression: 0.5, samples: centerAndNormalizeWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 9.0, 0.06]) },\n\t    { name: \"modbox guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.5, 3.5, 3.0, -0.5, -0.25, -1.0]) },\n\t  { name: \"modbox sine\", expression: 0.5, samples: centerAndNormalizeWave([0.0, 0.05, 0.125, 0.2, 0.25, 0.3, 0.425, 0.475, 0.525, 0.625, 0.675, 0.725, 0.775, 0.8, 0.825, 0.875, 0.9, 0.925, 0.95, 0.975, 0.98, 0.99, 0.995, 1, 0.995, 0.99, 0.98, 0.975, 0.95, 0.925, 0.9, 0.875, 0.825, 0.8, 0.775, 0.725, 0.675, 0.625, 0.525, 0.475, 0.425, 0.3, 0.25, 0.2, 0.125, 0.05, 0.0, -0.05, -0.125, -0.2, -0.25, -0.3, -0.425, -0.475, -0.525, -0.625, -0.675, -0.725, -0.775, -0.8, -0.825, -0.875, -0.9, -0.925, -0.95, -0.975, -0.98, -0.99, -0.995, -1, -0.995, -0.99, -0.98, -0.975, -0.95, -0.925, -0.9, -0.875, -0.825, -0.8, -0.775, -0.725, -0.675, -0.625, -0.525, -0.475, -0.425, -0.3, -0.25, -0.2, -0.125, -0.05]) },\n\t   { name: \"modbox atari bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]) },\n\t    { name: \"modbox atari pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n\t  { name: \"modbox 1% pulse\", expression: 0.5, samples: centerAndNormalizeWave},\n\t   { name: \"modbox curved sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0 / 2.0, 1.0 / 3.0, 1.0 / 4.0]) },\n\t { name: \"modbox viola\", expression: 0.45, samples: centerAndNormalizeWave([-0.9, -1.0, -0.85, -0.775, -0.7, -0.6, -0.5, -0.4, -0.325, -0.225, -0.2, -0.125, -0.1, -0.11, -0.125, -0.15, -0.175, -0.18, -0.2, -0.21, -0.22, -0.21, -0.2, -0.175, -0.15, -0.1, -0.5, 0.75, 0.11, 0.175, 0.2, 0.25, 0.26, 0.275, 0.26, 0.25, 0.225, 0.2, 0.19, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.275, 0.28, 0.29, 0.3, 0.29, 0.28, 0.27, 0.26, 0.25, 0.225, 0.2, 0.175, 0.15, 0.1, 0.075, 0.0, -0.01, -0.025, 0.025, 0.075, 0.2, 0.3, 0.475, 0.6, 0.75, 0.85, 0.85, 1.0, 0.99, 0.95, 0.8, 0.675, 0.475, 0.275, 0.01, -0.15, -0.3, -0.475, -0.5, -0.6, -0.71, -0.81, -0.9, -1.0, -0.9]) },\n        { name: \"modbox brass\", expression: 0.45, samples: centerAndNormalizeWave([-1.0, -0.95, -0.975, -0.9, -0.85, -0.8, -0.775, -0.65, -0.6, -0.5, -0.475, -0.35, -0.275, -0.2, -0.125, -0.05, 0.0, 0.075, 0.125, 0.15, 0.20, 0.21, 0.225, 0.25, 0.225, 0.21, 0.20, 0.19, 0.175, 0.125, 0.10, 0.075, 0.06, 0.05, 0.04, 0.025, 0.04, 0.05, 0.10, 0.15, 0.225, 0.325, 0.425, 0.575, 0.70, 0.85, 0.95, 1.0, 0.9, 0.675, 0.375, 0.2, 0.275, 0.4, 0.5, 0.55, 0.6, 0.625, 0.65, 0.65, 0.65, 0.65, 0.64, 0.6, 0.55, 0.5, 0.4, 0.325, 0.25, 0.15, 0.05, -0.05, -0.15, -0.275, -0.35, -0.45, -0.55, -0.65, -0.7, -0.78, -0.825, -0.9, -0.925, -0.95, -0.975]) },\n      { name: \"modbox acoustic bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 0.1, -0.1, -0.2, -0.4, -0.3, -1.0]) },\n\t   { name: \"modbox lyre\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, 4.0, 2.15, 4.13, 5.15, 0.0, -0.05, 1.0]) },\n\t { name: \"modbox ramp pulse\", expression: 0.5, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },  \n\t  { name: \"modbox piccolo\", expression: 0.5, samples: centerAndNormalizeWave([1, 4, 2, 1, -0.1, -1, -0.12]) },\n     { name: \"modbox squaretooth\", expression: 0.5, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\n\t  { name: \"modbox flatline\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]) },\n\t  { name: \"modbox pnryshk a (u5)\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]) },\n\t  { name: \"modbox pnryshk b (riff)\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -0.9, 0.8, -0.7, 0.6, -0.5, 0.4, -0.3, 0.2, -0.1, 0.0, -0.1, 0.2, -0.3, 0.4, -0.5, 0.6, -0.7, 0.8, -0.9, 1.0]) },\n\t//modbox\n\t{ name: \"sandbox shrill lute\", expression: 0.94, samples: centerAndNormalizeWave([1.0, 1.5, 1.25, 1.2, 1.3, 1.5]) },\n        { name: \"sandbox bassoon\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]) },\n        { name: \"sandbox shrill bass\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 0, 0, 1, 0, 1, 0, 0, 0]) },\n      { name: \"sandbox nes pulse\", expression: 0.4, samples: centerAndNormalizeWave([2.1, -2.2, 1.2, 3]) },\n     { name: \"sandbox saw bass\", expression: 0.25, samples: centerAndNormalizeWave([1, 1, 1, 1, 0, 2, 1, 2, 3, 1, -2, 1, 4, 1, 4, 2, 1, 6, -3, 4, 2, 1, 5, 1, 4, 1, 5, 6, 7, 1, 6, 1, 4, 1, 9]) },\n        { name: \"sandbox euphonium\", expression: 0.3, samples: centerAndNormalizeWave([0, 1, 2, 1, 2, 1, 4, 2, 5, 0, -2, 1, 5, 1, 2, 1, 2, 4, 5, 1, 5, -2, 5, 10, 1]) },\n      { name: \"sandbox shrill pulse\", expression: 0.3, samples: centerAndNormalizeWave([4 -2, 0, 4, 1, 4, 6, 7, 3]) },\n      { name: \"sandbox r-sawtooth\", expression: 0.2, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },\n        { name: \"sandbox recorder\", expression: 0.2, samples: centerAndNormalizeWave([5.0, -5.1, 4.0, -4.1, 3.0, -3.1, 2.0, -2.1, 1.0, -1.1, 6.0]) },\n        { name: \"sandbox narrow saw\", expression: 1.2, samples: centerAndNormalizeWave([0.1, 0.13 / -0.1 ,0.13 / -0.3 ,0.13 / -0.5 ,0.13 / -0.7 ,0.13 / -0.9 ,0.13 / -0.11 ,0.13 / -0.31 ,0.13 / -0.51 ,0.13 / -0.71 ,0.13 / -0.91 ,0.13 / -0.12 ,0.13 / -0.32 ,0.13 / -0.52 ,0.13 / -0.72 ,0.13 / -0.92 ,0.13 / -0.13 ,0.13 / 0.13 ,0.13 / 0.92 ,0.13 / 0.72 ,0.13 / 0.52 ,0.13 / 0.32 ,0.13 / 0.12 ,0.13 / 0.91 ,0.13 / 0.71 ,0.13 / 0.51 ,0.13 / 0.31 ,0.13 / 0.11 ,0.13 / 0.9 ,0.13 / 0.7 ,0.13 / 0.5 ,0.13 / 0.3 ,0.13]) },\n        { name: \"sandbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\n      //cut\n\t  { name: \"sandbox ring pulse\", expression: 1.0, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n      { name: \"sandbox double sine\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.3, 1.2, 1.1, 1.0, 0.0, -1.0, -1.1, -1.2, -1.3, -1.4, -1.5, -1.6, -1.7, -1.8, -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1.0]) },\n        { name: \"sandbox contrabass\", expression: 0.5, samples: centerAndNormalizeWave([4.20, 6.9, 1.337, 6.66]) },\n       { name: \"sandbox double bass\", expression: 0.4, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, -1.0, -0.6875, -0.5, -0.625, -0.625, -0.5, -0.375, -0.5625, -0.4375, -0.5625, -0.4375, -0.4375, -0.3125, -0.1875, 0.1875, 0.375, 0.5625, -0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\n     //   { name: \"sandbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },     \n\t//from sandbox, are these correct????\n\t  { name: \"haileybox test1\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.5, -1.0]) },\n\t  { name: \"brucebox pokey 4bit lfsr\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0]) },\n\t{ name: \"brucebox pokey 5step bass\", expression: 0.5,samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0]) },\n\t{ name: \"brucebox isolated spiky\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0, -1.0]) },\n\t//brucebox\n\t{ name: \"nerdbox unnamed 1\", expression: 0.5, samples: centerAndNormalizeWave([0.2 , 0.8 / 0.2, 0.7, -0.4, -1.0, 0.5, -0.5 / 0.6]) },\n\t{ name: \"nerdbox unnamed 2\", expression: 0.5, samples: centerAndNormalizeWave([2.0 , 5.0 / 55.0 , -9.0 , 6.5 / 6.5 , -55.0, 18.5 / -26.0]) },\n//nerdbox\n\t { name: \"zefbox semi-square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.5, 2.0, 2.5, 2.5, 2.5, 2.0, 1.5, 1.0]) },\n\t{ name: \"zefbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\n { name: \"zefbox squaretal\", expression: 0.7, samples: centerAndNormalizeWave([1.5, 1.0, 1.5, -1.5, -1.0, -1.5]) },\n//\t{ name: \"zefbox sawtooth\", expression: 0.65, samples: centerAndNormalizeWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\n\t { name: \"zefbox saw wide\", expression: 0.65, samples: centerAndNormalizeWave([0.0, -0.4, -0.8, -1.2, -1.6 , -2.0, 0.0, -0.4, -0.8, -1.2, -1.6]) },\n\t{ name: \"zefbox saw narrow\", expression: 0.65,samples: centerAndNormalizeWave([1, 0.5, 1, 0.5, 1, 0.5, 1, 2, 1, 2 ,1]) },\n\t { name: \"zefbox deep sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([0, 2, 3, 4, 4.5, 5, 5.5, 6, 6.25, 6.5, 6.75, 7, 6.75, 6.5, 6.25, 6, 5.5, 5, 4.5, 4, 3, 2, 1]) },\n\t//{ name: \"zefbox double saw\", expression: 0.5, samples: centerAndNormalizeWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\n\t { name: \"zefbox sawtal\", expression: 0.3, samples: centerAndNormalizeWave([1.5, 1.0, 1.25, -0.5, 1.5, -0.5, 0.0, -1.5, 1.5, 0.0, 0.5, -1.5, 0.5, 1.25, -1.0, -1.5]) },\n\t{ name: \"zefbox deep sawtal\", expression: 0.7, samples: centerAndNormalizeWave([0.75, 0.25, 0.5, -0.5, 0.5, -0.5, -0.25, -0.75]) },\n//\t { name: \"zefbox squaretooth\", expression: 0.25, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\n\t//identical to the modbox squaretooth, just louder - this was pre-2.0 ultrabox, but I've added backwards compatibility stuff related to it so yeah\n\t{ name: \"zefbox pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -2.0, -2.0, -1.5, -1.5, -1.25, -1.25, -1.0, -1.0]) },\n//{ name: \"zefbox double pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\n{ name: \"zefbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },\n{ name: \"zefbox high pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, -2, 2, -3, 3, -4, 5, -4, 3, -3, 2, -2, 1]) },\n{ name: \"zefbox deep pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, 2, 2, -2, -2, -3, -4, -4, -5, -5, -5, -5, 0, -1, -2]) },\n//from zefbox, are these correct????\n\t //\"triangle\", \"square\", \"semi-square\", \"deep square\", \"squaretal\", \"sawtooth\", \"saw wide\", \"saw narrow\",  \"deep sawtooth\", \"double saw\", \"sawtal\", \"deep sawtal\", \"squaretooth\", \"pulse\", \"pulse wide\", \"pulse narrow\", \"double pulse\", \"triple pulse\", \"high pulse\", \"deep pulse\",  \"nes pulse\", \"spiky\", \"plateau\", \"sinusoid\"\n\t { name: \"wackybox guitar string\", expression: 0.6, samples: centerAndNormalizeWave([0, 63, 63, 63, 63, 19, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 11, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 27, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 34, 63, 63, 63, 63]) },\n\t\t{ name: \"wackybox intense\", expression: 0.6, samples: centerAndNormalizeWave([36, 25, 33, 35, 18, 51, 22, 40, 27, 37, 31, 33, 25, 29, 41, 23, 31, 31, 45, 20, 37, 23, 29, 26, 42, 29, 33, 26, 31, 27, 40, 25, 40, 26, 37, 24, 41, 32, 0, 32, 33, 29, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]) },\n\t\t{ name: \"wackybox buzz wave\", expression: 0.6, samples: centerAndNormalizeWave([0, 1, 1, 2, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 8, 8, 8, 11, 15, 23, 62, 61, 60, 58, 56, 56, 54, 53, 52, 50, 49, 48, 47, 47, 45, 45, 45, 44, 44, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 53]) },\n        //wackybox\n\t\t        { name: \"todbox 1/3 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0]) },\n        { name: \"todbox 1/5 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0]) },\n\t\t//these WEREN'T in pre-2.0 ultrabox, but I've added backwards compatibility stuff related to it so yeah\n\t\t{ name: \"todbox slap bass\", expression: 0.5, samples: centerAndNormalizeWave([1, 0.5, 0, 0.5, 1.25, 0.5, -0.25, 0.1, -0.1, 0.1, 1.1, 2.1, 3, 3.5, 2.9, 3.3, 2.7, 2.9, 2.3, 2, 1.9, 1.8, 1, 0.7, 0.9, 0.8, 0.4, 0.1, 0.0, 0.2, 0.4, 0.6, 0.5, 0.8]) },\n\t{ name: \"todbox harsh wave\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 0.5, 0.5, 0.5, 0.7, 0.39, 1.3, 0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n\t{ name: \"todbox accordian\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 1, 2, 2, 1.5, 1.5, 0.8, 0, -2, -3.25, -4, -4.5, -5.5, -6, -5.75, -5.5, -5, -5, -5, -6, -6, -6, -5, -4, -3, -2, -1, 0.75, 1, 2, 3, 4, 5, 6, 6.5, 7.5, 8, 7.75, 6, 5.25, 5, 5, 5, 5, 5, 4.25, 3.75, 3.25, 2.75, 1.25, -0.75, -2, -0.75, 1.25, 1.25, 2, 2, 2, 2, 1.5, -1, -2, -1, 1.5, 2,  2.75, 2.75, 2.75, 3, 2.75, -1, -2, -2.5, -2, -1, -2.25, -2.75, -2, -3, -1.75, 1, 2, 3.5, 4, 5.25, 6, 8, 9.75, 10, 9.5, 9, 8.5, 7.5, 6.5, 5.25, 5, 4.5, 4, 4, 4, 3.25, 2.5, 2, 1, -0.5, -2, -3.5, -4, -4, -4, -3.75, -3, -2, -1]) },\n    //from todbox\n\t{ name: \"todbox beta banana wave\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0]) },\n\t{ name: \"todbox beta test wave\", expression: 0.5, samples: centerAndNormalizeWave([56, 0, -52, 16, 3, 3, 2, -35, 20, 147, -53, 0, 0, 5, -6]) },\n\t//I don't like this one.\n\t{ name: \"todbox beta real snare\", expression: 1.0, samples: centerAndNormalizeWave([0.00000,-0.01208,-0.02997,-0.04382,-0.06042,-0.07529,-0.09116,-0.10654,-0.12189,-0.13751,-0.15289,-0.16849,-0.18387,-0.19974,-0.21484,-0.23071,-0.24557,-0.26144,-0.27731,-0.29141,-0.30350,-0.32416,-0.34406,-0.32947,-0.31158,-0.33725,-0.37579,-0.39746,-0.40201,-0.40906,-0.44180,-0.47229,-0.47379,-0.47733,-0.45239,-0.33954,-0.22894,-0.22443,-0.32138,-0.46371,-0.57178,-0.61081,-0.59998,-0.61459,-0.62189,-0.43979,-0.19217,-0.12643,-0.17252,-0.20956,-0.20981,-0.19217,-0.22845,-0.34332,-0.50629,-0.64307,-0.72922,-0.81384,-0.87857,-0.90149,-0.88687,-0.86169,-0.87781,-0.80478,-0.52493,-0.31308,-0.33249,-0.39395,-0.39017,-0.30301,-0.19949,-0.13071,-0.02493,0.14307,0.34961,0.52542,0.63223,0.68613,0.74710,0.87305,0.98184,0.98889,0.97052,0.99066,0.99747,0.99344,0.99469,0.99393,0.99570,0.99393,0.99521,0.99469,0.99420,0.99521,0.99420,0.99521,0.99469,0.99469,0.99521,0.99420,0.99545,0.99445,0.99469,0.99493,0.99420,0.99521,0.99393,0.99493,0.99469,0.99445,0.99570,0.99445,0.99521,0.99469,0.99469,0.99521,0.99420,0.99545,0.99445,0.99445,0.99493,0.99420,0.99545,0.99420,0.99493,0.99493,0.99420,0.99545,0.99445,0.99521,0.99469,0.99445,0.99545,0.99368,0.99393,0.99445,0.99268,0.97983,0.97229,0.95944,0.88486,0.76773,0.64481,0.53098,0.39847,0.19318,-0.03827,-0.20325,-0.39319,-0.68765,-0.88461,-0.93448,-0.96069,-0.97681,-0.98715,-0.99042,-0.99142,-0.99091,-0.99142,-0.99219,-0.99091,-0.99219,-0.99066,-0.99142,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99142,-0.99142,-0.99191,-0.99091,-0.99219,-0.99118,-0.99142,-0.99167,-0.99091,-0.99219,-0.99091,-0.99167,-0.99142,-0.99091,-0.99191,-0.99091,-0.99191,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99118,-0.99142,-0.99191,-0.99066,-0.99191,-0.99091,-0.99167,-0.99191,-0.99118,-0.99219,-0.99091,-0.99191,-0.99142,-0.99142,-0.99243,-0.98865,-0.98764,-0.99219,-0.98083,-0.92517,-0.92770,-0.91486,-0.59042,-0.15189,0.02945,0.05667,0.06195,0.00629,-0.18008,-0.56497,-0.88010,-0.92770,-0.92871,-0.97705,-0.99167,-0.98663,-0.99118,-0.99042,-0.99219,-0.99142,-0.99118,-0.98941,-0.99219,-1.00000,-0.97580,-0.95993,-0.99948,-0.98236,-0.84659,-0.74860,-0.70679,-0.59747,-0.48035,-0.41687,-0.36826,-0.29745,-0.18185,-0.06219,0.02164,0.07907,0.13123,0.18033,0.19620,0.15692,0.14053,0.20251,0.27530,0.30905,0.29092,0.27252,0.30402,0.32416,0.32214,0.35239,0.39670,0.43198,0.49420,0.58487,0.64154,0.65967,0.67050,0.67026,0.66522,0.65540,0.66119,0.70627,0.75842,0.78738,0.78940,0.78763,0.80402,0.85944,0.94559,0.98990,0.98160,0.98007,0.99368,0.99393,0.98538,0.97580,0.97101,0.93802,0.81812,0.64633,0.46649,0.28613,0.14685,0.08966,0.12543,0.20325,0.24557,0.18866,0.02795,-0.20175,-0.44205,-0.58713,-0.57629,-0.41385,-0.14255,0.18033,0.47882,0.68311,0.72314,0.62064,0.48309,0.43073,0.53577,0.72794,0.90250,0.97354,0.97000,0.98083,0.99191,0.99319,0.99493,0.99393,0.99521,0.99393,0.99545,0.99420,0.99493,0.99493,0.99445,0.99545,0.99420,0.99545,0.99243,0.98917,0.98386,0.97781,0.95844,0.89066,0.81561,0.78134,0.77277,0.75995,0.73022,0.67126,0.57178,0.47000,0.38361,0.29419,0.20703,0.14734,0.15866,0.25162,0.35818,0.45062,0.56750,0.69748,0.81232,0.89697,0.95062,0.97656,0.98615,0.99191,0.99219,0.99243,0.99368,0.99368,0.97028,0.95566,0.94559,0.82617,0.59973,0.38361,0.23901,0.15338,0.12921,0.11206,0.04382,-0.12946,-0.43552,-0.72644,-0.89847,-0.95465,-0.95541,-0.97229,-0.99268,-0.99319,-0.98840,-0.99142,-0.99167,-0.99091,-0.98840,-0.98965,-0.99368,-0.97455,-0.95010,-0.94684,-0.96219,-0.98514,-0.99243,-0.98889,-0.98917,-0.99142,-0.99219,-0.99091,-0.99191,-0.99142,-0.99142,-0.99191,-0.99066,-0.99167,-0.99091,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99167,-0.99091,-0.99219,-0.99091,-0.99191,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99091,-0.99118,-0.99243,-0.98941,-0.98462,-0.96976,-0.96320,-0.96194,-0.87305,-0.66196,-0.44809,-0.29495,-0.18085,-0.11813,-0.11334,-0.18564,-0.34885,-0.58237,-0.80450,-0.93726,-0.97806,-0.97354,-0.97531,-0.98990,-0.99368,-0.98941,-0.99219,-0.99091,-0.99142,-0.99167,-0.99091,-0.99191,-0.99118,-0.99219,-0.98236,-0.97781,-0.97656,-0.95135,-0.87204,-0.71335,-0.52139,-0.34232,-0.17783,-0.00906,0.14886,0.30450,0.48889,0.67404,0.84030,0.94128,0.97681,0.98462,0.98337,0.99142,0.99521,0.99493,0.99420,0.99445,0.99521,0.99393,0.99545,0.99445,0.99521,0.99521,0.99445,0.99570,0.99445,0.99521,0.99469,0.99445,0.99521,0.99420,0.99521,0.99445,0.99445,0.99521,0.99445,0.99545,0.99445,0.99469,0.99493,0.99393,0.99493,0.99445,0.99393,0.98285,0.97781,0.97479,0.92844,0.82114,0.66095,0.52417,0.46826,0.46722,0.47934,0.47379,0.47076,0.48209,0.42014,0.25439,0.10074,-0.00302,-0.08966,-0.16068,-0.21436,-0.22040,-0.15137,-0.00476,0.18536,0.37631,0.52292,0.62164,0.70425,0.74835,0.72366,0.63928,0.52567,0.40805,0.35666,0.42896,0.60175,0.80200,0.92743,0.96548,0.97632,0.98337,0.99066,0.99521,0.99420,0.99368,0.99292,0.98840,0.98083,0.96774,0.93323,0.85440,0.69470,0.47202,0.20425,-0.08890,-0.36423,-0.60025,-0.77481,-0.90173,-0.96017,-0.97028,-0.98108,-0.98840,-0.99219,-0.98990,-0.99219,-0.99142,-0.99142,-0.99219,-0.99091,-0.99243,-0.99066,-0.99142,-0.99142,-0.99118,-0.99191,-0.99066,-0.99167,-0.99142,-0.99142,-0.99219,-0.99091,-0.99191,-0.99118,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99191,-0.99118,-0.99219,-0.99091,-0.99167,-0.99142,-0.99142,-0.99219,-0.99091,-0.99191,-0.99142,-0.99118,-0.98917,-0.99042,-0.99445,-0.97330,-0.95590,-0.96219,-0.89670,-0.72241,-0.55112,-0.44809,-0.39319,-0.37833,-0.35641,-0.26270,-0.14230,-0.11282,-0.13525,-0.11536,-0.09671,-0.11511,-0.18060,-0.26874,-0.33374,-0.42215,-0.51358,-0.44785,-0.30450,-0.28613,-0.30527,-0.25037,-0.15390,-0.08286,-0.11157,-0.12592,-0.00327,0.13803,0.19141,0.12820,0.01788,-0.03952,-0.12592,-0.26773,-0.34634,-0.31384,-0.18060,-0.01080,0.13574,0.26120,0.36975,0.46573,0.55087,0.63626,0.73022,0.83072,0.92014,0.97177,0.98587,0.98413,0.99167,0.99445,0.99292,0.99219,0.98740,0.98007,0.96472,0.92239,0.82166,0.69067,0.57959,0.54962,0.59695,0.64255,0.64633,0.60629,0.55942,0.54910,0.58966,0.61887,0.56952,0.54181,0.59518,0.63248,0.63876,0.65463,0.73398,0.88312,0.96927,0.97101,0.97958,0.99344,0.99420,0.99268,0.99493,0.99469,0.99445,0.99521,0.99445,0.99545,0.99420,0.99493,0.99493,0.99420,0.99545,0.99420,0.99493,0.99420,0.99393,0.99420,0.98840,0.98309,0.98309,0.96069,0.88461,0.79370,0.72064,0.65765,0.59998,0.53247,0.49268,0.48615,0.44205,0.38034,0.36447,0.38715,0.39294,0.32645,0.19595,0.07782,-0.05893,-0.27832,-0.48309,-0.62619,-0.72995,-0.79999,-0.84583,-0.82166,-0.73575,-0.67227,-0.65491,-0.64960,-0.66397,-0.70175,-0.72894,-0.74658,-0.76724,-0.79520,-0.82846,-0.86523,-0.90527,-0.94382,-0.89948,-0.69849,-0.47479,-0.31662,-0.15414,-0.00729,0.07077,0.08237,0.04431,-0.02292,-0.11761,-0.24307,-0.36926,-0.45087,-0.46170,-0.40250,-0.30679,-0.17529,0.00000,0.14331,0.24179,0.36774,0.49545,0.56522,0.57907,0.56775,0.53851,0.51132,0.48688,0.41913,0.26044,0.00955,-0.26297,-0.46396,-0.62341,-0.82214,-0.94684,-0.96774,-0.97531,-0.98413,-0.99017,-0.98990,-0.99219,-0.99066,-0.99142,-0.99167,-0.99118,-0.99219,-0.98990,-0.99118,-0.99368,-0.99142,-0.97757,-0.97403,-0.98007,-0.96170,-0.86826,-0.67783,-0.52719,-0.48788,-0.45490,-0.43146,-0.47681,-0.54105,-0.57983,-0.60904,-0.62317,-0.59949,-0.55566,-0.52063,-0.52115,-0.55112,-0.56244,-0.58337,-0.65540,-0.73373,-0.77228,-0.74759,-0.68890,-0.64609,-0.61887,-0.58060,-0.50351,-0.40729,-0.33929,-0.35110,-0.42944,-0.47028,-0.42267,-0.32718,-0.20224,-0.05640,0.04556,0.10529,0.17630,0.26169,0.33197,0.32138,0.23776,0.20956,0.23148,0.20352,0.23325,0.39267,0.52719,0.58438,0.62289,0.66345,0.70023,0.66296,0.54330,0.42618,0.33475,0.24533,0.14105,0.03851,0.01358,0.09143,0.22845,0.34961,0.41711,0.48740,0.58914,0.69519,0.78186,0.84357,0.89822,0.95389,0.98135,0.98615,0.99167,0.99243,0.99445,0.99420,0.99469,0.99493,0.99393,0.99545,0.99445,0.99521,0.99469,0.99445,0.99521,0.99420,0.99469,0.98965,0.98715,0.98563,0.96295,0.91736,0.86624,0.82367,0.77554,0.68411,0.53549,0.38916,0.26120,0.11435,-0.04053,-0.18161,-0.23172,-0.19394,-0.15237,-0.10730,-0.02997,0.08588,0.22620,0.34305,0.44104,0.55740,0.65765,0.71259,0.69217,0.65363,0.69748,0.79572,0.89368,0.95514,0.97733,0.98413,0.98816,0.99243,0.99445,0.99243,0.97302,0.96674,0.97983,0.90378,0.71005,0.51056,0.40451,0.40982,0.41559,0.32996,0.24356,0.18866,0.11411,0.05365,0.01157,-0.03247,-0.09216,-0.16095,-0.23248,-0.31662,-0.39771,-0.48663,-0.59647,-0.71536,-0.82013,-0.85287,-0.82947,-0.84937,-0.92215,-0.97177,-0.98663,-0.98816,-0.98438,-0.99091,-0.99219,-0.99091,-0.99191,-0.99042,-0.99191,-0.99091,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99142]) },\n\t//from todbox beta (obviously)\n\t\n\t//{ name: \"ultrabox nes 12.5%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 0, 0, 0, 0, 0, 0]) },\n\t//{ name: \"ultrabox nes 25%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 1, 0, 0, 0, 0, 0]) },\n//\t{ name: \"ultrabox nes 50%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 1, 1, 1, 0, 0, 0]) },\n//\t{ name: \"ultrabox nes 25% negated\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([1, 0, 0, 1, 1, 1, 1, 1]) },\n\t//{ name: \"ultrabox nes triangle\", expression: 0.5, isSampled: true, isPercussion: false, extraSampleDetune: 63.28, samples: centerAndNormalizeWave([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]) },\n\t//{ name: \"ultrabox gameboy kirby triangle\", expression: 1.0, isSampled: false, samples: centerAndNormalizeWave([2,5,7,1,0,2,2,3,2,5,5,9,3,4,8,9,5,4,8,1,3,1,3,5,9,8,9,2,1,6,9,0,7,9,6,8,1,6]) },\n\t//{ name: \"ultrabox gameboy kirby bass\", expression: 1.0, isSampled: false, samples: centerAndNormalizeWave([4,5,7,2,6,8,3,3,0,8,1,4,2,1,1,4,8,6,7,3,7,8,3,8,7,7,7,5,7,4,3,9,8,7,8,7,0,7]) },\n\t\n\t\n\t{ name: \"ultrabox shortened od guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.82785,-0.67621,-0.40268,-0.43817,-0.45468,-0.22531,-0.18329,0.24750,0.71246,0.52155,0.56082,0.48395,0.33990,0.46957,0.27744,0.42313,0.47104,0.18796,0.12930,-0.13901,-0.07431,-0.16348,-0.74857,-0.73206,-0.35181,-0.26227,-0.41882,-0.27786,-0.19806,-0.19867,0.18643,0.24808,0.08847,-0.06964,0.06912,0.20474,-0.05304,0.29416,0.31967,0.14243,0.27521,-0.23932,-0.14752,0.12360,-0.26123,-0.26111,0.06616,0.26520,0.08090,0.15240,0.16254,-0.12061,0.04562,0.00131,0.04050,0.08182,-0.21729,-0.17041,-0.16312,-0.08563,0.06390,0.05099,0.05627,0.02728,0.00726,-0.13028,-0.05673,-0.14969,-0.17645,0.35492,0.16766,-0.00897,0.24326,-0.00461,-0.04456,0.01776,-0.04950,-0.01221,0.02039,0.07684,0.13397,0.39850,0.35962,0.13754,0.42310,0.27161,-0.17609,0.03659,0.10635,-0.21909,-0.22046,-0.20258,-0.40973,-0.40280,-0.40521,-0.66284]) },\n\t//based off an old mp3 in #modded-beepbox where someone tried to shorten the overdrive guitar into the size of other chip waves \n\t//search \"normie alert\" in beepcord\n]); \n\tpublic static chipWaves: DictionaryArray<ChipWave> = rawChipToIntegrated(Config.rawChipWaves);\n\tpublic static rawRawChipWaves: DictionaryArray<ChipWave> = Config.rawChipWaves;\n\n\tpublic static firstIndexForSamplesInChipWaveList: number = Config.chipWaves.length;\n  \n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\n\t\t{ name: \"retro\", expression: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"white\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\n\t\t{ name: \"clang\", expression: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"buzz\", expression: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"hollow\", expression: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\n\t\t{ name: \"shine\", expression: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"deep\", expression: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\n\t\t{ name: \"cutter\", expression: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n        { name: \"metallic\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n        { name: \"static\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t// technically these are from the pandorasbox beta but whatever\n\t\t{ name: \"1-bit white\", expression: 0.5, basePitch: 74.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"1-bit metallic\", expression: 0.5, basePitch: 86.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t// ultrabox noises\n\t\t{ name: \"crackling\", expression: 0.9, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t\t{ name: \"pink\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n\t\t{ name: \"brownian\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n\t\t//{ name: \"doom random\", expression: 1.0, basePitch: 84, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n\t]);\n\t\n    public static readonly filterFreqStep: number = 1.0 / 4.0;\n    public static readonly filterFreqRange: number = 34;\n    public static readonly filterFreqReferenceSetting: number = 28;\n    public static readonly filterFreqReferenceHz: number = 8000.0;\n    public static readonly filterFreqMaxHz: number = Config.filterFreqReferenceHz * Math.pow(2.0, Config.filterFreqStep * (Config.filterFreqRange - 1 - Config.filterFreqReferenceSetting)); // ~19khz\n    public static readonly filterFreqMinHz: number = 8.0;\n    public static readonly filterGainRange: number = 15;\n    public static readonly filterGainCenter: number = 7;\n    public static readonly filterGainStep: number = 1.0 / 2.0;\n    public static readonly filterMaxPoints: number = 8;\n    public static readonly filterTypeNames: ReadonlyArray<string> = [\"low-pass\", \"high-pass\", \"peak\"]; // See FilterType enum above.\n    public static readonly filterMorphCount: number = 10; // Number of filter shapes allowed for modulating between. Counts the 0/default position.\n\n    public static readonly filterSimpleCutRange: number = 11;\n    public static readonly filterSimplePeakRange: number = 8;\n\n    public static readonly fadeInRange: number = 10;\n    public static readonly fadeOutTicks: ReadonlyArray<number> = [-24, -12, -6, -3, -1, 6, 12, 24, 48, 72, 96];\n    public static readonly fadeOutNeutral: number = 4;\n    public static readonly drumsetFadeOutTicks: number = 48;\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\n        { name: \"normal\", isSeamless: false, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: false },\n        { name: \"interrupt\", isSeamless: true, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n        { name: \"continue\", isSeamless: true, continues: true, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n        { name: \"slide\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: true },\n        { name: \"slide in pattern\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: false }\n\t]);\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\n        { name: \"none\", amplitude: 0.0, type: 0, delayTicks: 0 },\n        { name: \"light\", amplitude: 0.15, type: 0, delayTicks: 0 },\n        { name: \"delayed\", amplitude: 0.3, type: 0, delayTicks: 37 }, // It will fade in over the previous two ticks.\n        { name: \"heavy\", amplitude: 0.45, type: 0, delayTicks: 0 },\n        { name: \"shaky\", amplitude: 0.1, type: 1, delayTicks: 0 },\n\t\t\t//    { name: \"very shaky\", amplitude: 1, type: 0, delayTicks: 0 },\n\t//{ name: \"insane\", amplitude: 10, type: 1, delayTicks: 0 },\n\t    //todbox vibratos\n\t//\t{ name: \"super insane\", amplitude: 30, type: 1, delayTicks: 1 },\n\t\t//wackybox\n\t//\t { name: \"quiver\", amplitude: 0.001, type: 0, delayTicks: 0 },\n      //  { name: \"wub-wub\", amplitude: 10.0, type: 0, delayTicks: 0 },\n   //     { name: \"quiver delayed\", amplitude: 0.001, type: 0, delayTicks: 18 },\n      //  { name: \"vibrate\", amplitude: 0.08, type: 0, delayTicks: 0 },\n    //    { name: \"too much wub\", amplitude: 30.0, type: 0, delayTicks: 18 },\n\t //too much wub breaks things just a little bit at it's original amplitude\n\t\t//sandbox\n\t]);\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\n\t]);\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\n\tpublic static readonly unisons: DictionaryArray<Unison> = toNameMap([\n        { name: \"none\", voices: 1, spread: 0.0, offset: 0.0, expression: 1.4, sign: 1.0 },\n        { name: \"shimmer\", voices: 2, spread: 0.018, offset: 0.0, expression: 0.8, sign: 1.0 },\n        { name: \"hum\", voices: 2, spread: 0.045, offset: 0.0, expression: 1.0, sign: 1.0 },\n        { name: \"honky tonk\", voices: 2, spread: 0.09, offset: 0.0, expression: 1.0, sign: 1.0 },\n        { name: \"dissonant\", voices: 2, spread: 0.25, offset: 0.0, expression: 0.9, sign: 1.0 },\n        { name: \"fifth\", voices: 2, spread: 3.5, offset: 3.5, expression: 0.9, sign: 1.0 },\n        { name: \"octave\", voices: 2, spread: 6.0, offset: 6.0, expression: 0.8, sign: 1.0 },\n        { name: \"bowed\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: -1.0 },\n        { name: \"piano\", voices: 2, spread: 0.01, offset: 0.0, expression: 1.0, sign: 0.7 },\n        { name: \"warbled\", voices: 2, spread: 0.25, offset: 0.05, expression: 0.9, sign: -0.8 },\n        { name: \"hecking gosh\", voices: 2, spread: 6.25, offset: -6.0, expression: 0.8, sign: -0.7 },\n\t\t{ name: \"spinner\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"detune\", voices: 1, spread: 0.0, offset: 0.25, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"rising\", voices: 2, spread: 1.0, offset: 0.7, expression: 0.95, sign: 1.0 },\n\t\t{ name: \"vibrate\", voices: 2, spread: 3.5, offset: 7, expression: 0.975, sign: 1.0 },\n\t\t{ name: \"fourths\", voices: 2, spread: 4, offset: 4, expression: 0.95, sign: 1.0 },\n\t\t{ name: \"bass\", voices: 1, spread: 0, offset: -7, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"dirty\", voices: 2, spread: 0, offset: 0.1, expression: 0.975, sign: 1.0 },\n\t\t{ name: \"stationary\", voices: 2, spread: 3.5, offset: 0.0, expression: 0.9, sign: 1.0 },\n\t\t{ name: \"recurve\", voices: 2, spread: 0.005, offset: 0.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"voiced\", voices: 2, spread: 9.5, offset: 0.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"fluctuate\", voices: 2, spread: 12, offset: 0.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"thin\", voices: 1, spread: 0.0, offset: 50.0, expression: 1.0, sign: 1.0 },\n\t\t{ name: \"inject\", voices: 2, spread: 6.0, offset: 0.4, expression: 1.0, sign: 1.0 },\n\t    { name: \"askewed\", voices: 2, spread: 0.0, offset: 0.42, expression: 0.7, sign: 1.0 },\n        { name: \"resonance\", voices: 2, spread: 0.0025, offset: 0.1, expression: 0.8, sign: -1.5 },\n\t\t{ name: \"FART\", voices: 2, spread: 13, offset: -5, expression: 1.0, sign: -3 },\n\t\t\n\t //for modbox; voices = riffapp, spread = intervals, offset = offsets, expression = volume, and sign = signs\n\t]);\n    public static readonly effectNames: ReadonlyArray<string> = [\"reverb\", \"chorus\", \"panning\", \"distortion\", \"bitcrusher\", \"note filter\", \"echo\", \"pitch shift\", \"detune\", \"vibrato\", \"transition type\", \"chord type\"];\n    public static readonly effectOrder: ReadonlyArray<EffectType> = [EffectType.panning, EffectType.transition, EffectType.chord, EffectType.pitchShift, EffectType.detune, EffectType.vibrato, EffectType.noteFilter, EffectType.distortion, EffectType.bitcrusher, EffectType.chorus, EffectType.echo, EffectType.reverb];\n    public static readonly noteSizeMax: number = 6;\n\tpublic static readonly volumeRange: number = 50;\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\n\tpublic static readonly volumeLogScale: number = 0.1428;\n\tpublic static readonly panCenter: number = 50;\n\tpublic static readonly panMax: number = Config.panCenter * 2;\n\tpublic static readonly panDelaySecondsMax: number = 0.001;\n    public static readonly chorusRange: number = 8;\n    public static readonly chorusPeriodSeconds: number = 2.0;\n    public static readonly chorusDelayRange: number = 0.0034;\n    public static readonly chorusDelayOffsets: ReadonlyArray<ReadonlyArray<number>> = [[1.51, 2.10, 3.35], [1.47, 2.15, 3.25]];\n    public static readonly chorusPhaseOffsets: ReadonlyArray<ReadonlyArray<number>> = [[0.0, 2.1, 4.2], [3.2, 5.3, 1.0]];\n    public static readonly chorusMaxDelay: number = Config.chorusDelayRange * (1.0 + Config.chorusDelayOffsets[0].concat(Config.chorusDelayOffsets[1]).reduce((x, y) => Math.max(x, y)));\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\n        { name: \"simultaneous\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: false },\n        { name: \"strum\", customInterval: false, arpeggiates: false, strumParts: 1, singleTone: false },\n        { name: \"arpeggio\", customInterval: false, arpeggiates: true, strumParts: 0, singleTone: true },\n        { name: \"custom interval\", customInterval: true, arpeggiates: false, strumParts: 0, singleTone: true },\n    ]);\n    public static readonly maxChordSize: number = 9;\n    public static readonly operatorCount: number = 4;\n\tpublic static readonly maxPitchOrOperatorCount: number = Math.max(Config.maxChordSize, Config.operatorCount+2);\n    public static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\n        { name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\n        { name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\n        { name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\n        { name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\n        { name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\n        { name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\n        { name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\n        { name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\n        { name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\n        { name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\n        { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\n        { name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\n        { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\n        { name: \"1←(2 3) 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[2, 3], [4], [], []] },\n        { name: \"1←(2 (3 (4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[2, 3, 4], [3, 4], [4], []] },\n    ]);\n    public static readonly algorithms6Op: DictionaryArray<Algorithm> = toNameMap([\n        //placeholder makes life easier for later\n        { name: \"Custom\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n        //yoinked from SynthBox\n        //algortihm Section 1\n        { name: \"1←2←3←4←5←6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2], [3], [4], [5], [6], []] },\n        { name: \"1←3 2←4←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5], [6], []] },\n        { name: \"1←3←4 2←5←6\", carrierCount: 2, associatedCarrier: [1, 1, 1, 2, 2, 2], modulatedBy: [[3], [5], [4], [], [6], []] },\n        { name: \"1←4 2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [5], [6], [], [], []] },\n        //Algorithm Section 2\n        { name: \"1←3 2←(4 5←6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [], [6], []] },\n        { name: \"1←(3 4) 2←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [5], [], [], [6], []] },\n        { name: \"1←3 2←(4 5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5, 6], [], [], [], []] },\n        { name: \"1←3 2←(4 5)←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [6], [6], []] },\n        { name: \"1←3 2←4←(5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5, 6], [], []] },\n        { name: \"1←(2 3 4 5 6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n        { name: \"1←(2 3←5 4←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [5], [6], [], []] },\n        { name: \"1←(2 3 4←5←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], [5], [6], []] },\n        //Algorithm Section 3\n        { name: \"1←4←5 (2 3)←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [6], [6], [5], [], []] },\n        { name: \"1←(3 4)←5 2←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [6], [5], [5], [], []] },\n        { name: \"(1 2)←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [4], [5, 6], [], [], []] },\n        { name: \"(1 2)←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [5], [6], [6], [], []] },\n        { name: \"(1 2 3)←(4 5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4, 5, 6], [4, 5, 6], [4, 5, 6], [], [], []] },\n        { name: \"1←5 (2 3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [6], [6], [6], [], []] },\n        { name: \"1 2←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [5], [6], [6], [], []] },\n        { name: \"1 2 (3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [6], [6], [6], []] },\n        { name: \"1 2 3 (4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [6], [6], []] },\n        //Algorithm Section 3\n        { name: \"1 2←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3], modulatedBy: [[], [4], [5, 6], [], [], []] },\n        { name: \"1←4 2←(5 6) 3\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3,], modulatedBy: [[4], [5, 6], [], [], [], []] },\n        { name: \"1 2 3←5 4←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5], [6], [], []] },\n        { name: \"1 (2 3)←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4,], modulatedBy: [[], [5], [5], [], [6], []] },\n        { name: \"1 2 3←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5, 6], [], [], []] },\n        { name: \"(1 2 3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[6], [6], [6], [6], [6], []] },\n        { name: \"1 2 3 4 5←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [], [6], []] },\n        { name: \"1 2 3 4 5 6\", carrierCount: 6, associatedCarrier: [1, 2, 3, 4, 5, 6], modulatedBy: [[], [], [], [], [], []] },\n        //Section 4 where we take our own previous ones for 4op and it gets weird\n        { name: \"1←(2 (3 (4 (5 (6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\n        { name: \"1←(2(3(4(5(6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\n        { name: \"1←4(2←5(3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [3, 5], [6], [], [], []] },\n        { name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] },\n    ]);\n    public static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091, 0.061, 0.024];\n\tpublic static readonly operatorAmplitudeMax: number = 15;\n    public static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\n        { name: \"0.12×\", mult: 0.125, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"0.25×\", mult: 0.25, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"0.5×\", mult: 0.5, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"0.75×\", mult: 0.75, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\n        { name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\n        { name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"3.5×\", mult: 3.5, hzOffset: -0.05, amplitudeSign: 1.0 },\n        { name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"~4×\", mult: 4.0, hzOffset: -2.4, amplitudeSign: -1.0 },\n        { name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"10×\", mult: 10.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"12×\", mult: 12.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"14×\", mult: 14.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t    \t\t{ name: \"15×\", mult: 15.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t\t//ultrabox\n        { name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t    \t\t{ name: \"17×\", mult: 17.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t\t//ultrabox\n        { name: \"18×\", mult: 18.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t    \t\t{ name: \"19×\", mult: 19.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t\t//ultrabox\n        { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t    \t{ name: \"~20×\", mult: 20.0, hzOffset: -5.0, amplitudeSign: -1.0 },\n\t    // dogebox (maybe another mod also adds this? I got it from dogebox)\n\t\t{ name: \"25×\", mult: 25.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t{ name: \"50×\", mult: 50.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t{ name: \"75×\", mult: 75.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n\t{ name: \"100×\", mult: 100.0, hzOffset: 0.0, amplitudeSign: 1.0 }\n\t    //50 and 100 are from dogebox\n    ]);\n\n    public static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\n        { name: \"none\", type: EnvelopeType.none, speed: 0.0 },\n        { name: \"note size\", type: EnvelopeType.noteSize, speed: 0.0 },\n        { name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\n        { name: \"flare -1\", type: EnvelopeType.flare, speed: 128.0 },\n        { name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\n        { name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\n        { name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\n        { name: \"twang -1\", type: EnvelopeType.twang, speed: 128.0 },\n        { name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\n        { name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\n        { name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\n        { name: \"swell -1\", type: EnvelopeType.swell, speed: 128.0 },\n        { name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\n        { name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\n        { name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\n        { name: \"tremolo0\", type: EnvelopeType.tremolo, speed: 8.0 },\n        { name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\n        { name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\n        { name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\n        { name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\n        { name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\n        { name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\n        { name: \"decay -1\", type: EnvelopeType.decay, speed: 40.0 },\n        { name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\n        { name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\n        { name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\n        { name: \"wibble-1\", type: EnvelopeType.wibble, speed: 96.0 },\n        { name: \"wibble 1\", type: EnvelopeType.wibble, speed: 24.0 },\n        { name: \"wibble 2\", type: EnvelopeType.wibble, speed: 12.0 },\n        { name: \"wibble 3\", type: EnvelopeType.wibble, speed: 4.0 },\n        { name: \"linear-2\", type: EnvelopeType.linear, speed: 256.0 },\n        { name: \"linear-1\", type: EnvelopeType.linear, speed: 128.0 },\n        { name: \"linear 1\", type: EnvelopeType.linear, speed: 32.0 },\n        { name: \"linear 2\", type: EnvelopeType.linear, speed: 8.0 },\n        { name: \"linear 3\", type: EnvelopeType.linear, speed: 2.0 },\n        { name: \"rise -2\", type: EnvelopeType.rise, speed: 256.0 },\n        { name: \"rise -1\", type: EnvelopeType.rise, speed: 128.0 },\n        { name: \"rise 1\", type: EnvelopeType.rise, speed: 32.0 },\n        { name: \"rise 2\", type: EnvelopeType.rise, speed: 8.0 },\n        { name: \"rise 3\", type: EnvelopeType.rise, speed: 2.0 },\n\t    \t\t//modbox\n        { name: \"flute 1\", type: 9, speed: 16.0 },\n\t\t{ name: \"flute 2\", type: 9, speed: 8.0 },\n\t\t{ name: \"flute 3\", type: 9, speed: 4.0 },\n        // sandbox\n\t\t{ name: \"tripolo1\", type: 6, speed: 9.0 },\n        { name: \"tripolo2\", type: 6, speed: 6.0 },\n        { name: \"tripolo3\", type: 6, speed: 3.0 },\n        { name: \"tripolo4\", type: 7, speed: 9.0 },\n        { name: \"tripolo5\", type: 7, speed: 6.0 },\n        { name: \"tripolo6\", type: 7, speed: 3.0 },\n        { name: \"pentolo1\", type: 6, speed: 10.0 },\n        { name: \"pentolo2\", type: 6, speed: 5.0 },\n        { name: \"pentolo3\", type: 6, speed: 2.5 },\n        { name: \"pentolo4\", type: 7, speed: 10.0 },\n        { name: \"pentolo5\", type: 7, speed: 5.0 },\n        { name: \"pentolo6\", type: 7, speed: 2.5 },\t\n        // todbox\n\t    { name: \"flutter 1\", type: 6, speed: 14.0 },\n        { name: \"flutter 2\", type: 7, speed: 11.0 },\n        { name: \"water-y flutter\", type: 6, speed: 9.0 },\n\t    // new jummbox\n        { name: \"blip 1\", type: EnvelopeType.blip, speed: 6.0 },\n        { name: \"blip 2\", type: EnvelopeType.blip, speed: 16.0 },\n        { name: \"blip 3\", type: EnvelopeType.blip, speed: 32.0 },\n    ]);\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\n        { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\n        { name: \"1↔2 3↔4\", indices: [[2], [1], [4], [3]] },\n        { name: \"1↔4 2↔3\", indices: [[4], [3], [2], [1]] },\n        { name: \"2→1→4→3→2\", indices: [[2], [3], [4], [1]] },\n        { name: \"1→2→3→4→1\", indices: [[4], [1], [2], [3]] },\n        { name: \"(1 2 3)→4\", indices: [[], [], [], [1, 2, 3]] },\n        { name: \"ALL\", indices: [[1,2,3,4], [1,2,3,4], [1,2,3,4], [1, 2, 3,4]] },\n    ]);\n    public static readonly feedbacks6Op: DictionaryArray<Feedback> = toNameMap([\n        //placeholder makes life easier for later\n        { name: \"Custom\", indices: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n\n        { name: \"1⟲\", indices: [[1], [], [], [], [], []] },\n        { name: \"2⟲\", indices: [[], [2], [], [], [], []] },\n        { name: \"3⟲\", indices: [[], [], [3], [], [], []] },\n        { name: \"4⟲\", indices: [[], [], [], [4], [], []] },\n        { name: \"5⟲\", indices: [[], [], [], [], [5], []] },\n        { name: \"6⟲\", indices: [[], [], [], [], [], [6]] },\n        { name: \"1⟲ 2⟲\", indices: [[1], [2], [], [], [], []] },\n        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\n        { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], [], [], []] },\n        { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4], [], []] },\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4], [], []] },\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲\", indices: [[1], [2], [3], [4], [5], []] },\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲\", indices: [[1], [2], [3], [4], [5], [6]] },\n        { name: \"1→2\", indices: [[], [1], [], [], [], []] },\n        { name: \"1→3\", indices: [[], [], [1], [], [], []] },\n        { name: \"1→4\", indices: [[], [], [], [1], [], []] },\n        { name: \"1→5\", indices: [[], [], [], [], [1], []] },\n        { name: \"1→6\", indices: [[], [], [], [], [], [1]] },\n        { name: \"2→3\", indices: [[], [], [2], [], [], []] },\n        { name: \"2→4\", indices: [[], [], [], [2], [], []] },\n        { name: \"3→4\", indices: [[], [], [], [3], [], []] },\n        { name: \"4→5\", indices: [[], [], [], [], [4], []] },\n        { name: \"1→4 2→5 3→6\", indices: [[], [], [], [1], [2], [3]] },\n        { name: \"1→5 2→6 3→4\", indices: [[], [], [], [3], [1], [2]] },\n        { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n        { name: \"2→1→6→5→4→3→2\", indices: [[2], [3], [4], [5], [6], [1]] },\n        { name: \"1→2→3→4→5→6→1\", indices: [[6], [1], [2], [3], [4], [5]] },\n        { name: \"1↔2 3↔4 5↔6\", indices: [[2], [1], [4], [3], [6], [5]] },\n        { name: \"1↔4 2↔5 3↔6\", indices: [[4], [5], [6], [1], [2], [3]] },\n        { name: \"(1,2,3,4,5)→6\", indices: [[], [], [], [], [], [1, 2, 3, 4, 5]] },\n        { name: \"ALL\", indices: [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]] },\n    ]);\n    public static readonly chipNoiseLength: number = 1 << 15; // 32768\n    public static readonly spectrumNoiseLength: number = 1 << 15; // 32768\n    public static readonly spectrumBasePitch: number = 24;\n    public static readonly spectrumControlPoints: number = 30;\n    public static readonly spectrumControlPointsPerOctave: number = 7;\n    public static readonly spectrumControlPointBits: number = 3;\n    public static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\n    public static readonly harmonicsControlPoints: number = 28;\n    public static readonly harmonicsRendered: number = 64;\n    public static readonly harmonicsRenderedForPickedString: number = 1 << 8; // 256\n    public static readonly harmonicsControlPointBits: number = 3;\n    public static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\n    public static readonly harmonicsWavelength: number = 1 << 11; // 2048\n    public static readonly pulseWidthRange: number = 50;\n    public static readonly pulseWidthStepPower: number = 0.5;\n    public static readonly supersawVoiceCount: number = 7;\n\tpublic static readonly supersawDynamismMax: number = 6;\n\tpublic static readonly supersawSpreadMax: number = 12;\n\tpublic static readonly supersawShapeMax: number = 6;\n    public static readonly pitchChannelCountMin: number = 1;\n    public static readonly pitchChannelCountMax: number = 60;\n    public static readonly noiseChannelCountMin: number = 0;\n    public static readonly noiseChannelCountMax: number = 32;\n    public static readonly modChannelCountMin: number = 0;\n    public static readonly modChannelCountMax: number = 24;\n    public static readonly noiseInterval: number = 6;\n    public static readonly pitchesPerOctave: number = 12; // TODO: Use this for converting pitch to frequency.\n    public static readonly drumCount: number = 12;\n    public static readonly pitchOctaves: number = 8;\n    public static readonly modCount: number = 6;\n    public static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\n    public static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\n    public static readonly justIntonationSemitones: number[] = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * Config.pitchesPerOctave);\n    public static readonly pitchShiftRange: number = Config.justIntonationSemitones.length;\n    public static readonly pitchShiftCenter: number = Config.pitchShiftRange >> 1;\n    public static readonly detuneCenter: number = 200;\n    public static readonly detuneMax: number = 400;\n    public static readonly detuneMin: number = 0;\n    public static readonly songDetuneMin: number = 0;\n    public static readonly songDetuneMax: number = 500;\n    public static readonly sineWaveLength: number = 1 << 8; // 256\n    public static readonly sineWaveMask: number = Config.sineWaveLength - 1;\n    public static readonly sineWave: Float32Array = generateSineWave();\n\n    // Picked strings have an all-pass filter with a corner frequency based on the tone fundamental frequency, in order to add a slight inharmonicity. (Which is important for distortion.)\n    public static readonly pickedStringDispersionCenterFreq: number = 6000.0; // The tone fundamental freq is pulled toward this freq for computing the all-pass corner freq.\n    public static readonly pickedStringDispersionFreqScale: number = 0.3; // The tone fundamental freq freq moves this much toward the center freq for computing the all-pass corner freq.\n    public static readonly pickedStringDispersionFreqMult: number = 4.0; // The all-pass corner freq is based on this times the adjusted tone fundamental freq.\n    public static readonly pickedStringShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay the high frequency energy in the picked string.\n\n    public static readonly distortionRange: number = 8;\n    public static readonly stringSustainRange: number = 15;\n    public static readonly stringDecayRate: number = 0.12;\n    public static readonly enableAcousticSustain: boolean = false;\n\tpublic static readonly sustainTypeNames: ReadonlyArray<string> = [\"bright\", \"acoustic\"]; // See SustainType enum above.\n\n    public static readonly bitcrusherFreqRange: number = 14;\n    public static readonly bitcrusherOctaveStep: number = 0.5;\n    public static readonly bitcrusherQuantizationRange: number = 8;\n\n    public static readonly maxEnvelopeCount: number = 12;\n    public static readonly defaultAutomationRange: number = 13;\n    public static readonly instrumentAutomationTargets: DictionaryArray<AutomationTarget> = toNameMap([\n        { name: \"none\", computeIndex: null, displayName: \"none\",             /*perNote: false,*/ interleave: false, isFilter: false, /*range: 0,                              */    maxCount: 1, effect: null, compatibleInstruments: null },\n        { name: \"noteVolume\", computeIndex: EnvelopeComputeIndex.noteVolume, displayName: \"note volume\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.volumeRange,             */    maxCount: 1, effect: null, compatibleInstruments: null },\n        { name: \"pulseWidth\", computeIndex: EnvelopeComputeIndex.pulseWidth, displayName: \"pulse width\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pulseWidthRange,         */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pwm, InstrumentType.supersaw] },\n        { name: \"stringSustain\", computeIndex: EnvelopeComputeIndex.stringSustain, displayName: \"sustain\",          /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.stringSustainRange,      */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pickedString] },\n        { name: \"unison\", computeIndex: EnvelopeComputeIndex.unison, displayName: \"unison\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.chip, InstrumentType.harmonics, InstrumentType.pickedString, InstrumentType.customChipWave] },\n        { name: \"operatorFrequency\", computeIndex: EnvelopeComputeIndex.operatorFrequency0, displayName: \"fm# freq\",         /*perNote:  true,*/ interleave: true, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: Config.operatorCount+2, effect: null, compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\n        { name: \"operatorAmplitude\", computeIndex: EnvelopeComputeIndex.operatorAmplitude0, displayName: \"fm# volume\",       /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: Config.operatorCount+2, effect: null, compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\n        { name: \"feedbackAmplitude\", computeIndex: EnvelopeComputeIndex.feedbackAmplitude, displayName: \"fm feedback\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\n        { name: \"pitchShift\", computeIndex: EnvelopeComputeIndex.pitchShift, displayName: \"pitch shift\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pitchShiftRange,         */    maxCount: 1, effect: EffectType.pitchShift, compatibleInstruments: null },\n        { name: \"detune\", computeIndex: EnvelopeComputeIndex.detune, displayName: \"detune\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.detuneMax + 1,           */    maxCount: 1, effect: EffectType.detune, compatibleInstruments: null },\n        { name: \"vibratoDepth\", computeIndex: EnvelopeComputeIndex.vibratoDepth, displayName: \"vibrato range\",    /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1, effect: EffectType.vibrato, compatibleInstruments: null },\n        { name: \"noteFilterAllFreqs\", computeIndex: EnvelopeComputeIndex.noteFilterAllFreqs, displayName: \"n. filter freqs\",  /*perNote:  true,*/ interleave: false, isFilter: true, /*range: null,                           */    maxCount: 1, effect: EffectType.noteFilter, compatibleInstruments: null },\n        { name: \"noteFilterFreq\", computeIndex: EnvelopeComputeIndex.noteFilterFreq0, displayName: \"n. filter # freq\", /*perNote:  true,*/ interleave: false/*true*/, isFilter: true, /*range: Config.filterFreqRange,     */        maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null },\n        { name: \"decimalOffset\", computeIndex: EnvelopeComputeIndex.decimalOffset, displayName: \"decimal offset\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pulseWidthRange,         */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pwm, InstrumentType.supersaw] },\n        { name: \"supersawDynamism\",       computeIndex:       EnvelopeComputeIndex.supersawDynamism,       displayName: \"dynamism\",         /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawDynamismMax + 1, */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\n\t\t{ name: \"supersawSpread\",         computeIndex:       EnvelopeComputeIndex.supersawSpread,         displayName: \"spread\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawSpreadMax + 1,   */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\n\t\t{ name: \"supersawShape\",          computeIndex:       EnvelopeComputeIndex.supersawShape,          displayName: \"saw↔pulse\",        /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawShapeMax + 1,    */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},    \n        // Controlling filter gain is less obvious and intuitive than controlling filter freq, so to avoid confusion I've disabled it for now...\n        //{name: \"noteFilterGain\",         computeIndex:       EnvelopeComputeIndex.noteFilterGain0,        displayName: \"n. filter # vol\",  /*perNote:  true,*/ interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null},\n        /*\n        {name: \"distortion\",             computeIndex: InstrumentAutomationIndex.distortion,             displayName: \"distortion\",       perNote: false, interleave: false, isFilter: false, range: Config.distortionRange,             maxCount: 1,    effect: EffectType.distortion,   compatibleInstruments: null},\n        {name: \"bitcrusherQuantization\", computeIndex: InstrumentAutomationIndex.bitcrusherQuantization, displayName: \"bit crush\",        perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherQuantizationRange, maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\n        {name: \"bitcrusherFrequency\",    computeIndex: InstrumentAutomationIndex.bitcrusherFrequency,    displayName: \"freq crush\",       perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherFreqRange,         maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\n        {name: \"eqFilterAllFreqs\",       computeIndex: InstrumentAutomationIndex.eqFilterAllFreqs,       displayName: \"eq filter freqs\",  perNote: false, interleave: false, isFilter:  true, range: null,                               maxCount: 1,    effect: null,                    compatibleInstruments: null},\n        {name: \"eqFilterFreq\",           computeIndex: InstrumentAutomationIndex.eqFilterFreq0,          displayName: \"eq filter # freq\", perNote: false, interleave:  true, isFilter:  true, range: Config.filterFreqRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\n        {name: \"eqFilterGain\",           computeIndex: InstrumentAutomationIndex.eqFilterGain0,          displayName: \"eq filter # vol\",  perNote: false, interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\n        {name: \"panning\",                computeIndex: InstrumentAutomationIndex.panning,                displayName: \"panning\",          perNote: false, interleave: false, isFilter: false, range: Config.panMax + 1,                  maxCount: 1,    effect: EffectType.panning,      compatibleInstruments: null},\n        {name: \"chorus\",                 computeIndex: InstrumentAutomationIndex.chorus,                 displayName: \"chorus\",           perNote: false, interleave: false, isFilter: false, range: Config.chorusRange,                 maxCount: 1,    effect: EffectType.chorus,       compatibleInstruments: null},\n        {name: \"echoSustain\",            computeIndex: InstrumentAutomationIndex.echoSustain,            displayName: \"echo\",             perNote: false, interleave: false, isFilter: false, range: Config.echoSustainRange,            maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null},\n        {name: \"echoDelay\",              computeIndex: InstrumentAutomationIndex.echoDelay,              displayName: \"echo delay\",       perNote: false, interleave: false, isFilter: false, range: Config.echoDelayRange,              maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null}, // wait until after we're computing a tick's settings for multiple run lengths.\n        {name: \"reverb\",                 computeIndex: InstrumentAutomationIndex.reverb,                 displayName: \"reverb\",           perNote: false, interleave: false, isFilter: false, range: Config.reverbRange,                 maxCount: 1,    effect: EffectType.reverb,       compatibleInstruments: null},\n        {name: \"mixVolume\",              computeIndex: InstrumentAutomationIndex.mixVolume,              displayName: \"mix volume\",       perNote: false, interleave: false, isFilter: false, range: Config.volumeRange,                 maxCount: 1,    effect: null,                    compatibleInstruments: null},\n        {name: \"envelope#\",              computeIndex: null,                                             displayName: \"envelope\",         perNote: false, interleave: false, isFilter: false, range: Config.defaultAutomationRange,      maxCount: Config.maxEnvelopeCount, effect: null, compatibleInstruments: null}, // maxCount special case for envelopes to be allowed to target earlier ones.\n        */\n    ]);\n    public static readonly operatorWaves: DictionaryArray<OperatorWave> = toNameMap([\n\t\t{ name: \"sine\", samples: Config.sineWave },\n\t\t{ name: \"triangle\", samples: generateTriWave() },\n\t\t{ name: \"pulse width\", samples: generateSquareWave() },\n\t\t{ name: \"sawtooth\", samples: generateSawWave() },\n\t\t{ name: \"ramp\", samples: generateSawWave(true) },\n\t\t{ name: \"trapezoid\", samples: generateTrapezoidWave(2) },\n\t    { name: \"rounded\", samples: generateRoundedSineWave() },\n\t\t//{ name: \"white noise\", samples: generateWhiteNoiseFmWave() },\n\t\t//{ name: \"1-bit white noise\", samples: generateOneBitWhiteNoiseFmWave() },\n    ]);\n    public static readonly pwmOperatorWaves: DictionaryArray<OperatorWave> = toNameMap([\n        { name: \"1%\", samples: generateSquareWave(0.01) },\n        { name: \"5%\", samples: generateSquareWave(0.05) },\n        { name: \"12.5%\", samples: generateSquareWave(0.125) },\n        { name: \"25%\", samples: generateSquareWave(0.25) },\n        { name: \"33%\", samples: generateSquareWave(1 / 3) },\n        { name: \"50%\", samples: generateSquareWave(0.5) },\n        { name: \"66%\", samples: generateSquareWave(2 / 3) },\n        { name: \"75%\", samples: generateSquareWave(0.75) },\n        { name: \"87.5%\", samples: generateSquareWave(0.875) },\n        { name: \"95%\", samples: generateSquareWave(0.95) },\n        { name: \"99%\", samples: generateSquareWave(0.99) },\n    ]);\n\n\n    // Height of the small editor column for inserting/deleting rows, in pixels.\n    public static readonly barEditorHeight: number = 10;\n\n    // Careful about changing index ordering for this. Index is stored in URL/JSON etc.\n    public static readonly modulators: DictionaryArray<Modulator> = toNameMap([\n        { name: \"none\", pianoName: \"None\", maxRawVol: 6, newNoteVol: 6, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"No Mod Setting\", promptDesc: [ \"No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.\", \"[$LO - $HI]\" ] },\n        { name: \"song volume\", pianoName: \"Volume\", maxRawVol: 100, newNoteVol: 100, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Song Volume\", promptDesc: [ \"This setting affects the overall volume of the song, just like the main volume slider.\", \"At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\n        { name: \"tempo\", pianoName: \"Tempo\", maxRawVol: Config.tempoMax - Config.tempoMin, newNoteVol: Math.ceil((Config.tempoMax - Config.tempoMin) / 2), forSong: true, convertRealFactor: Config.tempoMin, associatedEffect: EffectType.length,\n            promptName: \"Song Tempo\", promptDesc: [ \"This setting controls the speed your song plays at, just like the tempo slider.\", \"When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.\", \"Note that you can make a 'swing' effect by rapidly changing between two tempo values.\", \"[OVERWRITING] [$LO - $HI] [BPM]\" ] },\n        { name: \"song reverb\", pianoName: \"Reverb\", maxRawVol: Config.reverbRange * 2, newNoteVol: Config.reverbRange, forSong: true, convertRealFactor: -Config.reverbRange, associatedEffect: EffectType.length,\n            promptName: \"Song Reverb\", promptDesc: [ \"This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.\", \"At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"next bar\", pianoName: \"Next Bar\", maxRawVol: 1, newNoteVol: 1, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Go To Next Bar\", promptDesc: [ \"This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.\", \"This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.\", \"You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.\", \"[$LO - $HI]\" ] },\n        { name: \"note volume\", pianoName: \"Note Vol.\", maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\n            promptName: \"Note Volume\", promptDesc: [ \"This setting affects the volume of your instrument as if its note size had been scaled.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.\", \"For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"pan\", pianoName: \"Pan\", maxRawVol: Config.panMax, newNoteVol: Math.ceil(Config.panMax / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\n            promptName: \"Instrument Panning\", promptDesc: [ \"This setting controls the panning of your instrument, just like the panning slider.\", \"At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.\", \"[OVERWRITING] [$LO - $HI] [L-R]\" ] },\n        { name: \"reverb\", pianoName: \"Reverb\", maxRawVol: Config.reverbRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.reverb,\n            promptName: \"Instrument Reverb\", promptDesc: [ \"This setting controls the reverb of your insturment, just like the reverb slider.\", \"At $LO, your instrument will have no reverb. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"distortion\", pianoName: \"Distortion\", maxRawVol: Config.distortionRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.distortion,\n            promptName: \"Instrument Distortion\", promptDesc: [ \"This setting controls the amount of distortion for your instrument, just like the distortion slider.\", \"At $LO, your instrument will have no distortion. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\" ] },\n        { name: \"fm slider 1\", pianoName: \"FM 1\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 1\", promptDesc: [ \"This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"fm slider 2\", pianoName: \"FM 2\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 2\", promptDesc: [\"This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\n        { name: \"fm slider 3\", pianoName: \"FM 3\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 3\", promptDesc: [\"This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\n        { name: \"fm slider 4\", pianoName: \"FM 4\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 4\", promptDesc: [\"This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"fm feedback\", pianoName: \"FM Feedback\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Feedback\", promptDesc: [\"This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"pulse width\", pianoName: \"Pulse Width\", maxRawVol: Config.pulseWidthRange, newNoteVol: Config.pulseWidthRange, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Pulse Width\", promptDesc: [\"This setting controls the width of this instrument's pulse wave, just like the pulse width slider.\", \"At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).\", \"Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.\", \"[OVERWRITING] [$LO - $HI] [%Duty]\"] },\n        { name: \"detune\", pianoName: \"Detune\", maxRawVol: Config.detuneMax - Config.detuneMin, newNoteVol: Config.detuneCenter, forSong: false, convertRealFactor: -Config.detuneCenter, associatedEffect: EffectType.detune,\n            promptName: \"Instrument Detune\", promptDesc: [\"This setting controls the detune for this instrument, just like the detune slider.\", \"At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.\", \"[OVERWRITING] [$LO - $HI] [cents]\"] },\n        { name: \"vibrato depth\", pianoName: \"Vibrato Depth\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\n            promptName: \"Vibrato Depth\", promptDesc: [\"This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.\", \"At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.\", \"[OVERWRITING] [$LO - $HI] [pitch ÷25]\"] },\n        { name: \"song detune\", pianoName: \"Detune\", maxRawVol: Config.songDetuneMax - Config.songDetuneMin, newNoteVol: Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2), forSong: true, convertRealFactor: -250, associatedEffect: EffectType.length,\n            promptName: \"Song Detune\", promptDesc: [\"This setting controls the overall detune of the entire song. There is no associated slider.\", \"At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [cents x4]\"] },\n        { name: \"vibrato speed\", pianoName: \"Vibrato Speed\", maxRawVol: 30, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\n            promptName: \"Vibrato Speed\", promptDesc: [\"This setting controls the speed your instrument will vibrato at, just like the slider.\", \"A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"vibrato delay\", pianoName: \"Vibrato Delay\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\n            promptName: \"Vibrato Delay\", promptDesc: [\"This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.\", \"A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).\", \"[OVERWRITING] [$LO - $HI] [beats ÷24]\"] },\n        { name: \"arp speed\", pianoName: \"Arp Speed\", maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\n            promptName: \"Arpeggio Speed\", promptDesc: [\"This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.\", \"Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.\",\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"pan delay\", pianoName: \"Pan Delay\", maxRawVol: 20, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\n            promptName: \"Panning Delay\", promptDesc: [\"This setting controls the delay applied to panning for your instrument, just like the pan delay slider.\", \"With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"reset arp\", pianoName: \"Reset Arp\", maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\n            promptName: \"Reset Arpeggio\", promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.\", \"This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.\", \"[$LO - $HI]\"] },\n        { name: \"eq filter\", pianoName: \"EQFlt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"EQ Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's EQ filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"note filter\", pianoName: \"N.Flt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\n            promptName: \"Note Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's note filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"bit crush\", pianoName: \"Bitcrush\", maxRawVol: Config.bitcrusherQuantizationRange-1, newNoteVol: Math.round(Config.bitcrusherQuantizationRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\n            promptName: \"Instrument Bit Crush\", promptDesc: [\"This setting controls the bit crush of your instrument, just like the bit crush slider.\", \"At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"freq crush\", pianoName: \"Freq Crush\", maxRawVol: Config.bitcrusherFreqRange-1, newNoteVol: Math.round(Config.bitcrusherFreqRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\n            promptName: \"Instrument Frequency Crush\", promptDesc: [\"This setting controls the frequency crush of your instrument, just like the freq crush slider.\", \"At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"echo\", pianoName: \"Echo\", maxRawVol: Config.echoSustainRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.echo,\n            promptName: \"Instrument Echo Sustain\", promptDesc: [\"This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.\", \"At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"echo delay\", pianoName: \"Echo Delay\", maxRawVol: Config.echoDelayRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Instrument Echo Delay\", promptDesc: [\"This setting controls the echo delay of your instrument, just like the echo delay slider.\", \"At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.\", \"[OVERWRITING] [$LO - $HI] [~beats ÷12]\" ]\n        }, // Disabled via associatedEffect and manually in list build in SongEditor, enable and set back to echo after fixing bugginess!\n        { name: \"chorus\", pianoName: \"Chorus\", maxRawVol: Config.chorusRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chorus,\n            promptName: \"Instrument Chorus\", promptDesc: [\"This setting controls the chorus strength of your instrument, just like the chorus slider.\", \"At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"eq filt cut\", pianoName: \"EQFlt Cut\", maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"EQ Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"eq filt peak\", pianoName: \"EQFlt Peak\", maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"EQ Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"note filt cut\", pianoName: \"N.Flt Cut\", maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\n            promptName: \"Note Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"note filt peak\", pianoName: \"N.Flt Peak\", maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\n            promptName: \"Note Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"pitch shift\", pianoName: \"Pitch Shift\", maxRawVol: Config.pitchShiftRange - 1, newNoteVol: Config.pitchShiftCenter, forSong: false, convertRealFactor: -Config.pitchShiftCenter, associatedEffect: EffectType.pitchShift,\n            promptName: \"Pitch Shift\", promptDesc: [\"This setting controls the pitch offset of your instrument, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[OVERWRITING] [$LO - $HI] [pitch]\"] },\n        { name: \"sustain\", pianoName: \"Sustain\", maxRawVol: Config.stringSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Picked String Sustain\", promptDesc: [\"This setting controls the sustain of your picked string instrument, just like the sustain slider.\", \"At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"mix volume\", pianoName: \"Mix Vol.\", maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\n            promptName: \"Mix Volume\", promptDesc: [\"This setting affects the volume of your instrument as if its volume slider had been moved.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n        { name: \"fm slider 5\", pianoName: \"FM 5\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 5\", promptDesc: [\"This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"fm slider 6\", pianoName: \"FM 6\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 6\", promptDesc: [\"This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"decimal offset\", pianoName: \"Decimal Offset\", maxRawVol: 99, newNoteVol: 0, forSong: false, convertRealFactor: 0, optionalModify: \"invert-0to99\", associatedEffect: EffectType.length,\n            promptName: \"Decimal Offset\", promptDesc: [\"This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.\", \"[$LO - $HI]\"] },\n        { name: \"envelope speed\", pianoName: \"EnvelopeSpd\", maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Envelope Speed\", promptDesc: [\"This setting controls how fast all of the envelopes for the instrument play.\", \"At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:\",\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"dynamism\", pianoName: \"Dynamism\", maxRawVol: Config.supersawDynamismMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Supersaw Dynamism\", promptDesc: [\"This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.\", \"At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"spread\", pianoName: \"Spread\", maxRawVol: Config.supersawSpreadMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Supersaw Spread\", promptDesc: [\"This setting controls the supersaw spread of your instrument, just like the spread slider.\", \"At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"saw shape\", pianoName: \"Saw Shape\", maxRawVol: Config.supersawShapeMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Supersaw Shape\", promptDesc: [\"This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.\", \"As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\n        ]);\n}\n\nfunction centerWave(wave: Array<number>): Float32Array {\n    let sum: number = 0.0;\n    for (let i: number = 0; i < wave.length; i++) sum += wave[i];\n    const average: number = sum / wave.length;\n    for (let i: number = 0; i < wave.length; i++) wave[i] -= average;\n    performIntegral(wave);\n    // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\n    wave.push(0);\n    return new Float32Array(wave);\n}\nfunction centerAndNormalizeWave(wave: Array<number>): Float32Array {\n    let magn: number = 0.0;\n\n    centerWave(wave);\n\n    // Going to length-1 because an extra 0 sample is added on the end as part of centerWave, which shouldn't impact magnitude calculation.\n    for (let i: number = 0; i < wave.length - 1; i++) {\n        magn += Math.abs(wave[i]);\n    }\n    const magnAvg: number = magn / (wave.length - 1);\n\n    for (let i: number = 0; i < wave.length - 1; i++) {\n        wave[i] = wave[i] / magnAvg;\n    }\n\n    return new Float32Array(wave);\n\n}\nexport function performIntegral(wave: { length: number, [index: number]: number }): Float32Array {\n    // Perform the integral on the wave. The synth function will perform the derivative to get the original wave back but with antialiasing.\n    let cumulative: number = 0.0;\n    let newWave: Float32Array = new Float32Array(wave.length);\n    for (let i: number = 0; i < wave.length; i++) {\n        newWave[i] = cumulative;\n        cumulative += wave[i];\n    }\n\n    return newWave;\n}\nexport function performIntegralOld(wave: { length: number, [index: number]: number }): void {\n\t// Old ver used in harmonics/picked string instruments, manipulates wave in place.\n\tlet cumulative: number = 0.0;\n\tfor (let i: number = 0; i < wave.length; i++) {\n\t\tconst temp = wave[i];\n\t\twave[i] = cumulative;\n\t\tcumulative += temp;\n\t}\n}\n\nexport function getPulseWidthRatio(pulseWidth: number): number {\n    // BeepBox formula for reference\n    //return Math.pow(0.5, (Config.pulseWidthRange - 1 - pulseWidth) * Config.pulseWidthStepPower) * 0.5;\n\n    return pulseWidth / (Config.pulseWidthRange * 2);\n}\n\n\n// The function arguments will be defined in FFT.ts, but I want\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null, scaleElementsByFactor: Function | null): Float32Array {\n    let wave: Float32Array | null = Config.chipNoises[index].samples;\n    if (wave == null) {\n        wave = new Float32Array(Config.chipNoiseLength + 1);\n        Config.chipNoises[index].samples = wave;\n\n\t\tif (index == 0) {\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\n\t\t\tlet drumBuffer: number = 1;\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 1 << 14;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 1) {\n\t\t\t// White noise is just random values for each sample.\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\n\t\t\t}\n\t\t} else if (index == 2) {\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\n\t\t\tlet drumBuffer: number = 1;\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 2 << 14;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 3) {\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\n\t\t\tlet drumBuffer: number = 1;\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 10 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 4) {\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 10, 11, 1, 1, 0);\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 11, 14, .6578, .6578, 0);\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n\t\t} else if (index == 5) {\n\t\t\t// \"Shine\" drums from modbox!\n\t\t\tvar drumBuffer = 1;\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 10 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 6) {\n\t\t\t// \"Deep\" drums from modbox!\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 1, 10, 1, 1, 0);\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 20, 14, -2, -2, 0);\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n\t\t} else if (index == 7) {\n\t\t\t// \"Cutter\" drums from modbox!\n\t\t\tvar drumBuffer = 1;\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1) - 8.0;\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer += 15 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n\t\t\t}\n\t\t} else if (index == 8) {\n\t\t\t// \"Metallic\" drums from modbox!\n\t\t\tvar drumBuffer = 1;\n\t\t\tfor (var i = 0; i < 32768; i++) {\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 - 0.5;\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\n\t\t\t\t\tnewBuffer -= 10 << 2;\n\t\t\t\t}\n\t\t\t\tdrumBuffer = newBuffer;\n            }\n        } else if (index == 9) {\n            // a noise more like old static than white noise\n            let drumBuffer: number = 1;\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.1;\n                let newBuffer: number = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 8 ^ 2 << 16;\n                }\n                drumBuffer = newBuffer;\n            }\n\t\t}\n\t\t\t\t\telse if (index == 10) {\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\n                    wave[i] = Math.round(Math.random());\n                }\n            }\n\t\t\t else if (index == 11) {\n                var drumBuffer = 1;\n                for (var i = 0; i < 32768; i++) {\n                    wave[i] = Math.round((drumBuffer & 1));\n                    var newBuffer = drumBuffer >> 1;\n                    if (((drumBuffer + newBuffer) & 1) == 1) {\n                        newBuffer -= 10 << 2;\n                    }\n                    drumBuffer = newBuffer;\n                }\n            }\n\t\t\telse if (index == 12) {\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\n                   var ultraboxnewchipnoiserand = Math.random();\n\t\t\t\t   wave[i] = Math.pow(ultraboxnewchipnoiserand, Math.clz32(ultraboxnewchipnoiserand));\n                }\n            }\n\t\t\telse if (index == 13) {\n\t\t\t\tvar b0 = 0, b1 = 0, b2 = 0, b3, b4, b5, b6;\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\t\t\t\n\t\t\t\tfor (let i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\n\t\t\t\t\twave[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t\t\t\twave[i] *= 0.44;\n\t\t\t\t\tb6 = white * 0.115926;\n\t\t\t\t\t// from https://github.com/zacharydenton/noise.js, MIT license soooo\n                }\n            }\n\t\t\telse if (index == 14) {\n\t\t\t\tvar lastOut = 0.0;\n\t\t\t\t\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\twave[i] = (lastOut + (0.02 * white)) / 1.02;\n\t\t\t\t\tlastOut = wave[i];\n\t\t\t\t\twave[i] *= 14;\n\t\t\t\t\t// this is also from noise.js\n                }\n            }\n\t\t//\telse if (index == 15) {\n\t\t//\t\tconst doomRandArray = [0, 8, 109, 220, 222, 241, 149, 107, 75, 248, 254, 140, 16, 66 , 74, 21, 211, 47, 80, 242, 154, 27, 205, 128, 161, 89, 77, 36 , 95, 110, 85, 48, 212, 140, 211, 249, 22, 79, 200, 50, 28, 188 , 52, 140, 202, 120, 68, 145, 62, 70, 184, 190, 91, 197, 152, 224 , 149, 104, 25, 178, 252, 182, 202, 182, 141, 197, 4, 81, 181, 242 , 145, 42, 39, 227, 156, 198, 225, 193, 219, 93, 122, 175, 249, 0 , 175, 143, 70, 239, 46, 246, 163, 53, 163, 109, 168, 135, 2, 235 , 25, 92, 20, 145, 138, 77, 69, 166, 78, 176, 173, 212, 166, 113 , 94, 161, 41, 50, 239, 49, 111, 164, 70, 60, 2, 37, 171, 75 , 136, 156, 11, 56, 42, 146, 138, 229, 73, 146, 77, 61, 98, 196 , 135, 106, 63, 197, 195, 86, 96, 203, 113, 101, 170, 247, 181, 113 , 80, 250, 108, 7, 255, 237, 129, 226, 79, 107, 112, 166, 103, 241 , 24, 223, 239, 120, 198, 58, 60, 82, 128, 3, 184, 66, 143, 224 , 145, 224, 81, 206, 163, 45, 63, 90, 168, 114, 59, 33, 159, 95 , 28, 139, 123, 98, 125, 196, 15, 70, 194, 253, 54, 14, 109, 226 , 71, 17, 161, 93, 186, 87, 244, 138, 20, 52, 123, 251, 26, 36 , 17, 46, 52, 231, 232, 76, 31, 221, 84, 37, 216, 165, 212, 106 , 197, 242, 98, 43, 39, 175, 254, 145, 190, 84, 118, 222, 187, 136 , 120, 163, 236, 249];\n\t\t//\t\tconst randomSeed = Math.floor(Math.random() * 256);\n\t\t//\t\tvar amountOfLoops = 0;\n\t\t//\t\tvar newWaveValue = 0;\n       //         for (let i = 0; i < Config.chipNoiseLength; i++) {\n\t\t//\t\t\tif (i / 256 > amountOfLoops) {amountOfLoops++;}\n\t\t//\t\t\tnewWaveValue = doomRandArray.at(i - amountOfLoops * 256 + randomSeed);\n\t\t//\t\t\tif (newWaveValue > 256) {newWaveValue += - 256;}\n\t\t//\t\t\twave[i] = newWaveValue * 0.0025;\n\t\t\t\t\t//this sucks\n\t\t\t\t\t//also the randomized starting point code I spent 5 minutes on does nothing (auditorily)\n        //        }\n            //}\n\t\t\n\t\telse {\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\n\t\t}\n\n        wave[Config.chipNoiseLength] = wave[0];\n    }\n\n    return wave;\n}\n\nexport function drawNoiseSpectrum(wave: Float32Array, waveLength: number, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\n    const referenceOctave: number = 11;\n    const referenceIndex: number = 1 << referenceOctave;\n    const lowIndex: number = Math.pow(2, lowOctave) | 0;\n    const highIndex: number = Math.min(waveLength >> 1, Math.pow(2, highOctave) | 0);\n    const retroWave: Float32Array = getDrumWave(0, null, null);\n    let combinedAmplitude: number = 0.0;\n    for (let i: number = lowIndex; i < highIndex; i++) {\n\n        let lerped: number = lowPower + (highPower - lowPower) * (Math.log2(i) - lowOctave) / (highOctave - lowOctave);\n        let amplitude: number = Math.pow(2, (lerped - 1) * 7 + 1) * lerped;\n\n        amplitude *= Math.pow(i / referenceIndex, overallSlope);\n\n        combinedAmplitude += amplitude;\n\n        // Add two different sources of psuedo-randomness to the noise\n        // (individually they aren't random enough) but in a deterministic\n        // way so that live spectrum editing doesn't result in audible pops.\n        // Multiply all the sine wave amplitudes by 1 or -1 based on the\n        // LFSR retro wave (effectively random), and also rotate the phase\n        // of each sine wave based on the golden angle to disrupt the symmetry.\n        amplitude *= retroWave[i];\n        const radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\n\n        wave[i] = Math.cos(radians) * amplitude;\n        wave[waveLength - i] = Math.sin(radians) * amplitude;\n    }\n\n    return combinedAmplitude;\n}\n\nfunction generateSineWave(): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\n    }\n    return wave;\n}\n\nfunction generateTriWave(): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) / (Math.PI / 2);\n    }\n    return wave;\n}\n\nfunction generateTrapezoidWave(drive: number = 2): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = Math.max(-1.0, Math.min(1.0, Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) * drive));\n    }\n    return wave;\n}\n\nfunction generateSquareWave(phaseWidth: number = 0): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    const centerPoint: number = Config.sineWaveLength / 4;\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = +((Math.abs(i - centerPoint) < phaseWidth * Config.sineWaveLength / 2)\n            || ((Math.abs(i - Config.sineWaveLength - centerPoint) < phaseWidth * Config.sineWaveLength / 2))) * 2 - 1;\n    }\n    return wave;\n}\n\nfunction generateSawWave(inverse: boolean = false): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = ((i + (Config.sineWaveLength / 4.0)) * 2.0 / Config.sineWaveLength) % 2 - 1;\n        wave[i] = inverse ? -wave[i] : wave[i];\n    }\n    return wave;\n}\n\n\t// function generateWhiteNoiseFmWave() {\n        // const wave = new Float32Array(Config.sineWaveLength + 1);\n        // for (let i = 0; i < Config.sineWaveLength + 1; i++) {\n            // wave[i] = Math.random() * 2.0 - 1.0;\n        // }\n        // return wave;\n    // }\n\t// function generateOneBitWhiteNoiseFmWave() {\n        // const wave = new Float32Array(Config.sineWaveLength + 1);\n        // for (let i = 0; i < Config.sineWaveLength + 1; i++) {\n            // wave[i] = Math.round(Math.random());\n        // }\n        // return wave;\n    // }\n\tfunction generateRoundedSineWave() {\n        const wave = new Float32Array(Config.sineWaveLength + 1);\n        for (let i = 0; i < Config.sineWaveLength + 1; i++) {\n            wave[i] = Math.round(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength));\n        }\n        return wave;\n\t}\n\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\n    let arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\n    if (arpeggioPattern != null) {\n        if (pitchCount == 2 && useFastTwoNoteArp == false) {\n            arpeggioPattern = [0, 0, 1, 1];\n        }\n        return arpeggioPattern[arpeggio % arpeggioPattern.length];\n    } else {\n        return arpeggio % pitchCount;\n    }\n}\n\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\n    const dictionary: Dictionary<T> = {};\n    for (let i: number = 0; i < array.length; i++) {\n        const value: any = array[i];\n        value.index = i;\n        dictionary[value.name] = <T>value;\n    }\n    const result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\n    result.dictionary = dictionary;\n    return result;\n}\n\nexport function effectsIncludeTransition(effects: number): boolean {\n    return (effects & (1 << EffectType.transition)) != 0;\n}\nexport function effectsIncludeChord(effects: number): boolean {\n    return (effects & (1 << EffectType.chord)) != 0;\n}\nexport function effectsIncludePitchShift(effects: number): boolean {\n    return (effects & (1 << EffectType.pitchShift)) != 0;\n}\nexport function effectsIncludeDetune(effects: number): boolean {\n    return (effects & (1 << EffectType.detune)) != 0;\n}\nexport function effectsIncludeVibrato(effects: number): boolean {\n    return (effects & (1 << EffectType.vibrato)) != 0;\n}\nexport function effectsIncludeNoteFilter(effects: number): boolean {\n    return (effects & (1 << EffectType.noteFilter)) != 0;\n}\nexport function effectsIncludeDistortion(effects: number): boolean {\n    return (effects & (1 << EffectType.distortion)) != 0;\n}\nexport function effectsIncludeBitcrusher(effects: number): boolean {\n    return (effects & (1 << EffectType.bitcrusher)) != 0;\n}\nexport function effectsIncludePanning(effects: number): boolean {\n    return (effects & (1 << EffectType.panning)) != 0;\n}\nexport function effectsIncludeChorus(effects: number): boolean {\n    return (effects & (1 << EffectType.chorus)) != 0;\n}\nexport function effectsIncludeEcho(effects: number): boolean {\n    return (effects & (1 << EffectType.echo)) != 0;\n}\nexport function effectsIncludeReverb(effects: number): boolean {\n    return (effects & (1 << EffectType.reverb)) != 0;\n}\nexport function rawChipToIntegrated(raw: DictionaryArray<ChipWave>): DictionaryArray<ChipWave> {\n    const newArray: Array<ChipWave> = new Array<ChipWave>(raw.length);\n    const dictionary: Dictionary<ChipWave> = {};\n    for (let i: number = 0; i < newArray.length; i++) {\n        newArray[i] = Object.assign([], raw[i]);\n        const value: any = newArray[i];\n        value.index = i;\n        dictionary[value.name] = <ChipWave>value;\n    }\n    for (let key in dictionary) {\n        dictionary[key].samples = performIntegral(dictionary[key].samples);\n    }\n    const result: DictionaryArray<ChipWave> = <DictionaryArray<ChipWave>><any>newArray;\n    result.dictionary = dictionary;\n    return result;\n}","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\nimport { Song } from \"../synth/synth\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\n\nexport interface ChannelColors extends BeepBoxOption {\n    readonly secondaryChannel: string;\n    readonly primaryChannel: string;\n    readonly secondaryNote: string;\n    readonly primaryNote: string;\n}\n\nexport class ColorConfig {\n    public static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\n\tpublic static usesColorFormula: boolean = false;\n    public static readonly themes: { [name: string]: string } = {\n      \"AbyssBox Classic\": `\n\t\t\t\n\t  :root {\n\t\t--page-margin: #050000;\n\t\t--editor-background: #050000;\n\t\t--hover-preview: white;\n\t\t--playhead: white;\n\t\t--primary-text: white;\n\t\t--secondary-text: #999;\n\t\t--inverted-text: black;\n\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t--loop-accent: #74f;\n\t\t--link-accent: #98f;\n\t\t--ui-widget-background: #444;\n\t\t--ui-widget-focus: #777;\n\t\t--pitch-background: #444;\n\t\t--tonic: #864;\n\t\t--fifth-note: #468;\n\t\t--white-piano-key: #bbb;\n\t\t--black-piano-key: #444;\n\t\t--white-piano-key-text: #131200;\n\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t--track-editor-bg-noise: #444;\n\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t--track-editor-bg-mod: #234;\n\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #74f;\n\t\t\t--indicator-secondary: #444;\n\t\t\t--select2-opt-group: #585858;\n\t\t\t--input-box-outline: #333;\n\t\t\t--mute-button-normal: #ffa033;\n\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t--pitch-channel-limit: 6;\n\t\t\t--noise-channel-limit: 3;\n\t\t--pitch1-secondary-channel: #0099A1;\n\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t--pitch1-primary-note:      #92F9FF;\n\t\t--pitch2-secondary-channel: #A1A100;\n\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t--pitch2-secondary-note:    #C7C700;\n\t\t--pitch2-primary-note:      #FFFF92;\n\t\t--pitch3-secondary-channel: #C75000;\n\t\t--pitch3-primary-channel:   #FF9752;\n\t\t--pitch3-secondary-note:    #FF771C;\n\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t--pitch4-secondary-channel: #00A100;\n\t\t--pitch4-primary-channel:   #50FF50;\n\t\t--pitch4-secondary-note:    #00C700;\n\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t--pitch5-secondary-channel: #D020D0;\n\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t--pitch5-secondary-note:    #E040E0;\n\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t--pitch6-secondary-channel: #7777B0;\n\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t--pitch6-secondary-note:    #8888D0;\n\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t--pitch7-secondary-channel: #8AA100;\n\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t--pitch7-secondary-note:    #AAC700;\n\t\t--pitch7-primary-note:      #E6FF92;\n\t\t--pitch8-secondary-channel: #DF0019;\n\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t--pitch9-secondary-channel: #00A170;\n\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t--pitch9-secondary-note:    #00C78A;\n\t\t--pitch9-primary-note:      #83FFD9;\n\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t--pitch10-secondary-note:   #B757FF;\n\t\t--pitch10-primary-note:     #DFACFF;\n\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t--noise1-primary-note:      #E0E0E0;\n\t\t--noise2-secondary-channel: #996633;\n\t\t--noise2-primary-channel:   #DDAA77;\n\t\t--noise2-secondary-note:    #CC9966;\n\t\t--noise2-primary-note:      #F0D0BB;\n\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t--noise3-primary-channel:   #77AADD;\n\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t--noise3-primary-note:      #BBD7FF;\n\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t--noise4-primary-channel:   #AF82D2;\n\t\t--noise4-secondary-note:    #9E71C1;\n\t\t--noise4-primary-note:      #D4C1EA;\n\t\t--noise5-secondary-channel: #607837;\n\t\t--noise5-primary-channel:   #A2BB77;\n\t\t--noise5-secondary-note:    #91AA66;\n\t\t--noise5-primary-note:      #C5E2B2;\n  --mod1-secondary-channel:   #339955;\n\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t--mod-label-primary:        #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text:   black;\n\t\t\t--disabled-note-primary:    #999;\n\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t}\n\t\t* {\n\t\tcursor: url('wackybox_cursor.png'), auto !important;\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\n\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t}\n\t\t\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType\";\n\t\t   src:\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t/* sets background image */\n\t\t\tbody {\n\t\t\tbackground-image: url(\"stripesbg.gif\") !important;\n\t\t\tbackground-position: center;\n\t\t\tbackground-repeat: repeat;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\n\t\t\t#text-content {\n    \t\t\t\tborder-image-source: url(\"abyssbox_border.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch; \n    \t\t\t\tpadding: 12px; \n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t#beepboxEditorContainer {\n    \t\t\t\tborder-image-source: url(\"abyssbox_border.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch;\n    \t\t\t\tpadding: 12px;\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t}\n\t\t\t.beepboxEditor button,\n\t\t\tbutton.playButton,\n\t\t\tbutton.pauseButton, \n\t\t\tbutton.recordButton, \n\t\t\tbutton.stopButton,\n\t\t\tbutton.nextBarButton, \n\t\t\tbutton.prevBarButton, \n\t\t\tbutton.copyButton, \n\t\t\tbutton.pasteButton, \n\t\t\tbutton.exportInstrumentButton, \n\t\t\tbutton.importInstrumentButton, \n\t\t\t.beepboxEditor select, \n\t\t\t.beepboxEditor .select2-selection__rendered {\n    \t\t\t\tborder-image-source: url(\"abyssbox_border.png\") !important;\n    \t\t\t\tborder-image-slice: 4 fill !important; \n   \t\t\t\tborder-image-width: 4px !important; \n\t\t\t\tborder-image-repeat: stretch !important;\n    \t\t\t\tpadding: 4px !important; \n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t\t}\n\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t--ui-widget-background: #1e0915 !important;\n\t\t\t\tborder-image-source:none !important;\n\t\t\t}\n\n\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\tborder-image: none !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n \t\t   url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\thtml {\n \t\t   \tfont-family: 'AbyssType';\n\t\t\t}\n\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t}\n\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\n\t\t\tdiv.selectRow span {\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\n\t\t\t`,\n  \"AbyssBox Competitive\": `\n\t\t\t:root { \t\t\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\n\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\t\t\t\t}\t\t\n\t\t/* sets cursor */ \n\t\t* {\n\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\n\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t}\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType\";\n\t\t   src:\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n \t\t   url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t.beepboxEditor button,\n\t\t\tbutton.playButton,\n\t\t\tbutton.pauseButton, \n\t\t\tbutton.recordButton, \n\t\t\tbutton.stopButton,\n\t\t\tbutton.nextBarButton,\n\t\t\tbutton.prevBarButton,\n\t\t\tbutton.copyButton, \n\t\t\tbutton.pasteButton, \n\t\t\tbutton.exportInstrumentButton, \n\t\t\tbutton.importInstrumentButton, \n\t\t\t.beepboxEditor select, \n\t\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\t\tborder-style: double !important;\n\t\t\t\t\tborder-radius: 0px !important;\n\t\t\t\t\t--ui-widget-background: black;\n\t\t\t}\n\n\t\t\tbutton.add-envelope::before,\n\t\t\tbutton.notesDownButton::before,\n\t\t\tbutton.notesUpButton::before,\n\t\t\tbutton.copyPatternButton::before,\n\t\t\tbutton.pastePatternButton::before,\n\t\t\tbutton.undoButton::before,\n\t\t\tbutton.redoButton::before,\n\t\t\tbutton.loopBarButton::before,\n\t\t\tbutton.duplicateButton::before,\n\t\t\tbutton.selectAllButton::before,\n\t\t\tbutton.deleteChannelButton::before, \n\t\t\tbutton.insertRowButton::before,\n\t\t\t.delete-envelope::before {\n\t\t\t\tleft: -3px !important;\n\t\t\t\ttop: -3px !important;\n\t\t\t}\n\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t--ui-widget-background: black !important;\n\t\t\t\tborder-image-source:none !important;\n\t\t\t\tborder-style: none !important;\n\t\t\t}\n\n\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\tborder-image: none !important;\n\t\t\t\t\tborder-style: none !important;\n\t\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'AbyssType';\n\t\t\t}\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t}\n\n\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\n\t\t\tdiv.selectRow span {\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\n\t\t\t`,\n  \"AbyssBox Light\": `\n\t\t\t:root { \t\t\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\t\t\t\t}\n\t\t\t\t/* sets background image */\n\t\t\t\tbody {\n\t\t\t\tbackground-image: url(\"stripesbg_light.gif\") !important;\n\t\t\t\tbackground-position: center;\n\t\t\t\tbackground-repeat: repeat;\n\t\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t}\t\t\n\t\t\t#text-content {\n    \t\t\t\tborder-image-source: url(\"abyssbox_border_light.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch; \n    \t\t\t\tpadding: 12px; \n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t#beepboxEditorContainer {\n    \t\t\t\tborder-image-source: url(\"abyssbox_border_light.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch;\n    \t\t\t\tpadding: 12px;\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t}\n\t\t\t\t.beepboxEditor button,\n\t\t\t\tbutton.playButton,\n\t\t\t\tbutton.pauseButton, \n\t\t\t\tbutton.recordButton, \n\t\t\t\tbutton.stopButton,\n\t\t\t\tbutton.nextBarButton, \n\t\t\t\tbutton.prevBarButton, \n\t\t\t\tbutton.copyButton, \n\t\t\t\tbutton.pasteButton, \n\t\t\t\tbutton.exportInstrumentButton, \n\t\t\t\tbutton.importInstrumentButton, \n\t\t\t\t.beepboxEditor select, \n\t\t\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\t\t\tborder-image-source: url(\"abyssbox_border_light.png\") !important;\n\t\t\t\t\t\tborder-image-slice: 4 fill !important; \n\t\t\t\t\t   border-image-width: 4px !important; \n\t\t\t\t\tborder-image-repeat: stretch !important;\n\t\t\t\t\t\tpadding: 4px !important; \n\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\n\t\t\t\t\t\tcursor: url(\"tockybox.png), pointer !important;\n\t\t\t\t\t}\n\t\n\t\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\t\tborder-image-source:none !important;\n\t\t\t\t}\n\n\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\tborder-image: none !important;\n\t\t\t\t}\n\n\t\t/* sets cursor */ \n\t\t* {\n\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\n\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\n\t\t}\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType\";\n\t\t   src:\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n \t\t   url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'AbyssType';\n\t\t\t}\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t}\n\n\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\t\t\t \n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t{\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\n\t\t\tdiv.selectRow span {\n\t\t\t\tcursor: url(\"tockybox.png\"), pointer !important;\n\t\t\t}\n\n\t\t\t`,\n\t\"Frutiger Aero\": `\n\t\t\t:root {\t\t\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\n\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\n\t\t}\n\n\t\t* {\n\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIconMuted.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIcon.png\");\n\t\t}\n\t\n\n\t\t/* Frutiger Aero Icons */\n\n\t\tdiv.mute-button::before {\n\t\t\tbackground: #fff0 !important;\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIcon.png\") !important;\n\t\t\tbackground-size: 18px !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tmask-size: 800px !important;\n\t\t\tcolor: #fff0;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\tdiv.mute-button.muted::before {\n\t\t\tbackground: #fff0 !important;\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIconMuted.png\") !important;\n\t\t\tbackground-size: 18px !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tmask-size: 800px !important;\n\t\t\tcolor: #fff0;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\t#text-content > section > h1 > font {\n\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t#text-content > section > h1 {\n\t\t\tmargin: auto;\n\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxFrutigerAeroThemeLogo.png\");\n\t\t\t}\n\n\t\tselect.trackSelectBox {\n\t\t\tborder-image: none !important;\n\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"Frutiger\";\n\t\t   src:\n \t\t   url(\"https://choptop84.github.io/choptop84s-image-repository/FrutigerLight.ttf\") format(\"truetype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\tcanvas#oscilascopeAll {\n\t\t\t\tbackground: #2e538c !important; \n\t\t\t\tborder: 2px solid #84aef000 !important;\n\t\t\t}\n\n\t\t\t.beepboxEditor .play-pause-area div:last-child {\n\t\t\t\tposition: relative;\n\t\t\t\twidth: 144px;\n\t\t\t\theight: 32px;\n\t\t\t  }\n\t\t\t  .beepboxEditor .play-pause-area div:last-child::before {\n\t\t\t\tcontent: \"\";\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: calc(144px + 4px);\n\t\t\t\theight: calc(32px + 4px);\n\t\t\t\tbox-shadow: 0px -1px 1px 0px rgba(0, 0, 0, 0.5), inset 0px 1px 2px 0px rgba(0, 0, 0, 0.5), inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t\t\tposition: absolute;\n\t\t\t\tz-index: 1;\n\t\t\t  }\n\n\t\t\tdiv.prompt.noSelection{\n\t\t\t\tbackground: linear-gradient(#84aef080, #2a3d6a80) !important; \n\t\t\t\topacity: 77;\n\t\t\t}  \n\n\t\t\tsvg#firstImage {\n\t\t\t\topacity: 50%;\n\t\t\t\t--editor-background: #84aef0;\n\t\t\t}\n\n\t\t\t/* sets background image */\n\t\t\tbody {\n\t\t\tbackground-image: url(\"frutigerbg3.png\") !important;\n\t\t\tbackground-position: top;\n\t\t\tbackground-attachment: fixed;\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-size: cover;\n\t\t\timage-rendering: optimizeQuality !important;             /* IE */ \n\t\t\t\t}\n\n\t\t\t#beepboxEditorContainer {\n\t\t\t\tbackground: linear-gradient(#26000080, #12000080) !important;\n\t\t\t\tborder-style: solid;\n  \t\t\t\tborder-color: #c40000;\n\t\t\t\tpadding-bottom: 5px;\n\t\t\t\t--inverted-text: black;\n\t\t\t\tbackdrop-filter: blur(10px);\n\t\t\t}\n\t\t\t#text-content {\n\t\t\t\tbackground: linear-gradient(#12000080, #05000080);\n\t\t\t\tborder-style: solid;\n  \t\t\t\tborder-color: #c40000;\n\t\t\t\t  backdrop-filter: blur(10px);\n\t\t\t}\n\n\t\t\t\t.beepboxEditor select\n\t\t\t\t{\n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2);\n\n\t\t\t\t\t--ui-widget-background: linear-gradient(#666, #444) !important;\n\t\t\t\t\tborder-image-source:url(\"buttonshading.png\") !important;\n\t\t\t\t\tborder-image-slice: 40 fill !important; \n   \t\t\t\t\tborder-image-width: 4px !important; \n\t\t\t\t\tborder-image-repeat: stretch; \n\t\t\t\t\n\n\t\t\t\t}\n\n\t\t\t\tdiv.playback-bar-controls button.playButton, \n\t\t\t\tdiv.playback-bar-controls button.pauseButton, \n\t\t\t\tdiv.playback-bar-controls button.recordButton, \n\t\t\t\tdiv.playback-bar-controls button.stopButton, \n\t\t\t\tdiv.playback-bar-controls button.prevBarButton, \n\t\t\t\tdiv.playback-bar-controls button.nextBarButton, \n\t\t\t\tdiv.selectRow button.copyButton, \n\t\t\t\tdiv.selectRow button.pasteButton, \n\t\t\t\tdiv.editor-controls button.exportInstrumentButton, \n\t\t\t\tdiv.editor-controls button.importInstrumentButton,\n\t\t\t\tdiv.editor-controls div button.add-envelope,\n\t\t\t\tdiv.editor-controls div button.delete-envelope  { \n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2);\n\n\t\t\t\t\t--ui-widget-background: linear-gradient(#666, #444) !important;\n\t\t\t\t\tborder-image-source:url(\"buttonshading.png\") !important;\n\t\t\t\t\tborder-image-slice: 40 fill !important; \n   \t\t\t\t\tborder-image-width: 4px !important; \n\t\t\t\t\tborder-image-repeat: stretch; \n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor select:focus\n\t\t\t\t{\n\t\t\t\t\tborder-image-source: none;\n\t\t\t\t\t\n\t\t\t\t\t--ui-widget-background: linear-gradient(#2a3d6a, #2a3d6a) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 10px 20px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .select2-selection__rendered,\n\t\t\t\t.beepboxEditor .instrument-bar button,\n\t\t\t\t.beepboxEditor .eq-filter-type-bar button .deactivated,\n\t\t\t\t.beepboxEditor .note-filter-type-bar button .deactivated\n\t\t\t\t{\n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2);\n\t\t\t\t\t--ui-widget-background: linear-gradient(#666, #444) !important;\n\n\t\t\t\t\tborder-image-source:url(\"https://choptop84.github.io/choptop84s-image-repository/buttonshading.png\") !important;\n\t\t\t\t\tborder-image-slice: 40 fill !important; \n   \t\t\t\t\tborder-image-width: 4px !important; \n\t\t\t\t\tborder-image-repeat: stretch; \n\t\t\t\t}\n\t\t\t\t.beepboxEditor button\n\t\t\t\t{\n\t\t\t\t\t--ui-widget-background: linear-gradient(#666, #444) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .select2-container--open .select2-selection__rendered,\n\t\t\t\t.beepboxEditor button:focus,\n\t\t\t\t.beepboxEditor .instrument-bar .selected-instrument,\n\t\t\t\t.beepboxEditor .eq-filter-type-bar button:not(.deactivated),\n\t\t\t\t.beepboxEditor .note-filter-type-bar button:not(.deactivated)\n\t\t\t\t{\n\t\t\t\t\t--ui-widget-background: linear-gradient(#333, #444) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor .filterEditor svg,\n\t\t\t\t.beepboxEditor .fadeInOut svg,\n\t\t\t\t.beepboxEditor .harmonics svg,\n\t\t\t\t.beepboxEditor .spectrum svg\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.3) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t\t{\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t\t{\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t\t{\n\t\t\t\t\theight: 16px !important;\n\t\t\t\t\twidth: 16px !important;\n\t\t\t\t\tborder-radius: 40px !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t\t{\n\t\t\t\t\tborder: none !important;\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\t0px -1px 1px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t{\n\t\t\t\t\tappearance: none;\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\t\t\t\tcolor: currentColor;\n\t\t\t\t\tborder-radius: 1px;\n\t\t\t\t\twidth: 1em !important;\n\t\t\t\t\theight: 1em !important;\n\t\t\t\t\tbox-shadow:\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t{\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t{\n\t\t\t\t\twidth: 1em;\n\t\t\t\t\theight: 1em;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\tcontent: \"✓\";\n\t\t\t\t\tcolor: currentColor;\n\t\t\t\t\ttext-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5);\n\t\t\t\t}\n\n\t\t\thtml {\n \t\t   \tfont-family: 'Frutiger';\n\t\t\t}\n\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'Frutiger' !important;\n\t\t\t}\n\n\t\t\t\t/* Use this code down here when you have transparent backgrounds!!! */\n\n\t\t   div.beepboxEditor.load {\n\t\t\tbackground: none !important;\n\t\t   }\n\n\t\t   div.noSelection {\n\t\t\tbackground: none !important;\n\t\t   }\n\n\t\t   .beepboxEditor .loopEditor {\n\t\t\tbackground: none !important;\n\t\t   }\n\n\t\t   .beepboxEditor .muteEditor {\n\t\t\t--ui-widget-background: linear-gradient(#666, #444) !important;\n\t\t\tborder-radius: 5px;\n\t\t\tbox-shadow: 0px 1px 1px 0px rgb(0, 0, 0), inset 0px 3px 14px 0px rgba(0, 0, 0, 0.1), inset 0px -4px 0px 0px rgba(0, 0, 0, 0.1);\n\t\t\topacity: 65%;\n\t\t   }\n\n\t\t   div.muteEditor div {\n\t\t\tbackground: none !important;\n\t\t\t--track-editor-bg-pitch: #1b4079;\n\t\t\t--track-editor-bg-noise: #213779;\n\t\t\t--track-editor-bg-mod: #46299e;\n\t\n\t\t\t--track-editor-bg-pitch-dim: #0c2b3e; \t\t\n\t\t\t--track-editor-bg-noise-dim: #08204f; \t\t\t\n\t\t\t--track-editor-bg-mod-dim: #26145e; \n\n\t\t   }\n\n\t\t   div.channelBox {\n\t\t\tborder-radius: 5px;\n\t\t  }\n\n\t\t  * {\n\t\t  cursor: url('wackybox_cursor.png'), auto;\n\t\t  }\n\n\t\t\t`,\t\t\t\n      \"Glyde\": `\n\t  :root { \n\t\t--page-margin: black;\n\t\t--editor-background: #000000a8;\n\t\t--hover-preview: white;\n\t\t--playhead: white;\n\t\t--primary-text: white;\n\t\t--secondary-text: #999;\n\t\t--inverted-text: black;\n\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t--loop-accent: #74f;\n\t\t--link-accent: #98f;\n\t\t--ui-widget-background: #4444449e;\n\t\t--ui-widget-focus: #777;\n\t\t--pitch-background: #44444438;\n\t\t--tonic: #864;\n\t\t--fifth-note: #468;\n\t\t--white-piano-key: #bbb;\n\t\t--black-piano-key: #444;\n\t\t--white-piano-key-text: #131200;\n\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t--track-editor-bg-noise: #444;\n\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t--track-editor-bg-mod: #234;\n\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #74f;\n\t\t\t--indicator-secondary: #444;\n\t\t\t--select2-opt-group: #585858;\n\t\t\t--input-box-outline: #333;\n\t\t\t--mute-button-normal: #ffa033;\n\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t--pitch-channel-limit: 6;\n\t\t\t--noise-channel-limit: 3;\n\t\t--pitch1-secondary-channel: #0099A1;\n\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t--pitch1-primary-note:      #92F9FF;\n\t\t--pitch2-secondary-channel: #A1A100;\n\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t--pitch2-secondary-note:    #C7C700;\n\t\t--pitch2-primary-note:      #FFFF92;\n\t\t--pitch3-secondary-channel: #C75000;\n\t\t--pitch3-primary-channel:   #FF9752;\n\t\t--pitch3-secondary-note:    #FF771C;\n\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t--pitch4-secondary-channel: #00A100;\n\t\t--pitch4-primary-channel:   #50FF50;\n\t\t--pitch4-secondary-note:    #00C700;\n\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t--pitch5-secondary-channel: #D020D0;\n\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t--pitch5-secondary-note:    #E040E0;\n\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t--pitch6-secondary-channel: #7777B0;\n\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t--pitch6-secondary-note:    #8888D0;\n\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t--pitch7-secondary-channel: #8AA100;\n\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t--pitch7-secondary-note:    #AAC700;\n\t\t--pitch7-primary-note:      #E6FF92;\n\t\t--pitch8-secondary-channel: #DF0019;\n\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t--pitch9-secondary-channel: #00A170;\n\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t--pitch9-secondary-note:    #00C78A;\n\t\t--pitch9-primary-note:      #83FFD9;\n\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t--pitch10-secondary-note:   #B757FF;\n\t\t--pitch10-primary-note:     #DFACFF;\n\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t--noise1-primary-note:      #E0E0E0;\n\t\t--noise2-secondary-channel: #996633;\n\t\t--noise2-primary-channel:   #DDAA77;\n\t\t--noise2-secondary-note:    #CC9966;\n\t\t--noise2-primary-note:      #F0D0BB;\n\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t--noise3-primary-channel:   #77AADD;\n\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t--noise3-primary-note:      #BBD7FF;\n\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t--noise4-primary-channel:   #AF82D2;\n\t\t--noise4-secondary-note:    #9E71C1;\n\t\t--noise4-primary-note:      #D4C1EA;\n\t\t--noise5-secondary-channel: #607837;\n\t\t--noise5-primary-channel:   #A2BB77;\n\t\t--noise5-secondary-note:    #91AA66;\n\t\t--noise5-primary-note:      #C5E2B2;\n  --mod1-secondary-channel:   #339955;\n\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t--mod-label-primary:        #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text:   black;\n\t\t\t--disabled-note-primary:    #999;\n\t\t\t--disabled-note-secondary:  #666;\n\n\t\t--note-flash: #fff; \n\t\t--note-flash-secondary: #ffffff54; }\n\t\t* {\n\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t}\n\t\t\n\t\t\t@font-face {\n\t\t   font-family: \"Varela\";\n\t\t   src:\n \t\t   url(\"https://choptop84.github.io/abyssbox-app/Varela.ttf\") format(\"truetype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t/* sets background image */\n\t\t\tbody {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/glydebg.png\") !important;\n\t\t\tbackground-position: top right;\n\t\t\tbackground-repeat: no-repeat;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\n\t\t\tdiv#beepboxEditorContainer {\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-width: 8px;\n\t\t\t\tborder-color: #4f152b;\n\t\t\t\tpadding-bottom: 5px;\n\t\t\t}\n\t\t\t\t\n\t\t\t#text-content {\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-width: 8px;\n\t\t\t\tborder-color: #4f152b;\n\t\t\t}\n\n\t\t\thtml {\n \t\t   \tfont-family: 'Varela';\n\t\t\t}\n\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'Varela' !important;\n\t\t\t}\n\n\t\t\t#firstImage {\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/slushiepfp.PNG\") !important;\n\t\t\t\tbackground-repeat: no-repeat !important;\n\t\t\t\tbackground-size: 100% 100% !important;\n\t\t\t}\n\n\t\t\t#text-content > section > h1 > font {\n\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t#text-content > section > h1 {\n\t\t\t\tmargin: auto;\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxGlydeThemeLogo.png\");\n\t\t\t\t}\n\n\t\t\t\tdiv.beepboxEditor.load {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\n\t\t\t\t   div.noSelection {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\n\t\t\t\t   .beepboxEditor .loopEditor {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\n\t\t\t\t   .beepboxEditor .muteEditor {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\t\t\n\t\t\t\t   div.muteEditor div {\n\t\t\t\t\tbackground: none !important;\n\t\t\t\t   }\n\n\n\t\t\t`,\t\t\t\n\t\t\"AWeebyssBox\": `\n\t\t\t:root {\t\t\n\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\t\n\t\t\t\t}\n\t\t* {\n\t\tcursor: url(\"wackybox_cursor.png\"), auto !important;\n\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType\";\n\t\t   src:\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\t#text-content {\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_border.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch; \n    \t\t\t\tpadding: 12px; \n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t#beepboxEditorContainer {\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_border.png\");\n    \t\t\t\tborder-image-slice: 4 fill; \n   \t\t\t\tborder-image-width: 8px; \n\t\t\t\tborder-image-repeat: stretch;\n    \t\t\t\tpadding: 12px;\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\n\t\t\t\t}\n\t\t\t .beepboxEditor button, .beepboxEditor select, .beepboxEditor .select2-selection__rendered {\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_border.png\") !important;\n    \t\t\t\tborder-image-slice: 4 fill !important; \n   \t\t\t\tborder-image-width: 4px !important; \n\t\t\t\tborder-image-repeat: stretch !important;\n    \t\t\t\tpadding: 4px !important; \n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\n\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\tborder-image: none !important;\n\t\t\t\t}\n\n\t\t\t\t#firstImage {\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-source/website/viviandbelle.png\") !important;\n\t\t\t\t\tbackground-repeat: no-repeat !important;\n\t\t\t\t\tbackground-size: 100% 100% !important;\n\t\t\t\t}\n\n\n\t\t\t@font-face {\n\t\t   font-family: \"AbyssType_small\";\n\t\t   src:\n \t\t   url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\thtml {\n \t\t   \tfont-family: 'AbyssType';\n\t\t\t}\n\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t}\n\n\t\t   \n\n\t\t\t`,\n\t\t\"Half-Life\": `\n\t\t\t:root { \t\t\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\t\n\t\t\t\t}\n\t\t/* replaces hotdog (in a hacky way) with an image of gordon freeman but really wide*/\n\t\t#Hotdog {\n\t\tdisplay: none;\n\t\t}\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\n\t\tdisplay: block;\n\t\tcontent: url(\"wide-gordon.png\");\n\t\twidth: inherit;\n\t\theight: contain;\n\t\ttext-align: center;\n\t\tmargin-top: 25px;\n\t\t}\n\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-source/website/lambda.png\") !important;\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\t\t\t/* make editor background transparent */\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\n\t\t}\n\n\t\t* {\n\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"trebuc\";\n\t\t   src:\n \t\t   url(\"trebuc.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'trebuc';\n\t\t\t}\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'trebuc' !important;\n\t\t\t}\n\n\t\t\t.modTitle::before {\n\t\t\t\tcontent: \"λbyssBox\" !important;\n\t\t\t}\n\n\t\t\t`,\n\t\t\t\"Half-Life: Source\": `\n\t\t\t:root { \t\t\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\t\n\t\t\t\t}\n\t\t/* replaces hotdog (in a hacky way) with an image of gordon freeman but really wide*/\n\t\t#Hotdog {\n\t\tdisplay: none;\n\t\t}\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\n\t\tdisplay: block;\n\t\tcontent: url(\"wide-gordon.png\");\n\t\twidth: inherit;\n\t\theight: contain;\n\t\ttext-align: center;\n\t\tmargin-top: 25px;\n\t\t}\n\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-source/website/lambda.png\") !important;\n\t\tbackground-position: center;\n\t\tbackground-repeat: repeat;\n\t\t\t}\n\t\t\t/* make editor background transparent */\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\n\t\t}\n\n\t\t* {\n\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t}\n\n\t\t\t@font-face {\n\t\t   font-family: \"trebuc\";\n\t\t   src:\n \t\t   url(\"trebuc.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\tdiv.prompt.noSelection {\n\t\t\t\tleft: 636px !important;\n\t\t\t}\n\n\t\t\t#beepboxEditorContainer {\n\t\t\t\tpadding-top: 20px;\n\t\t\t}\n\n\t\t\tdiv.beepboxEditor.load {\n\t\t\t\twidth: 50%;\n\t\t\t}\n\n\t\t\t#text-content {\n\t\t\t\toverflow: visible;\n\t\t\t\twidth: 20% !important;\n\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'trebuc';\n\t\t\t}\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'trebuc' !important;\n\t\t\t}\n\n\t\t\t.modTitle::before {\n\t\t\t\tcontent: \"λbyssBox: Source\" !important;\n\t\t\t}\n\n\t\t\t`,\n\t\t\"Scratch\": `\n\t\t:root {\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t--disabled-note-primary: #ff6680;\n\t\t\t--disabled-note-secondary: #ff3355;\n\t\t  }\n\t\t  * {\n\t\t  --play-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\");\n\t\t  --pause-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\");\n\t\t  --stop-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\");\n\t\t  }\n\n\t\t  * {\n\t\t  cursor: url('wackybox_cursor.png'), auto;\n\t\t  }\n\n\t\t  button.playButton::before {\n\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\") !important;\n\t\t\tbackground-size: 18px !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tmask-size: 800px;\n\t\t\tcolor: #fff0;\n\t\t\t/* Hold on, before you start asking: \"WHAT THE? WHY IS THE ICON SO LARGE!!!\" Let me tell ya that this method removes all the filtering issues on the png and it looks incredibly seemless so shush */\n\n\t\t}\n\n\t\tbutton.pauseButton::before {\n\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\") !important;\n\t\t\tbackground-size: 18px !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tmask-size: 800px;\n\t\t\tcolor: #fff0;\n\t\t}\n\n\t\tbutton.stopButton::before {\n\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\") !important;\n\t\t\tbackground-size: 18px !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\tmask-size: 800px;\n\t\t\tcolor: #fff0;\n\t\t}\n\n\t\t  #text-content > section > h1 {\n\t\t\tmargin: auto;\n\t\t\tcontent: url(\"https://file.garden/ZMQ0Om5nmTe-x2hq/AbyssBox%20Scratch%20Logo3.png\");\n\t\t  }\n\t\t  .beepboxEditor,\n\t\t  #beepboxEditorContainer {\n\t\t\tbackground-color: rgb(255, 255, 255) !important;\n\t\t\tborder-radius: 6px;\n\t\t\tbox-shadow: 0px 0px 0px 4px rgba(158, 158, 158, 0.91);\n\t\t  }\n\t\t  .beepboxEditor .loopEditor {\n\t\t\t--editor-background: #4d97ff40 !important;\n\t\t\tborder-radius: 3px;\n\t\t  }\n\t\t  .beepboxEditor .muteEditor {\n\t\t\t--editor-background: #4d97ff40 !important;\n\t\t\tborder-radius: 0px;\n\t\t\theight: 158px;\n\t\t  }\n\t\t  .beepboxEditor .pattern-area {\n\t\t\t--editor-background: #4d97ff40 !important;\n\t\t\tborder-radius: 3px;\n\t\t  }\n\t\t  .beepboxEditor .trackContainer svg {\n\t\t\t--editor-background: #3100ff !important;\n\t\t  }\n\t\t  .beepboxEditor .muteEditor > :last-child {\n\t\t\t--editor-background: #4d97ff40 !important;\n\t\t  }\n\t\t  .beepboxEditor #octaveScrollBarContainer {\n\t\t\tbackground-color: #4d97ff40;\n\t\t  }\n\t\t  .beepboxEditor .muteButtonText {\n\t\t\ttransform: translate(0px, 1px) !important;\n\t\t\tcolor: #777 !important;\n\t\t  }\n\t\t  .beepboxEditor .instrument-bar {\n\t\t\t--text-color-lit: #fff !important;\n\t\t\t--text-color-dim: #4c4c4c !important;\n\t\t  }\n\t\t  .beepboxEditor .instrument-bar .selected-instrument {\n\t\t\tcolor: rgb(0, 0, 0) !important;\n\t\t\ttext-shadow: 0px 0px 4px var(--text-color-lit);\n\t\t  }\n\t\t  .beepboxEditor .instrument-bar .deactivated {\n\t\t\tcolor: rgba(0, 0, 0, 1) !important;\n\t\t\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\n\t\t  }\n\t\t  .beepboxEditor .instrument-bar > :not(.last-button) {\n\t\t\tborder-color: var(--background-color-lit) !important;\n\t\t  }\n\t\t  .beepboxEditor .instrument-bar .selected-instrument {\n\t\t\tborder-color: rgba(255, 255, 255, 1) !important;\n\t\t  }\n\t\t  .beepboxEditor button {\n\t\t\tcolor: #fff;\n\t\t\tbackground: #3c236f;\n\t\t  }\n\t\t  .beepboxEditor .instrument-bar .selected-instrument,\n\t\t  .beepboxEditor .filterEditor svg,\n\t\t  .beepboxEditor .fadeInOut svg,\n\t\t  .beepboxEditor .harmonics svg,\n\t\t  .beepboxEditor .spectrum svg {\n\t\t\tbackground: rgb(255, 255, 255) !important;\n\t\t\tbox-shadow:\n\t\t\t  0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t  inset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t  inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t  }\n\t\t  .beepboxEditor input[type=\"range\"]::-webkit-slider-thumb {\n\t\t\tbackground: #000000 !important;\n\t\t  }\n\t\t  .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\tbackground: #000000 !important;\n\t\t  }\n\t\t  .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track {\n\t\t\tbackground: rgb(127, 127, 127) !important;\n\t\t  }\n\t\t  .beepboxEditor input[type=\"range\"]::-moz-range-track {\n\t\t\tbackground: rgb(127, 127, 127) !important;\n\t\t  }\n\t\t  .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track::focus {\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t  0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t  inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t  inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t  }\n\t\t  .beepboxEditor input[type=\"range\"]::-moz-range-track::focus {\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\n\t\t\tbox-shadow:\n\t\t\t  0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t  inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t  inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t  }\n\t\t  .beepboxEditor input[type=\"text\"],\n\t\t  .beepboxEditor input[type=\"number\"] {\n\t\t\tfont-size: inherit !important;\n\t\t\tfont-weight: bold !important;\n\t\t\tfont-family: inherit !important;\n\t\t\tbackground: #ff8c1a !important;\n\t\t\ttext-align: center !important;\n\t\t\tborder: 1px solid var(--input-box-outline);\n\t\t\tcolor: #fff !important;\n\t\t\tbox-shadow: 0px 0px 0px 1px rgb(134, 134, 134) !important;\n\t\t  }\n\t\t  .beepboxEditor .prompt {\n\t\t\t--primary-text: #fff;\n\t\t\t--secondary-text: #fff;\n\t\t\t--ui-widget-background: #351f5f;\n\t\t\tcolor: #fff !important;\n\t\t\tbackground: #855cd6 !important;\n\t\t  }\n\t\t  .beepboxEditor .trackContainer {\n\t\t\t--editor-background: #fff;\n\t\t  }\n\t\t  #text-content {\n\t\t\tcolor: #fff;\n\t\t\tbackground: #855cd6;\n\t\t  }\n\t\t  body:not(#secondImage) {\n\t\t\tbackground-image: url(\"https://cdn.scratch.mit.edu/scratchr2/static/__74e70580e9dbe93ce1c3f8422dde592d__/images/scratch-bg.png\");\n\t\t  }\n\t\t  body:not(#secondImage) input {\n\t\t\t--primary-text: #000;\n\t\t  }\n\t\t  body:not(#secondImage) h1 {\n\t\t\tcolor: #000;\n\t\t  }\n\t\t  button.copyButton,\n\t\t  button.pasteButton,\n\t\t  button.exportInstrumentButton,\n\t\t  button.importInstrumentButton, \n\t\t  button.addEnvelope,\n\t\t  div.editor-controls div button,\n\t\t  div.selectRow button,\n\t\t  div.effects-menu button,\n\t\t  div.effects-menu::before,\n\t\t  div.selectContainer select,\n\t\t  div.selectContainer::after,\n\t\t  span#select2-pitchPresetSelect-container {\n\t\t\tcolor: white !important;\n\t\t  }\n\t\t  div#text-content {\n\t\t\tpadding-top: 15px;\n\t\t  }\n\t\t  div#beepboxEditorContainer{\n\t\t\tpadding-bottom: 15px;\n\t\t  }\n\t\t  div.channelBox {\n\t\t\tborder-radius: 5px;\n\t\t  }\n\t\t  div.muteEditor {\n\t\t\tborder-radius: 0px !important;\n\t\t\theight: 158px !important;\n\t\t  }\n\t\t  div.loopEditor {\n\t\t\tborder-radius: 0px !important;\n\t\t  }\n\t\t`,\n\t\t\"Scratch Addons\": `\n\t\t:root {\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t--disabled-note-primary: #ff6680;\n\t\t\t--disabled-note-secondary: #ff3355;\n\t\t   }\n\n\t\t   * {\n\t\t   --play-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\");\n\t\t   --pause-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\");\n\t\t   }\n\n\t\t   * {\n\t\t   cursor: url('wackybox_cursor.png'), auto;\n\t\t   }\n \n\t\t   button.playButton::before {\n\t\t\t background-image: url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\") !important;\n\t\t\t background-size: 18px !important;\n\t\t\t background-position: center !important;\n\t\t\t background-repeat: no-repeat !important;\n\t\t\t mask-size: 800px;\n\t\t\t color: #fff0;\n\t\t }\n \n\t\t button.pauseButton::before {\n\t\t\t background-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\") !important;\n\t\t\t background-size: 18px !important;\n\t\t\t background-position: center !important;\n\t\t\t background-repeat: no-repeat !important;\n\t\t\t mask-size: 800px;\n\t\t\t   color: #fff0;\n\t\t }\n\n\t\t   #text-content > section > h1 {\n\t\t\t margin: auto;\n\t\t\t content: url(\"https://file.garden/ZMQ0Om5nmTe-x2hq/AbyssBox%20Scratch%20Logo3.png\");\n\t\t   }\n\t\t   .beepboxEditor,\n\t\t   #beepboxEditorContainer {\n\t\t\t background-color: #111111 !important;\n\t\t\t border-radius: 6px;\n\t\t\t box-shadow: 0px 0px 0px 4px rgba(158, 158, 158, 0.91);\n\t\t   }\n\t\t   .beepboxEditor .loopEditor {\n\t\t\t --editor-background: #111111 !important;\n\t\t\t border-radius: 3px;\n\t\t   }\n\t\t   .beepboxEditor .muteEditor {\n\t\t\t --editor-background: #4d97ff40 !important;\n\t\t\t border-radius: 3px;\n\t\t   }\n\t\t   .beepboxEditor .pattern-area {\n\t\t\t --editor-background: #292929 !important;\n\t\t\t border-radius: 3px;\n\t\t   }\n\t\t   .beepboxEditor .trackContainer svg {\n\t\t\t --editor-background: #3100ff !important;\n\t\t   }\n\t\t   .beepboxEditor .muteEditor > :last-child {\n\t\t\t --editor-background: #111111 !important;\n\t\t   }\n\t\t   .beepboxEditor #octaveScrollBarContainer {\n\t\t\t background-color: #111111;\n\t\t   }\n\t\t   .beepboxEditor .muteButtonText {\n\t\t\t transform: translate(0px, 1px) !important;\n\t\t\t color: #777 !important;\n\t\t   }\n\t\t   .beepboxEditor .instrument-bar {\n\t\t\t --text-color-lit: #111111 !important;\n\t\t\t --text-color-dim: #4c4c4c !important;\n\t\t   }\n\t\t   .beepboxEditor .instrument-bar .selected-instrument {\n\t\t\t color: rgb(0, 0, 0) !important;\n\t\t\t text-shadow: 0px 0px 4px var(--text-color-lit);\n\t\t   }\n\t\t   .beepboxEditor .instrument-bar .deactivated {\n\t\t\t color: rgba(0, 0, 0, 1) !important;\n\t\t\t text-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\n\t\t   }\n\t\t   .beepboxEditor .instrument-bar > :not(.last-button) {\n\t\t\t border-color: var(--background-color-lit) !important;\n\t\t   }\n\t\t   .beepboxEditor .instrument-bar .selected-instrument {\n\t\t\t border-color: #111111 !important;\n\t\t   }\n\t\t   .beepboxEditor button {\n\t\t\t color: #fff;\n\t\t\t background: #3c236f;\n\t\t   }\n\t\t   .beepboxEditor .instrument-bar .selected-instrument,\n\t\t   .beepboxEditor .filterEditor svg,\n\t\t   .beepboxEditor .fadeInOut svg,\n\t\t   .beepboxEditor .harmonics svg,\n\t\t   .beepboxEditor .spectrum svg {\n\t\t\t background: rgb(255, 255, 255) !important;\n\t\t\t box-shadow:\n\t\t\t   0px 0px 1px 1px rgba(0, 0, 0, 0.7),\n\t\t\t   inset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\n\t\t\t   inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t   }\n\t\t   .beepboxEditor input[type=\"range\"]::-webkit-slider-thumb {\n\t\t\t background: #fff !important;\n\t\t   }\n\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\t background: #000000 !important;\n\t\t   }\n\t\t   .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track {\n\t\t\t background: rgb(127, 127, 127) !important;\n\t\t   }\n\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-track {\n\t\t\t background: rgb(127, 127, 127) !important;\n\t\t   }\n\t\t   .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track::focus {\n\t\t\t background: rgba(255, 255, 255, 0.2) !important;\n\t\t\t box-shadow:\n\t\t\t   0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t   inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t   inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t   }\n\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-track::focus {\n\t\t\t background: rgba(255, 255, 255, 0.2) !important;\n\t\t\t box-shadow:\n\t\t\t   0px 0px 1px 1px rgba(0, 0, 0, 0.2),\n\t\t\t   inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\n\t\t\t   inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\n\t\t   }\n\t\t   .beepboxEditor input[type=\"text\"],\n\t\t   .beepboxEditor input[type=\"number\"] {\n\t\t\t font-size: inherit !important;\n\t\t\t font-weight: bold !important;\n\t\t\t font-family: inherit !important;\n\t\t\t background: #202020 !important;\n\t\t\t text-align: center !important;\n\t\t\t border: 1px solid var(--input-box-outline);\n\t\t\t color: #fff !important;\n\t\t\t box-shadow: 0px 0px 0px 1px rgb(134, 134, 134) !important;\n\t\t   }\n\t\t   .beepboxEditor .prompt {\n\t\t\t --primary-text: #fff;\n\t\t\t --secondary-text: #fff;\n\t\t\t --ui-widget-background: #351f5f;\n\t\t\t color: #fff !important;\n\t\t\t background: #202020 !important;\n\t\t   }\n\t\t   .beepboxEditor .trackContainer {\n\t\t\t --editor-background: #000;\n\t\t   }\n\t\t   #text-content {\n\t\t\t color: #fff;\n\t\t\t background: #202020;\n\t\t   }\n\t\t   body:not(#secondImage) {\n\t\t\t background: #202020;\n\t\t   }\n\t\t   body:not(#secondImage) input {\n\t\t\t --primary-text: #000;\n\t\t   }\n\t\t   body:not(#secondImage) h1 {\n\t\t\t color: #fff;\n\t\t   }\n\t\t  div#text-content {\n\t\t\tpadding-top: 15px;\n\t\t  }\n\t\t  div#beepboxEditorContainer{\n\t\t\tpadding-bottom: 15px;\n\t\t  }\n\t\t  div.channelBox {\n\t\t\tborder-radius: 5px;\n\t\t  }\n\t\t  div.muteEditor {\n\t\t\tborder-radius: 0px !important;\n\t\t  }\n\t\t`,\n\t\t\"Doom 1993\": `\n\t\t\t:root { \t\t\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\n\t\t\t--note-flash: #ffffff;\n\t\t\t--note-flash-secondary: #ffffff77;\n\t\t\t\t}\n\t\t\n\t\t\t#text-content > section > h1 > font {\n\t\tdisplay: none;\n\t\t}\n\t\t#text-content > section > h1 {\n\t\tmargin: auto;\n\t\tcontent: url(\"AbyssBox_DOOM.png\");\n\t\t}\n\t\t* {\n\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t}\n\n\t\t\t\t\n\t\t\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"doomsky.png\") !important;\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\t\t\t/* make editor background transparent */\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\n\t\t}\n\n\n\t\t\t@font-face {\n\t\t   font-family: \"doomfont\";\n\t\t   src:\n \t\t   url(\"doomfont.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t}\n\n\t\t\thtml {\n \t\t   font-family: 'doomfont';\n\t\t\t}\n\t\t\tdiv.channelBoxLabel {\n\t\t\t\tfont-family: 'doomfont' !important;\n\t\t\t}\n\n\t\t\t`,\n\t\t\t\"Undertale\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\n\t\t\t  --disabled-note-primary: #999;\n\t\t\t  --disabled-note-secondary: #696969;\n\n\t\t\t  --arrow-color: #f67c33;\n\t\t\t  --icon-color: #f67c33;\n\t\t\t\t}\n\t\t\t\t* {\n\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\n\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\n\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\n\t\t\t\t\t--text-enabled-icon:❤️ ;\n\t\t\t\t\t}\n\n\t\t\t\t\t* {\n\t\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t/* sets background image */\n\t\t\tbody {\n\t\t\tbackground-image: url(\"https://cdn.discordapp.com/attachments/804372822931668994/1165384144948305960/spr_battlebg_1.png\") !important;\n\t\t\tbackground-position: center;\n\t\t\tbackground-size: contain;\n\t\t\tbackground-attachment: fixed;\n\t\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\t\t\t#text-content > section > h1 > font {\n\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t#text-content > section > h1 {\n\t\t\tmargin: auto;\n\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/UndertaleThemeLogo.png\");\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxUtThemeLogo.png\");\n \t\t\tbackground-size: contain;\n \t\t\tbackground-position: center;\n  \t\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\n\t\t\tdiv.selectContainer.menu.file select,\n\t\t\tdiv.selectContainer.menu.edit select,\n\t\t\tdiv.selectContainer.menu.preferences select {\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #f67c33;\n\t\t\t\tborder-radius: 0px;\n\t\t\t}\n\t\t\tdiv.selectContainer.menu.file,\n\t\t\tdiv.selectContainer.menu.edit,\n\t\t\tdiv.selectContainer.menu.preferences {\n\t\t\t\t--ui-widget-background: black;\n\t\t\t\t--icon-color: #f67c33;\n\t\t\t\t--arrow-color: #f67c33;\n\t\t\t\tcolor: #f67c33;\n\t\t\t}\n\t\t\t.beepboxEditor select:focus,\n\t\t\t.beepboxEditor .selectContainer:focus-within\n\t\t\t{\n\t\t\t\tborder-color: #fbff4b !important;\n\t\t\t\t--ui-widget-background: black !important;\n\t\t\t\t--icon-color: #f00 !important;\n\t\t\t\t--arrow-color: #fbff4b !important;\n\t\t\t\tcolor: #fbff4b !important;\n\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\n\t\t\t}\n\t\t\t.beepboxEditor .menu.edit::before,\n\t\t\t.beepboxEditor .menu.file::before,\n\t\t\t.beepboxEditor .menu.preferences::before {\n\t\t\t\tbackground: var(--icon-color) !important;\n\t\t\t}\n\t\t\t.beepboxEditor .menu.edit::after,\n\t\t\t.beepboxEditor .menu.file::after,\n\t\t\t.beepboxEditor .menu.preferences::after {\n\t\t\t\tbackground: var(--arrow-color) !important;\n\t\t\t}\n\n\t\t\t#text-content {\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-radius: 0px;\n\t\t\t\tpadding-left: 20px;\n\t\t\t\tpadding-right: 20px;\n\t\t\t\tpadding-top: 15px;\n\t\t\t}\n\t\t#beepboxEditorContainer {\n\t\t\tborder-style: solid;\n\t\t\tborder-radius: 0px;\n\t\t\tpadding-left: 20px;\n\t\t\tpadding-right: 20px;\n\t\t\tpadding-bottom: 15px;\n\t\t\t}\n\t\t\t`,\n      \"Windows Xp\": `\n\t\t\t:root {\t\t\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t--note-flash: #ffffff77;\n\t\t\t--note-flash-secondary: #ffffff66;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t* {\n\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t}\n\n\t\t\t\t@font-face {\n\t\t\t\t\tfont-family: \"tahoma\";\n\t\t\t\t\tsrc:\n\t\t\t\t\t url(\"https://choptop84.github.io/abyssbox-app/tahoma.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t image-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t image-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t image-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t image-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t\t\t}\n\n\t\t\t\thtml {\n\t\t\t\tfont-family: 'tahoma' !important;\n\t\t\t   font-size: 150% !important;\n\t\t\t\t}\n\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\tfont-family: 'tahoma' !important;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .promptContainer {\n\t\t\t\t}\n\n\t\t\t\tdiv.prompt.noSelection {\n\t\t\t\t\tmargin: auto;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tbackground: var(--editor-background);\n\t\t\t\t\tborder-radius: 15px;\n\t\t\t\t\tborder: 0px solid var(--ui-widget-background) !important;\n\t\t\t\t\tpadding-left: 20px !important;\n\t\t\t\t\tbox-shadow: 0px 0px 0px 0px rgba(0,0,0,0) !important;\n\t\t\t\t\tpadding-top: 6px !important;\n\t\t\t\t\tpadding-right: 20px !important;\n\t\t\t\t\tpadding-bottom: 20px !important;\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/xpborder.png\") !important;\n\t\t\t\t\tborder-image-slice: 34 !important;\n\t\t\t\t\tborder-image-width: 50px !important;\n\t\t\t\t\tborder-width: unset !important;\n\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\n\t\t\t\tdiv.prompt.noSelection button.cancelButton {\n\t\t\t\t\topacity: 0;\n\t\t\t\t}\n\n\t\t\t\tdiv.promptTitle {\n\t\t\t\t\ttext-align: left !important;\n\t\t\t\t\tcolor: white !important;\n\t\t\t\t}\n\t\t\t\t.set-themeExt::after {\n\t\t\t\t\tcontent: \"setTheme.exe\";\n\t\t\t\t}\n\t\t\t\t.set-themeTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.layoutExt::before {\n\t\t\t\t\tcontent: \"layout.exe\";\n\t\t\t\t}\n\t\t\t\t.layoutTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.channelExt::after {\n\t\t\t\t\tcontent: \"channelSettings.exe\";\n\t\t\t\t}\n\t\t\t\t.channelTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.limiterExt::after {\n\t\t\t\t\tcontent: \"limiter.exe\";\n\t\t\t\t}\n\t\t\t\t.limiterTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t.bpmTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.bpmExt::after {\n\t\t\t\t\tcontent: \"bpb.exe\";\n\t\t\t\t}\n\n\t\t\t\t.gerTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.gerExt::after {\n\t\t\t\t\tcontent: \"euclidianRhythm.exe\";\n\t\t\t\t}\n\n\t\t\t\t.samplesTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.samplesExt::after {\n\t\t\t\t\tcontent: \"sampler.exe\";\n\t\t\t\t\tmargin-bottom: 0.5em;\n\n\t\t\t\t}\n\t\t\t\t.samplesExt {\n\t\t\t\t\tpadding-bottom: 8px;\n\t\t\t\t}\n\n\t\t\t\t.importTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.importExt::after {\n\t\t\t\t\tcontent: \"import.exe\";\n\t\t\t\t}\n\n\t\t\t\t.exportTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.exportExt::after {\n\t\t\t\t\tcontent: \"export.exe\";\n\t\t\t\t}\n\n\t\t\t\t.import-instrumentTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.import-instrumentExt::after {\n\t\t\t\t\tcontent: \"importInstrument.exe\";\n\t\t\t\t}\n\n\t\t\t\t.export-instrumentTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.export-instrumentExt::after {\n\t\t\t\t\tcontent: \"exportInstrument.exe\";\n\t\t\t\t}\n\n\t\t\t\t.song-lengthTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.song-lengthExt::after {\n\t\t\t\t\tcontent: \"songExtender.exe\";\n\t\t\t\t}\n\n\t\t\t\t.mnsTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.mnsExt::after {\n\t\t\t\t\tcontent: \"moveNotesSideways.exe\";\n\t\t\t\t}\n\n\t\t\t\t.nrsTitle {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.nrsExt::after {\n\t\t\t\t\tcontent: \"setupMidiKeyboard.exe\";\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .promptContainer::before {\n\t\t\t\t\tbackground: #fff0;\n\t\t\t\t}\n\n\t\t* {\n\t\t--play-symbol:url(\"https://choptop84.github.io/abyssbox-app/xpPlay.png\");\n\t\t--pause-symbol:url(\"https://choptop84.github.io/abyssbox-app/xpPause.png\");\n\t\t--record-symbol:url(\"https://choptop84.github.io/abyssbox-app/xpRecord.png\");\n\t\t--stop-symbol:url(\"https://choptop84.github.io/abyssbox-app/xpStop.png\");\n\t\t--prev-bar-symbol:url(\"https://choptop84.github.io/abyssbox-app/xpBackward.png\");\n\t\t--next-bar-symbol:url(\"https://choptop84.github.io/abyssbox-app/xpForward.png\");\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpFile.png\");\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpEdit.png\");\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpPreferences.png\");\n\t\t--muted-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpSpeakerMute.png\");\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpSpeaker.png\");\n\t\t--volume-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpSpeaker.png\");\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpZoomIn.png\");\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpZoomOut.png\");\n\t\t}\n\n\t\t.beepboxEditor button,\n\t\tbutton.playButton,\n\t\tbutton.pauseButton, \n\t\tbutton.recordButton, \n\t\tbutton.stopButton,\n\t\tbutton.nextBarButton, \n\t\tbutton.prevBarButton, \n\t\tbutton.copyButton, \n\t\tbutton.pasteButton, \n\t\tbutton.exportInstrumentButton, \n\t\tbutton.importInstrumentButton, \n\t\t.beepboxEditor select, \n\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t}\n\n\t\tdiv.mute-button::before {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpSpeaker.png\") !important;\n\t\t\tbackground-size: 120% !important;\n\t\t\tbackground-position-x: center !important;\n\t\t\tbackground-position-y: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\tdiv.mute-button.muted::before {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpSpeakerMute.png\") !important;\n\t\t\tbackground-size: 120% !important;\n\t\t\tbackground-position-x: center !important;\n\t\t\tbackground-position-y: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\t\t\t\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\tbutton.recordButton::Before {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpRecord.png\") !important;\n\t\t\tbackground-size: 64% !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\tbutton.stopButton::Before {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpStop.png\") !important;\n\t\t\tbackground-size: 64% !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\tbutton.pauseButton::Before {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpPause.png\") !important;\n\t\t\tbackground-size: 64% !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\t.beepboxEditor span.volume-speaker {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpSpeaker.png\");\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-repeat: no-repeat !important;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t}\n\n\t\tdiv.selectContainer.menu.file::before {\n\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpFile.png\");\n\t\t\tbackground-size: 64%;\n\t\t\tbackground-position-x: center;\n\t\t\tbackground-position-y: center;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\tdiv.selectContainer.menu.edit::before {\n\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpEdit.png\");\n\t\t\tbackground-size: 64%;\n\t\t\tbackground-position-x: center;\n\t\t\tbackground-position-y: center;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\t\tdiv.selectContainer.menu.preferences::before {\n\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpPreferences.png\");\n\t\t\tbackground-size: 64%;\n\t\t\tbackground-position-x: center;\n\t\t\tbackground-position-y: center;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\t\tbutton.playButton::before {\n\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpPlay.png\") !important;\n\t\t\tbackground-size: 64% !important;\n\t\t\tbackground-position: center !important;\n\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t}\n\n\t\t.beepboxEditor button.prevBarButton::before {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpBackward.png\") !important;\n\t\t\tbackground-size: 64% !important;\n\t\t\tbackground-position: center !important;\n\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\t.beepboxEditor button.nextBarButton::before {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpForward.png\") !important;\n\t\t\tbackground-size: 64% !important;\n\t\t\tbackground-position: center !important;\n\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\t.beepboxEditor .zoomInButton::before {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpZoomIn.png\") !important;\n\t\t\tbackground-position: center !important;\n\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\t.beepboxEditor .zoomOutButton::before {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpZoomOut.png\") !important;\n\t\t\tbackground-position: center !important;\n\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/scrollbar.png\") !important;\n\t\t\tbackground-position: center !important;\n\t\t\tbackground-size: inherit !important;\n\n\t\t\tborder-radius: 0px !important;\n\t\t\twidth: 13px !important;\n\t\t\theight: 23px !important;\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\n\t\t}\n\n\t\t\t/* NON ICON STUFFS SO DON'T GET CONFUSED DUMMY!!! */\n\n\t\t\t#text-content > section > h1 > font {\n\t\tdisplay: none;\n\t\t}\n\t\t#text-content > section > h1 {\n\t\tmargin: auto;\n\t\tcontent: url(\"https://choptop84.github.io/abyssbox-app/AbyssBox_XP.png\");\n\t\t}\n\n\t\t\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xphills.png\") !important;\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\n\t\t\t#text-content {\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/xptextbg.png\");\n    \t\t\t\tborder-image-slice: 11 fill; \n   \t\t\t\tborder-image-width: 11px; \n\t\t\t\tborder-image-repeat: stretch;\n    \t\t\t\tbackground-color: transparent; \n    \t\t\t\tpadding: 14px; \n\t\t\t\t}\n\t\t\t#beepboxEditorContainer {\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/xptextbg.png\");\n    \t\t\t\tborder-image-slice: 11 fill; \n   \t\t\t\tborder-image-width: 11px; \n\t\t\t\tborder-image-repeat: stretch;\n    \t\t\t\tbackground-color: transparent; \n    \t\t\t\tpadding: 13px; \n\t\t\t\t}\n\n\t\t\t#firstImage {\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpsongeditorbg.png\") !important;\n\t\t\t\tbackground-repeat: no-repeat !important;\n\t\t\t\tbackground-size: 100% 100% !important;\n\t\t\t}\n\n\t\t\tdiv.menu-area {\n\t\t\t\t--ui-widget-background: #edead9; \n\t\t\t}\n\t\t\tselect {\n\t\t\t\t--ui-widget-background: #edead9; \n\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t}\n\t\t\tdiv.playback-bar-controls {\n\t\t\t\t--ui-widget-background: #edead9; \n\t\t\t}\n\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t{\n\t\t\t\tbackground: rgba(222, 217, 189, 0.2) !important;\n\t\t\t\tbox-shadow:\n\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.0), \n\t\t\t\t\tinset 0px 1px 2px 0px rgb(125, 120, 95), \n\t\t\t\t\tinset 0px -1px 0px 0px rgb(255, 255, 255)\n\t\t\t\t;\n\t\t\t\tborder-radius: 4px;\n\t\t\t} /* Thanks to LeoV's Skeumorphic theme on this one */\n\t\t\t\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track {\n\t\t\t\theight: 3px !important;\n\t\t\t}\n\t\t\t\n\t\t\t.beepboxEditor select:focus {\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/xpbuttonpressedbg.png\");\n\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\tborder-image-width: 4px; \n\t\t\t\t\tborder-image-repeat: repeat;\n\t\t\t\t\tbackground-color: transparent; \n\t\t\t\t\tpadding: 6px; \n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t{\n\t\t\t\t\tappearance: none;\n\t\t\t\t\tbackground: rgba(255, 255, 255, 1);\n\t\t\t\t\tcolor: currentColor;\n\t\t\t\t\tborder-radius: 0px;\n\t\t\t\t\twidth: 13px !important;\n\t\t\t\t\theight: 13px !important;\n\t\t\t\t\tbackground-image:url(\"https://choptop84.github.io/abyssbox-app/xpCheckmarkBlank.png\");\n\t\t\t\t\tbackground-repeat:no-repeat;\n\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\ttransform: scale(2) !important;\n\t\t\t\t\t}\n\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t{\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\ttransform: scale(2) !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t{\n\t\t\t\t\twidth: 13px;\n\t\t\t\t\theight: 13px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tcontent: \"\";\n\t\t\t\t\tbackground-repeat:no-repeat;\n\t\t\t\t\tbackground-image:url(\"https://choptop84.github.io/abyssbox-app/xpCheckmark.png\");\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\n\t\t\t\tdiv.selectRow span \n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\n\n\t\t\t`,\n\t\t\t\"Terminal 2.0 (AB)\": `\n\n\t\t\t:root { \n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t--note-flash: #a4ff82; \n\t\t\t--note-flash-secondary: #dffbd57a; }\n\t\t\t\n\t\t\t\t\t\t.beepboxEditor button,\n\t\t\t\t\t\tbutton.playButton,\n\t\t\t\t\t\tbutton.pauseButton, \n\t\t\t\t\t\tbutton.recordButton, \n\t\t\t\t\t\tbutton.stopButton,\n\t\t\t\t\t\tbutton.nextBarButton, \n\t\t\t\t\t\tbutton.prevBarButton, \n\t\t\t\t\t\tbutton.copyButton, \n\t\t\t\t\t\tbutton.pasteButton, \n\t\t\t\t\t\tbutton.exportInstrumentButton, \n\t\t\t\t\t\tbutton.importInstrumentButton,\n\t\t\t\t\t\t.beepboxEditor select, \n\t\t\t\t\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/lines2.png\") !important;\n\t\t\t\t\t\t\tbackground-size: 75% !important;\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t.beepboxEditor .playButton::before,\n\t\t\t\t\t\t.beepboxEditor .pauseButton::before, \n\t\t\t\t\t\t.beepboxEditor .recordButton::before, \n\t\t\t\t\t\t.beepboxEditor .stopButton::before,\n\t\t\t\t\t\t.beepboxEditor .nextBarButton::before, \n\t\t\t\t\t\t.beepboxEditor .prevBarButton::before, \n\t\t\t\t\t\t.beepboxEditor .copyButton::before, \n\t\t\t\t\t\t.beepboxEditor .pasteButton::before,\n\t\t\t\t\t\t.beepboxEditor .copyPatternButton::before, \n\t\t\t\t\t\t.beepboxEditor .pastePatternButton::before,\n\t\t\t\t\t\t.beepboxEditor .undoButton::before,\n\t\t\t\t\t\t.beepboxEditor .redoButton::before,\n\t\t\t\t\t\t.beepboxEditor .insertChannelButton::before,\n\t\t\t\t\t\t.beepboxEditor .deleteChannelButton::before,\n\t\t\t\t\t\t.beepboxEditor .selectAllButton::before,\n\t\t\t\t\t\t.beepboxEditor .duplicateButton::before,\n\t\t\t\t\t\t.beepboxEditor .notesUpButton::before,\n\t\t\t\t\t\t.beepboxEditor .notesDownButton::before,\n\t\t\t\t\t\t.beepboxEditor .loopBarButton::before,\n\t\t\t\t\t\t.beepboxEditor .menu.file::before,\n\t\t\t\t\t\t.beepboxEditor .menu.edit::before,\n\t\t\t\t\t\t.beepboxEditor .menu.preferences::before,\n\t\t\t\t\t\t.beepboxEditor .volume-speaker,\n\t\t\t\t\t\t.beepboxEditor .mute-button::before,\n\t\t\t\t\t\t.beepboxEditor .mute-button.modMute::before,\n\t\t\t\t\t\tdiv.noSelection  {\n\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/lines2.png\") !important;\n\t\t\t\t\t\t\tborder-image-width: 46% !important;\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\t* {\n\t\t\t\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@font-face {\n\t\t\t\t\t   font-family: \"Workbench\";\n\t\t\t\t\t   src:\n\t\t\t\t\t\turl(\"https://choptop84.github.io/abyssbox-app/Workbench.ttf\") format(\"truetype\") tech(color-COLRv1),\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\thtml {\n\t\t\t\t\t\t\tfont-family: 'Workbench';\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\t\t\tfont-family: 'Workbench' !important;\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\t#firstImage {\n\t\t\t\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/lines.png\") !important;\n\t\t\t\t\t\t\t\tbackground-repeat: repeat !important;\n\t\t\t\t\t\t\t\tbackground-size: 40% 40% !important;\n\t\t\t\t\t\t\t\topacity: 70%;\n\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/lines2.png\") !important;\n\t\t\t\t\t\t\tborder-image-width: 46% !important;\n\t\t\t\t\t\t}    \n\t\t\t\n\t\t\t\t\t\t.modTitle::before {\n\t\t\t\t\t\t\tcontent: \"> AbyssBox Terminal 2.0\" !important;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdiv.channelBox {\n\t\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/lines2.png\") !important;\n\t\t\t\t\t  }\n\t\t\t`,\n\t\t\t\"2012 Video Tutorial\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\n\t\t\t\t* {\n\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t}\n\n\t\t\t\t.overlay {\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/bandicam_watermark.png\");\n\t\t\t\t\tbackground-repeat: no-repeat;\n  \t\t\t\t\tbackground-size: contain;\n  \t\t\t\t\tbackground-position-x: center;\n\t\t\t\t  \tbackdrop-filter: blur(1px);\n\t\t\t\t\tposition: fixed !important;\n\t\t\t\t}\n\n\t\t\t\t html:not(.overlay) {\n\t\t\t\t\twidth: 75vw;\n\t\t\t\t\tpadding-left: 12.5%;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\tbackground: black;\n\t\t\t\t} \n\n\t\t\t`,\n\t\t\t\"I am on fire\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\n\t\t\t\t* {\n\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t}\n\n\t\t\t\t.overlay {\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/fire.gif\");\n\t\t\t\t\tbackground-repeat: no-repeat;\n  \t\t\t\t\tbackground-size: cover;\n  \t\t\t\t\tbackground-position-y: bottom;\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\t.modTitle::before {\n\t\t\t\t\tcontent: \"AAAA I'M ON FIRE AAA\" !important;\n\t\t\t\t}\n\n\t\t\t`,\n\n      \"dark classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t\t* {\n\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t`,\n        \"dark competition\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #050000;\n\t\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t}\n\t\t\t* {\n\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t}\n\t\t`,\n        \"light classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t}\n\t\t\t* {\n\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t}\n\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t`,\n        \"jummbox classic\": `\n\t\t\t\t:root {\n\t\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t--page-margin: #050000;\n\t\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t}\n\t\t\t`,\n        \"forest\": `\n\t\t\t\t:root {\n\t\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t--page-margin: #050000;\n\t\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t}\n\t\t\t`,\n\t\"forest 2\": `\n\t\t\t\t\t:root { \n\t\t\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t\t--page-margin: #050000;\n\t\t\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t\t--playhead: white;\n\t\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\n\t\t\t\t\t}\n\t\t\t\t\t/* sets background image */\n\t\t\t\t\tbody {\n\t\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/Forest2Trees.png\") !important;\n\t\t\t\t\t\tbackground-size: cover;\n\t\t\t\t\t\tbackground-position: center top; /* Adjusted to align with the top */\n  \t\t\t\t\t\tbackground-repeat: no-repeat;\n\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t\t\t}\n\t\t\t\t\t\t#text-content {\n\t\t\t\t\t\t--editor-background: (255, 255, 255, 0);\n\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/forest2_border.png\");\n\t\t\t\t\t\t\tborder-image-slice: 16 fill; \n\t\t\t\t\t\t   \tborder-image-width: 32px; \n\t\t\t\t\t\t\tborder-image-repeat: repeat; \n\t\t\t\t\t\t\tpadding: 36px; \n\t\t\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t\t}\n\t\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\t\t--editor-background: (255, 255, 255, 0);\n\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/forest2_border.png\");\n\t\t\t\t\t\t\tborder-image-slice: 16 fill; \n\t\t\t\t\t\t   \tborder-image-width: 32px; \n\t\t\t\t\t\t\tborder-image-repeat: repeat; \n\t\t\t\t\t\t\tpadding-left: 36px; \n\t\t\t\t\t\t\tpadding-right: 36px; \n\t\t\t\t\t\t\tpadding-top: 5px; \n\t\t\t\t\t\t\tpadding-bottom: 5px; \n\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t\t\t}\n\t\t\t\t\t.beepboxEditor button, .beepboxEditor select, .beepboxEditor .select2-selection__rendered {\n\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/forest2_border2.png\") !important;\n\t\t\t\t\t\t\tborder-image-slice: 4 fill !important; \n\t\t\t\t\t\t   border-image-width: 4px !important; \n\t\t\t\t\t\tborder-image-repeat: stretch !important;\n\t\t\t\t\t\t\tpadding: 4px !important; \n\t\t\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t\t}\n\t\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\t\tborder-image: none !important;\n\t\t\t\t\t}\n\t\t\t\t\tdiv.prompt.noSelection {\n\t\t\t\t\t\t--editor-background: #002b03; \n\t\t\t\t\t}\n\t\t\t\t\t/* div.channelBox {\n\t\t\t\t\tborder-radius: 5px;\n\t\t\t\t\t} */\n\t\t\t\t\t* {\n\t\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t\t} \n\t\t\t\t\t\t\t@font-face {\n\t\t\t\t\t\t   font-family: \"AbyssType\";\n\t\t\t\t\t\t   src:\n\t\t\t\t\t\t\turl(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\t@font-face {\n\t\t\t\t\t\t   font-family: \"AbyssType_small\";\n\t\t\t\t\t\t   src:\n\t\t\t\t\t\t\turl(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\thtml {\n\t\t\t\t\t\t\tfont-family: 'AbyssType';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t\t\t\t\t}\n\t\t\t`,\n        \"canyon\": `\n\t\t\t\t:root {\n\t\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t--page-margin: #050000;\n\t\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n        \"midnight\": `\n\t\t:root {\n\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\n\t\t\t\n\t\t}\n\t`,\n        \"jummbox light\": `\n\t\t\t\t:root {\n\t\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: #050000;\n\t\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbackground-color: var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbackground-color: var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .piano-button::before {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t`,\n        \"amoled dark\": `\n\t\t\t\t:root {\n\t\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t--page-margin: #050000;\n\t\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t`,\n        \"beachcombing\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n  \n  \n\n\t\t\t}\n\t\t`,\n        \"roe\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"moonlight\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"autumn\": `\n\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"fruit\": `\n\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"sunset\": `\n\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"toxic\": `\n\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"violet verdant\": `\n\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"portal\": `\n\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"fusion\": `:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"inverse\": `:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t\t}`,\n        \"nebula\": `\n\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n\t\t\"Nebula 2\": ` \n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto; \n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\tbody {\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/stars.gif\") !important;\n\t\t\t\tbackground-size: contain;\n\t\t\t\tbackground-position: center top;\n\t\t\t\t  background-repeat: repeat;\n\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t}\n\t\t\t#text-content {\n\t\t\t\t--editor-background: rgba(255, 255, 255, 0);\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/nebula2_border.png\");\n\t\t\t\t\tborder-image-slice: 16 fill; \n\t\t\t\t\t   border-image-width: 32px; \n\t\t\t\t\tborder-image-repeat: repeat; \n\t\t\t\t\tpadding: 36px; \n\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t#beepboxEditorContainer {\n\t\t\t\t--editor-background: rgba(255, 255, 255, 0);\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/nebula2_border.png\");\n\t\t\t\t\tborder-image-slice: 16 fill; \n\t\t\t\t\t   border-image-width: 32px; \n\t\t\t\t\tborder-image-repeat: repeat; \n\t\t\t\t\tpadding-left: 36px; \n\t\t\t\t\tpadding-right: 36px; \n\t\t\t\t\tpadding-top: 5px; \n\t\t\t\t\tpadding-bottom: 5px; \n\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t}\n\t\t\t.beepboxEditor button, .beepboxEditor select, .beepboxEditor .select2-selection__rendered {\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/nebula2_border2.png\") !important;\n\t\t\t\t\tborder-image-slice: 4 fill !important; \n\t\t\t\t   border-image-width: 4px !important; \n\t\t\t\tborder-image-repeat: stretch !important;\n\t\t\t\t\tpadding: 4px !important; \n\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t}\n\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\tborder-image: none !important;\n\t\t\t\t}\n\t\t\t/* div.channelBox {\n\t\t\tborder-radius: 5px;\n\t\t\t} */\n\t\t\t* {\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/pixel_cursor.png\"), auto !important;\n\t\t\t\t} \n\t\t\t\t\t@font-face {\n\t\t\t\t   font-family: \"AbyssType\";\n\t\t\t\t   src:\n\t\t\t\t\turl(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\t@font-face {\n\t\t\t\t   font-family: \"AbyssType_small\";\n\t\t\t\t   src:\n\t\t\t\t\turl(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\thtml {\n\t\t\t\t\tfont-family: 'AbyssType';\n\t\t\t\t\t}\n\t\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t\t\t}\n\t\t\n\n\n\t\t`,\n        \"roe light\": `\n\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"energized\": `\n\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"neapolitan\": `:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n        \"mono\": `:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\t\t}`,\n\t\t\"blutonium\":\n\t\t\t`:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t}`,\n\t\t\"modbox classic\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"zefbox\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"sandbox classic\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"harrybox\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"brucebox\": `\n\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\tfont: 16px/2 cursive;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"shitbox 2.0\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"shitbox 3.0\": `\n\t\t\t\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\tfont: 20px/2 monospace;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\t`,\n\t\t\t\"nerdbox\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\"nepbox\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"cardboardbox classic\": `\n\t\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t--page-margin: #050000;\n\t\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\n\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"blubox classic\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\"dogebox classic\": `\n\t\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t--page-margin: #050000;\n\t\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\n\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t  \"dogebox dark\": `\n\t\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t--page-margin: #050000;\n\t\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t    \"todbox classic\": `\n\t\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t--page-margin: #050000;\n\t\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"todbox dark mode\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"mainbox 1.0\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"fogbox\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"foxbox\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t \"wackybox\": `\n\t\t\t\n\t\t\t:root {\n\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\n.beepboxEditor {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\t\t\n.beepboxEditor .tip {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor .prompt label {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor .layout-option {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor select {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.select2-selection__rendered {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.select2-container--default .select2-results__group {\n    cursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor button {\n\t cursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor canvas {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n.beepboxEditor input {\n\tcursor: url('wackybox_cursor.png'), auto !important;;\n}\n\n\t\t\t`,\n\t\t\t \"microbox\": `\n\t\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t\t--page-margin: #050000;\n\t\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\"paandorasbox\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t  \n\t\t\t  \n\t\t\t}\n\t\t\t`,\n\t\t\t\"midbox\":\n\t\t`:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\n\t\t\t\n\t\t}`,\n\t\t\"dogebox2\": `\n\t\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t}`,\n\t\t\"azur lane\":`\n\t\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #74f;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #444;\n\t\t\t--ui-widget-focus: #777;\n\t\t\t--pitch-background: #444;\n\t\t\t--tonic: #864;\n\t\t\t--fifth-note: #468;\n\t\t\t--white-piano-key: #bbb;\n\t\t\t--black-piano-key: #444;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t--use-color-formula: false;\n\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t--input-box-outline: #333;\n\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t--noise5-primary-note:      #C5E2B2;\n\t  --mod1-secondary-channel:   #339955;\n\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t  \n\t\t  \n\t\t\t}\n\t\t/* replaces hotdog (in a hacky way) with an image of the girls using the same scratch sprites from the 404 page*/\n\t\t#Hotdog {\n\t\tdisplay: none;\n\t\t}\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\n\t\tdisplay: block;\n\t\tcontent: url(\"UltraboxAzurLaneThemeStarterSquad.png\");\n\t\twidth: 100%;\n\t\ttext-align: center;\n\t\tmargin-top: 25px;\n\t\t}\n\t\t/* sets cursor */\n\t\t* {\n\t\tcursor: url(\"UltraBoxAzurLaneThemeMouse.png\"), auto !important;\n\t\t}\n\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"UltraBoxAzurLaneThemeMemoryTaskBackground.png\") !important;\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\t\t\t/* make editor background transparent */\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\n\t\tbackground: #0400257d !important;\n\t\t}\n\t\t\t#text-content > section > h1 > font {\n\t\tdisplay: none;\n\t\t}\n\t\t#text-content > section > h1 {\n\t\tmargin: auto;\n\t\tcontent: url(\"UltraBoxALThemeLogo.png\");\n\t\t}\n\t}`,\n\"WeebBox\": `\n\t:root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t--page-margin: #050000;\n\t\t--editor-background: #050000;\n\t\t--hover-preview: white;\n\t\t--playhead: white;\n\t\t--primary-text: white;\n\t\t--secondary-text: #999;\n\t\t--inverted-text: black;\n\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t--loop-accent: #74f;\n\t\t--link-accent: #98f;\n\t\t--ui-widget-background: #444;\n\t\t--ui-widget-focus: #777;\n\t\t--pitch-background: #444;\n\t\t--tonic: #864;\n\t\t--fifth-note: #468;\n\t\t--white-piano-key: #bbb;\n\t\t--black-piano-key: #444;\n\t\t--white-piano-key-text: #131200;\n\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t--track-editor-bg-noise: #444;\n\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t--track-editor-bg-mod: #234;\n\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #74f;\n\t\t\t--indicator-secondary: #444;\n\t\t\t--select2-opt-group: #585858;\n\t\t\t--input-box-outline: #333;\n\t\t\t--mute-button-normal: #ffa033;\n\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t--pitch-channel-limit: 6;\n\t\t\t--noise-channel-limit: 3;\n\t\t--pitch1-secondary-channel: #0099A1;\n\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t--pitch1-primary-note:      #92F9FF;\n\t\t--pitch2-secondary-channel: #A1A100;\n\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t--pitch2-secondary-note:    #C7C700;\n\t\t--pitch2-primary-note:      #FFFF92;\n\t\t--pitch3-secondary-channel: #C75000;\n\t\t--pitch3-primary-channel:   #FF9752;\n\t\t--pitch3-secondary-note:    #FF771C;\n\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t--pitch4-secondary-channel: #00A100;\n\t\t--pitch4-primary-channel:   #50FF50;\n\t\t--pitch4-secondary-note:    #00C700;\n\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t--pitch5-secondary-channel: #D020D0;\n\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t--pitch5-secondary-note:    #E040E0;\n\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t--pitch6-secondary-channel: #7777B0;\n\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t--pitch6-secondary-note:    #8888D0;\n\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t--pitch7-secondary-channel: #8AA100;\n\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t--pitch7-secondary-note:    #AAC700;\n\t\t--pitch7-primary-note:      #E6FF92;\n\t\t--pitch8-secondary-channel: #DF0019;\n\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t--pitch9-secondary-channel: #00A170;\n\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t--pitch9-secondary-note:    #00C78A;\n\t\t--pitch9-primary-note:      #83FFD9;\n\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t--pitch10-secondary-note:   #B757FF;\n\t\t--pitch10-primary-note:     #DFACFF;\n\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t--noise1-primary-note:      #E0E0E0;\n\t\t--noise2-secondary-channel: #996633;\n\t\t--noise2-primary-channel:   #DDAA77;\n\t\t--noise2-secondary-note:    #CC9966;\n\t\t--noise2-primary-note:      #F0D0BB;\n\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t--noise3-primary-channel:   #77AADD;\n\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t--noise3-primary-note:      #BBD7FF;\n\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t--noise4-primary-channel:   #AF82D2;\n\t\t--noise4-secondary-note:    #9E71C1;\n\t\t--noise4-primary-note:      #D4C1EA;\n\t\t--noise5-secondary-channel: #607837;\n\t\t--noise5-primary-channel:   #A2BB77;\n\t\t--noise5-secondary-note:    #91AA66;\n\t\t--noise5-primary-note:      #C5E2B2;\n  --mod1-secondary-channel:   #339955;\n\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t--mod-label-primary:        #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text:   black;\n\t\t\t--disabled-note-primary:    #999;\n\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\n\t\t\n\t}\n\t#firstImage {\n\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/weebboxbackground.jpg\") !important;\n\t\tbackground-repeat: no-repeat !important;\n\t\tbackground-size: 100% 100% !important;\n\t}\n\n\t#firstImage rect {\n\t\topacity: 0.8 !important;\n\t}\n`,\n\t\t\"Protanopia\": `\n:root {\ncursor: url('wackybox_cursor.png'), auto; \n\t--page-margin: #050000;\n\t--editor-background: #050000;\n\t--hover-preview: white;\n\t--playhead: white;\n\t--primary-text: white;\n\t--secondary-text: #999;\n\t--inverted-text: black;\n\t--text-selection: rgba(119,68,255,0.99);\n\t--box-selection-fill: rgba(255,255,255,0.2);\n\t--loop-accent: #74f;\n\t--link-accent: #98f;\n\t--ui-widget-background: #444;\n\t--ui-widget-focus: #777;\n\t--pitch-background: #444;\n\t--tonic: #864;\n\t--fifth-note: #468;\n\t--white-piano-key: #bbb;\n\t--black-piano-key: #444;\n\t--white-piano-key-text: #131200;\n\t--black-piano-key-text: #fff;\n\t\t--use-color-formula: false;\n\t\t--track-editor-bg-pitch: #444;\n\t\t--track-editor-bg-pitch-dim: #333;\n\t\t--track-editor-bg-noise: #444;\n\t\t--track-editor-bg-noise-dim: #333;\n\t\t--track-editor-bg-mod: #234;\n\t\t--track-editor-bg-mod-dim: #123;\n\t\t--multiplicative-mod-slider: #456;\n\t\t--overwriting-mod-slider: #654;\n\t\t--indicator-primary: #74f;\n\t\t--indicator-secondary: #444;\n\t\t--select2-opt-group: #585858;\n\t\t--input-box-outline: #333;\n\t\t--mute-button-normal: #ffa033;\n\t\t--mute-button-mod: #9a6bff;\n\t\t--pitch-channel-limit: 6;\n\t\t--noise-channel-limit: 3;\n\t--pitch1-secondary-channel: #0099A1;\n\t--pitch1-primary-channel:   #25F3FF;\n\t--pitch1-secondary-note:    #00BDC7;\n\t--pitch1-primary-note:      #92F9FF;\n\t--pitch2-secondary-channel: #A1A100;\n\t--pitch2-primary-channel:   #FFFF25;\n\t--pitch2-secondary-note:    #C7C700;\n\t--pitch2-primary-note:      #FFFF92;\n\t--pitch3-secondary-channel: #C75000;\n\t--pitch3-primary-channel:   #FF9752;\n\t--pitch3-secondary-note:    #FF771C;\n\t--pitch3-primary-note:      #FFCDAB;\n\t--pitch4-secondary-channel: #00A100;\n\t--pitch4-primary-channel:   #50FF50;\n\t--pitch4-secondary-note:    #00C700;\n\t--pitch4-primary-note:      #A0FFA0;\n\t--pitch5-secondary-channel: #D020D0;\n\t--pitch5-primary-channel:   #FF90FF;\n\t--pitch5-secondary-note:    #E040E0;\n\t--pitch5-primary-note:      #FFC0FF;\n\t--pitch6-secondary-channel: #7777B0;\n\t--pitch6-primary-channel:   #A0A0FF;\n\t--pitch6-secondary-note:    #8888D0;\n\t--pitch6-primary-note:      #D0D0FF;\n\t--pitch7-secondary-channel: #8AA100;\n\t--pitch7-primary-channel:   #DEFF25;\n\t--pitch7-secondary-note:    #AAC700;\n\t--pitch7-primary-note:      #E6FF92;\n\t--pitch8-secondary-channel: #DF0019;\n\t--pitch8-primary-channel:   #FF98A4;\n\t--pitch8-secondary-note:    #FF4E63;\n\t--pitch8-primary-note:      #FFB2BB;\n\t--pitch9-secondary-channel: #00A170;\n\t--pitch9-primary-channel:   #50FFC9;\n\t--pitch9-secondary-note:    #00C78A;\n\t--pitch9-primary-note:      #83FFD9;\n\t--pitch10-secondary-channel:#A11FFF;\n\t--pitch10-primary-channel:  #CE8BFF;\n\t--pitch10-secondary-note:   #B757FF;\n\t--pitch10-primary-note:     #DFACFF;\n\t--noise1-secondary-channel: #6F6F6F;\n\t--noise1-primary-channel:   #AAAAAA;\n\t--noise1-secondary-note:    #A7A7A7;\n\t--noise1-primary-note:      #E0E0E0;\n\t--noise2-secondary-channel: #996633;\n\t--noise2-primary-channel:   #DDAA77;\n\t--noise2-secondary-note:    #CC9966;\n\t--noise2-primary-note:      #F0D0BB;\n\t--noise3-secondary-channel: #4A6D8F;\n\t--noise3-primary-channel:   #77AADD;\n\t--noise3-secondary-note:    #6F9FCF;\n\t--noise3-primary-note:      #BBD7FF;\n\t--noise4-secondary-channel: #7A4F9A;\n\t--noise4-primary-channel:   #AF82D2;\n\t--noise4-secondary-note:    #9E71C1;\n\t--noise4-primary-note:      #D4C1EA;\n\t--noise5-secondary-channel: #607837;\n\t--noise5-primary-channel:   #A2BB77;\n\t--noise5-secondary-note:    #91AA66;\n\t--noise5-primary-note:      #C5E2B2;\n--mod1-secondary-channel:   #339955;\n\t\t--mod1-primary-channel:     #77fc55;\n\t\t--mod1-secondary-note:      #77ff8a;\n\t\t--mod1-primary-note:        #cdffee;\n\t\t--mod2-secondary-channel:   #993355;\n\t\t--mod2-primary-channel:     #f04960;\n\t\t--mod2-secondary-note:      #f057a0;\n\t\t--mod2-primary-note:        #ffb8de;\n\t\t--mod3-secondary-channel:   #553399;\n\t\t--mod3-primary-channel:     #8855fc;\n\t\t--mod3-secondary-note:      #aa64ff;\n\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t--mod4-secondary-channel:   #a86436;\n\t\t--mod4-primary-channel:     #c8a825;\n\t\t--mod4-secondary-note:      #e8ba46;\n\t\t--mod4-primary-note:        #fff6d3;\n\t\t--mod-label-primary:        #999;\n\t\t--mod-label-secondary-text: #333;\n\t\t--mod-label-primary-text:   black;\n\t\t--disabled-note-primary:    #999;\n\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n\t\t\t\t\t\n}\n\n\t\t\t`,\n\t\t\"Tritanopia\": `\n:root {\ncursor: url('wackybox_cursor.png'), auto; \n\t--page-margin: #050000;\n\t--editor-background: #050000;\n\t--hover-preview: white;\n\t--playhead: white;\n\t--primary-text: white;\n\t--secondary-text: #999;\n\t--inverted-text: black;\n\t--text-selection: rgba(119,68,255,0.99);\n\t--box-selection-fill: rgba(255,255,255,0.2);\n\t--loop-accent: #74f;\n\t--link-accent: #98f;\n\t--ui-widget-background: #444;\n\t--ui-widget-focus: #777;\n\t--pitch-background: #444;\n\t--tonic: #864;\n\t--fifth-note: #468;\n\t--white-piano-key: #bbb;\n\t--black-piano-key: #444;\n\t--white-piano-key-text: #131200;\n\t--black-piano-key-text: #fff;\n\t\t--use-color-formula: false;\n\t\t--track-editor-bg-pitch: #444;\n\t\t--track-editor-bg-pitch-dim: #333;\n\t\t--track-editor-bg-noise: #444;\n\t\t--track-editor-bg-noise-dim: #333;\n\t\t--track-editor-bg-mod: #234;\n\t\t--track-editor-bg-mod-dim: #123;\n\t\t--multiplicative-mod-slider: #456;\n\t\t--overwriting-mod-slider: #654;\n\t\t--indicator-primary: #74f;\n\t\t--indicator-secondary: #444;\n\t\t--select2-opt-group: #585858;\n\t\t--input-box-outline: #333;\n\t\t--mute-button-normal: #ffa033;\n\t\t--mute-button-mod: #9a6bff;\n\t\t--pitch-channel-limit: 6;\n\t\t--noise-channel-limit: 3;\n\t--pitch1-secondary-channel: #0099A1;\n\t--pitch1-primary-channel:   #25F3FF;\n\t--pitch1-secondary-note:    #00BDC7;\n\t--pitch1-primary-note:      #92F9FF;\n\t--pitch2-secondary-channel: #A1A100;\n\t--pitch2-primary-channel:   #FFFF25;\n\t--pitch2-secondary-note:    #C7C700;\n\t--pitch2-primary-note:      #FFFF92;\n\t--pitch3-secondary-channel: #C75000;\n\t--pitch3-primary-channel:   #FF9752;\n\t--pitch3-secondary-note:    #FF771C;\n\t--pitch3-primary-note:      #FFCDAB;\n\t--pitch4-secondary-channel: #00A100;\n\t--pitch4-primary-channel:   #50FF50;\n\t--pitch4-secondary-note:    #00C700;\n\t--pitch4-primary-note:      #A0FFA0;\n\t--pitch5-secondary-channel: #D020D0;\n\t--pitch5-primary-channel:   #FF90FF;\n\t--pitch5-secondary-note:    #E040E0;\n\t--pitch5-primary-note:      #FFC0FF;\n\t--pitch6-secondary-channel: #7777B0;\n\t--pitch6-primary-channel:   #A0A0FF;\n\t--pitch6-secondary-note:    #8888D0;\n\t--pitch6-primary-note:      #D0D0FF;\n\t--pitch7-secondary-channel: #8AA100;\n\t--pitch7-primary-channel:   #DEFF25;\n\t--pitch7-secondary-note:    #AAC700;\n\t--pitch7-primary-note:      #E6FF92;\n\t--pitch8-secondary-channel: #DF0019;\n\t--pitch8-primary-channel:   #FF98A4;\n\t--pitch8-secondary-note:    #FF4E63;\n\t--pitch8-primary-note:      #FFB2BB;\n\t--pitch9-secondary-channel: #00A170;\n\t--pitch9-primary-channel:   #50FFC9;\n\t--pitch9-secondary-note:    #00C78A;\n\t--pitch9-primary-note:      #83FFD9;\n\t--pitch10-secondary-channel:#A11FFF;\n\t--pitch10-primary-channel:  #CE8BFF;\n\t--pitch10-secondary-note:   #B757FF;\n\t--pitch10-primary-note:     #DFACFF;\n\t--noise1-secondary-channel: #6F6F6F;\n\t--noise1-primary-channel:   #AAAAAA;\n\t--noise1-secondary-note:    #A7A7A7;\n\t--noise1-primary-note:      #E0E0E0;\n\t--noise2-secondary-channel: #996633;\n\t--noise2-primary-channel:   #DDAA77;\n\t--noise2-secondary-note:    #CC9966;\n\t--noise2-primary-note:      #F0D0BB;\n\t--noise3-secondary-channel: #4A6D8F;\n\t--noise3-primary-channel:   #77AADD;\n\t--noise3-secondary-note:    #6F9FCF;\n\t--noise3-primary-note:      #BBD7FF;\n\t--noise4-secondary-channel: #7A4F9A;\n\t--noise4-primary-channel:   #AF82D2;\n\t--noise4-secondary-note:    #9E71C1;\n\t--noise4-primary-note:      #D4C1EA;\n\t--noise5-secondary-channel: #607837;\n\t--noise5-primary-channel:   #A2BB77;\n\t--noise5-secondary-note:    #91AA66;\n\t--noise5-primary-note:      #C5E2B2;\n--mod1-secondary-channel:   #339955;\n\t\t--mod1-primary-channel:     #77fc55;\n\t\t--mod1-secondary-note:      #77ff8a;\n\t\t--mod1-primary-note:        #cdffee;\n\t\t--mod2-secondary-channel:   #993355;\n\t\t--mod2-primary-channel:     #f04960;\n\t\t--mod2-secondary-note:      #f057a0;\n\t\t--mod2-primary-note:        #ffb8de;\n\t\t--mod3-secondary-channel:   #553399;\n\t\t--mod3-primary-channel:     #8855fc;\n\t\t--mod3-secondary-note:      #aa64ff;\n\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t--mod4-secondary-channel:   #a86436;\n\t\t--mod4-primary-channel:     #c8a825;\n\t\t--mod4-secondary-note:      #e8ba46;\n\t\t--mod4-primary-note:        #fff6d3;\n\t\t--mod-label-primary:        #999;\n\t\t--mod-label-secondary-text: #333;\n\t\t--mod-label-primary-text:   black;\n\t\t--disabled-note-primary:    #999;\n\t\t--disabled-note-secondary:  #666;\n\t\t\t\t\t\n}\n\n\t\t\t`,\n\t\t\"Deuteranopia\": `\n    :root {\ncursor: url('wackybox_cursor.png'), auto;\n\t\t--page-margin: #050000;\n\t\t--editor-background: #050000;\n\t\t--hover-preview: white;\n\t\t--playhead: white;\n\t\t--primary-text: white;\n\t\t--secondary-text: #999;\n\t\t--inverted-text: black;\n\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t--loop-accent: #74f;\n\t\t--link-accent: #98f;\n\t\t--ui-widget-background: #444;\n\t\t--ui-widget-focus: #777;\n\t\t--pitch-background: #444;\n\t\t--tonic: #864;\n\t\t--fifth-note: #468;\n\t\t--white-piano-key: #bbb;\n\t\t--black-piano-key: #444;\n\t\t--white-piano-key-text: #131200;\n\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t--track-editor-bg-noise: #444;\n\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t--track-editor-bg-mod: #234;\n\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #74f;\n\t\t\t--indicator-secondary: #444;\n\t\t\t--select2-opt-group: #585858;\n\t\t\t--input-box-outline: #333;\n\t\t\t--mute-button-normal: #ffa033;\n\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t--pitch-channel-limit: 6;\n\t\t\t--noise-channel-limit: 3;\n\t\t--pitch1-secondary-channel: #0099A1;\n\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t--pitch1-primary-note:      #92F9FF;\n\t\t--pitch2-secondary-channel: #A1A100;\n\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t--pitch2-secondary-note:    #C7C700;\n\t\t--pitch2-primary-note:      #FFFF92;\n\t\t--pitch3-secondary-channel: #C75000;\n\t\t--pitch3-primary-channel:   #FF9752;\n\t\t--pitch3-secondary-note:    #FF771C;\n\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t--pitch4-secondary-channel: #00A100;\n\t\t--pitch4-primary-channel:   #50FF50;\n\t\t--pitch4-secondary-note:    #00C700;\n\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t--pitch5-secondary-channel: #D020D0;\n\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t--pitch5-secondary-note:    #E040E0;\n\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t--pitch6-secondary-channel: #7777B0;\n\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t--pitch6-secondary-note:    #8888D0;\n\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t--pitch7-secondary-channel: #8AA100;\n\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t--pitch7-secondary-note:    #AAC700;\n\t\t--pitch7-primary-note:      #E6FF92;\n\t\t--pitch8-secondary-channel: #DF0019;\n\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t--pitch9-secondary-channel: #00A170;\n\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t--pitch9-secondary-note:    #00C78A;\n\t\t--pitch9-primary-note:      #83FFD9;\n\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t--pitch10-secondary-note:   #B757FF;\n\t\t--pitch10-primary-note:     #DFACFF;\n\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t--noise1-primary-note:      #E0E0E0;\n\t\t--noise2-secondary-channel: #996633;\n\t\t--noise2-primary-channel:   #DDAA77;\n\t\t--noise2-secondary-note:    #CC9966;\n\t\t--noise2-primary-note:      #F0D0BB;\n\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t--noise3-primary-channel:   #77AADD;\n\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t--noise3-primary-note:      #BBD7FF;\n\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t--noise4-primary-channel:   #AF82D2;\n\t\t--noise4-secondary-note:    #9E71C1;\n\t\t--noise4-primary-note:      #D4C1EA;\n\t\t--noise5-secondary-channel: #607837;\n\t\t--noise5-primary-channel:   #A2BB77;\n\t\t--noise5-secondary-note:    #91AA66;\n\t\t--noise5-primary-note:      #C5E2B2;\n  --mod1-secondary-channel:   #339955;\n\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t--mod-label-primary:        #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text:   black;\n\t\t\t--disabled-note-primary:    #999;\n\t\t\t--disabled-note-secondary:  #666;\n  \n  \n    }\n\n\t\t\t`,\n\t\t\t  \"custom\": `${localStorage.getItem(\"customColors\") || `:root {\n\t\t\t\t--page-margin: #040410;\n\t\t\t\t--editor-background: #040410;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t--pitch-background: #393e4f99;\n\t\t\t\t--tonic: #725491;\n\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t--black-piano-key: #666;\n\t\t\t\t--use-color-formula: true;\n\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t--input-box-outline: #222;\n\t\t\t\t--mute-button-normal: #dda85d;\n\t\t\t\t--mute-button-mod: #886eae;\n\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t--mod-primary-note-lum-scale: 0;\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t}`}`,\n    };\n\n    public static readonly pageMargin: string = \"var(--page-margin)\";\n    public static readonly editorBackground: string = \"var(--editor-background)\";\n    public static readonly hoverPreview: string = \"var(--hover-preview)\";\n    public static readonly playhead: string = \"var(--playhead)\";\n    public static readonly primaryText: string = \"var(--primary-text)\";\n    public static readonly secondaryText: string = \"var(--secondary-text)\";\n    public static readonly invertedText: string = \"var(--inverted-text)\";\n    public static readonly textSelection: string = \"var(--text-selection)\";\n    public static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\n    public static readonly loopAccent: string = \"var(--loop-accent)\";\n    public static readonly linkAccent: string = \"var(--link-accent)\";\n    public static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\n    public static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\n    public static readonly pitchBackground: string = \"var(--pitch-background)\";\n    public static readonly tonic: string = \"var(--tonic)\";\n    public static readonly fifthNote: string = \"var(--fifth-note)\";\n    public static readonly whitePianoKey: string = \"var(--white-piano-key)\";\n    public static readonly blackPianoKey: string = \"var(--black-piano-key)\";\n    public static readonly whitePianoKeyText: string = \"var(--white-piano-key-text)\";\n    public static readonly blackPianoKeyText: string = \"var(--black-piano-key-text)\";\n\t// public static readonly oscilloscopeLineL: string = \"var(--oscilloscope-line-L)\";\n\t// public static readonly oscilloscopeLineR: string = \"var(--oscilloscope-line-R)\";\n\t// modTitle can stay uncommented until it's used somwhere that's not index.html\n\t// public static readonly modTitle: string = \"var(--mod-title)\";\n    public static readonly useColorFormula: string = \"var(--use-color-formula)\";\n    public static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\n    public static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\n    public static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\n    public static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\n    public static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\n    public static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\n    public static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\n    public static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\n    public static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\n    public static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\n    public static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\n    public static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\n    public static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\n    public static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\n    public static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\n    public static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\n    public static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\n    public static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\n    public static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\n    public static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\n    public static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\n    public static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\n    public static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\n    public static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\n    public static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\n    public static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\n    public static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\n    public static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\n    public static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\n    public static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\n    public static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\n    public static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\n    public static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\n    public static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\n    public static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\n    public static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\n    public static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\n    public static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\n    public static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\n    public static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\n    public static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\n    public static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\n    public static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\n    public static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\n    public static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\n    public static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\n    public static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\n    public static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\n    public static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\n    public static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\n    public static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\n    public static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\n    public static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\n    public static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\n    public static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\n    public static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\n    public static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\n    public static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\n    public static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\n    public static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\n    public static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\n    public static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\n    public static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\n    public static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\n    public static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\n    public static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\n    public static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\n    public static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\n    public static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\n    public static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\n    public static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\n    public static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\n    public static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\n    public static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\n    public static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\n    public static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\n    public static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\n    public static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\n    public static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\n    public static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\n    public static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\n    public static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\n    public static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\n    public static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\n    public static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\n    public static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\n    public static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\n    public static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\n    public static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\n    public static readonly disabledNotePrimary: string = \"var(--disabled-note-primary)\";\n    public static readonly disabledNoteSecondary: string = \"var(--disabled-note-secondary)\";\n\n\tpublic static c_pitchSecondaryChannelHue: number = 0;\n\tpublic static c_pitchSecondaryChannelHueScale: number = 0;\n\tpublic static c_pitchSecondaryChannelSat: number = 0;\n\tpublic static c_pitchSecondaryChannelSatScale: number = 0;\n\tpublic static c_pitchSecondaryChannelLum: number = 0;\n\tpublic static c_pitchSecondaryChannelLumScale: number = 0;\n\tpublic static c_pitchPrimaryChannelHue: number = 0;\n\tpublic static c_pitchPrimaryChannelHueScale: number = 0;\n\tpublic static c_pitchPrimaryChannelSat: number = 0;\n\tpublic static c_pitchPrimaryChannelSatScale: number = 0;\n\tpublic static c_pitchPrimaryChannelLum: number = 0;\n\tpublic static c_pitchPrimaryChannelLumScale: number = 0;\n\tpublic static c_pitchSecondaryNoteHue: number = 0;\n\tpublic static c_pitchSecondaryNoteHueScale: number = 0;\n\tpublic static c_pitchSecondaryNoteSat: number = 0;\n\tpublic static c_pitchSecondaryNoteSatScale: number = 0;\n\tpublic static c_pitchSecondaryNoteLum: number = 0;\n\tpublic static c_pitchSecondaryNoteLumScale: number = 0;\n\tpublic static c_pitchPrimaryNoteHue: number = 0;\n\tpublic static c_pitchPrimaryNoteHueScale: number = 0;\n\tpublic static c_pitchPrimaryNoteSat: number = 0;\n\tpublic static c_pitchPrimaryNoteSatScale: number = 0;\n\tpublic static c_pitchPrimaryNoteLum: number = 0;\n\tpublic static c_pitchPrimaryNoteLumScale: number = 0;\n\tpublic static c_modSecondaryChannelHue: number = 0;\n\tpublic static c_modSecondaryChannelHueScale: number = 0;\n\tpublic static c_modSecondaryChannelSat: number = 0;\n\tpublic static c_modSecondaryChannelSatScale: number = 0;\n\tpublic static c_modSecondaryChannelLum: number = 0;\n\tpublic static c_modSecondaryChannelLumScale: number = 0;\n\tpublic static c_modPrimaryChannelHue: number = 0;\n\tpublic static c_modPrimaryChannelHueScale: number = 0;\n\tpublic static c_modPrimaryChannelSat: number = 0;\n\tpublic static c_modPrimaryChannelSatScale: number = 0;\n\tpublic static c_modPrimaryChannelLum: number = 0;\n\tpublic static c_modPrimaryChannelLumScale: number = 0;\n\tpublic static c_modSecondaryNoteHue: number = 0;\n\tpublic static c_modSecondaryNoteHueScale: number = 0;\n\tpublic static c_modSecondaryNoteSat: number = 0;\n\tpublic static c_modSecondaryNoteSatScale: number = 0;\n\tpublic static c_modSecondaryNoteLum: number = 0;\n\tpublic static c_modSecondaryNoteLumScale: number = 0;\n\tpublic static c_modPrimaryNoteHue: number = 0;\n\tpublic static c_modPrimaryNoteHueScale: number = 0;\n\tpublic static c_modPrimaryNoteSat: number = 0;\n\tpublic static c_modPrimaryNoteSatScale: number = 0;\n\tpublic static c_modPrimaryNoteLum: number = 0;\n\tpublic static c_modPrimaryNoteLumScale: number = 0;\n\tpublic static c_noiseSecondaryChannelHue: number = 0;\n\tpublic static c_noiseSecondaryChannelHueScale: number = 0;\n\tpublic static c_noiseSecondaryChannelSat: number = 0;\n\tpublic static c_noiseSecondaryChannelSatScale: number = 0;\n\tpublic static c_noiseSecondaryChannelLum: number = 0;\n\tpublic static c_noiseSecondaryChannelLumScale: number = 0;\n\tpublic static c_noisePrimaryChannelHue: number = 0;\n\tpublic static c_noisePrimaryChannelHueScale: number = 0;\n\tpublic static c_noisePrimaryChannelSat: number = 0;\n\tpublic static c_noisePrimaryChannelSatScale: number = 0;\n\tpublic static c_noisePrimaryChannelLum: number = 0;\n\tpublic static c_noisePrimaryChannelLumScale: number = 0;\n\tpublic static c_noiseSecondaryNoteHue: number = 0;\n\tpublic static c_noiseSecondaryNoteHueScale: number = 0;\n\tpublic static c_noiseSecondaryNoteSat: number = 0;\n\tpublic static c_noiseSecondaryNoteSatScale: number = 0;\n\tpublic static c_noiseSecondaryNoteLum: number = 0;\n\tpublic static c_noiseSecondaryNoteLumScale: number = 0;\n\tpublic static c_noisePrimaryNoteHue: number = 0;\n\tpublic static c_noisePrimaryNoteHueScale: number = 0;\n\tpublic static c_noisePrimaryNoteSat: number = 0;\n\tpublic static c_noisePrimaryNoteSatScale: number = 0;\n\tpublic static c_noisePrimaryNoteLum: number = 0;\n\tpublic static c_noisePrimaryNoteLumScale: number = 0;\n\n\tpublic static c_invertedText: string = \"\";\n\tpublic static c_trackEditorBgNoiseDim: string = \"\";\n\tpublic static c_trackEditorBgNoise: string = \"\";\n\tpublic static c_trackEditorBgModDim: string = \"\";\n\tpublic static c_trackEditorBgMod: string = \"\";\n\tpublic static c_trackEditorBgPitchDim: string = \"\";\n\tpublic static c_trackEditorBgPitch: string = \"\";\n\n    public static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\n        {\n            name: \"pitch1\", // cyan\n            secondaryChannel: \"var(--pitch1-secondary-channel)\",\n            primaryChannel: \"var(--pitch1-primary-channel)\",\n            secondaryNote: \"var(--pitch1-secondary-note)\",\n            primaryNote: \"var(--pitch1-primary-note)\",\n        }, {\n            name: \"pitch2\", // yellow\n            secondaryChannel: \"var(--pitch2-secondary-channel)\",\n            primaryChannel: \"var(--pitch2-primary-channel)\",\n            secondaryNote: \"var(--pitch2-secondary-note)\",\n            primaryNote: \"var(--pitch2-primary-note)\",\n        }, {\n            name: \"pitch3\", // orange\n            secondaryChannel: \"var(--pitch3-secondary-channel)\",\n            primaryChannel: \"var(--pitch3-primary-channel)\",\n            secondaryNote: \"var(--pitch3-secondary-note)\",\n            primaryNote: \"var(--pitch3-primary-note)\",\n        }, {\n            name: \"pitch4\", // green\n            secondaryChannel: \"var(--pitch4-secondary-channel)\",\n            primaryChannel: \"var(--pitch4-primary-channel)\",\n            secondaryNote: \"var(--pitch4-secondary-note)\",\n            primaryNote: \"var(--pitch4-primary-note)\",\n        }, {\n            name: \"pitch5\", // magenta\n            secondaryChannel: \"var(--pitch5-secondary-channel)\",\n            primaryChannel: \"var(--pitch5-primary-channel)\",\n            secondaryNote: \"var(--pitch5-secondary-note)\",\n            primaryNote: \"var(--pitch5-primary-note)\",\n        }, {\n            name: \"pitch6\", // blue\n            secondaryChannel: \"var(--pitch6-secondary-channel)\",\n            primaryChannel: \"var(--pitch6-primary-channel)\",\n            secondaryNote: \"var(--pitch6-secondary-note)\",\n            primaryNote: \"var(--pitch6-primary-note)\",\n        }, {\n            name: \"pitch7\", // olive\n            secondaryChannel: \"var(--pitch7-secondary-channel)\",\n            primaryChannel: \"var(--pitch7-primary-channel)\",\n            secondaryNote: \"var(--pitch7-secondary-note)\",\n            primaryNote: \"var(--pitch7-primary-note)\",\n        }, {\n            name: \"pitch8\", // red\n            secondaryChannel: \"var(--pitch8-secondary-channel)\",\n            primaryChannel: \"var(--pitch8-primary-channel)\",\n            secondaryNote: \"var(--pitch8-secondary-note)\",\n            primaryNote: \"var(--pitch8-primary-note)\",\n        }, {\n            name: \"pitch9\", // teal\n            secondaryChannel: \"var(--pitch9-secondary-channel)\",\n            primaryChannel: \"var(--pitch9-primary-channel)\",\n            secondaryNote: \"var(--pitch9-secondary-note)\",\n            primaryNote: \"var(--pitch9-primary-note)\",\n        }, {\n            name: \"pitch10\", // purple\n            secondaryChannel: \"var(--pitch10-secondary-channel)\",\n            primaryChannel: \"var(--pitch10-primary-channel)\",\n            secondaryNote: \"var(--pitch10-secondary-note)\",\n            primaryNote: \"var(--pitch10-primary-note)\",\n        },\n    ]);\n    public static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\n        {\n            name: \"noise1\", // gray\n            secondaryChannel: \"var(--noise1-secondary-channel)\",\n            primaryChannel: \"var(--noise1-primary-channel)\",\n            secondaryNote: \"var(--noise1-secondary-note)\",\n            primaryNote: \"var(--noise1-primary-note)\",\n        }, {\n            name: \"noise2\", // brown\n            secondaryChannel: \"var(--noise2-secondary-channel)\",\n            primaryChannel: \"var(--noise2-primary-channel)\",\n            secondaryNote: \"var(--noise2-secondary-note)\",\n            primaryNote: \"var(--noise2-primary-note)\",\n        }, {\n            name: \"noise3\", // azure\n            secondaryChannel: \"var(--noise3-secondary-channel)\",\n            primaryChannel: \"var(--noise3-primary-channel)\",\n            secondaryNote: \"var(--noise3-secondary-note)\",\n            primaryNote: \"var(--noise3-primary-note)\",\n        }, {\n            name: \"noise4\", // purple\n            secondaryChannel: \"var(--noise4-secondary-channel)\",\n            primaryChannel: \"var(--noise4-primary-channel)\",\n            secondaryNote: \"var(--noise4-secondary-note)\",\n            primaryNote: \"var(--noise4-primary-note)\",\n        }, {\n            name: \"noise5\", // sage\n            secondaryChannel: \"var(--noise5-secondary-channel)\",\n            primaryChannel: \"var(--noise5-primary-channel)\",\n            secondaryNote: \"var(--noise5-secondary-note)\",\n            primaryNote: \"var(--noise5-primary-note)\",\n        },\n    ]);\n    public static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\n        {\n            name: \"mod1\",\n            secondaryChannel: \"var(--mod1-secondary-channel)\",\n            primaryChannel: \"var(--mod1-primary-channel)\",\n            secondaryNote: \"var(--mod1-secondary-note)\",\n            primaryNote: \"var(--mod1-primary-note)\",\n        }, {\n            name: \"mod2\",\n            secondaryChannel: \"var(--mod2-secondary-channel)\",\n            primaryChannel: \"var(--mod2-primary-channel)\",\n            secondaryNote: \"var(--mod2-secondary-note)\",\n            primaryNote: \"var(--mod2-primary-note)\",\n        }, {\n            name: \"mod3\",\n            secondaryChannel: \"var(--mod3-secondary-channel)\",\n            primaryChannel: \"var(--mod3-primary-channel)\",\n            secondaryNote: \"var(--mod3-secondary-note)\",\n            primaryNote: \"var(--mod3-primary-note)\",\n        }, {\n            name: \"mod4\",\n            secondaryChannel: \"var(--mod4-secondary-channel)\",\n            primaryChannel: \"var(--mod4-primary-channel)\",\n            secondaryNote: \"var(--mod4-secondary-note)\",\n            primaryNote: \"var(--mod4-primary-note)\",\n        },\n    ]);\n\n    public static resetColors() {\n        this.colorLookup.clear();\n    }\n\n\tpublic static getArbitaryChannelColor(type: string, channel: number): ChannelColors {\n\n        if (!this.usesColorFormula) {\n            let base: ChannelColors;\n            switch (type) {\n                case (\"noise\"): {\n                    base = ColorConfig.getComputed(\"--noise-channel-limit\") == \"\"\n\t\t\t\t\t? ColorConfig.noiseChannels[channel % ColorConfig.noiseChannels.length] \n\t\t\t\t\t: ColorConfig.noiseChannels[channel % (Number(ColorConfig.getComputed(\"--noise-channel-limit\")) % ColorConfig.noiseChannels.length)];\n                    break;\n                }\n                case (\"mod\"): {\n                    base = ColorConfig.getComputed(\"--mod-channel-limit\") == \"\"\n\t\t\t\t\t? ColorConfig.modChannels[channel % ColorConfig.modChannels.length] \n\t\t\t\t\t: ColorConfig.modChannels[channel % (Number(ColorConfig.getComputed(\"--mod-channel-limit\")) % ColorConfig.modChannels.length)];\n                    break;\n                }\n                case (\"pitch\"):\n                default: {\n                    base = ColorConfig.getComputed(\"--pitch-channel-limit\") == \"\"\n\t\t\t\t\t? ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length] \n\t\t\t\t\t: ColorConfig.pitchChannels[channel % (Number(ColorConfig.getComputed(\"--pitch-channel-limit\")) % ColorConfig.pitchChannels.length)];\n                    break;\n                }\n            }\n            var regex = /\\(([^)]+)\\)/;\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n        }\n        switch (type) {\n            case (\"noise\"): {\n                const noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\n                const noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\n                const noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\n                const noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\n                const noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\n                const noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\n                const noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\n                const noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\n                const noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\n                const noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\n                const noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\n                const noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\n                const noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\n                const noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\n                const noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\n                const noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\n                const noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\n                const noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\n                const noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\n                const noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\n                const noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\n                const noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\n                const noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\n                const noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\n\n                let newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + ((channel * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                    + (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\n                    + (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\n                let newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + ((channel * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                    + (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\n                    + (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\n                let newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + ((channel * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                    + (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\n                    + (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\n                let newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + ((channel * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\n                    + (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\n                    + (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\n\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                ColorConfig.colorLookup.set(channel, newChannelColors);\n                return newChannelColors;\n            } case (\"mod\"): {\n                // Mod formula\n                const modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\n                const modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\n                const modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\n                const modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\n                const modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\n                const modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\n                const modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\n                const modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\n                const modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\n                const modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\n                const modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\n                const modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\n                const modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\n                const modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\n                const modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\n                const modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\n                const modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\n                const modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\n                const modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\n                const modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\n                const modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\n                const modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\n                const modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\n                const modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\n\n                let newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + ((channel * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                    + (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\n                    + (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\n                let newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + ((channel * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                    + (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\n                    + (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\n                let newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + ((channel * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                    + (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\n                    + (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\n                let newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + ((channel * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\n                    + (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\n                    + (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\n\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                ColorConfig.colorLookup.set(channel, newChannelColors);\n                return newChannelColors;\n            }\n            case (\"pitch\"):\n            default: {\n                const pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\n                const pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\n                const pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\n                const pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\n                const pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\n                const pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\n                const pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\n                const pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\n                const pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\n                const pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\n                const pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\n                const pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\n                const pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\n                const pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\n                const pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\n                const pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\n                const pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\n                const pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\n                const pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\n                const pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\n                const pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\n                const pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\n                const pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\n                const pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\n\n                let newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                    + (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                    + (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                    + (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\n                    + (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\n\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                ColorConfig.colorLookup.set(channel, newChannelColors);\n                return newChannelColors;\n            }\n        }\n    }\n\n    // Same as below, but won't return var colors\n    public static getComputedChannelColor(song: Song, channel: number): ChannelColors {\n        if (!this.usesColorFormula) {\n            let base: ChannelColors = ColorConfig.getChannelColor(song, channel);\n            // Trim away \"var(...)\"\n            var regex = /\\(([^)]+)\\)/;\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n        }\n        else {\n            return ColorConfig.getChannelColor(song, channel);\n        }\n    };\n\n    public static getChannelColor(song: Song, channel: number): ChannelColors {\n        if (!this.usesColorFormula) {\n            // Set colors, not defined by formula\n            if (channel < song.pitchChannelCount) {\n\t\t\t\treturn ColorConfig.getComputed(\"--pitch-channel-limit\") == \"\"\n\t\t\t\t? ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length] \n\t\t\t\t: ColorConfig.pitchChannels[channel % (Number(ColorConfig.getComputed(\"--pitch-channel-limit\")) % ColorConfig.pitchChannels.length)];\n            } else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                return ColorConfig.getComputed(\"--noise-channel-limit\") == \"\"\n\t\t\t\t? ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length] \n\t\t\t\t: ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % (Number(ColorConfig.getComputed(\"--noise-channel-limit\")) % ColorConfig.noiseChannels.length)];\n            } else {\n                return ColorConfig.getComputed(\"--mod-channel-limit\") == \"\"\n\t\t\t\t? ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length] \n\t\t\t\t: ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % (Number(ColorConfig.getComputed(\"--mod-channel-limit\")) % ColorConfig.modChannels.length)];\n            }\n        }\n        else {\n            // Determine if color is cached\n            if (ColorConfig.colorLookup.has(channel)) {\n                return ColorConfig.colorLookup.get(channel) as ChannelColors;\n            }\n            else {\n                // Formulaic color definition\n                if (channel < song.pitchChannelCount) {\n                    // Pitch formula\n\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_pitchSecondaryChannelHue + (channel * this.c_pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_pitchSecondaryChannelSat * (1 - (this.c_pitchSecondaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\n\t\t\t\t\t+ (this.c_pitchSecondaryChannelLum * (1 - (this.c_pitchSecondaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\n\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_pitchPrimaryChannelHue + (channel * this.c_pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_pitchPrimaryChannelSat * (1 - (this.c_pitchPrimaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\n\t\t\t\t\t+ (this.c_pitchPrimaryChannelLum * (1 - (this.c_pitchPrimaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\n\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_pitchSecondaryNoteHue + (channel * this.c_pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_pitchSecondaryNoteSat * (1 - (this.c_pitchSecondaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\n\t\t\t\t\t+ (this.c_pitchSecondaryNoteLum * (1 - (this.c_pitchSecondaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\n\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_pitchPrimaryNoteHue + (channel * this.c_pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_pitchPrimaryNoteSat * (1 - (this.c_pitchPrimaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\n\t\t\t\t\t+ (this.c_pitchPrimaryNoteLum * (1 - (this.c_pitchPrimaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\n\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n\n                }\n                else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                    // Noise formula\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_noiseSecondaryChannelSat + channel * this.c_noiseSecondaryChannelSatScale) + \"%,\"\n\t\t\t\t\t+ (this.c_noiseSecondaryChannelLum + channel * this.c_noiseSecondaryChannelLumScale) + \"%)\";\n\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_noisePrimaryChannelSat + channel * this.c_noisePrimaryChannelSatScale) + \"%,\"\n\t\t\t\t\t+ (this.c_noisePrimaryChannelLum + channel * this.c_noisePrimaryChannelLumScale) + \"%)\";\n\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_noiseSecondaryNoteSat + channel * this.c_noiseSecondaryNoteSatScale) + \"%,\"\n\t\t\t\t\t+ (this.c_noiseSecondaryNoteLum + channel * this.c_noiseSecondaryNoteLumScale) + \"%)\";\n\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t+ (this.c_noisePrimaryNoteSat + channel * this.c_noisePrimaryNoteSatScale) + \"%,\"\n\t\t\t\t\t+ (this.c_noisePrimaryNoteLum + channel * this.c_noisePrimaryNoteLumScale) + \"%)\";\n\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n                }\n                else {\n                    // Mod formula\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_modSecondaryChannelSat + channel * this.c_modSecondaryChannelSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_modSecondaryChannelLum + channel * this.c_modSecondaryChannelLumScale) + \"%)\";\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_modPrimaryChannelSat + channel * this.c_modPrimaryChannelSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_modPrimaryChannelLum + channel * this.c_modPrimaryChannelLumScale) + \"%)\";\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_modSecondaryNoteSat + channel * this.c_modSecondaryNoteSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_modSecondaryNoteLum + channel * this.c_modSecondaryNoteLumScale) + \"%)\";\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_modPrimaryNoteSat + channel * this.c_modPrimaryNoteSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_modPrimaryNoteLum + channel * this.c_modPrimaryNoteLumScale) + \"%)\";\n\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n                }\n            }\n        }\n    }\n\n    private static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\n\n\tpublic static setThemeProperty(name: string, value: string): void {\n\t\t//this._styleElement.sheet?.cssRules[0].style.setProperty(name, value);\n\t\t(this._styleElement.sheet?.cssRules[0] as CSSStyleRule).style.setProperty(name, value);\n\t}\n\n\tpublic static getThemeProperties(): string {\n\t\treturn this._styleElement.sheet?.cssRules[0].cssText as string;\n\t}\n\n    public static setTheme(name: string): void {\n\t\tlet theme: string = this.themes[name];\n\t\tif (theme == undefined) theme = this.themes[\"AbyssBox Classic\"];\n\t\tthis._styleElement.textContent = theme;\n\n        const themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\n        if (themeColor != null) {\n            themeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\n        }\n\t\t\n        this.resetColors();\n\n\t\tthis.usesColorFormula = (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"true\");\n\n\t\tthis.c_invertedText = getComputedStyle(this._styleElement).getPropertyValue(\"--inverted-text\");\n\t\tthis.c_trackEditorBgNoiseDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise-dim\");\n\t\tthis.c_trackEditorBgNoise = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise\");\n\t\tthis.c_trackEditorBgModDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod-dim\");\n\t\tthis.c_trackEditorBgMod = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod\");\n\t\tthis.c_trackEditorBgPitchDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch-dim\");\n\t\tthis.c_trackEditorBgPitch = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch\");\n\n\t\tif (this.usesColorFormula) {\n\t\t\tthis.c_pitchSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\n\t\t\tthis.c_pitchSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\n\t\t\tthis.c_pitchSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\n\t\t\tthis.c_pitchSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\n\t\t\tthis.c_pitchSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\n\t\t\tthis.c_pitchSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\n\t\t\tthis.c_pitchPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\n\t\t\tthis.c_pitchPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\n\t\t\tthis.c_pitchPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\n\t\t\tthis.c_pitchPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\n\t\t\tthis.c_pitchPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\n\t\t\tthis.c_pitchPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\n\t\t\tthis.c_pitchSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\n\t\t\tthis.c_pitchSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\n\t\t\tthis.c_pitchSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\n\t\t\tthis.c_pitchSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\n\t\t\tthis.c_pitchSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\n\t\t\tthis.c_pitchSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\n\t\t\tthis.c_pitchPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\n\t\t\tthis.c_pitchPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\n\t\t\tthis.c_pitchPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\n\t\t\tthis.c_pitchPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\n\t\t\tthis.c_pitchPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\n\t\t\tthis.c_pitchPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\n\n\t\t\tthis.c_noiseSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\n\t\t\tthis.c_noiseSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\n\t\t\tthis.c_noiseSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\n\t\t\tthis.c_noiseSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\n\t\t\tthis.c_noiseSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\n\t\t\tthis.c_noiseSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\n\t\t\tthis.c_noisePrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\n\t\t\tthis.c_noisePrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\n\t\t\tthis.c_noisePrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\n\t\t\tthis.c_noisePrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\n\t\t\tthis.c_noisePrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\n\t\t\tthis.c_noisePrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\n\t\t\tthis.c_noiseSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\n\t\t\tthis.c_noiseSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\n\t\t\tthis.c_noiseSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\n\t\t\tthis.c_noiseSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\n\t\t\tthis.c_noiseSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\n\t\t\tthis.c_noiseSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\n\t\t\tthis.c_noisePrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\n\t\t\tthis.c_noisePrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\n\t\t\tthis.c_noisePrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\n\t\t\tthis.c_noisePrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\n\t\t\tthis.c_noisePrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\n\t\t\tthis.c_noisePrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\n\n\t\t\tthis.c_modSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\n\t\t\tthis.c_modSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\n\t\t\tthis.c_modSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\n\t\t\tthis.c_modSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\n\t\t\tthis.c_modSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\n\t\t\tthis.c_modSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\n\t\t\tthis.c_modPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\n\t\t\tthis.c_modPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\n\t\t\tthis.c_modPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\n\t\t\tthis.c_modPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\n\t\t\tthis.c_modPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\n\t\t\tthis.c_modPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\n\t\t\tthis.c_modSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\n\t\t\tthis.c_modSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\n\t\t\tthis.c_modSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\n\t\t\tthis.c_modSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\n\t\t\tthis.c_modSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\n\t\t\tthis.c_modSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\n\t\t\tthis.c_modPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\n\t\t\tthis.c_modPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\n\t\t\tthis.c_modPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\n\t\t\tthis.c_modPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\n\t\t\tthis.c_modPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\n\t\t\tthis.c_modPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\n\n        }\n\n\n\n    }\n\n    public static getComputed(name: string): string {\n        return getComputedStyle(this._styleElement).getPropertyValue(name);\n    }\n}\n\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap, TypePresets } from \"../synth/SynthConfig\";\n\nexport interface PresetCategory extends BeepBoxOption {\n    readonly presets: DictionaryArray<Preset>;\n}\n\nexport interface Preset extends BeepBoxOption {\n    readonly isNoise?: boolean;\n    readonly isMod?: boolean;\n    readonly generalMidi?: boolean;\n    readonly midiProgram?: number;\n    readonly midiSubharmonicOctaves?: number;\n    readonly customType?: InstrumentType;\n    readonly settings?: any;\n    \n}\n\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\n\nexport function prettyNumber(value: number): string {\n    return value.toFixed(2).replace(/\\.?0*$/, \"\");\n}\n\nexport class EditorConfig {\n    public static readonly version: string = \"1.1\"; // Using patch versions in display right now, maybe TODAY.\n    public static readonly versionDisplayName: string = \"AbyssBox: WackyBox Edition \" + EditorConfig.version;\n\n    public static readonly releaseNotesURL: string = \"./patch_notes.html\";\n\n    public static readonly isOnMac: boolean = /^Mac/i.test(navigator.platform) || /Mac OS X/i.test(navigator.userAgent) || /^(iPhone|iPad|iPod)/i.test(navigator.platform) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\n    public static readonly ctrlSymbol: string = EditorConfig.isOnMac ? \"⌘\" : \"Ctrl+\";\n    public static readonly ctrlName: string = EditorConfig.isOnMac ? \"command\" : \"control\";\n\n    public static customSamples: string[] | null;\n\t//is this how you do it????\n\t\n    public static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\n        {\n            name: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: TypePresets[InstrumentType.chip], customType: InstrumentType.chip },\n                { name: TypePresets[InstrumentType.fm], customType: InstrumentType.fm },\n                { name: TypePresets[InstrumentType.noise], customType: InstrumentType.noise },\n                { name: TypePresets[InstrumentType.spectrum], customType: InstrumentType.spectrum },\n                { name: TypePresets[InstrumentType.drumset], customType: InstrumentType.drumset },\n                { name: TypePresets[InstrumentType.harmonics], customType: InstrumentType.harmonics },\n                { name: TypePresets[InstrumentType.pwm], customType: InstrumentType.pwm },\n                { name: TypePresets[InstrumentType.pickedString], customType: InstrumentType.pickedString },\n                { name: TypePresets[InstrumentType.supersaw], customType: InstrumentType.supersaw },\n                { name: TypePresets[InstrumentType.customChipWave], customType: InstrumentType.customChipWave },\n                { name: TypePresets[InstrumentType.fm6op], customType: InstrumentType.fm6op },\n            ])\n        },\n        {\n            name: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"square\", \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"triangle\", \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"square\", \"unison\": \"hum\", \"envelopes\": [] } },\n                { name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"shimmer\", \"envelopes\": [] } },\n                { name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }], \"effects\": [\"vibrato\", \"aliasing\"], \"vibrato\": \"light\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [] } },\n                { name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": [\"aliasing\"], \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\n                { name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\n                { name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"20×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\n                { name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\n                { name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"2×\", \"amplitude\": 11 }], \"envelopes\": [] } },\n                { name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"vibrato\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\n                { name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\n                { name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\n                { name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\n                { name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\n                { name: \"Sunsoft Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [24, 24, 15, 15, 9, 9, -4, -4, 0, 0, -13, -13, -19, -19, -24, -24, -24, -24, -10, -10, 0, 0, -7, -7, -7, -7, 0, 0, 6, 6, -4, -4, 3, 3, -4, -4, 3, 3, 3, 3, 9, 9, 15, 15, 15, 15, 6, 6, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 3, 3, 12, 12, 24, 24] } },\n                { name: \"FM sine\", midiProgram: 55, settings: { \"type\": \"FM\", \"transition\": \"seemless\", \"effects\": \"none\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            ]),\n        },\n        {\n            name: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":148.65,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"effects\":[\"note filter\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.125}],\"panDelay\":10,\"reverb\":68,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"harmonics\":[100,100,86,86,86,71,71,71,0,86,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],\"unison\":\"piano\",\"stringSustain\":79,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"note size\"}]}},\n                { name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n\t\t        { name: \"grand piano 3\", midiProgram: 0, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":148.65,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":4},{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":4},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":0.25}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.0884}],\"reverb\":67,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"harmonics\":[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],\"unison\":\"piano\",\"stringSustain\":86,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1}] } },\n                { name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 1.4142 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 71, 71, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"envelopes\": [] } },\n                { name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"1/8 pulse\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n                { name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 43, 57, 57, 57, 43, 43, 43, 43], \"unison\": \"honky tonk\", \"stringSustain\": 71, \"envelopes\": [] } },\n                { name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n                { name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"16×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\n                { name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 100, 86, 57, 86, 86, 86, 86, 57, 57, 71, 71, 86, 86, 71, 71, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71], \"unison\": \"none\", \"stringSustain\": 79, \"envelopes\": [] } },\n                { name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.3536 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"8×\", \"amplitude\": 4 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 2\" }] } },\n                { name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [] } },\n\n            ])\n        },\n        {\n            name: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\n                { name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\n                { name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0], \"unison\": \"none\", \"stringSustain\": 64, \"envelopes\": [] } },\n                { name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.7071 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"stringSustain\": 29, \"envelopes\": [] } },\n                { name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\n                { name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\n                { name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"chord\": \"strum\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14], \"unison\": \"shimmer\", \"stringSustain\": 86, \"envelopes\": [] } },\n                { name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\n                { name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\n                { name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\n                { name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\n            ])\n        },\n        {\n            name: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n                { name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [] } },\n                { name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\n                { name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\n                { name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\n            ])\n        },\n        {\n            name: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\n                { name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\n                { name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\n                { name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\n                { name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\n                { name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n                { name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\n                { name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\n                { name: \"dubstep yoi yoi\", midiProgram: 87, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.7071 }], \"effects\": [\"note filter\", \"bitcrusher\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 594.6, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 1.5, \"bitcrusherQuantization\": 0, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"wave\": \"sawtooth\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"flare 2\", \"index\": 0 }] } },\n            ])\n        },\n        {\n            name: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\n                { name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\n                { name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\n                { name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n                { name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n                { name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\n                { name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\n            ])\n        },\n        {\n            name: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"distortion\": 71, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\n                { name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"distortion\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 1 }], \"distortion\": 86, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\n                { name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 1 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13 }, { \"frequency\": \"~1×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6 }, { \"frequency\": \"3×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12 }, { \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2 }, { \"frequency\": \"~1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 3 }] } },\n                { name: \"PWM overdrive\", midiProgram: 29, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1.4142 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 17.67767, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"punch\" }] } },\n                { name: \"PWM distortion\", midiProgram: 30, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 50, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"swell 1\" }] } },\n                { name: \"FM overdrive\", midiProgram: 29, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"~2×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"punch\" }] } },\n                { name: \"FM distortion\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"~2×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }] } },\n            ])\n        },\n        {\n            name: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\n                { name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\n                { name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\n                { name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\n                { name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\n                { name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\n                { name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\n                { name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\n            ])\n        },\n        {\n            name: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9 }, { \"frequency\": \"3×\", \"amplitude\": 9 }, { \"frequency\": \"2×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\n                { name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.0884 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"6×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }] } },\n                { name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\n                { name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\n                { name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\n                { name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\n                { name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\n                { name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\n                { name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\n                { name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\n                { name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\n                { name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\n                { name: \"supersaw string\",  midiProgram:  41, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.1768}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":500,\"linearGain\":0.1768}],\"reverb\":33,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":6,\"pulseWidth\":35.35534,\"dynamism\":83,\"spread\":8,\"shape\":50,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0}]}},\n                { name: \"supersaw string 2\", midiProgram: 41, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":4756.83,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":4756.83,\"linearGain\":2}],\"effects\":[\"note filter\",\"chorus\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1}],\"chorus\":57,\"reverb\":42,\"fadeInSeconds\":0.0575,\"fadeOutTicks\":-6,\"pulseWidth\":50,\"dynamism\":67,\"spread\":58,\"shape\":0,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"punch\"},{\"target\":\"pulseWidth\",\"envelope\":\"flare 2\"}]}},\n            \n            ])\n        },\n        {\n            name: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 24, \"harmonics\": [100, 100, 86, 57, 29, 29, 57, 71, 57, 29, 14, 14, 14, 29, 43, 57, 43, 29, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 8 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1.4142 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\n                { name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n                { name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 33, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"~1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\n                { name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\n                { name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\n                { name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\n            ])\n        },\n        {\n            name: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 5 }, { \"frequency\": \"9×\", \"amplitude\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\n                { name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 1\" }] } },\n                { name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\n                { name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\n                { name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\n                { name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\n            ])\n        },\n        {\n            name: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\n                { name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\n                { name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\n                { name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\n                { name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\n                { name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n                { name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\n                { name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            ])\n        },\n        {\n            name: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\n                { name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\n                { name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\n                { name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\n                { name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14], \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\" }] } },\n                { name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\n                { name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\n                { name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\n                { name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }], \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }] } },\n                { name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\n            ])\n        },\n        {\n            name: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 4 }, { \"frequency\": \"6×\", \"amplitude\": 3 }, { \"frequency\": \"13×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 3\" }] } },\n                { name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }] } },\n                { name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"honky tonk\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n                { name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.1768 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 2 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\n                { name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }] } },\n                { name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 9 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\n                { name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"chorus\", \"reverb\"], \"chorus\": 100, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\n                { name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14], \"unison\": \"octave\", \"stringSustain\": 86, \"envelopes\": [] } },\n                { name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 3\" }] } },\n                { name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13 }, { \"frequency\": \"2×\", \"amplitude\": 10 }, { \"frequency\": \"5×\", \"amplitude\": 5 }, { \"frequency\": \"11×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo5\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }] } },\n                { name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 8 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"custom interval\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 15 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\n                { name: \"supersaw pad\", midiProgram: 93, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.1768}],\"effects\":[\"reverb\"],\"reverb\":100,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":24,\"pulseWidth\":50,\"dynamism\":100,\"spread\":58,\"shape\":0,\"envelopes\":[]}},\n            ])\n        },\n        {\n            name: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\n                { name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"chorus\": 67, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14 }, { \"frequency\": \"7×\", \"amplitude\": 3 }, { \"frequency\": \"3×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 3 }] } },\n                { name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12 }, { \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\n                { name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"effects\": [\"pitch shift\", \"note filter\", \"reverb\"], \"pitchShiftSemitones\": 15, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }] } },\n                { name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n                { name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\n                { name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\n                { name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\n                { name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\n                { name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\n                { name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\n                { name: \"synth kick\", midiProgram: 47, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\n            ])\n        },\n        {\n            name: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\n                { name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n                { name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }] } },\n                { name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\n                { name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\n                { name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\n                { name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"chord type\", \"vibrato\", \"reverb\"], \"chord\": \"strum\", \"vibrato\": \"heavy\", \"reverb\": 67, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay 1\" }] } },\n                { name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 4 }, { \"frequency\": \"20×\", \"amplitude\": 1 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo4\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 1 }] } },\n                { name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\n                { name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\n                { name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\n                { name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"double saw\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }] } },\n                { name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"11×\", \"amplitude\": 12 }], \"envelopes\": [] } },\n                { name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"shaky\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"pulseWidth\": 4.41942, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"tremolo6\" }] } },\n                { name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\n                { name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\n                { name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.7071 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"heavy\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n            ])\n        },\n\t\t\t{ name: \"UltraBox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                //custom presets ultrabox\n               { name: \"nes white\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\" ], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit white\", \"envelopes\": [] } }, \n\t\t\t\t { name: \"nes ping\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\" ], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit metallic\", \"envelopes\": [] } }, \n\t\t\t\t{ name: \"distorted pulse vocal\", generalMidi: false, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 } ], \"effects\": [ \"panning\", \"transition type\", \"pitch shift\", \"vibrato\", \"note filter\", \"bitcrusher\", \"echo\", \"reverb\" ], \"transition\": \"normal\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [ { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 } ], \"noteSubFilters0\": [ { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 } ], \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 71, \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 14, \"echoDelayBeats\": 0.167, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"1/8 pulse\", \"unison\": \"none\", \"envelopes\": [] } },\n              { name: \"dubsteb bwah\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 } ], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"chord type\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [ { \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 } ] } },\n { name: \"FM cool bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 } ], \"effects\": [ \"panning\", \"transition type\", \"note filter\", \"reverb\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 } ], \"noteSubFilters1\": [ { \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 } ], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 } ] } },\n                { name: \"FM funky bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.1768 } ], \"eqFilterType\": true, \"eqSimpleCut\": 5, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"reverb\" ], \"transition\": \"normal\", \"clicklessTransition\": false, \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"noteVolume\", \"envelope\": \"note size\" } ] } },\n                { name: \"mrow\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [], \"effects\": [ \"panning\", \"chord type\", \"reverb\" ], \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"reverb\": 35, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [ { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" } ] } },\n                { name: \"talking bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"effects\": [ \"chord type\" ], \"chord\": \"custom interval\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 15, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"2×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 12 } ], \"envelopes\": [ { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"note size\" } ] } },\n                { name: \"synth marimba\", generalMidi: false, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"high-pass\", \"cutoffHz\": 176.78, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.5 } ], \"effects\": [ \"note filter\", \"echo\" ], \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 } ], \"echoSustain\": 71, \"echoDelayBeats\": 0.5, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"harmonics\": [ 86, 100, 29, 29, 0, 0, 0, 100, 0, 0, 0, 86, 29, 0, 14, 100, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 86 ], \"unison\": \"fifth\", \"stringSustain\": 7, \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" } ] } }, \n\t\t\t{ name: \"italian accordian\", generalMidi: false, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6000, \"linearGain\": 0.5 } ], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 1, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"chorus\", \"reverb\" ], \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 45, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"wave\": \"square\", \"unison\": \"honky tonk\", \"customChipWave\": { \"0\": -24, \"1\": -24, \"2\": -24, \"3\": -24, \"4\": -24, \"5\": -24, \"6\": -24, \"7\": -24, \"8\": -24, \"9\": -24, \"10\": -24, \"11\": -24, \"12\": -24, \"13\": -24, \"14\": -24, \"15\": -24, \"16\": 24, \"17\": 24, \"18\": 24, \"19\": 24, \"20\": 24, \"21\": 24, \"22\": 24, \"23\": 24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": -24, \"32\": -24, \"33\": -24, \"34\": -24, \"35\": -24, \"36\": -24, \"37\": -24, \"38\": -24, \"39\": -24, \"40\": 24, \"41\": 24, \"42\": 24, \"43\": 24, \"44\": 24, \"45\": 24, \"46\": 24, \"47\": 24, \"48\": -24, \"49\": -24, \"50\": -24, \"51\": -24, \"52\": -24, \"53\": -24, \"54\": -24, \"55\": -24, \"56\": -24, \"57\": -24, \"58\": -24, \"59\": -24, \"60\": -24, \"61\": -24, \"62\": -24, \"63\": -24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\n              { name: \"chip supersaw\", generalMidi: false, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 } ], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"vibrato\", \"chorus\", \"reverb\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"pan\": 0, \"panDelay\": 10, \"chorus\": 29, \"reverb\": 29, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"dissonant\", \"customChipWave\": { \"0\": 22, \"1\": 22, \"2\": 16, \"3\": 6, \"4\": 0, \"5\": -3, \"6\": -8, \"7\": -10, \"8\": -13, \"9\": -16, \"10\": -19, \"11\": -19, \"12\": -20, \"13\": -22, \"14\": -22, \"15\": -24, \"16\": -24, \"17\": -24, \"18\": -24, \"19\": -24, \"20\": -24, \"21\": -24, \"22\": -24, \"23\": -24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": 24, \"32\": 24, \"33\": 16, \"34\": 9, \"35\": 6, \"36\": 4, \"37\": 2, \"38\": 0, \"39\": -1, \"40\": -3, \"41\": -4, \"42\": -4, \"43\": -6, \"44\": -6, \"45\": -6, \"46\": -6, \"47\": -5, \"48\": -5, \"49\": -4, \"50\": -2, \"51\": -2, \"52\": 1, \"53\": 4, \"54\": 6, \"55\": 8, \"56\": 10, \"57\": 12, \"58\": 14, \"59\": 16, \"60\": 18, \"61\": 19, \"62\": 22, \"63\": 24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\n               { name: \"fm supersaw\", generalMidi: false, settings: { \"type\": \"FM6op\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 } ], \"effects\": [ \"panning\", \"transition type\", \"pitch shift\", \"note filter\", \"chorus\", \"reverb\" ], \"transition\": \"continue\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"noteSubFilters1\": [ { \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 } ], \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1 2 3 4 5 6\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 10, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"3×\", \"amplitude\": 7, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 9, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 6, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 } ], \"envelopes\": [] } },\n\t\t\t //THANKS ANSWEARING MACHINE\n\t\t\t { name: \"obama why\", generalMidi: false, settings:{ \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [], \"effects\": [ \"note filter\", \"panning\", \"reverb\" ], \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 } ], \"pan\": 0, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"harmonics\": [ 100, 86, 29, 29, 14, 14, 0, 14, 14, 43, 71, 100, 100, 86, 71, 71, 57, 57, 43, 43, 43, 43, 43, 0, 0, 0, 0, 0 ], \"unison\": \"octave\", \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" } ] } },\n\t\t\t //thanks to nobo ig? (this is from a beepcord inside joke)\n\t\t\t\n\t\t\t\n\t \n\t\t\t]) },\n            {   name: \"AbyssBox presets\", presets: <DictionaryArray<Preset>>toNameMap([ // weeb shit - me\n               { name: \"Demonic Bell\", generalMidi: false, settings:  {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.0884}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.0884}],\"effects\":[\"detune\",\"distortion\",\"bitcrusher\",\"echo\",\"reverb\"],\"detuneCents\":-52,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":4.5,\"bitcrusherQuantization\":29,\"panDelay\":10,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":68,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"harmonics\":[43,71,71,100,86,100,43,86,71,57,86,29,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],\"unison\":\"shimmer\",\"stringSustain\":64,\"envelopes\":[]} },\n               { name: \"Spacey Triangle\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":11.3137},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":4}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":11.3137},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":4}],\"effects\":[\"transition type\",\"vibrato\",\"distortion\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"vibrato\":\"shaky\",\"vibratoDepth\":0.1,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":1,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":5.5,\"bitcrusherQuantization\":14,\"panDelay\":10,\"chorus\":86,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":26,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"wave\":\"triangle\",\"unison\":\"dirty\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[]} },\n               { name: \"Harmonic Piano\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.125},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.125},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1}],\"effects\":[\"transition type\"],\"transition\":\"interrupt\",\"clicklessTransition\":false,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"harmonics\":[100,57,57,57,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"unison\":\"none\",\"envelopes\":[]} },\n               { name: \"Organic Synth\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.1768}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.1768}],\"effects\":[\"chord type\",\"reverb\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"panDelay\":10,\"reverb\":71,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":96,\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲\",\"feedbackAmplitude\":2,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"5×\",\"amplitude\":3,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"8×\",\"amplitude\":7,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":3},{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"}]} },\n               { name: \"Nokia Ringtone\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"transition type\",\"chord type\"],\"transition\":\"interrupt\",\"chord\":\"custom interval\",\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"1→2\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":2},{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":15}],\"envelopes\":[]} },\n            ])},\n\n    ]);\n\n    public static valueToPreset(presetValue: number): Preset | null {\n        const categoryIndex: number = presetValue >> 6;\n        const presetIndex: number = presetValue & 0x3F;\n        return EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\n    }\n\n    public static midiProgramToPresetValue(program: number): number | null {\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset: Preset = category.presets[presetIndex];\n                if (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n\n    public static nameToPresetValue(presetName: string): number | null {\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset: Preset = category.presets[presetIndex];\n                if (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n\n    public static instrumentToPreset(instrument: InstrumentType): Preset | null {\n        return EditorConfig.presetCategories[0].presets.dictionary?.[TypePresets?.[instrument]];\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\ninterface NumberArray {\n\tlength: number;\n\t[index: number]: number;\n}\n\n// A basic FFT operation scales the overall magnitude of elements by the\n// square root of the length of the array, √N. Performing a forward FFT and\n// then an inverse FFT results in the original array, but multiplied by N.\n// This helper function can be used to compensate for that. \nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\n\tfor (let i: number = 0; i < array.length; i++) {\n\t\tarray[i] *= factor;\n\t}\n}\n\nfunction isPowerOf2(n: number): boolean {\n\treturn !!n && !(n & (n - 1));\n}\n\nfunction countBits(n: number): number {\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\n\treturn Math.round(Math.log(n) / Math.log(2));\n}\n\n// Rearranges the elements of the array, swapping the element at an index\n// with an element at an index that is the bitwise reverse of the first\n// index in base 2. Useful for computing the FFT.\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\n\tconst bitCount: number = countBits(fullArrayLength);\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\n\tconst finalShift: number = 16 - bitCount;\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\n\t\tlet j: number;\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\n\t\t\tj = ((j           >> 8) | ((j &   0xff) << 8)) >> finalShift;\n\t\tif (j > i) {\n\t\t\tlet temp: number = array[i];\n\t\t\tarray[i] = array[j];\n\t\t\tarray[j] = temp;\n\t\t}\n\t}\n}\n\n// Provided for educational purposes. Easier to read than\n// fastFourierTransform(), but computes the same result.\n// Takes two parallel arrays representing the real and imaginary elements,\n// respectively, and returns an array containing two new arrays, which\n// contain the complex result of the transform.\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\n\tconst fullArrayLength: number = realArray.length;\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\tconst realOut: number[] = [];\n\tconst imagOut: number[] = [];\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\trealOut[i] = 0.0;\n\t\timagOut[i] = 0.0;\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\n\t\t\tconst c: number = Math.cos(radians);\n\t\t\tconst s: number = Math.sin(radians);\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\n\t\t}\n\t}\n\treturn [realOut, imagOut];\n}\n\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\n// input real and imaginary arrays. Can be used for both forward and inverse\n// transforms: swap the order of the arguments for the inverse.\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\n\tconst fullArrayLength: number = realArray.length;\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\t\t\n\treverseIndexBits(realArray, fullArrayLength);\n\treverseIndexBits(imagArray, fullArrayLength);\n\t\t\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\n\t\tconst startIndex1: number = startIndex + 1;\n\t\tconst startIndex2: number = startIndex + 2;\n\t\tconst startIndex3: number = startIndex + 3;\n\t\t\tconst real0: number = realArray[startIndex ];\n\t\tconst real1: number = realArray[startIndex1];\n\t\tconst real2: number = realArray[startIndex2];\n\t\tconst real3: number = realArray[startIndex3];\n\t\t\tconst imag0: number = imagArray[startIndex ];\n\t\tconst imag1: number = imagArray[startIndex1];\n\t\tconst imag2: number = imagArray[startIndex2];\n\t\tconst imag3: number = imagArray[startIndex3];\n\t\tconst realTemp0: number = real0 + real1;\n\t\tconst realTemp1: number = real0 - real1;\n\t\tconst realTemp2: number = real2 + real3;\n\t\tconst realTemp3: number = real2 - real3;\n\t\tconst imagTemp0: number = imag0 + imag1;\n\t\tconst imagTemp1: number = imag0 - imag1;\n\t\tconst imagTemp2: number = imag2 + imag3;\n\t\tconst imagTemp3: number = imag2 - imag3;\n\t\t\trealArray[startIndex ] = realTemp0 + realTemp2;\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\n\t\t\timagArray[startIndex ] = imagTemp0 + imagTemp2;\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\n\t}\n\t\t\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\n\t\tconst halfLength: number = stride >>> 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tlet c: number = 1.0;\n\t\t\tlet s: number = 0.0;\n\t\t\tlet cPrev: number = cosIncrement;\n\t\t\tlet sPrev: number = sinIncrement;\n\t\t\tconst secondHalf: number = startIndex + halfLength;\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\n\t\t\t\tconst j: number = i + halfLength;\n\t\t\t\tconst real0: number = realArray[i];\n\t\t\t\tconst imag0: number = imagArray[i];\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\n\t\t\t\trealArray[i] = real0 + real1;\n\t\t\t\timagArray[i] = imag0 + imag1;\n\t\t\t\trealArray[j] = real0 - real1;\n\t\t\t\timagArray[j] = imag0 - imag1;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the Fourier transform from an array of real-valued time-domain\n// samples. The output is specially formatted for space efficieny: elements\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\n// descending frequency. Overwrites the input array.\nexport function forwardRealFourierTransform(array: NumberArray): void {\n\tconst fullArrayLength: number = array.length;\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\t\t\n\treverseIndexBits(array, fullArrayLength);\n\t\t\n\t// First and second pass.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\t// no imaginary elements yet since the input is fully real.\n\t\tconst tempA: number = real0 + real1;\n\t\tconst tempB: number = real2 + real3;\n\t\t\tarray[index ] = tempA + tempB;\n\t\tarray[index1] = real0 - real1;\n\t\tarray[index2] = tempA - tempB;\n\t\tarray[index3] = real2 - real3;\n\t}\n\t\t\n\t// Third pass.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index7: number = index + 7;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst imag3: number = array[index3];\n\t\tconst real4: number = array[index4];\n\t\tconst real5: number = array[index5];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\n\t\t\tarray[index ] = real0 + real4;\n\t\tarray[index1] = real1 + tempA;\n\t\tarray[index3] = real1 - tempA;\n\t\tarray[index4] = real0 - real4;\n\t\tarray[index5] = tempB - imag3;\n\t\tarray[index7] = tempB + imag3;\n\t}\n\t\t\n\t// Handle remaining passes.\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst realStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + realStartB;\n\t\t\tarray[startIndexB] = realStartA - realStartB;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst imag0: number = array[indexA1];\n\t\t\t\tconst real1: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\n\t\t\t\tarray[indexA0] = real0 + tempA;\n\t\t\t\tarray[indexA1] = real0 - tempA;\n\t\t\t\t\tarray[indexB0] =-imag0 - tempB;\n\t\t\t\tarray[indexB1] = imag0 - tempB;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the inverse Fourier transform from a specially formatted array of\n// scalar values. Elements 0 through N/2 are expected to be the real values of\n// the corresponding complex elements, representing cosine wave amplitudes in\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\n// imaginary values, representing sine wave amplitudes in descending frequency.\n// Generates real-valued time-domain samples. Overwrites the input array.\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\n\t// Perform all but the last few passes in reverse.\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\t\t\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst imagStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\n\t\t\tarray[midIndexA] *= 2;\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\n\t\t\tarray[midIndexB] *= 2;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst real1: number = array[indexA1];\n\t\t\t\tconst imag0: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real0 - real1;\n\t\t\t\tconst tempB: number = imag0 + imag1;\n\t\t\t\tarray[indexA0] = real0 + real1;\n\t\t\t\tarray[indexA1] = imag1 - imag0;\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t// Commented out this block (and compensated with an extra pass above)\n\t// because it's slower in my testing so far.\n\t// Pass with stride 8.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index6: number = index + 6;\n\t\tconst index7: number = index + 7;\n\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\tconst imag4: number = array[index4];\n\t\tconst imag5: number = array[index5];\n\t\tconst imag6: number = array[index6];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = real1 - real3;\n\t\tconst tempB: number = imag5 + imag7;\n\t\tarray[index ] = real0 + imag4;\n\t\tarray[index1] = real1 + real3;\n\t\tarray[index2] = real2 * 2;\n\t\tarray[index3] = imag7 - imag5;\n\t\tarray[index4] = real0 - imag4;\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\n\t\tarray[index6] = imag6 * 2;\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\n\t}\n\t*/\n\t// The final passes with strides 4 and 2, combined into one loop.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1] * 2;\n\t\tconst imag2: number = array[index2];\n\t\tconst imag3: number = array[index3] * 2;\n\t\tconst tempA: number = real0 + imag2;\n\t\tconst tempB: number = real0 - imag2;\n\t\t\tarray[index ] = tempA + real1;\n\t\tarray[index1] = tempA - real1;\n\t\tarray[index2] = tempB + imag3;\n\t\tarray[index3] = tempB - imag3;\n\t}\n\t\t\n\treverseIndexBits(array, fullArrayLength);\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class Deque<T> {\n\tprivate _capacity: number = 1;\n\tprivate _buffer: Array<T | undefined> = [undefined];\n\tprivate _mask: number = 0;\n\tprivate _offset: number = 0;\n\tprivate _count: number = 0;\n\n\tpublic pushFront(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._offset = (this._offset - 1) & this._mask;\n\t\tthis._buffer[this._offset] = element;\n\t\tthis._count++;\n\t}\n\tpublic pushBack(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\n\t\tthis._count++;\n\t}\n\tpublic popFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tconst element: T = <T>this._buffer[this._offset];\n\t\tthis._buffer[this._offset] = undefined;\n\t\tthis._offset = (this._offset + 1) & this._mask;\n\t\tthis._count--;\n\t\treturn element;\n\t}\n\tpublic popBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tthis._count--;\n\t\tconst index: number = (this._offset + this._count) & this._mask;\n\t\tconst element: T = <T>this._buffer[index];\n\t\tthis._buffer[index] = undefined;\n\t\treturn element;\n\t}\n\tpublic peakFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[this._offset];\n\t}\n\tpublic peakBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\n\t}\n\tpublic count(): number {\n\t\treturn this._count;\n\t}\n\tpublic set(index: number, element: T): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\n\t}\n\tpublic get(index: number): T {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\n\t}\n\tpublic remove(index: number): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tif (index <= (this._count >> 1)) {\n\t\t\twhile (index > 0) {\n\t\t\t\tthis.set(index, this.get(index - 1));\n\t\t\t\tindex--;\n\t\t\t}\n\t\t\tthis.popFront();\n\t\t} else {\n\t\t\tindex++;\n\t\t\twhile (index < this._count) {\n\t\t\t\tthis.set(index - 1, this.get(index));\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tthis.popBack();\n\t\t}\n\t}\n\tprivate _expandCapacity(): void {\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\n\t\tthis._capacity = this._capacity << 1;\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\n\t\tconst size: number = this._count | 0;\n\t\tconst offset: number = this._offset | 0;\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\n\t\t}\n\t\tfor (let i = size; i < this._capacity; i++) {\n\t\t\tnewBuffer[i] = undefined;\n\t\t}\n\t\tthis._offset = 0;\n\t\tthis._buffer = newBuffer;\n\t\tthis._mask = this._capacity - 1;\n\t}\n}","//A simple events system for effectively direct links without actualy linking files or references\nclass EventManager { \n    private activeEvents:string[] = [];\n    private listeners:any = {};\n\n    constructor() {\n        this.activeEvents = [];\n        this.listeners = {};\n    }\n\n\n    public raise(eventType: string, eventData: any, extraEventData?: any): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.activeEvents.push(eventType);\n        for (let i: number = 0; i < this.listeners[eventType].length; i++) {\n            this.listeners[eventType][i](eventData,extraEventData)\n        }\n        this.activeEvents.pop();\n    }\n\n    public listen(eventType:string,callback:Function): void {\n        if (this.listeners[eventType] == undefined) {\n            this.listeners[eventType] = []\n        }\n        this.listeners[eventType].push(callback)\n    }\n\n    public unlisten(eventType: string, callback: Function): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        const lisen = this.listeners[eventType].indexOf(callback);\n        if (lisen != -1) {\n            this.listeners[eventType].splice(lisen, 1);\n        }\n    }\n    public unlistenAll(eventType: string): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.listeners[eventType]=[];\n    }\n}\n\nexport const events:EventManager = new EventManager()","/*\nThis file contains code to compute digital audio filter coefficients based on\nthe desired type, cutoff frequency, and other parameters. You can use these\ncoefficients to apply the filter to audio samples. It also contains code to\nanalyze these filters, which is useful for graphically displaying their effects.\n\nAll of the filters in this file are known as \"Infinite Impulse Response\" or IIR\nfilters, because older output samples contribute feedback to newer output\nsamples and thus contribute to all future samples, although typically filters\nare design to reduce the contribution of older samples over time.\n\nLow-pass filters aka high-cut filters preserve audio signals below the cutoff\nfrequency, and attenuate audio signals above the cutoff frequency. High-pass\nfilters aka low-cut filters are the reverse. All-pass filters do not affect the\nvolume of the signal at all but induce phase changes above the cutoff frequency.\nPeak/Notch filters maintain the volume on either side of the cutoff frequency,\nbut raise or lower the volume at that frequency. \n\nThe number of old samples used in the filter determines the \"order\" of the\nfilter. First-order filters generally have shallower slopes, and second-order\nfilters generally have steeper slopes and can be configured to \"resonate\",\nmeaning they have a louder peak at the cutoff frequency. This file contains\nfirst-order filters and second-order filters, meaning one or two older samples\nare involved, as well as the current input sample.\n\nThe class FilterCoefficients is defined lower in this file. You can use it to\nset up a first order filter like this:\n\n\tconst cutoffRadiansPerSample: number = 2 * Math.PI * cutoffHz / sampleRate;\n\tconst filter: FilterCoefficients = new FilterCoefficients();\n\tfilter.lowPass1stOrderButterworth(cutoffRadiansPerSample);\n\t// output sample coefficients are conventionally called a0, a1, etc. Note\n\t// that a[0] is typically normalized to 1.0 and need not be used directly.\n\tconst a: number[] = filter.a;\n\t// input sample coefficients are conventionally called b0, b1, etc\n\tconst b: number[] = filter.b;\n\t// filter input samples, x[0] is the most recent, x[1] is the previous one, etc.\n\tconst x: number[] = [0, 0, 0];\n\t// filter output samples, y[0] will be computed by the filter based on input\n\t// samples and older output samples.\n\tconst y: number[] = [0, 0, 0];\n\nThen to apply the first-order filter to samples inside a loop, using the current\ninput sample (x[0]) as well as previous input and output samples, do this:\n\n\t// Compute the next output sample y[0]:\n\ty[0] = b[0] * x[0] + b[1] * x[1] - a[1] * y[1];\n\t// Remember the input and output samples for next time:\n\tx[1] = x[0];\n\ty[1] = y[0];\n\n2nd order filters are similar, but have more parameters and require more old\nsamples:\n\n\t// Compute the next output sample y[0]:\n\ty[0] = b[0] * x[0] + b[1] * x[1] + b[2] * x[2] - a[1] * y[1] - a[2] * y[2];\n\t// Remember the input and output samples for next time:\n\tx[2] = x[1];\n\tx[1] = x[0];\n\ty[2] = y[1];\n\ty[1] = y[0];\n\nYou can compose multiple filters into a higher order filter, although doing so\nreduces the numerical stability of the filter:\n\n\tfilter3.combination(filter1, filter2);\n\t// filter3.order will equal: filter1.order + filter2.order\n\t// The number of coefficients in filter3.a and filter3.b will be: order + 1\n\nThis file also contains a class called FrequencyResponse. You can use it to\ndetermine how much gain or attenuation a filter would apply to sounds at a\nspecific input frequency, as well as the phase offset:\n\n\tconst inputRadians: number = 2 * Math.PI * cutoffHz / sampleRate;\n\tconst response: FrequencyResponse = new FrequencyResponse();\n\tresponse.analyze(filter, inputRadians);\n\tconst gainResponse = response.magnitude();\n\tconst phaseResponse = response.angle();\n\nThat's basically all you need to know to use this code, but I'll also explain\nhow the analysis works.\n\nA first-order digital IIR filter is ordinarily implemented in a form like this:\n\n\toutput = inputCoeff * input + prevInputCoeff * prevInput - prevOutputCoeff * prevOutput;\n\nIf we adopt standard naming conventions for audio filters, this same code would\ninstead look like:\n\n\t// x0 = current input, x1 = prevInput, y0 = current output, y1 = prevOutput\n\ty0 = b0*x0 + b1*x1 - a1*y1;\n\nLeaving behind the world of code for a moment and entering the world of algebra,\nwe can rewrite this equation by moving all the output terms to the left side,\nand we can add a coefficient to the y0 term called a0 (which is typically\nnormalized to 1.0, which is why I didn't bother including it until now):\n\n\ta0*y0 + a1*y1 = b0*x0 + b1*x1\n\nThis is known as the symmetrical form of the filter, and it will help us analyze\nthe impact of the filter on an input audio signal. Here's a lesson that helped\nme understand the symmetrical form:\nhttps://web.archive.org/web/20200626183458/http://123.physics.ucdavis.edu/week_5_files/filters/digital_filter.pdf\n\nThe end of that lesson introduces a concept called the \"delay operator\" which\nlooks like \"z^-1\", which (magically) turns a sample into the previous sample\nwhen you multiply them. For example:\n\n\tx0 * z^-1 = x1\n\nThe lesson doesn't explain how it actually works. Audio signals aren't always\npredictable, which means that you generally can't do math on a single sample to\ncompute what the previous sample was. However, some audio signals ARE\npredictable, such as pure sine waves. Fortunately, all audio signals can be\nbroken down into a sum of independent sine waves. We can pick one sine wave at a\ntime, and use it to analyze the filter's impact on waves at that frequency. In\npractice, this tells us what the filter will do to unpredictable input samples\nthat contain a partial sine wave at that frequency.\n\nTechnically, you can't just use a single sine wave sample to determine the\nprevious sine wave sample, because each possible value is passed going upwards\nand downwards once per period and the direction is ambigous. This is where we\nneed to move into the complex number domain, where the real and imaginary\ncomponents can provide enough information to compute the previous position on\nthe input signal. So now instead of talking about sine waves, we're talking\nabout waves where the imaginary component is a sine wave and the real component\nis a cosine wave at the same frequency. Together, they trace around a unit\ncircle in the complex domain, and each sample is just a consistent rotation\napplied to the previous sample. The \"delay operator\" described above, z^-1, is\nthis same rotation applied in reverse, and it can be computed as:\n\n\tz^-1 = cos(radiansPerSample) - i * sin(radiansPerSample)\n\nMath nerds may be interested to know that \"Euler's formula\" was used here, but\nexplaining what that means is probably beyond the scope of this documentation\naside from noting that a complex number on the unit circle represents a 2D\nrotation that you can apply via multiplication.\n\nNow we can rewrite the symmetrical form using the delay operator and algebra:\n\n\ta0*y0 + a1*y0*z^-1 = b0*x0 + b1*x0*z^-1\n\ty0 * (a0 + a1*z^-1) = x0 * (b0 + b1*z^-1)\n\ty0 = x0 * (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\ty0 / x0 = (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\nThat last equation expresses the relationship between the input and output\nsignals (y0/x0) in terms of the filter coefficients and delay operator. At this\npoint, the specific values of the input and output samples don't even matter!\nThis is called the \"transfer function\", and it's conventionally named \"H(z)\":\n\n\tH(z) = (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\nIf you plug in actual filter coefficients and express the delay operators as\ncomplex numbers with the appropriate trigonometry functions, the transfer\nfunction can be computed and produces a complex number that represents the\nrelationship between the input and output signals, whose magnitude represents\nthe volume gain (or attenuation) of signals at that frequency, and whose angle\nrepresents how much phase shift is applied by the filter to signals at that\nfrequency.\n\n(Note that in order to compute the transfer function, you'll need to do\nsomething about the complex number in the denominator. It turns out you can turn\nthe denominator into a real number by multiplying both the numerator and\ndenominator by the complex conjugate of the denominator, which is just the\ndenominator with the imaginary component negated.)\n\nFinally, I'll list some of the links that helped me understand filters and\nprovided some of the algorithms I that use here.\n\nHere's where I found accurate 2nd order low-pass, high-pass, and high-shelf\ndigital filters:\nhttps://web.archive.org/web/20120531011328/http://www.musicdsp.org/files/Audio-EQ-Cookbook.txt\n\nThis page is how I found a link to the cookbook article above. It claims these\nfilters are Butterworth filters:\nhttp://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\n\nI found the first-order digital Butterworth filter coefficients at:\nhttps://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\nThis meta-paper helped me understand how to make 2nd order peak/notch filters:\nhttps://web.archive.org/web/20170706085655/https://www.thesounddesign.com/MIO/EQ-Coefficients.pdf\n\nBeepBox originally used simpler low-pass filters that I adapted from SFXR:\nhttps://www.drpetter.se/project_sfxr.html\nFor low cutoff frequencies, the simpler filters and the Butterworth filters are\nnearly identical, but when closer to the nyquist frequency the simpler filters\ncreate extra resonance.\n*/\n\nexport class FilterCoefficients {\n\tpublic readonly a: number[] = [1.0]; // output coefficients (negated, keep a[0]=1)\n\tpublic readonly b: number[] = [1.0]; // input coefficients\n\tpublic order: number = 0;\n\t\n\tpublic linearGain0thOrder(linearGain: number): void {\n\t\t//a[0] = 1.0; // a0 should always be normalized to 1.0, no need to assign it directly.\n\t\tthis.b[0] = linearGain;\n\t\tthis.order = 0;\n\t}\n\t\n\tpublic lowPass1stOrderButterworth(cornerRadiansPerSample: number): void {\n\t\t// First-order Butterworth low-pass filter according to:\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\t\t// A butterworth filter is one where the amplitude response is equal to:\n\t\t// 1 / √(1 + (freq / cutoffFreq)^(2 * order))\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst a0: number = 1.0 + g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[1] = this.b[0] = 1 / a0;\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic lowPass1stOrderSimplified(cornerRadiansPerSample: number): void {\n\t\t// The output of this filter is nearly identical to the 1st order\n\t\t// Butterworth low-pass above, except if the cutoff is set to nyquist/3,\n\t\t// then the output is the same as the input, and if the cutoff is higher\n\t\t// than that, then the output actually resonates at high frequencies\n\t\t// instead of attenuating.\n\t\t// I'm guessing this filter was converted from analog to digital using\n\t\t// the \"matched z-transform\" method instead of the \"bilinear transform\"\n\t\t// method. The difference is that the bilinear transform warps\n\t\t// frequencies so that the lowpass response of zero at analogue ∞hz maps\n\t\t// to the digital nyquist frequency, whereas the matched z-transform\n\t\t// preserves the frequency of the filter response but also adds the\n\t\t// reflected response from above the nyquist frequency.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tthis.a[1] = g - 1.0;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 0.0;\n\t\t/*\n\t\t// Alternatively:\n\t\tconst g: number = 1.0 / (2.0 * Math.sin(cornerRadiansPerSample / 2));\n\t\tconst a0: number = g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[0] = 1.0 / a0;\n\t\tthis.b[1] = 0.0 / a0;\n\t\t*/\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic highPass1stOrderButterworth(cornerRadiansPerSample: number): void {\n\t\t// First-order Butterworth high-pass filter according to:\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst a0: number = 1.0 + g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[0] = g / a0;\n\t\tthis.b[1] = -g / a0;\n\t\tthis.order = 1;\n\t}\n\t/*\n\tpublic highPass1stOrderSimplified(cornerRadiansPerSample: number): void {\n\t\t// The output of this filter is nearly identical to the 1st order\n\t\t// Butterworth high-pass above, except it resonates when the cutoff\n\t\t// appoaches the nyquist.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tthis.a[1] = g - 1.0;\n\t\tthis.b[0] = 1.0;\n\t\tthis.b[1] = -1.0;\n\t\tthis.order = 1;\n\t}\n\t*/\n\tpublic highShelf1stOrder(cornerRadiansPerSample: number, shelfLinearGain: number): void {\n\t\t// I had trouble figuring this one out because I couldn't find any\n\t\t// online algorithms that I understood. There are 3 degrees of freedom\n\t\t// and I could narrow down a couple of them based on the desired gain at\n\t\t// DC and nyquist, but getting the cutoff frequency correct took a\n\t\t// little bit of trial and error in my attempts to interpret page 53 of\n\t\t// this chapter: http://www.music.mcgill.ca/~ich/classes/FiltersChap2.pdf\n\t\t// Obviously I don't fully understand the bilinear transform yet!\n\t\tconst tan: number = Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst sqrtGain: number = Math.sqrt(shelfLinearGain);\n\t\tconst g: number = (tan * sqrtGain - 1) / (tan * sqrtGain + 1.0);\n\t\tconst a0: number = 1.0;\n\t\tthis.a[1] = g / a0;\n\t\tthis.b[0] = (1.0 + g + shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n\t\tthis.b[1] = (1.0 + g - shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic allPass1stOrderInvertPhaseAbove(cornerRadiansPerSample: number): void {\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 1.0;\n\t\tthis.order = 1;\n\t}\n\t\n\t/*\n\t// I haven't found a practical use for this version of the all pass filter.\n\t// It seems to create a weird subharmonic when used in a delay feedback loop.\n\tpublic allPass1stOrderInvertPhaseBelow(cornerRadiansPerSample: number): void {\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = -g;\n\t\tthis.b[1] = -1.0;\n\t\tthis.order = 1;\n\t}\n\t*/\n\t\n\tpublic allPass1stOrderFractionalDelay(delay: number) {\n\t\t// Very similar to allPass1stOrderInvertPhaseAbove, but configured\n\t\t// differently and for a different purpose! Useful for interpolating\n\t\t// between samples in a delay line.\n\t\tconst g: number = (1.0 - delay) / (1.0 + delay);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 1.0;\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic lowPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\t// This is Butterworth if peakLinearGain=1/√2 according to:\n\t\t// http://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\n\t\t// An interesting property is that if peakLinearGain=1/16 then the\n\t\t// output resembles a first-order lowpass at a cutoff 4 octaves lower,\n\t\t// although it gets distorted near the nyquist.\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2.0 * peakLinearGain);\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\n\t\tconst a0: number = 1.0 + alpha;\n\t\tthis.a[1] = -2.0*cos / a0;\n\t\tthis.a[2] = (1 - alpha) / a0;\n\t\tthis.b[2] = this.b[0] = (1 - cos) / (2.0*a0);\n\t\tthis.b[1] = (1 - cos) / a0;\n\t\tthis.order = 2;\n\t}\n\t\n\tpublic lowPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\t// This filter is adapted from the one in the SFXR source code:\n\t\t// https://www.drpetter.se/project_sfxr.html\n\t\t// The output is nearly identical to the resonant Butterworth low-pass\n\t\t// above, except it resonates too much when the cutoff appoaches the\n\t\t// nyquist. If the resonance is set to zero and the cutoff is set to\n\t\t// nyquist/3, then the output is the same as the input.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample / 2.0);\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\n\t\tthis.b[0] = g*g;\n\t\tthis.b[1] = 0;\n\t\tthis.b[2] = 0;\n\t\tthis.order = 2;\n\t}\n\t\n\tpublic highPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2 * peakLinearGain);\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\n\t\tconst a0: number = 1.0 + alpha;\n\t\tthis.a[1] = -2.0*cos / a0;\n\t\tthis.a[2] = (1.0 - alpha) / a0;\n\t\tthis.b[2] = this.b[0] = (1.0 + cos) / (2.0*a0);\n\t\tthis.b[1] = -(1.0 + cos) / a0;\n\t\tthis.order = 2;\n\t}\n\t/*\n\tpublic highPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\n\t\tthis.b[0] = 1.0;\n\t\tthis.b[1] = -2.0;\n\t\tthis.b[2] = 1.0;\n\t\tthis.order = 2;\n\t}\n\t*/\n\tpublic highShelf2ndOrder(cornerRadiansPerSample: number, shelfLinearGain: number, slope: number): void {\n\t\tconst A: number = Math.sqrt(shelfLinearGain);\n\t\tconst c: number = Math.cos(cornerRadiansPerSample);\n\t\tconst Aplus: number = A + 1.0;\n\t\tconst Aminus: number = A - 1.0;\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) * 0.5 * Math.sqrt((Aplus / A) * (1.0 / slope - 1.0) + 2.0);\n\t\tconst sqrtA2Alpha: number = 2.0 * Math.sqrt(A) * alpha;\n\t\tconst a0: number =   (Aplus  - Aminus * c + sqrtA2Alpha);\n\t\tthis.a[1] =  2 *     (Aminus - Aplus  * c              ) / a0;\n\t\tthis.a[2] =          (Aplus  - Aminus * c - sqrtA2Alpha) / a0;\n\t\tthis.b[0] =      A * (Aplus  + Aminus * c + sqrtA2Alpha) / a0;\n\t\tthis.b[1] = -2 * A * (Aminus + Aplus  * c              ) / a0;\n\t\tthis.b[2] =      A * (Aplus  + Aminus * c - sqrtA2Alpha) / a0;\n\t\tthis.order = 2;\n\t}\n\n\tpublic peak2ndOrder(cornerRadiansPerSample: number, peakLinearGain: number, bandWidthScale: number): void {\n\t\tconst sqrtGain: number = Math.sqrt(peakLinearGain);\n\t\tconst bandWidth: number = bandWidthScale * cornerRadiansPerSample / (sqrtGain >= 1 ? sqrtGain : 1/sqrtGain);\n\t\t//const bandWidth: number = bandWidthScale * cornerRadiansPerSample / Math.max(sqrtGain, 1.0);\n\t\tconst alpha: number = Math.tan(bandWidth * 0.5);\n\t\tconst a0: number = 1.0 + alpha / sqrtGain;\n\t\tthis.b[0] = (1.0 + alpha * sqrtGain) / a0;\n\t\tthis.b[1] = this.a[1] = -2.0 * Math.cos(cornerRadiansPerSample) / a0;\n\t\tthis.b[2] = (1.0 - alpha * sqrtGain) / a0;\n\t\tthis.a[2] = (1.0 - alpha / sqrtGain) / a0;\n\t\tthis.order = 2;\n\t}\n\t/*\n\t// Create a higher order filter by combining two lower order filters.\n\t// However, making high order filters in this manner results in instability.\n\t// It is recommended to apply the 2nd order filters (biquads) in sequence instead.\n\tpublic combination(filter1: FilterCoefficients, filter2: FilterCoefficients): void {\n\t\tthis.order = filter1.order + filter2.order;\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = 0.0;\n\t\t\tthis.b[i] = 0.0;\n\t\t}\n\t\tfor (let i: number = 0; i <= filter1.order; i++) {\n\t\t\tfor (let j: number = 0; j <= filter2.order; j++) {\n\t\t\t\tthis.a[i + j] += filter1.a[i] * filter2.a[j];\n\t\t\t\tthis.b[i + j] += filter1.b[i] * filter2.b[j];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic scaledDifference(other: FilterCoefficients, scale: number): void {\n\t\tif (other.order != this.order) throw new Error();\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = (this.a[i] - other.a[i]) * scale;\n\t\t\tthis.b[i] = (this.b[i] - other.b[i]) * scale;\n\t\t}\n\t}\n\t\n\tpublic copy(other: FilterCoefficients): void {\n\t\tthis.order = other.order;\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = other.a[i];\n\t\t\tthis.b[i] = other.b[i];\n\t\t}\n\t}\n\t*/\n}\n\nexport class FrequencyResponse {\n\tpublic real: number = 0.0;\n\tpublic imag: number = 0.0;\n\tpublic denom: number = 1.0;\n\t\n\tpublic analyze(filter: FilterCoefficients, radiansPerSample: number): void {\n\t\tthis.analyzeComplex(filter, Math.cos(radiansPerSample), Math.sin(radiansPerSample));\n\t}\n\t\n\tpublic analyzeComplex(filter: FilterCoefficients, real: number, imag: number): void {\n\t\tconst a: number[] = filter.a;\n\t\tconst b: number[] = filter.b;\n\t\tconst realZ1: number = real;\n\t\tconst imagZ1: number = -imag;\n\t\tlet realNum: number = b[0] + b[1] * realZ1;\n\t\tlet imagNum: number = b[1] * imagZ1;\n\t\tlet realDenom: number = 1.0 + a[1] * realZ1;\n\t\tlet imagDenom: number = a[1] * imagZ1;\n\t\tlet realZ: number = realZ1;\n\t\tlet imagZ: number = imagZ1;\n\t\tfor (let i: number = 2; i <= filter.order; i++) {\n\t\t\tconst realTemp: number = realZ * realZ1 - imagZ * imagZ1;\n\t\t\tconst imagTemp: number = realZ * imagZ1 + imagZ * realZ1;\n\t\t\trealZ = realTemp;\n\t\t\timagZ = imagTemp;\n\t\t\trealNum += b[i] * realZ;\n\t\t\timagNum += b[i] * imagZ;\n\t\t\trealDenom += a[i] * realZ;\n\t\t\timagDenom += a[i] * imagZ;\n\t\t}\n\t\tthis.denom = realDenom * realDenom + imagDenom * imagDenom;\n\t\tthis.real = realNum * realDenom + imagNum * imagDenom;\n\t\tthis.imag = imagNum * realDenom - realNum * imagDenom;\n\t}\n\t\n\tpublic magnitude(): number {\n\t\treturn Math.sqrt(this.real * this.real + this.imag * this.imag) / this.denom;\n\t}\n\t\n\tpublic angle(): number {\n\t\treturn Math.atan2(this.imag, this.real);\n\t}\n}\n\nexport class DynamicBiquadFilter {\n\tpublic a1: number = 0.0;\n\tpublic a2: number = 0.0;\n\tpublic b0: number = 1.0;\n\tpublic b1: number = 0.0;\n\tpublic b2: number = 0.0;\n\tpublic a1Delta: number = 0.0;\n\tpublic a2Delta: number = 0.0;\n\tpublic b0Delta: number = 0.0;\n\tpublic b1Delta: number = 0.0;\n\tpublic b2Delta: number = 0.0;\n\tpublic output1: number = 0.0;\n\tpublic output2: number = 0.0;\n\t\n\t// Some filter types are more stable when interpolating between coefficients\n\t// if the \"b\" coefficient interpolation is multiplicative. Don't enable this\n\t// for filter types where the \"b\" coefficients might change sign!\n\tpublic useMultiplicativeInputCoefficients: boolean = false;\n\t\n\tpublic resetOutput(): void {\n\t\tthis.output1 = 0.0;\n\t\tthis.output2 = 0.0;\n\t}\n\t\n\tpublic loadCoefficientsWithGradient(start: FilterCoefficients, end: FilterCoefficients, deltaRate: number, useMultiplicativeInputCoefficients: boolean): void {\n\t\tif (start.order != 2 || end.order != 2) throw new Error();\n\t\tthis.a1 = start.a[1];\n\t\tthis.a2 = start.a[2];\n\t\tthis.b0 = start.b[0];\n\t\tthis.b1 = start.b[1];\n\t\tthis.b2 = start.b[2];\n\t\tthis.a1Delta = (end.a[1] - start.a[1]) * deltaRate;\n\t\tthis.a2Delta = (end.a[2] - start.a[2]) * deltaRate;\n\t\tif (useMultiplicativeInputCoefficients) {\n\t\t\tthis.b0Delta = Math.pow(end.b[0] / start.b[0], deltaRate);\n\t\t\tthis.b1Delta = Math.pow(end.b[1] / start.b[1], deltaRate);\n\t\t\tthis.b2Delta = Math.pow(end.b[2] / start.b[2], deltaRate);\n\t\t} else {\n\t\t\tthis.b0Delta = (end.b[0] - start.b[0]) * deltaRate;\n\t\t\tthis.b1Delta = (end.b[1] - start.b[1]) * deltaRate;\n\t\t\tthis.b2Delta = (end.b[2] - start.b[2]) * deltaRate;\n\t\t}\n\t\tthis.useMultiplicativeInputCoefficients = useMultiplicativeInputCoefficients;\n\t}\n}\n// Filters are typically designed as analog filters first, then converted to\n// digital filters using one of two methods: the \"matched z-transform\" or the\n// \"bilinear transform\". The \"bilinear transform\" does a better job of\n// preserving the magnitudes of the frequency response, but warps the frequency\n// range such that the nyquist frequency of the digital filter (π) maps to the\n// infinity frequency of the analog filter. You can use the below functions to\n// manually perform this warping in either direction.\nexport function warpNyquistToInfinity(radians: number): number {\n\treturn 2.0 * Math.tan(radians * 0.5);\n}\nexport function warpInfinityToNyquist(radians: number): number {\n\treturn 2.0 * Math.atan(radians * 0.5);\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { startLoadingSample, sampleLoadingState, SampleLoadingState, sampleLoadEvents, SampleLoadedEvent, SampleLoadingStatus, loadBuiltInSamples, Dictionary, DictionaryArray, toNameMap, FilterType, SustainType, EnvelopeType, InstrumentType, EffectType, EnvelopeComputeIndex, Transition, Unison, Chord, Vibrato, Envelope, AutomationTarget, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex, performIntegralOld, getPulseWidthRatio, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, OperatorWave } from \"./SynthConfig\";\nimport { Preset, EditorConfig } from \"../editor/EditorConfig\";\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\nimport { Deque } from \"./Deque\";\nimport { events } from \"../global/Events\";\nimport { FilterCoefficients, FrequencyResponse, DynamicBiquadFilter, warpInfinityToNyquist } from \"./filtering\";\n\ndeclare global {\n    interface Window {\n        AudioContext: any;\n        webkitAudioContext: any;\n    }\n}\n\nconst epsilon: number = (1.0e-24); // For detecting and avoiding float denormals, which have poor performance.\n\n// For performance debugging:\n//let samplesAccumulated: number = 0;\n//let samplePerformance: number = 0;\n\nexport function clamp(min: number, max: number, val: number): number {\n    max = max - 1;\n    if (val <= max) {\n        if (val >= min) return val;\n        else return min;\n    } else {\n        return max;\n    }\n}\n\nfunction validateRange(min: number, max: number, val: number): number {\n    if (min <= val && val <= max) return val;\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\n}\n\nexport function parseFloatWithDefault<T>(s: string, defaultValue: T): number | T {\n    let result: number | T = parseFloat(s);\n    if (Number.isNaN(result)) result = defaultValue;\n    return result;\n}\n\nexport function parseIntWithDefault<T>(s: string, defaultValue: T): number | T {\n    let result: number | T = parseInt(s);\n    if (Number.isNaN(result)) result = defaultValue;\n    return result;\n}\n\nfunction encode32BitNumber(buffer: number[], x: number): void {\n    // 0b11_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 5)) & 0x3]);\n    //      111111_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 4)) & 0x3f]);\n    //             111111_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 3)) & 0x3f]);\n    //                    111111_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 2)) & 0x3f]);\n    //                           111111_\n    buffer.push(base64IntToCharCode[(x >>> (6 * 1)) & 0x3f]);\n    //                                  111111\n    buffer.push(base64IntToCharCode[(x >>> (6 * 0)) & 0x3f]);\n}\n\n// @TODO: This is error-prone, because the caller has to remember to increment\n// charIndex by 6 afterwards.\nfunction decode32BitNumber(compressed: string, charIndex: number): number {\n    let x: number = 0;\n    // 0b11_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5);\n    //      111111_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4);\n    //             111111_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3);\n    //                    111111_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2);\n    //                           111111_\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1);\n    //                                  111111\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0);\n    return x;\n}\n\nfunction encodeUnisonSettings(buffer: number[], v: number, s: number, o: number, e: number, i: number): void {\n    buffer.push(base64IntToCharCode[v]);\n    \n    // logically this should be done with bitshifts... but I don't know how to do that, so\n    buffer.push(base64IntToCharCode[Number((s > 0))]);\n    let cleanS = Math.round(Math.abs(s) * 1000);\n    let cleanSDivided = Math.floor(cleanS / 63);\n    buffer.push(base64IntToCharCode[cleanS % 63], base64IntToCharCode[cleanSDivided % 63], base64IntToCharCode[Math.floor(cleanSDivided / 63)]);\n\n    buffer.push(base64IntToCharCode[Number((o > 0))]);\n    let cleanO = Math.round(Math.abs(o) * 1000);\n    let cleanODivided = Math.floor(cleanO / 63);\n    buffer.push(base64IntToCharCode[cleanO % 63], base64IntToCharCode[cleanODivided % 63], base64IntToCharCode[Math.floor(cleanODivided / 63)]);\n    \n    buffer.push(base64IntToCharCode[Number((e > 0))]);\n    let cleanE = Math.round(Math.abs(e) * 1000);\n    buffer.push(base64IntToCharCode[cleanE % 63], base64IntToCharCode[Math.floor(cleanE / 63)]);\n\n    buffer.push(base64IntToCharCode[Number((i > 0))]);\n    let cleanI = Math.round(Math.abs(i) * 1000);\n    buffer.push(base64IntToCharCode[cleanI % 63], base64IntToCharCode[Math.floor(cleanI / 63)]);\n}\n\nfunction convertLegacyKeyToKeyAndOctave(rawKeyIndex: number): [number, number] {\n    let key: number = clamp(0, Config.keys.length, rawKeyIndex);\n    let octave: number = 0;\n    // This conversion code depends on C through B being\n    // available as keys, of course.\n    if (rawKeyIndex === 12) {\n        // { name: \"C+\", isWhiteKey: false, basePitch: 24 }\n        key = 0;\n        octave = 1;\n    } else if (rawKeyIndex === 13) {\n        // { name: \"G- (actually F#-)\", isWhiteKey: false, basePitch: 6 }\n        key = 6;\n        octave = -1;\n    } else if (rawKeyIndex === 14) {\n        // { name: \"C-\", isWhiteKey: true, basePitch: 0 }\n        key = 0;\n        octave = -1;\n    } else if (rawKeyIndex === 15) {\n        // { name: \"oh no (F-)\", isWhiteKey: true, basePitch: 5 }\n        key = 5;\n        octave = -1;\n    }\n    return [key, octave];\n}\n\nconst enum CharCode {\n    SPACE = 32,\n    HASH = 35,\n    PERCENT = 37,\n    AMPERSAND = 38,\n    PLUS = 43,\n    DASH = 45,\n    DOT = 46,\n    NUM_0 = 48,\n    NUM_1 = 49,\n    NUM_2 = 50,\n    NUM_3 = 51,\n    NUM_4 = 52,\n    NUM_5 = 53,\n    NUM_6 = 54,\n    NUM_7 = 55,\n    NUM_8 = 56,\n    NUM_9 = 57,\n    EQUALS = 61,\n    A = 65,\n    B = 66,\n    C = 67,\n    D = 68,\n    E = 69,\n    F = 70,\n    G = 71,\n    H = 72,\n    I = 73,\n    J = 74,\n    K = 75,\n    L = 76,\n    M = 77,\n    N = 78,\n    O = 79,\n    P = 80,\n    Q = 81,\n    R = 82,\n    S = 83,\n    T = 84,\n    U = 85,\n    V = 86,\n    W = 87,\n    X = 88,\n    Y = 89,\n    Z = 90,\n    UNDERSCORE = 95,\n    a = 97,\n    b = 98,\n    c = 99,\n    d = 100,\n    e = 101,\n    f = 102,\n    g = 103,\n    h = 104,\n    i = 105,\n    j = 106,\n    k = 107,\n    l = 108,\n    m = 109,\n    n = 110,\n    o = 111,\n    p = 112,\n    q = 113,\n    r = 114,\n    s = 115,\n    t = 116,\n    u = 117,\n    v = 118,\n    w = 119,\n    x = 120,\n    y = 121,\n    z = 122,\n    LEFT_CURLY_BRACE = 123,\n    RIGHT_CURLY_BRACE = 125,\n}\n\nconst enum SongTagCode {\n    beatCount           = CharCode.a, // added in BeepBox URL version 2\n\tbars                = CharCode.b, // added in BeepBox URL version 2\n\tvibrato             = CharCode.c, // added in BeepBox URL version 2, DEPRECATED\n\tfadeInOut           = CharCode.d, // added in BeepBox URL version 3 for transition, switched to fadeInOut in 9\n\tloopEnd             = CharCode.e, // added in BeepBox URL version 2\n\teqFilter            = CharCode.f, // added in BeepBox URL version 3\n\tbarCount            = CharCode.g, // added in BeepBox URL version 3\n\tunison              = CharCode.h, // added in BeepBox URL version 2\n\tinstrumentCount     = CharCode.i, // added in BeepBox URL version 3\n\tpatternCount        = CharCode.j, // added in BeepBox URL version 3\n\tkey                 = CharCode.k, // added in BeepBox URL version 2\n\tloopStart           = CharCode.l, // added in BeepBox URL version 2\n\treverb              = CharCode.m, // added in BeepBox URL version 5, DEPRECATED\n\tchannelCount        = CharCode.n, // added in BeepBox URL version 6\n\tchannelOctave       = CharCode.o, // added in BeepBox URL version 3\n\tpatterns            = CharCode.p, // added in BeepBox URL version 2\n\teffects             = CharCode.q, // added in BeepBox URL version 7\n\trhythm              = CharCode.r, // added in BeepBox URL version 2\n\tscale               = CharCode.s, // added in BeepBox URL version 2\n\ttempo               = CharCode.t, // added in BeepBox URL version 2\n\tpreset              = CharCode.u, // added in BeepBox URL version 7\n\tvolume              = CharCode.v, // added in BeepBox URL version 2\n\twave                = CharCode.w, // added in BeepBox URL version 2\n\tsupersaw            = CharCode.x, // added in BeepBox URL version 9 ([UB] was used for chip wave but is now DEPRECATED)\n\tfilterResonance     = CharCode.y, // added in BeepBox URL version 7, DEPRECATED, [UB] repurposed for chip wave loop controls\n\tdrumsetEnvelopes    = CharCode.z, // added in BeepBox URL version 7 for filter envelopes, still used for drumset envelopes\n\talgorithm           = CharCode.A, // added in BeepBox URL version 6\n\tfeedbackAmplitude   = CharCode.B, // added in BeepBox URL version 6\n\tchord               = CharCode.C, // added in BeepBox URL version 7, DEPRECATED\n\tdetune              = CharCode.D, // added in JummBox URL version 3(?) for detune, DEPRECATED\n\tenvelopes           = CharCode.E, // added in BeepBox URL version 6 for FM operator envelopes, repurposed in 9 for general envelopes.\n\tfeedbackType        = CharCode.F, // added in BeepBox URL version 6\n\tarpeggioSpeed       = CharCode.G, // added in JummBox URL version 3 for arpeggioSpeed, DEPRECATED\n\tharmonics           = CharCode.H, // added in BeepBox URL version 7\n\tstringSustain       = CharCode.I, // added in BeepBox URL version 9\n//\t                    = CharCode.J,\n//\t                    = CharCode.K,\n\tpan                 = CharCode.L, // added between 8 and 9, DEPRECATED\n\tcustomChipWave      = CharCode.M, // added in JummBox URL version 1(?) for customChipWave\n\tsongTitle           = CharCode.N, // added in JummBox URL version 1(?) for songTitle\n\tlimiterSettings     = CharCode.O, // added in JummBox URL version 3(?) for limiterSettings\n\toperatorAmplitudes  = CharCode.P, // added in BeepBox URL version 6\n\toperatorFrequencies = CharCode.Q, // added in BeepBox URL version 6\n\toperatorWaves       = CharCode.R, // added in JummBox URL version 4 for operatorWaves\n\tspectrum            = CharCode.S, // added in BeepBox URL version 7\n\tstartInstrument     = CharCode.T, // added in BeepBox URL version 6\n\tchannelNames        = CharCode.U, // added in JummBox URL version 4(?) for channelNames\n\tfeedbackEnvelope    = CharCode.V, // added in BeepBox URL version 6, DEPRECATED\n\tpulseWidth          = CharCode.W, // added in BeepBox URL version 7\n\taliases             = CharCode.X, // added in JummBox URL version 4 for aliases, DEPRECATED, [UB] repurposed for PWM decimal offset (DEPRECATED as well)\n//\t                    = CharCode.Y,\n//\t                    = CharCode.Z,\n//\t                    = CharCode.NUM_0,\n//\t                    = CharCode.NUM_1,\n//\t                    = CharCode.NUM_2,\n//\t                    = CharCode.NUM_3,\n//\t                    = CharCode.NUM_4,\n//\t                    = CharCode.NUM_5,\n//\t                    = CharCode.NUM_6,\n//\t                    = CharCode.NUM_7,\n//\t                    = CharCode.NUM_8,\n//\t                    = CharCode.NUM_9,\n//\t                    = CharCode.DASH,\n//\t                    = CharCode.UNDERSCORE,\n\n}\n\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\n\nclass BitFieldReader {\n    private _bits: number[] = [];\n    private _readIndex: number = 0;\n\n    constructor(source: string, startIndex: number, stopIndex: number) {\n        for (let i: number = startIndex; i < stopIndex; i++) {\n            const value: number = base64CharCodeToInt[source.charCodeAt(i)];\n            this._bits.push((value >> 5) & 0x1);\n            this._bits.push((value >> 4) & 0x1);\n            this._bits.push((value >> 3) & 0x1);\n            this._bits.push((value >> 2) & 0x1);\n            this._bits.push((value >> 1) & 0x1);\n            this._bits.push(value & 0x1);\n        }\n    }\n\n    public read(bitCount: number): number {\n        let result: number = 0;\n        while (bitCount > 0) {\n            result = result << 1;\n            result += this._bits[this._readIndex++];\n            bitCount--;\n        }\n        return result;\n    }\n\n    public readLongTail(minValue: number, minBits: number): number {\n        let result: number = minValue;\n        let numBits: number = minBits;\n        while (this._bits[this._readIndex++]) {\n            result += 1 << numBits;\n            numBits++;\n        }\n        while (numBits > 0) {\n            numBits--;\n            if (this._bits[this._readIndex++]) {\n                result += 1 << numBits;\n            }\n        }\n        return result;\n    }\n\n    public readPartDuration(): number {\n        return this.readLongTail(1, 3);\n    }\n\n    public readLegacyPartDuration(): number {\n        return this.readLongTail(1, 2);\n    }\n\n    public readPinCount(): number {\n        return this.readLongTail(1, 0);\n    }\n\n    public readPitchInterval(): number {\n        if (this.read(1)) {\n            return -this.readLongTail(1, 3);\n        } else {\n            return this.readLongTail(1, 3);\n        }\n    }\n}\n\nclass BitFieldWriter {\n    private _index: number = 0;\n    private _bits: number[] = [];\n\n    public clear() {\n        this._index = 0;\n    }\n\n    public write(bitCount: number, value: number): void {\n        bitCount--;\n        while (bitCount >= 0) {\n            this._bits[this._index++] = (value >>> bitCount) & 1;\n            bitCount--;\n        }\n    }\n\n    public writeLongTail(minValue: number, minBits: number, value: number): void {\n        if (value < minValue) throw new Error(\"value out of bounds\");\n        value -= minValue;\n        let numBits: number = minBits;\n        while (value >= (1 << numBits)) {\n            this._bits[this._index++] = 1;\n            value -= 1 << numBits;\n            numBits++;\n        }\n        this._bits[this._index++] = 0;\n        while (numBits > 0) {\n            numBits--;\n            this._bits[this._index++] = (value >>> numBits) & 1;\n        }\n    }\n\n    public writePartDuration(value: number): void {\n        this.writeLongTail(1, 3, value);\n    }\n\n    public writePinCount(value: number): void {\n        this.writeLongTail(1, 0, value);\n    }\n\n    public writePitchInterval(value: number): void {\n        if (value < 0) {\n            this.write(1, 1); // sign\n            this.writeLongTail(1, 3, -value);\n        } else {\n            this.write(1, 0); // sign\n            this.writeLongTail(1, 3, value);\n        }\n    }\n\n    public concat(other: BitFieldWriter): void {\n        for (let i: number = 0; i < other._index; i++) {\n            this._bits[this._index++] = other._bits[i];\n        }\n    }\n\n    public encodeBase64(buffer: number[]): number[] {\n\n        for (let i: number = 0; i < this._index; i += 6) {\n            const value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\n            buffer.push(base64IntToCharCode[value]);\n        }\n        return buffer;\n    }\n\n    public lengthBase64(): number {\n        return Math.ceil(this._index / 6);\n    }\n}\n\nexport interface NotePin {\n    interval: number;\n    time: number;\n    size: number;\n}\n\nexport function makeNotePin(interval: number, time: number, size: number): NotePin {\n    return { interval: interval, time: time, size: size };\n}\n\nexport class Note {\n    public pitches: number[];\n    public pins: NotePin[];\n    public start: number;\n    public end: number;\n    public continuesLastPattern: boolean;\n\n    public constructor(pitch: number, start: number, end: number, size: number, fadeout: boolean = false) {\n        this.pitches = [pitch];\n        this.pins = [makeNotePin(0, 0, size), makeNotePin(0, end - start, fadeout ? 0 : size)];\n        this.start = start;\n        this.end = end;\n        this.continuesLastPattern = false;\n    }\n\n    public pickMainInterval(): number {\n        let longestFlatIntervalDuration: number = 0;\n        let mainInterval: number = 0;\n        for (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\n            const pinA: NotePin = this.pins[pinIndex - 1];\n            const pinB: NotePin = this.pins[pinIndex];\n            if (pinA.interval == pinB.interval) {\n                const duration: number = pinB.time - pinA.time;\n                if (longestFlatIntervalDuration < duration) {\n                    longestFlatIntervalDuration = duration;\n                    mainInterval = pinA.interval;\n                }\n            }\n        }\n        if (longestFlatIntervalDuration == 0) {\n            let loudestSize: number = 0;\n            for (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\n                const pin: NotePin = this.pins[pinIndex];\n                if (loudestSize < pin.size) {\n                    loudestSize = pin.size;\n                    mainInterval = pin.interval;\n                }\n            }\n        }\n        return mainInterval;\n    }\n\n    public clone(): Note {\n        const newNote: Note = new Note(-1, this.start, this.end, 3);\n        newNote.pitches = this.pitches.concat();\n        newNote.pins = [];\n        for (const pin of this.pins) {\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\n        }\n        newNote.continuesLastPattern = this.continuesLastPattern;\n        return newNote;\n    }\n\n    public getEndPinIndex(part: number): number {\n        let endPinIndex: number;\n        for (endPinIndex = 1; endPinIndex < this.pins.length - 1; endPinIndex++) {\n            if (this.pins[endPinIndex].time + this.start > part) break;\n        }\n        return endPinIndex;\n    }\n}\n\nexport class Pattern {\n    public notes: Note[] = [];\n    public readonly instruments: number[] = [0];\n\n    public cloneNotes(): Note[] {\n        const result: Note[] = [];\n        for (const note of this.notes) {\n            result.push(note.clone());\n        }\n        return result;\n    }\n\n    public reset(): void {\n        this.notes.length = 0;\n        this.instruments[0] = 0;\n        this.instruments.length = 1;\n    }\n\n    public toJsonObject(song: Song, channel: Channel, isModChannel: boolean): any {\n        const noteArray: Object[] = [];\n        for (const note of this.notes) {\n            // Only one ins per pattern is enforced in mod channels.\n            let instrument: Instrument = channel.instruments[this.instruments[0]];\n            let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\n            let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n            const pointArray: Object[] = [];\n            for (const pin of note.pins) {\n                let useVol: number = isModChannel ? Math.round(pin.size) : Math.round(pin.size * 100 / volumeCap);\n                pointArray.push({\n                    \"tick\": (pin.time + note.start) * Config.rhythms[song.rhythm].stepsPerBeat / Config.partsPerBeat,\n                    \"pitchBend\": pin.interval,\n                    \"volume\": useVol,\n                    \"forMod\": isModChannel,\n                });\n            }\n\n            const noteObject: any = {\n                \"pitches\": note.pitches,\n                \"points\": pointArray,\n            };\n            if (note.start == 0) {\n                noteObject[\"continuesLastPattern\"] = note.continuesLastPattern;\n            }\n            noteArray.push(noteObject);\n        }\n\n        const patternObject: any = { \"notes\": noteArray };\n        if (song.patternInstruments) {\n            patternObject[\"instruments\"] = this.instruments.map(i => i + 1);\n        }\n        return patternObject;\n    }\n\n    public fromJsonObject(patternObject: any, song: Song, channel: Channel, importedPartsPerBeat: number, isNoiseChannel: boolean, isModChannel: boolean): void {\n        if (song.patternInstruments) {\n            if (Array.isArray(patternObject[\"instruments\"])) {\n                const instruments: any[] = patternObject[\"instruments\"];\n                const instrumentCount: number = clamp(Config.instrumentCountMin, song.getMaxInstrumentsPerPatternForChannel(channel) + 1, instruments.length);\n                for (let j: number = 0; j < instrumentCount; j++) {\n                    this.instruments[j] = clamp(0, channel.instruments.length, (instruments[j] | 0) - 1);\n                }\n                this.instruments.length = instrumentCount;\n            } else {\n                this.instruments[0] = clamp(0, channel.instruments.length, (patternObject[\"instrument\"] | 0) - 1);\n                this.instruments.length = 1;\n            }\n        }\n\n        if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\n            const maxNoteCount: number = Math.min(song.beatsPerBar * Config.partsPerBeat * (isModChannel ? Config.modCount : 1), patternObject[\"notes\"].length >>> 0);\n\n            // TODO: Consider supporting notes specified in any timing order, sorting them and truncating as necessary.\n            //let tickClock: number = 0;\n            for (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\n                if (j >= maxNoteCount) break;\n\n                const noteObject = patternObject[\"notes\"][j];\n                if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\n                    continue;\n                }\n\n                const note: Note = new Note(0, 0, 0, 0);\n                note.pitches = [];\n                note.pins = [];\n\n                for (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\n                    const pitch: number = noteObject[\"pitches\"][k] | 0;\n                    if (note.pitches.indexOf(pitch) != -1) continue;\n                    note.pitches.push(pitch);\n                    if (note.pitches.length >= Config.maxChordSize) break;\n                }\n                if (note.pitches.length < 1) continue;\n\n                //let noteClock: number = tickClock;\n                let startInterval: number = 0;\n                for (let k: number = 0; k < noteObject[\"points\"].length; k++) {\n                    const pointObject: any = noteObject[\"points\"][k];\n                    if (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\n                    const interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\n\n                    const time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\n\n                    let instrument: Instrument = channel.instruments[this.instruments[0]];\n                    let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\n\n                    // Only one instrument per pattern allowed in mod channels.\n                    let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n\n                    // The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\n                    // A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\n                    let size: number;\n                    if (pointObject[\"volume\"] == undefined) {\n                        size = volumeCap;\n                    } else if (pointObject[\"forMod\"] == undefined) {\n                        size = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n                    else {\n                        size = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n\n                    if (time > song.beatsPerBar * Config.partsPerBeat) continue;\n                    if (note.pins.length == 0) {\n                        //if (time < noteClock) continue;\n                        note.start = time;\n                        startInterval = interval;\n                    } else {\n                        //if (time <= noteClock) continue;\n                    }\n                    //noteClock = time;\n\n                    note.pins.push(makeNotePin(interval - startInterval, time - note.start, size));\n                }\n                if (note.pins.length < 2) continue;\n\n                note.end = note.pins[note.pins.length - 1].time + note.start;\n\n                const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\n                let lowestPitch: number = maxPitch;\n                let highestPitch: number = 0;\n                for (let k: number = 0; k < note.pitches.length; k++) {\n                    note.pitches[k] += startInterval;\n                    if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\n                        note.pitches.splice(k, 1);\n                        k--;\n                    }\n                    if (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\n                    if (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\n                }\n                if (note.pitches.length < 1) continue;\n\n                for (let k: number = 0; k < note.pins.length; k++) {\n                    const pin: NotePin = note.pins[k];\n                    if (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\n                    if (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\n                    if (k >= 2) {\n                        if (pin.interval == note.pins[k - 1].interval &&\n                            pin.interval == note.pins[k - 2].interval &&\n                            pin.size == note.pins[k - 1].size &&\n                            pin.size == note.pins[k - 2].size) {\n                            note.pins.splice(k - 1, 1);\n                            k--;\n                        }\n                    }\n                }\n\n                if (note.start == 0) {\n                    note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true);\n                } else {\n                    note.continuesLastPattern = false;\n                }\n\n                this.notes.push(note);\n            }\n        }\n    }\n}\n\nexport class Operator {\n    public frequency: number = 4;\n    public amplitude: number = 0;\n    public waveform: number = 0;\n    public pulseWidth: number = 0.5;\n\n    constructor(index: number) {\n        this.reset(index);\n    }\n\n    public reset(index: number): void {\n        this.frequency = 4; //defualt to 1x\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\n        this.waveform = 0;\n        this.pulseWidth = 5;\n    }\n\n    public copy(other: Operator): void {\n        this.frequency = other.frequency;\n        this.amplitude = other.amplitude;\n        this.waveform = other.waveform;\n        this.pulseWidth = other.pulseWidth;\n    }\n}\n\nexport class CustomAlgorithm {\n    public name: string = \"\";\n    public carrierCount: number = 0;\n    public modulatedBy: number[][] = [[], [], [], [], [], []];\n    public associatedCarrier: number[] = [];\n\n    constructor(){\n        this.fromPreset(1);\n    }\n\n    public set(carriers: number, modulation: number[][]) {\n        this.reset();\n        this.carrierCount = carriers;\n        for (let i = 0; i < this.modulatedBy.length; i++) {\n            this.modulatedBy[i] = modulation[i];\n            if (i < carriers) {\n                this.associatedCarrier[i] = i+1;\n            }\n            this.name += (i+1);\n            for (let j = 0; j < modulation[i].length;j++) {\n                this.name += modulation[i][j];\n                if (modulation[i][j] > carriers-1) {\n                    this.associatedCarrier[modulation[i][j] - 1] = i + 1;\n                }\n                this.name += \",\";\n            }\n            if (i < carriers) {\n                this.name += \"|\";\n            } else {\n                this.name += \".\";\n            }\n        }\n    }\n\n    public reset(): void {\n        this.name = \"\"\n        this.carrierCount = 1;\n        this.modulatedBy = [[2, 3, 4, 5, 6], [], [], [], [], []];\n        this.associatedCarrier = [1, 1, 1, 1, 1, 1];\n    }\n\n    public copy(other: CustomAlgorithm): void {\n        this.name = other.name;\n        this.carrierCount = other.carrierCount;\n        this.modulatedBy = other.modulatedBy;\n        this.associatedCarrier = other.associatedCarrier;\n    }\n\n    public fromPreset(other: number): void {\n        this.reset();\n        let preset = Config.algorithms6Op[other]\n        this.name = preset.name;\n        this.carrierCount = preset.carrierCount;\n        for (var i = 0; i < preset.modulatedBy.length; i++) {\n            this.modulatedBy[i] = Array.from(preset.modulatedBy[i]);\n            this.associatedCarrier[i] = preset.associatedCarrier[i];\n        }\n    }\n}\n\nexport class CustomFeedBack { //feels redunant\n    public name: string = \"\";\n    public indices: number[][] = [[], [], [], [], [], []];\n\n    constructor() {\n        this.fromPreset(1);\n    }\n\n    public set(inIndices: number[][]) {\n        this.reset();\n        for (let i = 0; i < this.indices.length; i++) {\n            this.indices[i] = inIndices[i];\n            for (let j = 0; j < inIndices[i].length; j++) {\n                this.name += inIndices[i][j];\n                this.name += \",\";\n            }\n            this.name += \".\";\n        }\n    }\n\n    public reset(): void {\n        this.reset;\n        this.name = \"\";\n        this.indices = [[1], [], [], [], [], []];\n    }\n\n    public copy(other: CustomFeedBack): void {\n        this.name = other.name;\n        this.indices = other.indices;\n    }\n\n    public fromPreset(other: number): void {\n        this.reset();\n        let preset = Config.feedbacks6Op[other]\n        for (var i = 0; i < preset.indices.length; i++) {\n            this.indices[i] = Array.from(preset.indices[i]);\n            for (let j = 0; j < preset.indices[i].length; j++) {\n                this.name += preset.indices[i][j];\n                this.name += \",\";\n            }\n            this.name += \".\";\n        }\n    }\n}\n\nexport class SpectrumWave {\n    public spectrum: number[] = [];\n    public hash: number = -1;\n\n    constructor(isNoiseChannel: boolean) {\n        this.reset(isNoiseChannel);\n    }\n\n    public reset(isNoiseChannel: boolean): void {\n        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n            if (isNoiseChannel) {\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\n            } else {\n                const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\n            }\n        }\n        this.markCustomWaveDirty();\n    }\n\n    public markCustomWaveDirty(): void {\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.spectrumMax + 2) - 1;\n        let hash: number = 0;\n        for (const point of this.spectrum) hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\n\nclass SpectrumWaveState {\n    public wave: Float32Array | null = null;\n    private _hash: number = -1;\n\n    public getCustomWave(settings: SpectrumWave, lowestOctave: number): Float32Array {\n        if (this._hash == settings.hash) return this.wave!;\n        this._hash = settings.hash;\n\n        const waveLength: number = Config.spectrumNoiseLength;\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave: Float32Array = this.wave;\n\n        for (let i: number = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n\n        const highestOctave: number = 14;\n        const falloffRatio: number = 0.25;\n        // Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\n        const pitchTweak: number[] = [0, 1 / 7, Math.log2(5 / 4), 3 / 7, Math.log2(3 / 2), 5 / 7, 6 / 7];\n        function controlPointToOctave(point: number): number {\n            return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\n        }\n\n        let combinedAmplitude: number = 1;\n        for (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\n            const value1: number = (i <= 0) ? 0 : settings.spectrum[i - 1];\n            const value2: number = (i >= Config.spectrumControlPoints) ? settings.spectrum[Config.spectrumControlPoints - 1] : settings.spectrum[i];\n            const octave1: number = controlPointToOctave(i - 1);\n            let octave2: number = controlPointToOctave(i);\n            if (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\n            if (value1 == 0 && value2 == 0) continue;\n\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\n        }\n        if (settings.spectrum[Config.spectrumControlPoints - 1] > 0) {\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, settings.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\n        }\n\n        inverseRealFourierTransform(wave, waveLength);\n        scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\n\n        // Duplicate the first sample at the end for easier wrap-around interpolation.\n        wave[waveLength] = wave[0];\n\n        return wave;\n    }\n}\n\nexport class HarmonicsWave {\n    public harmonics: number[] = [];\n    public hash: number = -1;\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset(): void {\n        for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n            this.harmonics[i] = 0;\n        }\n        this.harmonics[0] = Config.harmonicsMax;\n        this.harmonics[3] = Config.harmonicsMax;\n        this.harmonics[6] = Config.harmonicsMax;\n        this.markCustomWaveDirty();\n    }\n\n    public markCustomWaveDirty(): void {\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.harmonicsMax + 2) - 1;\n        let hash: number = 0;\n        for (const point of this.harmonics) hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\n\nclass HarmonicsWaveState {\n    public wave: Float32Array | null = null;\n    private _hash: number = -1;\n    private _generatedForType: InstrumentType;\n\n    public getCustomWave(settings: HarmonicsWave, instrumentType: InstrumentType): Float32Array {\n        if (this._hash == settings.hash && this._generatedForType == instrumentType) return this.wave!;\n        this._hash = settings.hash;\n        this._generatedForType = instrumentType;\n\n        const harmonicsRendered: number = (instrumentType == InstrumentType.pickedString) ? Config.harmonicsRenderedForPickedString : Config.harmonicsRendered;\n\n        const waveLength: number = Config.harmonicsWavelength;\n        const retroWave: Float32Array = getDrumWave(0, null, null);\n\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave: Float32Array = this.wave;\n\n        for (let i: number = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n\n        const overallSlope: number = -0.25;\n        let combinedControlPointAmplitude: number = 1;\n\n        for (let harmonicIndex: number = 0; harmonicIndex < harmonicsRendered; harmonicIndex++) {\n            const harmonicFreq: number = harmonicIndex + 1;\n            let controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? settings.harmonics[harmonicIndex] : settings.harmonics[Config.harmonicsControlPoints - 1];\n            if (harmonicIndex >= Config.harmonicsControlPoints) {\n                controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (harmonicsRendered - Config.harmonicsControlPoints);\n            }\n            const normalizedValue: number = controlValue / Config.harmonicsMax;\n            let amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\n            if (harmonicIndex < Config.harmonicsControlPoints) {\n                combinedControlPointAmplitude += amplitude;\n            }\n            amplitude *= Math.pow(harmonicFreq, overallSlope);\n\n            // Multiply all the sine wave amplitudes by 1 or -1 based on the LFSR\n            // retro wave (effectively random) to avoid egregiously tall spikes.\n            amplitude *= retroWave[harmonicIndex + 589];\n\n            wave[waveLength - harmonicFreq] = amplitude;\n        }\n\n        inverseRealFourierTransform(wave, waveLength);\n\n        // Limit the maximum wave amplitude.\n        const mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\n        for (let i: number = 0; i < wave.length; i++) wave[i] *= mult;\n\n        performIntegralOld(wave);\n\n        // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\n        wave[waveLength] = wave[0];\n\n        return wave;\n    }\n}\n\nexport class FilterControlPoint {\n    public freq: number = 0;\n    public gain: number = Config.filterGainCenter;\n    public type: FilterType = FilterType.peak;\n\n    public set(freqSetting: number, gainSetting: number): void {\n        this.freq = freqSetting;\n        this.gain = gainSetting;\n    }\n\n    public getHz(): number {\n        return FilterControlPoint.getHzFromSettingValue(this.freq);\n    }\n\n    public static getHzFromSettingValue(value: number): number {\n        return Config.filterFreqReferenceHz * Math.pow(2.0, (value - Config.filterFreqReferenceSetting) * Config.filterFreqStep);\n    }\n    public static getSettingValueFromHz(hz: number): number {\n        return Math.log2(hz / Config.filterFreqReferenceHz) / Config.filterFreqStep + Config.filterFreqReferenceSetting;\n    }\n    public static getRoundedSettingValueFromHz(hz: number): number {\n        return Math.max(0, Math.min(Config.filterFreqRange - 1, Math.round(FilterControlPoint.getSettingValueFromHz(hz))));\n    }\n\n    public getLinearGain(peakMult: number = 1.0): number {\n        const power: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        const neutral: number = (this.type == FilterType.peak) ? 0.0 : -0.5;\n        const interpolatedPower: number = neutral + (power - neutral) * peakMult;\n        return Math.pow(2.0, interpolatedPower);\n    }\n    public static getRoundedSettingValueFromLinearGain(linearGain: number): number {\n        return Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter)));\n    }\n\n    public toCoefficients(filter: FilterCoefficients, sampleRate: number, freqMult: number = 1.0, peakMult: number = 1.0): void {\n        const cornerRadiansPerSample: number = 2.0 * Math.PI * Math.max(Config.filterFreqMinHz, Math.min(Config.filterFreqMaxHz, freqMult * this.getHz())) / sampleRate;\n        const linearGain: number = this.getLinearGain(peakMult);\n        switch (this.type) {\n            case FilterType.lowPass:\n                filter.lowPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case FilterType.highPass:\n                filter.highPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case FilterType.peak:\n                filter.peak2ndOrder(cornerRadiansPerSample, linearGain, 1.0);\n                break;\n            default:\n                throw new Error();\n        }\n    }\n\n    public getVolumeCompensationMult(): number {\n        const octave: number = (this.freq - Config.filterFreqReferenceSetting) * Config.filterFreqStep;\n        const gainPow: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        switch (this.type) {\n            case FilterType.lowPass:\n                const freqRelativeTo8khz: number = Math.pow(2.0, octave) * Config.filterFreqReferenceHz / 8000.0;\n                // Reverse the frequency warping from importing legacy simplified filters to imitate how the legacy filter cutoff setting affected volume.\n                const warpedFreq: number = (Math.sqrt(1.0 + 4.0 * freqRelativeTo8khz) - 1.0) / 2.0;\n                const warpedOctave: number = Math.log2(warpedFreq);\n                return Math.pow(0.5, 0.2 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, Math.max(-3.0, 0.595 * warpedOctave + 0.35 * Math.min(0.0, gainPow + 1.0))));\n            case FilterType.highPass:\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, 0.3 * (-octave - Math.log2(Config.filterFreqReferenceHz / 125.0)) + 0.2 * Math.min(0.0, gainPow + 1.0)));\n            case FilterType.peak:\n                const distanceFromCenter: number = octave + Math.log2(Config.filterFreqReferenceHz / 2000.0);\n                const freqLoudness: number = Math.pow(1.0 / (1.0 + Math.pow(distanceFromCenter / 3.0, 2.0)), 2.0);\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow) + 0.1 * freqLoudness * Math.min(0.0, gainPow));\n            default:\n                throw new Error();\n        }\n    }\n}\n\nexport class FilterSettings {\n    public readonly controlPoints: FilterControlPoint[] = [];\n    public controlPointCount: number = 0;\n\n    constructor() {\n        this.reset();\n    }\n\n    reset(): void {\n        this.controlPointCount = 0;\n    }\n\n    addPoint(type: FilterType, freqSetting: number, gainSetting: number): void {\n        let controlPoint: FilterControlPoint;\n        if (this.controlPoints.length <= this.controlPointCount) {\n            controlPoint = new FilterControlPoint();\n            this.controlPoints[this.controlPointCount] = controlPoint;\n        } else {\n            controlPoint = this.controlPoints[this.controlPointCount];\n        }\n        this.controlPointCount++;\n        controlPoint.type = type;\n        controlPoint.set(freqSetting, gainSetting);\n    }\n\n    public toJsonObject(): Object {\n        const filterArray: any[] = [];\n        for (let i: number = 0; i < this.controlPointCount; i++) {\n            const point: FilterControlPoint = this.controlPoints[i];\n            filterArray.push({\n                \"type\": Config.filterTypeNames[point.type],\n                \"cutoffHz\": Math.round(point.getHz() * 100) / 100,\n                \"linearGain\": Math.round(point.getLinearGain() * 10000) / 10000,\n            });\n        }\n        return filterArray;\n    }\n\n    public fromJsonObject(filterObject: any): void {\n        this.controlPoints.length = 0;\n        if (filterObject) {\n            for (const pointObject of filterObject) {\n                const point: FilterControlPoint = new FilterControlPoint();\n                point.type = Config.filterTypeNames.indexOf(pointObject[\"type\"]);\n                if (<any>point.type == -1) point.type = FilterType.peak;\n                if (pointObject[\"cutoffHz\"] != undefined) {\n                    point.freq = FilterControlPoint.getRoundedSettingValueFromHz(pointObject[\"cutoffHz\"]);\n                } else {\n                    point.freq = 0;\n                }\n                if (pointObject[\"linearGain\"] != undefined) {\n                    point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(pointObject[\"linearGain\"]);\n                } else {\n                    point.gain = Config.filterGainCenter;\n                }\n                this.controlPoints.push(point);\n            }\n        }\n        this.controlPointCount = this.controlPoints.length;\n    }\n\n    // Returns true if all filter control points match in number and type (but not freq/gain)\n    public static filtersCanMorph(filterA: FilterSettings, filterB: FilterSettings): boolean {\n        if (filterA.controlPointCount != filterB.controlPointCount)\n            return false;\n        for (let i: number = 0; i < filterA.controlPointCount; i++) {\n            if (filterA.controlPoints[i].type != filterB.controlPoints[i].type)\n                return false;\n        }\n        return true;\n    }\n\n    // Interpolate two FilterSettings, where pos=0 is filterA and pos=1 is filterB\n    public static lerpFilters(filterA: FilterSettings, filterB: FilterSettings, pos: number): FilterSettings {\n\n        let lerpedFilter: FilterSettings = new FilterSettings();\n\n        // One setting or another is null, return the other.\n        if (filterA == null) {\n            return filterA;\n        }\n        if (filterB == null) {\n            return filterB;\n        }\n\n        pos = Math.max(0, Math.min(1, pos));\n\n        // Filter control points match in number and type\n        if (this.filtersCanMorph(filterA, filterB)) {\n            for (let i: number = 0; i < filterA.controlPointCount; i++) {\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\n                lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + (filterB.controlPoints[i].freq - filterA.controlPoints[i].freq) * pos;\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (filterB.controlPoints[i].gain - filterA.controlPoints[i].gain) * pos;\n            }\n\n            lerpedFilter.controlPointCount = filterA.controlPointCount;\n\n            return lerpedFilter;\n        }\n        else {\n            // Not allowing morph of unmatching filters for now. It's a hornet's nest of problems, and I had it implemented and mostly working and it didn't sound very interesting since the shape becomes \"mushy\" in between\n            return (pos >= 1) ? filterB : filterA;\n        }\n    }\n\n    public convertLegacySettings(legacyCutoffSetting: number, legacyResonanceSetting: number, legacyEnv: Envelope): void {\n        this.reset();\n\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\n        const legacyFilterMax: number = 0.95;\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance: number = 0.95;\n        const legacyFilterCutoffRange: number = 11;\n        const legacyFilterResonanceRange: number = 8;\n\n        const resonant: boolean = (legacyResonanceSetting > 1);\n        const firstOrder: boolean = (legacyResonanceSetting == 0);\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        const envDecays: boolean = (legacyEnv.type == EnvelopeType.flare || legacyEnv.type == EnvelopeType.twang || legacyEnv.type == EnvelopeType.decay || legacyEnv.type == EnvelopeType.noteSize);\n\n        const standardSampleRate: number = 48000;\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n\n        if (legacyEnv.type == EnvelopeType.none && !resonant && cutoffAtMax) {\n            // The response is flat and there's no envelopes, so don't even bother adding any control points.\n        } else if (firstOrder) {\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\n            // However, BeepBox's original lowpass filters behaved oddly as they\n            // approach the nyquist frequency, so I've devised this curved conversion\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\n            const extraOctaves: number = 3.5;\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\n\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response: FrequencyResponse = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\n\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\n            // Bias slightly toward 2^(-extraOctaves):\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            // Decaying envelopes move the cutoff frequency back into an area where the best approximation of the first order slope requires a lower gain setting.\n            if (envDecays) logGain = Math.min(logGain, -1.0);\n            const convertedGain: number = Math.pow(2.0, logGain);\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        } else {\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain: number = 0.5 / intendedGain;\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio: number = legacyRadians / maxRadians;\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz: number;\n            if (envDecays) {\n                curvedHz = standardSampleRate * Math.min(curvedRadians, legacyRadians * Math.pow(2, 0.25)) / (2.0 * Math.PI);\n            } else {\n                curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            }\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n\n            let legacyFilterGain: number;\n            if (envDecays) {\n                legacyFilterGain = intendedGain;\n            } else {\n                const legacyFilter: FilterCoefficients = new FilterCoefficients();\n                legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n                const response: FrequencyResponse = new FrequencyResponse();\n                response.analyze(legacyFilter, curvedRadians);\n                legacyFilterGain = response.magnitude();\n            }\n            if (!resonant) legacyFilterGain = Math.min(legacyFilterGain, Math.sqrt(0.5));\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        }\n\n        // Added for JummBox - making a 0 point filter does not truncate control points!\n        this.controlPoints.length = this.controlPointCount;\n    }\n\n    // Similar to above, but purpose-fit for quick conversions in synth calls.\n    public convertLegacySettingsForSynth(legacyCutoffSetting: number, legacyResonanceSetting: number, allowFirstOrder: boolean = false): void {\n        this.reset();\n\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\n        const legacyFilterMax: number = 0.95;\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance: number = 0.95;\n        const legacyFilterCutoffRange: number = 11;\n        const legacyFilterResonanceRange: number = 8;\n\n        const firstOrder: boolean = (legacyResonanceSetting == 0 && allowFirstOrder);\n        const standardSampleRate: number = 48000;\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n\n        if (firstOrder) {\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\n            // However, BeepBox's original lowpass filters behaved oddly as they\n            // approach the nyquist frequency, so I've devised this curved conversion\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\n            const extraOctaves: number = 3.5;\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\n\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response: FrequencyResponse = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\n\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\n            // Bias slightly toward 2^(-extraOctaves):\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            const convertedGain: number = Math.pow(2.0, logGain);\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        } else {\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain: number = 0.5 / intendedGain;\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio: number = legacyRadians / maxRadians;\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz: number;\n\n            curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting: number = FilterControlPoint.getSettingValueFromHz(curvedHz);\n\n            let legacyFilterGain: number;\n\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\n            legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n            const response: FrequencyResponse = new FrequencyResponse();\n            response.analyze(legacyFilter, curvedRadians);\n            legacyFilterGain = response.magnitude();\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        }\n\n    }\n}\n\nexport class EnvelopeSettings {\n    public target: number = 0;\n    public index: number = 0;\n    public envelope: number = 0;\n\n    constructor() {\n        this.reset();\n    }\n\n    reset(): void {\n        this.target = 0;\n        this.index = 0;\n        this.envelope = 0;\n    }\n\n    public toJsonObject(): Object {\n        const envelopeObject: any = {\n            \"target\": Config.instrumentAutomationTargets[this.target].name,\n            \"envelope\": Config.envelopes[this.envelope].name,\n        };\n        if (Config.instrumentAutomationTargets[this.target].maxCount > 1) {\n            envelopeObject[\"index\"] = this.index;\n        }\n        return envelopeObject;\n    }\n\n    public fromJsonObject(envelopeObject: any): void {\n        this.reset();\n\n        let target: AutomationTarget = Config.instrumentAutomationTargets.dictionary[envelopeObject[\"target\"]];\n        if (target == null) target = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n        this.target = target.index;\n\n        let envelope: Envelope = Config.envelopes.dictionary[envelopeObject[\"envelope\"]];\n        if (envelope == null) envelope = Config.envelopes.dictionary[\"none\"];\n        this.envelope = envelope.index;\n\n        if (envelopeObject[\"index\"] != undefined) {\n            this.index = clamp(0, Config.instrumentAutomationTargets[this.target].maxCount, envelopeObject[\"index\"] | 0);\n        } else {\n            this.index = 0;\n        }\n    }\n}\n\n// Settings that were available to old versions of BeepBox but are no longer available in the\n// current version that need to be reinterpreted as a group to determine the best way to\n// represent them in the current version.\ninterface LegacySettings {\n    filterCutoff?: number;\n    filterResonance?: number;\n    filterEnvelope?: Envelope;\n    pulseEnvelope?: Envelope;\n    operatorEnvelopes?: Envelope[];\n    feedbackEnvelope?: Envelope;\n}\n\ninterface HeldMod {\n    volume: number;\n    channelIndex: number;\n    instrumentIndex: number;\n    setting: number;\n    holdFor: number;\n}\n\nexport class Instrument {\n    public type: InstrumentType = InstrumentType.chip;\n    public preset: number = 0;\n    public chipWave: number = 2;\n\t// advloop addition\n\tpublic isUsingAdvancedLoopControls: boolean = false;\n\tpublic chipWaveLoopStart: number = 0;\n\tpublic chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n\tpublic chipWaveLoopMode: number = 0; // 0: loop, 1: ping-pong, 2: once, 3: play loop once\n\tpublic chipWavePlayBackwards: boolean = false;\n        public chipWaveStartOffset: number = 0;\n        // advloop addition\n    public chipNoise: number = 1;\n    public eqFilter: FilterSettings = new FilterSettings();\n    public eqFilterType: boolean = false;\n    public eqFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\n    public eqFilterSimplePeak: number = 0;\n    public noteFilter: FilterSettings = new FilterSettings();\n    public noteFilterType: boolean = false;\n    public noteFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\n    public noteFilterSimplePeak: number = 0;\n    public eqSubFilters: (FilterSettings | null)[] = [];\n    public noteSubFilters: (FilterSettings | null)[] = [];\n    public tmpEqFilterStart: FilterSettings | null;\n    public tmpEqFilterEnd: FilterSettings | null;\n    public tmpNoteFilterStart: FilterSettings | null;\n    public tmpNoteFilterEnd: FilterSettings | null;\n    public envelopes: EnvelopeSettings[] = [];\n    public fadeIn: number = 0;\n    public fadeOut: number = Config.fadeOutNeutral;\n    public envelopeCount: number = 0;\n    public transition: number = Config.transitions.dictionary[\"normal\"].index;\n    public pitchShift: number = 0;\n    public detune: number = 0;\n    public vibrato: number = 0;\n    public interval: number = 0;\n    public vibratoDepth: number = 0;\n    public vibratoSpeed: number = 10;\n    public vibratoDelay: number = 0;\n    public vibratoType: number = 0;\n    public envelopeSpeed: number = 12;\n    public discreteEnvelope: boolean = false;\n    public unison: number = 0;\n    public unisonVoices: number = 1;\n    public unisonSpread: number = 0.0;\n    public unisonOffset: number = 0.0;\n    public unisonExpression: number = 1.4;\n    public unisonSign: number = 1.0;\n    public effects: number = 0;\n    public chord: number = 1;\n    public volume: number = 0;\n    public pan: number = Config.panCenter;\n    public panDelay: number = 10;\n    public arpeggioSpeed: number = 12;\n    public fastTwoNoteArp: boolean = false;\n    public legacyTieOver: boolean = false;\n    public clicklessTransition: boolean = false;\n    public aliases: boolean = false;\n    public pulseWidth: number = Config.pulseWidthRange;\n    public decimalOffset: number = 0;\n    public supersawDynamism: number = Config.supersawDynamismMax;\n\tpublic supersawSpread: number = Math.ceil(Config.supersawSpreadMax / 2.0);\n\tpublic supersawShape: number = 0;\n\tpublic stringSustain: number = 10;\n\tpublic stringSustainType: SustainType = SustainType.acoustic;\n    public distortion: number = 0;\n    public bitcrusherFreq: number = 0;\n    public bitcrusherQuantization: number = 0;\n    public chorus: number = 0;\n    public reverb: number = 0;\n    public echoSustain: number = 0;\n    public echoDelay: number = 0;\n    public algorithm: number = 0;\n    public feedbackType: number = 0;\n    public algorithm6Op: number = 1;\n    public feedbackType6Op: number = 1;//default to not custom\n    public customAlgorithm: CustomAlgorithm = new CustomAlgorithm(); //{ name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] };\n    public customFeedbackType: CustomFeedBack = new CustomFeedBack(); //{ name: \"1↔4 2↔5 3↔6\", indices: [[3], [5], [6], [1], [2], [3]] };\n    public feedbackAmplitude: number = 0;\n    public customChipWave: Float32Array = new Float32Array(64);\n    public customChipWaveIntegral: Float32Array = new Float32Array(65); // One extra element for wrap-around in chipSynth.\n    public readonly operators: Operator[] = [];\n    public readonly spectrumWave: SpectrumWave;\n    public readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\n    public readonly drumsetEnvelopes: number[] = [];\n    public readonly drumsetSpectrumWaves: SpectrumWave[] = [];\n    public modChannels: number[] = [];\n    public modInstruments: number[] = [];\n    public modulators: number[] = [];\n    public modFilterTypes: number[] = [];\n    public invalidModulators: boolean[] = [];\n    constructor(isNoiseChannel: boolean, isModChannel: boolean) {\n\n        // @jummbus - My screed on how modulator arrays for instruments work, for the benefit of myself in the future, or whoever else.\n        //\n        // modulators[mod] is the index in Config.modulators to use, with \"none\" being the first entry.\n        //\n        // modChannels[mod] gives the index of a channel set for this mod. Two special values:\n        //   -2 \"none\"\n        //   -1 \"song\"\n        //   0+ actual channel index\n        //\n        // modInstruments[mod] gives the index of an instrument within the channel set for this mod. Again, two special values:\n        //   [0 ~ channel.instruments.length-1]     channel's instrument index\n        //   channel.instruments.length             \"all\"\n        //   channel.instruments.length+1           \"active\"\n        //\n        // modFilterTypes[mod] gives some info about the filter type: 0 is morph, 1+ is index in the dot selection array (dot 1 x, dot 1 y, dot 2 x...)\n        //   0  filter morph\n        //   1+ filter dot target, starting from dot 1 x and then dot 1 y, then repeating x, y for all dots in order. Note: odd values are always \"x\" targets, even are \"y\".\n\n        if (isModChannel) {\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                this.modChannels.push(-2);\n                this.modInstruments.push(0);\n                this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n            }\n        }\n\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\n        for (let i: number = 0; i < Config.operatorCount+2; i++) {//hopefully won't break everything\n            this.operators[i] = new Operator(i);\n        }\n        for (let i: number = 0; i < Config.drumCount; i++) {\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n        }\n\n        for (let i = 0; i < 64; i++) {\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\n        }\n\n        let sum: number = 0.0;\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\n            sum += this.customChipWave[i];\n        }\n        const average: number = sum / this.customChipWave.length;\n\n        // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n        let cumulative: number = 0;\n        let wavePrev: number = 0;\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\n            cumulative += wavePrev;\n            wavePrev = this.customChipWave[i] - average;\n            this.customChipWaveIntegral[i] = cumulative;\n        }\n\n        // 65th, last sample is for anti-aliasing\n        this.customChipWaveIntegral[64] = 0.0;\n\n    }\n\n    public setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\n        // Mod channels are forced to one type.\n        if (isModChannel) type = InstrumentType.mod;\n        this.type = type;\n        this.preset = type;\n        this.volume = 0;\n        this.effects = (1 << EffectType.panning); // Panning enabled by default in JB.\n        this.chorus = Config.chorusRange - 1;\n        this.reverb = 0;\n        this.echoSustain = Math.floor((Config.echoSustainRange - 1) * 0.5);\n        this.echoDelay = Math.floor((Config.echoDelayRange - 1) * 0.5);\n        this.eqFilter.reset();\n        this.eqFilterType = false;\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.eqFilterSimplePeak = 0;\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n            this.eqSubFilters[i] = null;\n            this.noteSubFilters[i] = null;\n        }\n        this.noteFilter.reset();\n        this.noteFilterType = false;\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.noteFilterSimplePeak = 0;\n        this.distortion = Math.floor((Config.distortionRange - 1) * 0.75);\n        this.bitcrusherFreq = Math.floor((Config.bitcrusherFreqRange - 1) * 0.5)\n        this.bitcrusherQuantization = Math.floor((Config.bitcrusherQuantizationRange - 1) * 0.5);\n        this.pan = Config.panCenter;\n        this.panDelay = 10;\n        this.pitchShift = Config.pitchShiftCenter;\n        this.detune = Config.detuneCenter;\n        this.vibrato = 0;\n        this.unison = 0;\n        this.stringSustain = 10;\n        this.stringSustainType = Config.enableAcousticSustain ? SustainType.acoustic : SustainType.bright;\n        this.clicklessTransition = false;\n        this.arpeggioSpeed = 12;\n        this.envelopeSpeed = 12;\n        this.discreteEnvelope = false;\n        this.legacyTieOver = false;\n        this.aliases = false;\n        this.fadeIn = 0;\n        this.fadeOut = Config.fadeOutNeutral;\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        this.envelopeCount = 0;\n        switch (type) {\n            case InstrumentType.chip:\n                this.chipWave = 2;\n                // TODO: enable the chord effect?\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n\t\t\t\t\t\t\t\t // advloop addition\n                    this.isUsingAdvancedLoopControls = false;\n                    this.chipWaveLoopStart = 0;\n                    this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n                    this.chipWaveLoopMode = 0;\n                    this.chipWavePlayBackwards = false;\n                    this.chipWaveStartOffset = 0;\n                    // advloop addition\n                break;\n            case InstrumentType.customChipWave:\n                this.chipWave = 2;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                for (let i: number = 0; i < 64; i++) {\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\n                }\n\n                let sum: number = 0.0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average: number = sum / this.customChipWave.length;\n\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n                let cumulative: number = 0;\n                let wavePrev: number = 0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n\n                this.customChipWaveIntegral[64] = 0.0;\n                break;\n            case InstrumentType.fm:\n                this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.feedbackAmplitude = 0;\n                for (let i: number = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case InstrumentType.fm6op:\n                this.transition = 1;\n                this.vibrato = 0;\n                this.effects = 1;\n                this.chord = 3;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.algorithm6Op = 1;\n                this.feedbackType6Op = 1;\n                this.customAlgorithm.fromPreset(1);\n                this.feedbackAmplitude = 0;\n                for (let i: number = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case InstrumentType.noise:\n                this.chipNoise = 1;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                break;\n            case InstrumentType.spectrum:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.spectrumWave.reset(isNoiseChannel);\n                break;\n            case InstrumentType.drumset:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                for (let i: number = 0; i < Config.drumCount; i++) {\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n                    }\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\n                }\n                break;\n            case InstrumentType.harmonics:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case InstrumentType.pwm:\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.pulseWidth = Config.pulseWidthRange;\n                this.decimalOffset = 0;\n                break;\n            case InstrumentType.pickedString:\n                this.chord = Config.chords.dictionary[\"strum\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case InstrumentType.mod:\n                this.transition = 0;\n                this.vibrato = 0;\n                this.interval = 0;\n                this.effects = 0;\n                this.chord = 0;\n                this.modChannels = [];\n                this.modInstruments = [];\n                this.modulators = [];\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    this.modChannels.push(-2);\n                    this.modInstruments.push(0);\n                    this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n                    this.invalidModulators[mod] = false;\n                    this.modFilterTypes[mod] = 0;\n                }\n                break;\n            case InstrumentType.supersaw:\n\t\t\t\tthis.chord = Config.chords.dictionary[\"arpeggio\"].index;\n\t\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\n\t\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n\t\t\t\tthis.supersawShape = 0;\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange - 1;\n                this.decimalOffset = 0;\n\t\t\t\tbreak;\n            default:\n                throw new Error(\"Unrecognized instrument type: \" + type);\n        }\n        // Chip/noise instruments had arpeggio and FM had custom interval but neither\n        // explicitly saved the chorus setting beforeSeven so enable it here. The effects\n        // will otherwise get overridden when reading SongTagCode.startInstrument.\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n            // Enable chord if it was used.\n            this.effects = (this.effects | (1 << EffectType.chord));\n        }\n    }\n\n    // (only) difference for JummBox: Returns whether or not the note filter was chosen for filter conversion.\n    public convertLegacySettings(legacySettings: LegacySettings, forceSimpleFilter: boolean): void {\n        let legacyCutoffSetting: number | undefined = legacySettings.filterCutoff;\n        let legacyResonanceSetting: number | undefined = legacySettings.filterResonance;\n        let legacyFilterEnv: Envelope | undefined = legacySettings.filterEnvelope;\n        let legacyPulseEnv: Envelope | undefined = legacySettings.pulseEnvelope;\n        let legacyOperatorEnvelopes: Envelope[] | undefined = legacySettings.operatorEnvelopes;\n        let legacyFeedbackEnv: Envelope | undefined = legacySettings.feedbackEnvelope;\n\n        // legacy defaults:\n        if (legacyCutoffSetting == undefined) legacyCutoffSetting = (this.type == InstrumentType.chip) ? 6 : 10;\n        if (legacyResonanceSetting == undefined) legacyResonanceSetting = 0;\n        if (legacyFilterEnv == undefined) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n        if (legacyPulseEnv == undefined) legacyPulseEnv = Config.envelopes.dictionary[(this.type == InstrumentType.pwm) ? \"twang 2\" : \"none\"];\n        if (legacyOperatorEnvelopes == undefined) legacyOperatorEnvelopes = [Config.envelopes.dictionary[(this.type == InstrumentType.fm) ? \"note size\" : \"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"]];\n        if (legacyFeedbackEnv == undefined) legacyFeedbackEnv = Config.envelopes.dictionary[\"none\"];\n\n        // The \"punch\" envelope is special: it goes *above* the chosen cutoff. But if the cutoff was already at the max, it couldn't go any higher... except in the current version of BeepBox I raised the max cutoff so it *can* but then it sounds different, so to preserve the original sound let's just remove the punch envelope.\n        const legacyFilterCutoffRange: number = 11;\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        if (cutoffAtMax && legacyFilterEnv.type == EnvelopeType.punch) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n\n        const carrierCount: number = Config.algorithms[this.algorithm].carrierCount;\n        let noCarriersControlledByNoteSize: boolean = true;\n        let allCarriersControlledByNoteSize: boolean = true;\n        let noteSizeControlsSomethingElse: boolean = (legacyFilterEnv.type == EnvelopeType.noteSize) || (legacyPulseEnv.type == EnvelopeType.noteSize);\n        if (this.type == InstrumentType.fm) {\n            noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyFeedbackEnv.type == EnvelopeType.noteSize);\n            for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\n                if (i < carrierCount) {\n                    if (legacyOperatorEnvelopes[i].type != EnvelopeType.noteSize) {\n                        allCarriersControlledByNoteSize = false;\n                    } else {\n                        noCarriersControlledByNoteSize = false;\n                    }\n                } else {\n                    noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyOperatorEnvelopes[i].type == EnvelopeType.noteSize);\n                }\n            }\n        }\n\n        this.envelopeCount = 0;\n\n        if (this.type == InstrumentType.fm) {\n            if (allCarriersControlledByNoteSize && noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteVolume\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\n            } else if (noCarriersControlledByNoteSize && !noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"none\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\n            }\n        }\n\n        if (legacyFilterEnv.type == EnvelopeType.none) {\n            this.noteFilter.reset();\n            this.noteFilterType = false;\n            this.eqFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n            this.effects &= ~(1 << EffectType.noteFilter);\n            if (forceSimpleFilter || this.eqFilterType) {\n                this.eqFilterType = true;\n                this.eqFilterSimpleCut = legacyCutoffSetting;\n                this.eqFilterSimplePeak = legacyResonanceSetting;\n            }\n        } else {\n            this.eqFilter.reset();\n\n            this.eqFilterType = false;\n            this.noteFilterType = false;\n            this.noteFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n            this.effects |= 1 << EffectType.noteFilter;\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, legacyFilterEnv.index);\n            if (forceSimpleFilter || this.noteFilterType) {\n                this.noteFilterType = true;\n                this.noteFilterSimpleCut = legacyCutoffSetting;\n                this.noteFilterSimplePeak = legacyResonanceSetting;\n            }\n        }\n\n        if (legacyPulseEnv.type != EnvelopeType.none) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, legacyPulseEnv.index);\n        }\n\n        for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\n            if (i < carrierCount && allCarriersControlledByNoteSize) continue;\n            if (legacyOperatorEnvelopes[i].type != EnvelopeType.none) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, legacyOperatorEnvelopes[i].index);\n            }\n        }\n\n        if (legacyFeedbackEnv.type != EnvelopeType.none) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, legacyFeedbackEnv.index);\n        }\n    }\n\n    public toJsonObject(): Object {\n        const instrumentObject: any = {\n            \"type\": Config.instrumentTypeNames[this.type],\n            \"volume\": this.volume,\n            \"eqFilter\": this.eqFilter.toJsonObject(),\n            \"eqFilterType\": this.eqFilterType,\n            \"eqSimpleCut\": this.eqFilterSimpleCut,\n            \"eqSimplePeak\": this.eqFilterSimplePeak,\n            \"envelopeSpeed\": this.envelopeSpeed,\n            \"discreteEnvelope\": this.discreteEnvelope\n        };\n\n        if (this.preset != this.type) {\n            instrumentObject[\"preset\"] = this.preset;\n        }\n\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n            if (this.eqSubFilters[i] != null)\n                instrumentObject[\"eqSubFilters\" + i] = this.eqSubFilters[i]!.toJsonObject();\n        }\n\n        const effects: string[] = [];\n        for (const effect of Config.effectOrder) {\n            if (this.effects & (1 << effect)) {\n                effects.push(Config.effectNames[effect]);\n            }\n        }\n        instrumentObject[\"effects\"] = effects;\n\n\n        if (effectsIncludeTransition(this.effects)) {\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\n            instrumentObject[\"clicklessTransition\"] = this.clicklessTransition;\n        }\n        if (effectsIncludeChord(this.effects)) {\n            instrumentObject[\"chord\"] = this.getChord().name;\n            instrumentObject[\"fastTwoNoteArp\"] = this.fastTwoNoteArp;\n            instrumentObject[\"arpeggioSpeed\"] = this.arpeggioSpeed;\n        }\n        if (effectsIncludePitchShift(this.effects)) {\n            instrumentObject[\"pitchShiftSemitones\"] = this.pitchShift;\n        }\n        if (effectsIncludeDetune(this.effects)) {\n            instrumentObject[\"detuneCents\"] = Synth.detuneToCents(this.detune);\n        }\n        if (effectsIncludeVibrato(this.effects)) {\n            if (this.vibrato == -1) {\n                this.vibrato = 5;\n            }\n            if (this.vibrato != 5) {\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\n            } else {\n                instrumentObject[\"vibrato\"] = \"custom\";\n            }\n            instrumentObject[\"vibratoDepth\"] = this.vibratoDepth;\n            instrumentObject[\"vibratoDelay\"] = this.vibratoDelay;\n            instrumentObject[\"vibratoSpeed\"] = this.vibratoSpeed;\n            instrumentObject[\"vibratoType\"] = this.vibratoType;\n        }\n        if (effectsIncludeNoteFilter(this.effects)) {\n            instrumentObject[\"noteFilterType\"] = this.noteFilterType;\n            instrumentObject[\"noteSimpleCut\"] = this.noteFilterSimpleCut;\n            instrumentObject[\"noteSimplePeak\"] = this.noteFilterSimplePeak;\n            instrumentObject[\"noteFilter\"] = this.noteFilter.toJsonObject();\n\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (this.noteSubFilters[i] != null)\n                    instrumentObject[\"noteSubFilters\" + i] = this.noteSubFilters[i]!.toJsonObject();\n            }\n        }\n        if (effectsIncludeDistortion(this.effects)) {\n            instrumentObject[\"distortion\"] = Math.round(100 * this.distortion / (Config.distortionRange - 1));\n            instrumentObject[\"aliases\"] = this.aliases;\n        }\n        if (effectsIncludeBitcrusher(this.effects)) {\n            instrumentObject[\"bitcrusherOctave\"] = (Config.bitcrusherFreqRange - 1 - this.bitcrusherFreq) * Config.bitcrusherOctaveStep;\n            instrumentObject[\"bitcrusherQuantization\"] = Math.round(100 * this.bitcrusherQuantization / (Config.bitcrusherQuantizationRange - 1));\n        }\n        if (effectsIncludePanning(this.effects)) {\n            instrumentObject[\"pan\"] = Math.round(100 * (this.pan - Config.panCenter) / Config.panCenter);\n            instrumentObject[\"panDelay\"] = this.panDelay;\n        }\n        if (effectsIncludeChorus(this.effects)) {\n            instrumentObject[\"chorus\"] = Math.round(100 * this.chorus / (Config.chorusRange - 1));\n        }\n        if (effectsIncludeEcho(this.effects)) {\n            instrumentObject[\"echoSustain\"] = Math.round(100 * this.echoSustain / (Config.echoSustainRange - 1));\n            instrumentObject[\"echoDelayBeats\"] = Math.round(1000 * (this.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat)) / 1000;\n        }\n        if (effectsIncludeReverb(this.effects)) {\n            instrumentObject[\"reverb\"] = Math.round(100 * this.reverb / (Config.reverbRange - 1));\n        }\n\n        if (this.type != InstrumentType.drumset) {\n            instrumentObject[\"fadeInSeconds\"] = Math.round(10000 * Synth.fadeInSettingToSeconds(this.fadeIn)) / 10000;\n            instrumentObject[\"fadeOutTicks\"] = Synth.fadeOutSettingToTicks(this.fadeOut);\n        }\n\n        if (this.type == InstrumentType.harmonics || this.type == InstrumentType.pickedString) {\n            instrumentObject[\"harmonics\"] = [];\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\n            }\n        }\n\n        if (this.type == InstrumentType.noise) {\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\n        } else if (this.type == InstrumentType.spectrum) {\n            instrumentObject[\"spectrum\"] = [];\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\n            }\n        } else if (this.type == InstrumentType.drumset) {\n            instrumentObject[\"drums\"] = [];\n            for (let j: number = 0; j < Config.drumCount; j++) {\n                const spectrum: number[] = [];\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\n                }\n                instrumentObject[\"drums\"][j] = {\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\n                    \"spectrum\": spectrum,\n                };\n            }\n        } else if (this.type == InstrumentType.chip) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            // should this unison pushing code be turned into a function..?\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;   \n            // these don't need to be pushed if custom unisons aren't being used\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n\n\t\t\t\t\t\t// advloop addition\n                instrumentObject[\"isUsingAdvancedLoopControls\"] = this.isUsingAdvancedLoopControls;\n                instrumentObject[\"chipWaveLoopStart\"] = this.chipWaveLoopStart;\n                instrumentObject[\"chipWaveLoopEnd\"] = this.chipWaveLoopEnd;\n                instrumentObject[\"chipWaveLoopMode\"] = this.chipWaveLoopMode;\n                instrumentObject[\"chipWavePlayBackwards\"] = this.chipWavePlayBackwards;\n                instrumentObject[\"chipWaveStartOffset\"] = this.chipWaveStartOffset;\n                // advloop addition\n        } else if (this.type == InstrumentType.pwm) {\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\n        } else if (this.type == InstrumentType.supersaw) {\n\t\t\tinstrumentObject[\"pulseWidth\"] = this.pulseWidth;\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\n\t\t\tinstrumentObject[\"dynamism\"] = Math.round(100 * this.supersawDynamism / Config.supersawDynamismMax);\n\t\t\tinstrumentObject[\"spread\"] = Math.round(100 * this.supersawSpread / Config.supersawSpreadMax);\n\t\t\tinstrumentObject[\"shape\"] = Math.round(100 * this.supersawShape / Config.supersawShapeMax);\n\t\t} else if (this.type == InstrumentType.pickedString) {\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"stringSustain\"] = Math.round(100 * this.stringSustain / (Config.stringSustainRange - 1));\n            if (Config.enableAcousticSustain) {\n\t\t\t\tinstrumentObject[\"stringSustainType\"] = Config.sustainTypeNames[this.stringSustainType];\n\t\t\t}\n        } else if (this.type == InstrumentType.harmonics) {\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        } else if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\n            const operatorArray: Object[] = [];\n            for (const operator of this.operators) {\n                operatorArray.push({\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\n                    \"amplitude\": operator.amplitude,\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\n                    \"pulseWidth\": operator.pulseWidth,\n                });\n            }\n            if(this.type == InstrumentType.fm){\n                instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\n                instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n                instrumentObject[\"operators\"] = operatorArray;\n            } else {\n                instrumentObject[\"algorithm\"] = Config.algorithms6Op[this.algorithm6Op].name;\n                instrumentObject[\"feedbackType\"] = Config.feedbacks6Op[this.feedbackType6Op].name;\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n                if(this.algorithm6Op == 0){\n                    const customAlgorithm: any = {};\n                    customAlgorithm[\"mods\"] = this.customAlgorithm.modulatedBy;\n                    customAlgorithm[\"carrierCount\"] = this.customAlgorithm.carrierCount;\n                    instrumentObject[\"customAlgorithm\"] = customAlgorithm;\n                }\n                if(this.feedbackType6Op == 0){\n                    const customFeedback: any = {};\n                    customFeedback[\"mods\"] = this.customFeedbackType.indices;\n                    instrumentObject[\"customFeedback\"] = customFeedback;\n                }\n\n                instrumentObject[\"operators\"] = operatorArray;\n            }\n        } else if (this.type == InstrumentType.customChipWave) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\n            for (let i: number = 0; i < this.customChipWave.length; i++) {\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\n                // Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\n                //instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\n            }\n        } else if (this.type == InstrumentType.mod) {\n            instrumentObject[\"modChannels\"] = [];\n            instrumentObject[\"modInstruments\"] = [];\n            instrumentObject[\"modSettings\"] = [];\n            instrumentObject[\"modFilterTypes\"] = [];\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\n                instrumentObject[\"modSettings\"][mod] = this.modulators[mod];\n                instrumentObject[\"modFilterTypes\"][mod] = this.modFilterTypes[mod];\n            }\n        } else {\n            throw new Error(\"Unrecognized instrument type\");\n        }\n\n        const envelopes: any[] = [];\n        for (let i = 0; i < this.envelopeCount; i++) {\n            envelopes.push(this.envelopes[i].toJsonObject());\n        }\n        instrumentObject[\"envelopes\"] = envelopes;\n\n        return instrumentObject;\n    }\n\n\n    public fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean, legacyGlobalReverb: number = 0): void {\n        if (instrumentObject == undefined) instrumentObject = {};\n\n        let type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\n        if (<any>type == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\n\n        this.effects &= ~(1 << EffectType.panning);\n\n        if (instrumentObject[\"preset\"] != undefined) {\n            this.preset = instrumentObject[\"preset\"] >>> 0;\n        }\n\n        if (instrumentObject[\"volume\"] != undefined) {\n            this.volume = clamp(-Config.volumeRange / 2, (Config.volumeRange / 2) + 1, instrumentObject[\"volume\"] | 0);\n        } else {\n            this.volume = 0;\n        }\n\n        if (instrumentObject[\"envelopeSpeed\"] != undefined) {\n            this.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, instrumentObject[\"envelopeSpeed\"] | 0);\n        } else {\n            this.envelopeSpeed = 12;\n        }\n\n        if (instrumentObject[\"discreteEnvelope\"] != undefined) {\n            this.discreteEnvelope = instrumentObject[\"discreteEnvelope\"];\n        }\n        else {\n            this.discreteEnvelope = false;\n        }\n\n        if (Array.isArray(instrumentObject[\"effects\"])) {\n            let effects: number = 0;\n            for (let i: number = 0; i < instrumentObject[\"effects\"].length; i++) {\n                effects = effects | (1 << Config.effectNames.indexOf(instrumentObject[\"effects\"][i]));\n            }\n            this.effects = (effects & ((1 << EffectType.length) - 1));\n        } else {\n            // The index of these names is reinterpreted as a bitfield, which relies on reverb and chorus being the first effects!\n            const legacyEffectsNames: string[] = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\n            this.effects = legacyEffectsNames.indexOf(instrumentObject[\"effects\"]);\n            if (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\n        }\n\n        this.transition = Config.transitions.dictionary[\"normal\"].index; // default value.\n        const transitionProperty: any = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so check that too.\n        if (transitionProperty != undefined) {\n            let transition: Transition | undefined = Config.transitions.dictionary[transitionProperty];\n            if (instrumentObject[\"fadeInSeconds\"] == undefined || instrumentObject[\"fadeOutTicks\"] == undefined) {\n                const legacySettings = (<any>{\n                    \"binary\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"seamless\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"sudden\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"hard\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"smooth\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"soft\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    // Note that the old slide transition has the same name as a new slide transition that is different.\n                    // Only apply legacy settings if the instrument JSON was created before, based on the presence\n                    // of the fade in/out fields.\n                    \"slide\": { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"cross fade\": { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                    \"hard fade\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                    \"medium fade\": { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                    \"soft fade\": { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                })[transitionProperty];\n                if (legacySettings != undefined) {\n                    transition = Config.transitions.dictionary[legacySettings.transition];\n                    // These may be overridden below.\n                    this.fadeIn = Synth.secondsToFadeInSetting(legacySettings.fadeInSeconds);\n                    this.fadeOut = Synth.ticksToFadeOutSetting(legacySettings.fadeOutTicks);\n                }\n            }\n            if (transition != undefined) this.transition = transition.index;\n\n            if (this.transition != Config.transitions.dictionary[\"normal\"].index) {\n                // Enable transition if it was used.\n                this.effects = (this.effects | (1 << EffectType.transition));\n            }\n        }\n\n        // Overrides legacy settings in transition above.\n        if (instrumentObject[\"fadeInSeconds\"] != undefined) {\n            this.fadeIn = Synth.secondsToFadeInSetting(+instrumentObject[\"fadeInSeconds\"]);\n        }\n        if (instrumentObject[\"fadeOutTicks\"] != undefined) {\n            this.fadeOut = Synth.ticksToFadeOutSetting(+instrumentObject[\"fadeOutTicks\"]);\n        }\n\n        {\n            // Note that the chord setting may be overridden by instrumentObject[\"chorus\"] below.\n            const chordProperty: any = instrumentObject[\"chord\"];\n            const legacyChordNames: Dictionary<string> = { \"harmony\": \"simultaneous\" };\n            const chord: Chord | undefined = Config.chords.dictionary[legacyChordNames[chordProperty]] || Config.chords.dictionary[chordProperty];\n            if (chord != undefined) {\n                this.chord = chord.index;\n            } else {\n                // Different instruments have different default chord types based on historical behaviour.\n                if (this.type == InstrumentType.noise) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                } else if (this.type == InstrumentType.pickedString) {\n                    this.chord = Config.chords.dictionary[\"strum\"].index;\n                } else if (this.type == InstrumentType.chip) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                } else if (this.type == InstrumentType.fm||this.type == InstrumentType.fm6op) {\n                    this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                } else {\n                    this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                }\n            }\n        }\n\n        this.unison = Config.unisons.dictionary[\"none\"].index; // default value.\n        const unisonProperty: any = instrumentObject[\"unison\"] || instrumentObject[\"interval\"] || instrumentObject[\"chorus\"]; // The unison property has gone by various names in the past.\n        if (unisonProperty != undefined) {\n            const legacyChorusNames: Dictionary<string> = { \"union\": \"none\", \"fifths\": \"fifth\", \"octaves\": \"octave\" };\n            const unison: Unison | undefined = Config.unisons.dictionary[legacyChorusNames[unisonProperty]] || Config.unisons.dictionary[unisonProperty];\n            if (unison != undefined) this.unison = unison.index;\n            if (unisonProperty == \"custom\") this.unison = Config.unisons.length;\n        }\n        //clamp these???\n        this.unisonVoices = (instrumentObject[\"unisonVoices\"] == undefined) ? Config.unisons[this.unison].voices : instrumentObject[\"unisonVoices\"];\n        this.unisonSpread = (instrumentObject[\"unisonSpread\"] == undefined) ? Config.unisons[this.unison].spread : instrumentObject[\"unisonSpread\"];\n        this.unisonOffset = (instrumentObject[\"unisonOffset\"] == undefined) ? Config.unisons[this.unison].offset : instrumentObject[\"unisonOffset\"];\n        this.unisonExpression = (instrumentObject[\"unisonExpression\"] == undefined) ? Config.unisons[this.unison].expression : instrumentObject[\"unisonExpression\"];\n        this.unisonSign = (instrumentObject[\"unisonSign\"] == undefined) ? Config.unisons[this.unison].sign : instrumentObject[\"unisonSign\"];\n\n        if (instrumentObject[\"chorus\"] == \"custom harmony\") {\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\n            this.unison = Config.unisons.dictionary[\"hum\"].index;\n            this.chord = Config.chords.dictionary[\"custom interval\"].index;\n        }\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index && !Array.isArray(instrumentObject[\"effects\"])) {\n            // Enable chord if it was used.\n            this.effects = (this.effects | (1 << EffectType.chord));\n        }\n\n        if (instrumentObject[\"pitchShiftSemitones\"] != undefined) {\n            this.pitchShift = clamp(0, Config.pitchShiftRange, Math.round(+instrumentObject[\"pitchShiftSemitones\"]));\n        }\n        if (instrumentObject[\"detuneCents\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, Math.round(Synth.centsToDetune(+instrumentObject[\"detuneCents\"])));\n        }\n\n        this.vibrato = Config.vibratos.dictionary[\"none\"].index; // default value.\n        const vibratoProperty: any = instrumentObject[\"vibrato\"] || instrumentObject[\"effect\"]; // The vibrato property was previously called \"effect\", not to be confused with the current \"effects\".\n        if (vibratoProperty != undefined) {\n\n            const legacyVibratoNames: Dictionary<string> = { \"vibrato light\": \"light\", \"vibrato delayed\": \"delayed\", \"vibrato heavy\": \"heavy\" };\n            const vibrato: Vibrato | undefined = Config.vibratos.dictionary[legacyVibratoNames[unisonProperty]] || Config.vibratos.dictionary[vibratoProperty];\n            if (vibrato != undefined)\n                this.vibrato = vibrato.index;\n            else if (vibratoProperty == \"custom\")\n                this.vibrato = Config.vibratos.length; // custom\n\n            if (this.vibrato == Config.vibratos.length) {\n                this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\n                this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\n                this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\n                this.vibratoType = instrumentObject[\"vibratoType\"];\n            }\n            else { // Set defaults for the vibrato profile\n                this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\n                this.vibratoDelay = Config.vibratos[this.vibrato].delayTicks / 2;\n                this.vibratoSpeed = 10; // default;\n                this.vibratoType = Config.vibratos[this.vibrato].type;\n            }\n\n            // Old songs may have a vibrato effect without explicitly enabling it.\n            if (vibrato != Config.vibratos.dictionary[\"none\"]) {\n                this.effects = (this.effects | (1 << EffectType.vibrato));\n            }\n        }\n\n        if (instrumentObject[\"pan\"] != undefined) {\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\n\n            // Old songs may have a panning effect without explicitly enabling it.\n            if (this.pan != Config.panCenter) {\n                this.effects = (this.effects | (1 << EffectType.panning));\n            }\n        } else {\n            this.pan = Config.panCenter;\n        }\n\n        if (instrumentObject[\"panDelay\"] != undefined) {\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\n        } else {\n            this.panDelay = 10;\n        }\n\n        if (instrumentObject[\"detune\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\n        }\n        else if (instrumentObject[\"detuneCents\"] == undefined) {\n            this.detune = Config.detuneCenter;\n        }\n\n        if (instrumentObject[\"distortion\"] != undefined) {\n            this.distortion = clamp(0, Config.distortionRange, Math.round((Config.distortionRange - 1) * (instrumentObject[\"distortion\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"bitcrusherOctave\"] != undefined) {\n            this.bitcrusherFreq = Config.bitcrusherFreqRange - 1 - (+instrumentObject[\"bitcrusherOctave\"]) / Config.bitcrusherOctaveStep;\n        }\n        if (instrumentObject[\"bitcrusherQuantization\"] != undefined) {\n            this.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, Math.round((Config.bitcrusherQuantizationRange - 1) * (instrumentObject[\"bitcrusherQuantization\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"echoSustain\"] != undefined) {\n            this.echoSustain = clamp(0, Config.echoSustainRange, Math.round((Config.echoSustainRange - 1) * (instrumentObject[\"echoSustain\"] | 0) / 100));\n        }\n        if (instrumentObject[\"echoDelayBeats\"] != undefined) {\n            this.echoDelay = clamp(0, Config.echoDelayRange, Math.round((+instrumentObject[\"echoDelayBeats\"]) * (Config.ticksPerPart * Config.partsPerBeat) / Config.echoDelayStepTicks - 1.0));\n        }\n\n        if (!isNaN(instrumentObject[\"chorus\"])) {\n            this.chorus = clamp(0, Config.chorusRange, Math.round((Config.chorusRange - 1) * (instrumentObject[\"chorus\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"reverb\"] != undefined) {\n            this.reverb = clamp(0, Config.reverbRange, Math.round((Config.reverbRange - 1) * (instrumentObject[\"reverb\"] | 0) / 100));\n        } else {\n            this.reverb = legacyGlobalReverb;\n        }\n\n        if (instrumentObject[\"pulseWidth\"] != undefined) {\n            this.pulseWidth = clamp(1, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\n        } else {\n            this.pulseWidth = Config.pulseWidthRange;\n        }\n\n        if (instrumentObject[\"decimalOffset\"] != undefined) {\n            this.decimalOffset = clamp(0, 99 + 1, Math.round(instrumentObject[\"decimalOffset\"]));\n        } else {\n            this.decimalOffset = 0;\n        }\n\n        if (instrumentObject[\"dynamism\"] != undefined) {\n\t\t\tthis.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, Math.round(Config.supersawDynamismMax * (instrumentObject[\"dynamism\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\n\t\t}\n\t\tif (instrumentObject[\"spread\"] != undefined) {\n\t\t\tthis.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, Math.round(Config.supersawSpreadMax * (instrumentObject[\"spread\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n\t\t}\n\t\tif (instrumentObject[\"shape\"] != undefined) {\n\t\t\tthis.supersawShape = clamp(0, Config.supersawShapeMax + 1, Math.round(Config.supersawShapeMax * (instrumentObject[\"shape\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.supersawShape = 0;\n\t\t}\n        \n        if (instrumentObject[\"harmonics\"] != undefined) {\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\n            }\n            this.harmonicsWave.markCustomWaveDirty();\n        } else {\n            this.harmonicsWave.reset();\n        }\n\n        if (instrumentObject[\"spectrum\"] != undefined) {\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\n            }\n        } else {\n            this.spectrumWave.reset(isNoiseChannel);\n        }\n\n        if (instrumentObject[\"stringSustain\"] != undefined) {\n            this.stringSustain = clamp(0, Config.stringSustainRange, Math.round((Config.stringSustainRange - 1) * (instrumentObject[\"stringSustain\"] | 0) / 100));\n        } else {\n            this.stringSustain = 10;\n        }\n        this.stringSustainType = Config.enableAcousticSustain ? Config.sustainTypeNames.indexOf(instrumentObject[\"stringSustainType\"]) : SustainType.bright;\n\t\tif (<any>this.stringSustainType == -1) this.stringSustainType = SustainType.bright;\n\n        if (this.type == InstrumentType.noise) {\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\n            if (instrumentObject[\"wave\"] == \"pink noise\") this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"pink\");\n            if (instrumentObject[\"wave\"] == \"brownian noise\") this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"brownian\");\n            if (this.chipNoise == -1) this.chipNoise = 1;\n        }\n\n        const legacyEnvelopeNames: Dictionary<string> = { \"custom\": \"note size\", \"steady\": \"none\", \"pluck 1\": \"twang 1\", \"pluck 2\": \"twang 2\", \"pluck 3\": \"twang 3\" };\n        const getEnvelope = (name: any): Envelope | undefined => (legacyEnvelopeNames[name] != undefined) ? Config.envelopes.dictionary[legacyEnvelopeNames[name]] : Config.envelopes.dictionary[name];\n\n        if (this.type == InstrumentType.drumset) {\n            if (instrumentObject[\"drums\"] != undefined) {\n                for (let j: number = 0; j < Config.drumCount; j++) {\n                    const drum: any = instrumentObject[\"drums\"][j];\n                    if (drum == undefined) continue;\n\n                    this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index; // default value.\n                    if (drum[\"filterEnvelope\"] != undefined) {\n                        const envelope: Envelope | undefined = getEnvelope(drum[\"filterEnvelope\"]);\n                        if (envelope != undefined) this.drumsetEnvelopes[j] = envelope.index;\n                    }\n                    if (drum[\"spectrum\"] != undefined) {\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\n                        }\n                    }\n                }\n            }\n        }\n\n        if (this.type == InstrumentType.chip) {\n            const legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\n           \t\t\t\t const modboxWaveNames: Dictionary<number> = { \"10% pulse\": 22, \"sunsoft bass\": 23, \"loud pulse\": 24, \"sax\": 25, \"guitar\": 26, \"atari bass\": 28, \"atari pulse\": 29, \"1% pulse\": 30, \"curved sawtooth\": 31, \"viola\": 32, \"brass\": 33, \"acoustic bass\": 34, \"lyre\": 35, \"ramp pulse\": 36, \"piccolo\": 37, \"squaretooth\": 38, \"flatline\": 39, \"pnryshk a (u5)\": 40, \"pnryshk b (riff)\": 41 };\n             \t const sandboxWaveNames: Dictionary<number> = { \"shrill lute\": 42, \"shrill bass\": 44, \"nes pulse\": 45, \"saw bass\": 46, \"euphonium\": 47, \"shrill pulse\": 48, \"r-sawtooth\": 49, \"recorder\": 50, \"narrow saw\": 51, \"deep square\": 52, \"ring pulse\": 53, \"double sine\": 54, \"contrabass\": 55, \"double bass\": 56 };\n\t\t\t const zefboxWaveNames: Dictionary<number> = {\"semi-square\": 63, \"deep square\": 64, \"squaretal\": 40, \"saw wide\": 65, \"saw narrow \": 66, \"deep sawtooth\": 67, \"sawtal\": 68, \"pulse\": 69, \"triple pulse\": 70, \"high pulse\": 71,\"deep pulse\": 72 };\n\t\t\t const miscWaveNames: Dictionary<number> = {\"test1\": 56, \"pokey 4bit lfsr\": 57, \"pokey 5step bass\": 58, \"isolated spiky\": 59, \"unnamed 1\": 60, \"unnamed 2\": 61, \"guitar string\": 75, \"intense\": 76, \"buzz wave\": 77, \"pokey square\": 57, \"pokey bass\": 58, \"banana wave\": 83, \"test 1\": 84, \"test 2\": 84, \"real snare\": 85, \"earthbound o. guitar\": 86 };\n\t\t\t const paandorasboxWaveNames: Dictionary<number> = {\"kick\": 87, \"snare\": 88, \"piano1\": 89, \"WOW\": 90, \"overdrive\": 91, \"trumpet\": 92, \"saxophone\": 93, \"orchestrahit\": 94, \"detached violin\": 95, \"synth\": 96, \"sonic3snare\": 97, \"come on\": 98, \"choir\": 99, \"overdriveguitar\": 100, \"flute\": 101, \"legato violin\": 102, \"tremolo violin\": 103, \"amen break\": 104, \"pizzicato violin\": 105, \"tim allen grunt\": 106, \"tuba\": 107, \"loopingcymbal\": 108, \"standardkick\": 109, \"standardsnare\": 110, \"closedhihat\": 111, \"foothihat\": 112, \"openhihat\": 113, \"crashcymbal\": 114, \"pianoC4\": 115, \"liver pad\": 116, \"marimba\": 117, \"susdotwav\": 118, \"wackyboxtts\": 119};\n\t\t\t// const paandorasbetaWaveNames = {\"contrabass\": 55, \"double bass\": 56 };\n\t\t//this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\n            this.chipWave = -1;\n            const rawName: string = instrumentObject[\"wave\"];\n            for (const table of [\n                legacyWaveNames,\n                modboxWaveNames,\n                sandboxWaveNames,\n                zefboxWaveNames,\n                miscWaveNames,\n                paandorasboxWaveNames\n            ]) {\n                if (this.chipWave == -1 && table[rawName] != undefined && Config.chipWaves[table[rawName]] != undefined) {\n                    this.chipWave = table[rawName];\n                    break;\n                }\n            }\n            if (this.chipWave == -1) {\n                const potentialChipWaveIndex: number = Config.chipWaves.findIndex(wave => wave.name == rawName);\n                if (potentialChipWaveIndex != -1) this.chipWave = potentialChipWaveIndex;\n            }\n            // this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : modboxWaveNames[instrumentObject[\"wave\"]] != undefined ? modboxWaveNames[instrumentObject[\"wave\"]] : sandboxWaveNames[instrumentObject[\"wave\"]] != undefined ? sandboxWaveNames[instrumentObject[\"wave\"]] : zefboxWaveNames[instrumentObject[\"wave\"]] != undefined ? zefboxWaveNames[instrumentObject[\"wave\"]] : miscWaveNames[instrumentObject[\"wave\"]] != undefined ? miscWaveNames[instrumentObject[\"wave\"]] : paandorasboxWaveNames[instrumentObject[\"wave\"]] != undefined ? paandorasboxWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]); \n\t\tif (this.chipWave == -1) this.chipWave = 1;\n        }\n\n        if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\n            if(this.type == InstrumentType.fm) {\n                this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\n                if (this.algorithm == -1) this.algorithm = 0;\n                this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\n                if (this.feedbackType == -1) this.feedbackType = 0;\n            } else {\n                this.algorithm6Op = Config.algorithms6Op.findIndex(algorithm6Op => algorithm6Op.name == instrumentObject[\"algorithm\"]);\n                if (this.algorithm6Op == -1) this.algorithm6Op = 1;\n                if(this.algorithm6Op == 0){ \n                    this.customAlgorithm.set(instrumentObject[\"customAlgorithm\"][\"carrierCount\"], instrumentObject[\"customAlgorithm\"][\"mods\"]);\n                } else{\n                    this.customAlgorithm.fromPreset(this.algorithm6Op);\n                }\n                this.feedbackType6Op = Config.feedbacks6Op.findIndex(feedback6Op => feedback6Op.name == instrumentObject[\"feedbackType\"]);\n                if (this.feedbackType6Op == -1) this.feedbackType6Op = 1;\n                if(this.feedbackType6Op == 0) {\n                    this.customFeedbackType.set(instrumentObject[\"customFeedback\"][\"mods\"]);\n                }else{\n                    this.customFeedbackType.fromPreset(this.feedbackType6Op)\n                }\n            }\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\n            } else {\n                this.feedbackAmplitude = 0;\n            }\n\n            for (let j: number = 0; j < Config.operatorCount + (this.type == InstrumentType.fm6op?2:0); j++) {\n                const operator: Operator = this.operators[j];\n                let operatorObject: any = undefined;\n                if (instrumentObject[\"operators\"] != undefined) operatorObject = instrumentObject[\"operators\"][j];\n                if (operatorObject == undefined) operatorObject = {};\n\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\n                if (operator.frequency == -1) operator.frequency = 0;\n                if (operatorObject[\"amplitude\"] != undefined) {\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\n                } else {\n                    operator.amplitude = 0;\n                }\n                if (operatorObject[\"waveform\"] != undefined) {\n                    operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\n                    if (operator.waveform == -1) {\n                        // GoldBox compatibility\n                        if (operatorObject[\"waveform\"] == \"square\") {\n                            operator.waveform = Config.operatorWaves.dictionary[\"pulse width\"].index;\n                            operator.pulseWidth = 5;\n                        } else {\n                            operator.waveform = 0;\n                        }\n\n                    }\n                } else {\n                    operator.waveform = 0;\n                }\n                if (operatorObject[\"pulseWidth\"] != undefined) {\n                    operator.pulseWidth = operatorObject[\"pulseWidth\"] | 0;\n                } else {\n                    operator.pulseWidth = 5;\n                }\n            }\n        }\n        else if (this.type == InstrumentType.customChipWave) {\n            if (instrumentObject[\"customChipWave\"]) {\n\n                for (let i: number = 0; i < 64; i++) {\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\n                }\n\n\n                let sum: number = 0.0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average: number = sum / this.customChipWave.length;\n\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n                let cumulative: number = 0;\n                let wavePrev: number = 0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n\n                // 65th, last sample is for anti-aliasing\n                this.customChipWaveIntegral[64] = 0.0;\n            }\n        } else if (this.type == InstrumentType.mod) {\n            if (instrumentObject[\"modChannels\"] != undefined) {\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\n                    this.modulators[mod] = instrumentObject[\"modSettings\"][mod];\n                    // Due to an oversight, this isn't included in JSONs prior to JB 2.6.\n                    if (instrumentObject[\"modFilterTypes\"] != undefined)\n                    this.modFilterTypes[mod] = instrumentObject[\"modFilterTypes\"][mod];\n                }\n            }\n        }\n\n        if (this.type != InstrumentType.mod) {\n            // Arpeggio speed\n            if (this.chord == Config.chords.dictionary[\"arpeggio\"].index && instrumentObject[\"arpeggioSpeed\"] != undefined) {\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\n            }\n            else {\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\n            }\n\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\n            }\n            else {\n                this.fastTwoNoteArp = useFastTwoNoteArp;\n            }\n\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\n            }\n            else {\n                this.clicklessTransition = false;\n            }\n\n            if (instrumentObject[\"aliases\"] != undefined) {\n                this.aliases = instrumentObject[\"aliases\"];\n            }\n            else {\n                this.aliases = false;\n            }\n\n            if (instrumentObject[\"noteFilterType\"] != undefined) {\n                this.noteFilterType = instrumentObject[\"noteFilterType\"];\n            }\n            if (instrumentObject[\"noteSimpleCut\"] != undefined) {\n                this.noteFilterSimpleCut = instrumentObject[\"noteSimpleCut\"];\n            }\n            if (instrumentObject[\"noteSimplePeak\"] != undefined) {\n                this.noteFilterSimplePeak = instrumentObject[\"noteSimplePeak\"];\n            }\n            if (instrumentObject[\"noteFilter\"] != undefined) {\n                this.noteFilter.fromJsonObject(instrumentObject[\"noteFilter\"]);\n            } else {\n                this.noteFilter.reset();\n            }\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"noteSubFilters\" + i])) {\n                    this.noteSubFilters[i] = new FilterSettings();\n                    this.noteSubFilters[i]!.fromJsonObject(instrumentObject[\"noteSubFilters\" + i]);\n                }\n            }\n            if (instrumentObject[\"eqFilterType\"] != undefined) {\n                this.eqFilterType = instrumentObject[\"eqFilterType\"];\n            }\n            if (instrumentObject[\"eqSimpleCut\"] != undefined) {\n                this.eqFilterSimpleCut = instrumentObject[\"eqSimpleCut\"];\n            }\n            if (instrumentObject[\"eqSimplePeak\"] != undefined) {\n                this.eqFilterSimplePeak = instrumentObject[\"eqSimplePeak\"];\n            }\n            if (Array.isArray(instrumentObject[\"eqFilter\"])) {\n                this.eqFilter.fromJsonObject(instrumentObject[\"eqFilter\"]);\n            } else {\n                this.eqFilter.reset();\n\n                const legacySettings: LegacySettings = {};\n\n                // Try converting from legacy filter settings.\n                const filterCutoffMaxHz: number = 8000;\n                const filterCutoffRange: number = 11;\n                const filterResonanceRange: number = 8;\n                if (instrumentObject[\"filterCutoffHz\"] != undefined) {\n                    legacySettings.filterCutoff = clamp(0, filterCutoffRange, Math.round((filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / filterCutoffMaxHz) / Math.LN2));\n                } else {\n                    legacySettings.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\n                }\n                if (instrumentObject[\"filterResonance\"] != undefined) {\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, Math.round((filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\n                } else {\n                    legacySettings.filterResonance = 0;\n                }\n\n                legacySettings.filterEnvelope = getEnvelope(instrumentObject[\"filterEnvelope\"]);\n                legacySettings.pulseEnvelope = getEnvelope(instrumentObject[\"pulseEnvelope\"]);\n                legacySettings.feedbackEnvelope = getEnvelope(instrumentObject[\"feedbackEnvelope\"]);\n                if (Array.isArray(instrumentObject[\"operators\"])) {\n                    legacySettings.operatorEnvelopes = [];\n                    for (let j: number = 0; j < Config.operatorCount; j++) {\n                        let envelope: Envelope | undefined;\n                        if (instrumentObject[\"operators\"][j] != undefined) {\n                            envelope = getEnvelope(instrumentObject[\"operators\"][j][\"envelope\"]);\n                        }\n                        legacySettings.operatorEnvelopes[j] = (envelope != undefined) ? envelope : Config.envelopes.dictionary[\"none\"];\n                    }\n                }\n\n                // Try converting from even older legacy filter settings.\n                if (instrumentObject[\"filter\"] != undefined) {\n                    const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\n                    const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n                    const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\n                    const oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\n                    let legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\n                    if (legacyFilter == -1) legacyFilter = 0;\n                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                    legacySettings.filterEnvelope = getEnvelope(legacyToEnvelope[legacyFilter]);\n                    legacySettings.filterResonance = 0;\n                }\n\n                this.convertLegacySettings(legacySettings, true);\n            }\n\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"eqSubFilters\" + i])) {\n                    this.eqSubFilters[i] = new FilterSettings();\n                    this.eqSubFilters[i]!.fromJsonObject(instrumentObject[\"eqSubFilters\" + i]);\n                }\n            }\n\n            if (Array.isArray(instrumentObject[\"envelopes\"])) {\n                const envelopeArray: any[] = instrumentObject[\"envelopes\"];\n                for (let i = 0; i < envelopeArray.length; i++) {\n                    if (this.envelopeCount >= Config.maxEnvelopeCount) break;\n                    const tempEnvelope: EnvelopeSettings = new EnvelopeSettings();\n                    tempEnvelope.fromJsonObject(envelopeArray[i]);\n                    this.addEnvelope(tempEnvelope.target, tempEnvelope.index, tempEnvelope.envelope);\n                }\n            }\n        }\n   \t\t // advloop addition\n            if (type === 0) {\n                if (instrumentObject[\"isUsingAdvancedLoopControls\"] != undefined) {\n                    this.isUsingAdvancedLoopControls = instrumentObject[\"isUsingAdvancedLoopControls\"];\n                    this.chipWaveLoopStart = instrumentObject[\"chipWaveLoopStart\"];\n                    this.chipWaveLoopEnd = instrumentObject[\"chipWaveLoopEnd\"];\n                    this.chipWaveLoopMode = instrumentObject[\"chipWaveLoopMode\"];\n                    this.chipWavePlayBackwards = instrumentObject[\"chipWavePlayBackwards\"];\n                    this.chipWaveStartOffset = instrumentObject[\"chipWaveStartOffset\"];\n                } else {\n                    this.isUsingAdvancedLoopControls = false;\n                    this.chipWaveLoopStart = 0;\n                    this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n                    this.chipWaveLoopMode = 0;\n                    this.chipWavePlayBackwards = false;\n                    this.chipWaveStartOffset = 0;\n                }\n            }\n\t}\t\n           // advloop addition\n\n        public getLargestControlPointCount(forNoteFilter: boolean) {\n        let largest: number;\n        if (forNoteFilter) {\n            largest = this.noteFilter.controlPointCount;\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (this.noteSubFilters[i] != null && this.noteSubFilters[i]!.controlPointCount > largest)\n                    largest = this.noteSubFilters[i]!.controlPointCount;\n            }\n        }\n        else {\n            largest = this.eqFilter.controlPointCount;\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (this.eqSubFilters[i] != null && this.eqSubFilters[i]!.controlPointCount > largest)\n                    largest = this.eqSubFilters[i]!.controlPointCount;\n            }\n        }\n        return largest;\n    }\n\n    public static frequencyFromPitch(pitch: number): number {\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\n    }\n\n    public addEnvelope(target: number, index: number, envelope: number): void {\n        let makeEmpty: boolean = false;\n        if (!this.supportsEnvelopeTarget(target, index)) makeEmpty = true;\n        if (this.envelopeCount >= Config.maxEnvelopeCount) throw new Error();\n        while (this.envelopes.length <= this.envelopeCount) this.envelopes[this.envelopes.length] = new EnvelopeSettings();\n        const envelopeSettings: EnvelopeSettings = this.envelopes[this.envelopeCount];\n        envelopeSettings.target = makeEmpty ? Config.instrumentAutomationTargets.dictionary[\"none\"].index : target;\n        envelopeSettings.index = makeEmpty ? 0 : index;\n        envelopeSettings.envelope = envelope;\n        this.envelopeCount++;\n    }\n\n    public supportsEnvelopeTarget(target: number, index: number): boolean {\n        const automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\n        if (automationTarget.computeIndex == null && automationTarget.name != \"none\") {\n\t\t\treturn false;\n\t\t}\n        if (index >= automationTarget.maxCount) {\n            return false;\n        }\n        if (automationTarget.compatibleInstruments != null && automationTarget.compatibleInstruments.indexOf(this.type) == -1) {\n            return false;\n        }\n        if (automationTarget.effect != null && (this.effects & (1 << automationTarget.effect)) == 0) {\n            return false;\n        }\n        if (automationTarget.isFilter) {\n            //if (automationTarget.perNote) {\n            let useControlPointCount: number = this.noteFilter.controlPointCount;\n            if (this.noteFilterType)\n                useControlPointCount = 1;\n            if (index >= useControlPointCount) return false;\n            //} else {\n            //\tif (index >= this.eqFilter.controlPointCount)   return false;\n            //}\n        }\n        return true;\n    }\n\n    public clearInvalidEnvelopeTargets(): void {\n        for (let envelopeIndex: number = 0; envelopeIndex < this.envelopeCount; envelopeIndex++) {\n            const target: number = this.envelopes[envelopeIndex].target;\n            const index: number = this.envelopes[envelopeIndex].index;\n            if (!this.supportsEnvelopeTarget(target, index)) {\n                this.envelopes[envelopeIndex].target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n                this.envelopes[envelopeIndex].index = 0;\n            }\n        }\n    }\n\n    public getTransition(): Transition {\n        return effectsIncludeTransition(this.effects) ? Config.transitions[this.transition] :\n            (this.type == InstrumentType.mod ? Config.transitions.dictionary[\"interrupt\"] : Config.transitions.dictionary[\"normal\"]);\n    }\n\n    public getFadeInSeconds(): number {\n        return (this.type == InstrumentType.drumset) ? 0.0 : Synth.fadeInSettingToSeconds(this.fadeIn);\n    }\n\n    public getFadeOutTicks(): number {\n        return (this.type == InstrumentType.drumset) ? Config.drumsetFadeOutTicks : Synth.fadeOutSettingToTicks(this.fadeOut)\n    }\n\n    public getChord(): Chord {\n        return effectsIncludeChord(this.effects) ? Config.chords[this.chord] : Config.chords.dictionary[\"simultaneous\"];\n    }\n\n    public getDrumsetEnvelope(pitch: number): Envelope {\n        if (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\n    }\n}\n\nexport class Channel {\n    public octave: number = 0;\n    public readonly instruments: Instrument[] = [];\n    public readonly patterns: Pattern[] = [];\n    public readonly bars: number[] = [];\n    public muted: boolean = false;\n    public name: string = \"\";\n}\n\nexport class Song {\n    private static readonly _format: string = \"UltraBox\";\n    private static readonly _oldestBeepboxVersion: number = 2;\n    private static readonly _latestBeepboxVersion: number = 9;\n    private static readonly _oldestJummBoxVersion: number = 1;\n    private static readonly _latestJummBoxVersion: number = 6;\n    private static readonly _oldestGoldBoxVersion: number = 1;\n    private static readonly _latestGoldBoxVersion: number = 4;\n    private static readonly _oldestUltraBoxVersion: number = 1;\n    private static readonly _latestUltraBoxVersion: number = 5;\n    // One-character variant detection at the start of URL to distinguish variants such as JummBox, Or Goldbox. \"j\" and \"g\" respectively\n\t//also \"u\" is ultrabox lol\n    private static readonly _variant = 0x75; //\"u\" ~ ultrabox\n\n    public title: string;\n    public scale: number;\n    public scaleCustom: boolean[] = [];\n    public key: number;\n    public octave: number;\n    public tempo: number;\n    public reverb: number;\n    public beatsPerBar: number;\n    public barCount: number;\n    public patternsPerChannel: number;\n    public rhythm: number;\n    public layeredInstruments: boolean;\n    public patternInstruments: boolean;\n    public loopStart: number;\n    public loopLength: number;\n    public pitchChannelCount: number;\n    public noiseChannelCount: number;\n    public modChannelCount: number;\n    public readonly channels: Channel[] = [];\n    public limitDecay: number = 4.0;\n    public limitRise: number = 4000.0;\n    public compressionThreshold: number = 1.0;\n    public limitThreshold: number = 1.0;\n    public compressionRatio: number = 1.0;\n    public limitRatio: number = 1.0;\n    public masterGain: number = 1.0;\n    public inVolumeCap: number = 0.0;\n    public outVolumeCap: number = 0.0;\n\n    constructor(string?: string) {\n        if (string != undefined) {\n            this.fromBase64String(string);\n        } else {\n            this.initToDefault(true);\n        }\n    }\n\n    // Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\n    public getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n            return 6;\n        else {\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\n            modCount = Config.modCount - modCount - 1;\n\n            let vol: number | undefined = Config.modulators[this.channels[modChannel].instruments[modInstrument].modulators[modCount]].newNoteVol;\n\n            // For tempo, actually use user defined tempo\n            let tempoIndex: number = Config.modulators.dictionary[\"tempo\"].index;\n            if (this.channels[modChannel].instruments[modInstrument].modulators[modCount] == tempoIndex) {\n                vol = this.tempo - Config.modulators[tempoIndex].convertRealFactor;\n            }\n\n            if (vol != undefined)\n                return vol;\n            else\n                return 6;\n        }\n    }\n\n\n    public getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n            return 6;\n        else {\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\n            modCount = Config.modCount - modCount - 1;\n\n            let instrument: Instrument = this.channels[modChannel].instruments[modInstrument];\n            let modulator = Config.modulators[instrument.modulators[modCount]];\n            let cap: number | undefined = modulator.maxRawVol;\n\n            if (cap != undefined) {\n                // For filters, cap is dependent on which filter setting is targeted\n                if (modulator.name == \"eq filter\" || modulator.name == \"note filter\") {\n                    // type 0: number of filter morphs\n                    // type 1/odd: number of filter x positions\n                    // type 2/even: number of filter y positions\n                    cap = Config.filterMorphCount - 1;\n                    if (instrument.modFilterTypes[modCount] > 0 && instrument.modFilterTypes[modCount] % 2) {\n                        cap = Config.filterFreqRange;\n                    } else if (instrument.modFilterTypes[modCount] > 0) {\n                        cap = Config.filterGainRange;\n                    }\n                }\n                return cap;\n            }\n            else\n                return 6;\n        }\n    }\n\n    public getVolumeCapForSetting = (isMod: boolean, modSetting: number, filterType?: number): number => {\n        if (!isMod)\n            return Config.noteSizeMax;\n        else {\n            let cap: number | undefined = Config.modulators[modSetting].maxRawVol;\n            if (cap != undefined) {\n\n                // For filters, cap is dependent on which filter setting is targeted\n                if (filterType != undefined && (Config.modulators[modSetting].name == \"eq filter\" || Config.modulators[modSetting].name == \"note filter\")) {\n                    // type 0: number of filter morphs\n                    // type 1/odd: number of filter x positions\n                    // type 2/even: number of filter y positions\n                    cap = Config.filterMorphCount - 1;\n                    if (filterType > 0 && filterType % 2) {\n                        cap = Config.filterFreqRange;\n                    } else if (filterType > 0) {\n                        cap = Config.filterGainRange;\n                    }\n                }\n\n                return cap;\n            }\n            else\n                return Config.noteSizeMax;\n        }\n    }\n\n    public getChannelCount(): number {\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\n    }\n\n    public getMaxInstrumentsPerChannel(): number {\n        return Math.max(\n            this.layeredInstruments ? Config.layeredInstrumentCountMax : Config.instrumentCountMin,\n            this.patternInstruments ? Config.patternInstrumentCountMax : Config.instrumentCountMin);\n    }\n\n    public getMaxInstrumentsPerPattern(channelIndex: number): number {\n        return this.getMaxInstrumentsPerPatternForChannel(this.channels[channelIndex]);\n    }\n\n    public getMaxInstrumentsPerPatternForChannel(channel: Channel): number {\n        return this.layeredInstruments\n            ? Math.min(Config.layeredInstrumentCountMax, channel.instruments.length)\n            : 1;\n    }\n\n    public getChannelIsNoise(channelIndex: number): boolean {\n        return (channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount);\n    }\n\n    public getChannelIsMod(channelIndex: number): boolean {\n        return (channelIndex >= this.pitchChannelCount + this.noiseChannelCount);\n    }\n\n    public initToDefault(andResetChannels: boolean = true): void {\n        this.scale = 0;\n        //this.scaleCustom = [true, false, true, true, false, false, false, true, true, false, true, true];\n\tthis.scaleCustom = [true, false, false, false, false, false, false, false, false, false, false, false];\n        this.key = 0;\n        this.octave = 0;\n        this.loopStart = 0;\n        this.loopLength = 4;\n        this.tempo = 120;\n        this.reverb = 0;\n        this.beatsPerBar = 8;\n        this.barCount = 16;\n        this.patternsPerChannel = 8;\n        this.rhythm = 3;\n        this.layeredInstruments = false;\n        this.patternInstruments = false;\n\n        this.title = \"Untitled\";\n        document.title = EditorConfig.versionDisplayName;\n\n        if (andResetChannels) {\n            this.pitchChannelCount = 3;\n            this.noiseChannelCount = 1;\n            this.modChannelCount = 0;\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n                if (this.channels.length <= channelIndex) {\n                    this.channels[channelIndex] = new Channel();\n                }\n                const channel: Channel = this.channels[channelIndex];\n                channel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0]; Descending octaves with drums at zero in last channel.\n\n                for (let pattern: number = 0; pattern < this.patternsPerChannel; pattern++) {\n                    if (channel.patterns.length <= pattern) {\n                        channel.patterns[pattern] = new Pattern();\n                    } else {\n                        channel.patterns[pattern].reset();\n                    }\n                }\n                channel.patterns.length = this.patternsPerChannel;\n\n                for (let instrument: number = 0; instrument < Config.instrumentCountMin; instrument++) {\n                    if (channel.instruments.length <= instrument) {\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\n                    }\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\n                }\n                channel.instruments.length = Config.instrumentCountMin;\n\n                for (let bar: number = 0; bar < this.barCount; bar++) {\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n            this.channels.length = this.getChannelCount();\n        }\n    }\n\n    public toBase64String(): string {\n        let bits: BitFieldWriter;\n        let buffer: number[] = [];\n\n        buffer.push(Song._variant);\n                 //   buffer.push(base64IntToCharCode[Song._latestGoldBoxVersion]);\n\t\t buffer.push(base64IntToCharCode[Song._latestUltraBoxVersion]);\n\n        // Length of the song name string\n        buffer.push(SongTagCode.songTitle);\n        var encodedSongTitle: string = encodeURIComponent(this.title);\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\n\n        // Actual encoded string follows\n        for (let i: number = 0; i < encodedSongTitle.length; i++) {\n            buffer.push(encodedSongTitle.charCodeAt(i));\n        }\n\n        buffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\n        buffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\n        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n            for (var i = 1; i < Config.pitchesPerOctave; i++) {\n                buffer.push(base64IntToCharCode[this.scaleCustom[i]?1:0]) // ineffiecent? yes, all we're going to do for now? hell yes\n            }\n        }\n        buffer.push(SongTagCode.key, base64IntToCharCode[this.key], base64IntToCharCode[this.octave - Config.octaveMin]);\n        buffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\n        buffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\n        buffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\n        buffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\n        buffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\n        buffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\n        buffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\n\n        // Push limiter settings, but only if they aren't the default!\n        buffer.push(SongTagCode.limiterSettings);\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\n            buffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\n        }\n        else {\n            buffer.push(base64IntToCharCode[0x3f]); // Not using limiter\n        }\n\n        buffer.push(SongTagCode.channelNames);\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\n            // Length of the channel name string\n            var encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\n\n            // Actual encoded string follows\n            for (let i: number = 0; i < encodedChannelName.length; i++) {\n                buffer.push(encodedChannelName.charCodeAt(i));\n            }\n        }\n\n        buffer.push(SongTagCode.instrumentCount, base64IntToCharCode[(<any>this.layeredInstruments << 1) | <any>this.patternInstruments]);\n        if (this.layeredInstruments || this.patternInstruments) {\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                buffer.push(base64IntToCharCode[this.channels[channelIndex].instruments.length - Config.instrumentCountMin]);\n            }\n        }\n\n        buffer.push(SongTagCode.channelOctave);\n        for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n            buffer.push(base64IntToCharCode[this.channels[channelIndex].octave]);\n        }\n\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                const instrument: Instrument = this.channels[channelIndex].instruments[i];\n                buffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\n                buffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\n                buffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\n\n                buffer.push(SongTagCode.eqFilter);\n                buffer.push(base64IntToCharCode[+instrument.eqFilterType]);\n                if (instrument.eqFilterType) {\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimpleCut]);\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimplePeak]);\n                }\n                else {\n                    if (instrument.eqFilter == null) {\n                        // Push null filter settings\n                        buffer.push(base64IntToCharCode[0]);\n                        console.log(\"Null EQ filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                    } else {\n                        buffer.push(base64IntToCharCode[instrument.eqFilter.controlPointCount]);\n                        for (let j: number = 0; j < instrument.eqFilter.controlPointCount; j++) {\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[j];\n                            buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                        }\n                    }\n\n                    // Push subfilters as well. Skip Index 0, is a copy of the base filter.\n                    let usingSubFilterBitfield: number = 0;\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                        usingSubFilterBitfield |= (+(instrument.eqSubFilters[j + 1] != null) << j);\n                    }\n                    // Put subfilter usage into 2 chars (12 bits)\n                    buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                    // Put subfilter info in for all used subfilters\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                        if (usingSubFilterBitfield & (1 << j)) {\n                            buffer.push(base64IntToCharCode[instrument.eqSubFilters[j + 1]!.controlPointCount]);\n                            for (let k: number = 0; k < instrument.eqSubFilters[j + 1]!.controlPointCount; k++) {\n                                const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[k];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n                    }\n                }\n\n                // The list of enabled effects is represented as a 12-bit bitfield using two six-bit characters.\n                buffer.push(SongTagCode.effects, base64IntToCharCode[instrument.effects >> 6], base64IntToCharCode[instrument.effects & 63]);\n                if (effectsIncludeNoteFilter(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[+instrument.noteFilterType]);\n                    if (instrument.noteFilterType) {\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimpleCut]);\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimplePeak]);\n                    }\n                    else {\n                        if (instrument.noteFilter == null) {\n                            // Push null filter settings\n                            buffer.push(base64IntToCharCode[0]);\n                            console.log(\"Null note filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                        }\n                        else {\n                            buffer.push(base64IntToCharCode[instrument.noteFilter.controlPointCount]);\n                            for (let j: number = 0; j < instrument.noteFilter.controlPointCount; j++) {\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[j];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n\n                        // Push subfilters as well. Skip Index 0, is a copy of the base filter.\n                        let usingSubFilterBitfield: number = 0;\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                            usingSubFilterBitfield |= (+(instrument.noteSubFilters[j + 1] != null) << j);\n                        }\n                        // Put subfilter usage into 2 chars (12 bits)\n                        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                        // Put subfilter info in for all used subfilters\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                            if (usingSubFilterBitfield & (1 << j)) {\n                                buffer.push(base64IntToCharCode[instrument.noteSubFilters[j + 1]!.controlPointCount]);\n                                for (let k: number = 0; k < instrument.noteSubFilters[j + 1]!.controlPointCount; k++) {\n                                    const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[k];\n                                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (effectsIncludeTransition(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.transition]);\n                }\n                if (effectsIncludeChord(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.chord]);\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\n                    if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\n                        buffer.push(base64IntToCharCode[instrument.arpeggioSpeed]);\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\n                    }\n                }\n                if (effectsIncludePitchShift(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.pitchShift]);\n                }\n                if (effectsIncludeDetune(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3F]);\n                }\n                if (effectsIncludeVibrato(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.vibrato]);\n                    // Custom vibrato settings\n                    if (instrument.vibrato == Config.vibratos.length) {\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDelay)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\n                    }\n                }\n                if (effectsIncludeDistortion(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.distortion]);\n                    // Aliasing is tied into distortion for now\n                    buffer.push(base64IntToCharCode[+instrument.aliases]);\n                }\n                if (effectsIncludeBitcrusher(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.bitcrusherFreq], base64IntToCharCode[instrument.bitcrusherQuantization]);\n                }\n                if (effectsIncludePanning(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\n                    buffer.push(base64IntToCharCode[instrument.panDelay]);\n                }\n                if (effectsIncludeChorus(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.chorus]);\n                }\n                if (effectsIncludeEcho(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.echoSustain], base64IntToCharCode[instrument.echoDelay]);\n                }\n                if (effectsIncludeReverb(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.reverb]);\n                }\n\n                if (instrument.type != InstrumentType.drumset) {\n                    buffer.push(SongTagCode.fadeInOut, base64IntToCharCode[instrument.fadeIn], base64IntToCharCode[instrument.fadeOut]);\n                    // Transition info follows transition song tag\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\n                }\n\n                if (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n                    buffer.push(SongTagCode.harmonics);\n                    const harmonicsBits: BitFieldWriter = new BitFieldWriter();\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\n                    }\n                    harmonicsBits.encodeBase64(buffer);\n                }\n\n                if (instrument.type == InstrumentType.chip) {\n                   \t\t\t\t\t\tif (instrument.chipWave > 186) {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[3]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (instrument.chipWave > 124) {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[2]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (instrument.chipWave > 62) {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[1]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[0]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuffer.push(104, base64IntToCharCode[instrument.unison]);\n                        if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n\n\t\t\t\t\t\t// Repurposed for chip wave loop controls.\n\t\t\t\t\t\tbuffer.push(SongTagCode.filterResonance);\n\t\t\t\t\t\t// The encoding here is as follows:\n\t\t\t\t\t\t// 0b11111_1\n\t\t\t\t\t\t//         ^-- isUsingAdvancedLoopControls\n\t\t\t\t\t\t//   ^^^^^---- chipWaveLoopMode\n\t\t\t\t\t\t// This essentially allocates 32 different loop modes,\n\t\t\t\t\t\t// which should be plenty.\n\t\t\t\t\t\tconst encodedLoopMode: number = (\n\t\t\t\t\t\t\t(clamp(0, 31 + 1, instrument.chipWaveLoopMode) << 1)\n\t\t\t\t\t\t\t| (instrument.isUsingAdvancedLoopControls ? 1 : 0)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[encodedLoopMode]);\n\t\t\t\t\t\t// The same encoding above is used here, but with the release mode\n\t\t\t\t\t\t// (which isn't implemented currently), and the backwards toggle.\n\t\t\t\t\t\tconst encodedReleaseMode: number = (\n\t\t\t\t\t\t\t(clamp(0, 31 + 1, 0) << 1)\n\t\t\t\t\t\t\t| (instrument.chipWavePlayBackwards ? 1 : 0)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[encodedReleaseMode]);\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveLoopStart);\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveLoopEnd);\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveStartOffset);\n\n                } else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\n                    if (instrument.type == InstrumentType.fm) {\n                        buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\n                        buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\n                    } else {\n                        buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm6Op]);\n                        if (instrument.algorithm6Op == 0) {\n                            buffer.push(SongTagCode.chord, base64IntToCharCode[instrument.customAlgorithm.carrierCount]);\n                            buffer.push(SongTagCode.effects);\n                            for (let o: number = 0; o < instrument.customAlgorithm.modulatedBy.length; o++) {\n                                for (let j: number = 0; j < instrument.customAlgorithm.modulatedBy[o].length; j++) {\n                                    buffer.push(base64IntToCharCode[instrument.customAlgorithm.modulatedBy[o][j]]);\n                                }\n                                buffer.push(SongTagCode.operatorWaves);\n                            }\n                            buffer.push(SongTagCode.effects);\n                        }\n                        buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType6Op]);\n                        if (instrument.feedbackType6Op == 0) {\n                            buffer.push(SongTagCode.effects);\n                            for (let o: number = 0; o < instrument.customFeedbackType.indices.length; o++) {\n                                for (let j: number = 0; j < instrument.customFeedbackType.indices[o].length; j++) {\n                                    buffer.push(base64IntToCharCode[instrument.customFeedbackType.indices[o][j]]);\n                                }\n                                buffer.push(SongTagCode.operatorWaves);\n                            }\n                            buffer.push(SongTagCode.effects);\n                        }\n                    }\n                    buffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\n\n                    buffer.push(SongTagCode.operatorFrequencies);\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op?6:Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\n                    }\n                    buffer.push(SongTagCode.operatorAmplitudes);\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\n                    }\n                    buffer.push(SongTagCode.operatorWaves);\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\n                        // Push pulse width if that type is used\n                        if (instrument.operators[o].waveform == 2) {\n                            buffer.push(base64IntToCharCode[instrument.operators[o].pulseWidth]);\n                        }\n                    }\n                } else if (instrument.type == InstrumentType.customChipWave) {\n                    if (instrument.chipWave > 186) {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[3]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (instrument.chipWave > 124) {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[2]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (instrument.chipWave > 62) {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[1]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave]);\t\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[0]);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuffer.push(104, base64IntToCharCode[instrument.unison]);\n                        if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(SongTagCode.customChipWave);\n                    // Push custom wave values\n                    for (let j: number = 0; j < 64; j++) {\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\n                    }\n                } else if (instrument.type == InstrumentType.noise) {\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\n                } else if (instrument.type == InstrumentType.spectrum) {\n                    buffer.push(SongTagCode.spectrum);\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                } else if (instrument.type == InstrumentType.drumset) {\n                    buffer.push(SongTagCode.drumsetEnvelopes);\n                    for (let j: number = 0; j < Config.drumCount; j++) {\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\n                    }\n\n                    buffer.push(SongTagCode.spectrum);\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\n                    for (let j: number = 0; j < Config.drumCount; j++) {\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\n                        }\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                } else if (instrument.type == InstrumentType.harmonics) {\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                } else if (instrument.type == InstrumentType.pwm) {\n                    buffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth]);\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]); \n                } else if (instrument.type == InstrumentType.supersaw) {\n\t\t\t\t\tbuffer.push(SongTagCode.supersaw, base64IntToCharCode[instrument.supersawDynamism], base64IntToCharCode[instrument.supersawSpread], base64IntToCharCode[instrument.supersawShape]);\n\t\t\t\t\tbuffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth]);\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]);\n\t\t\t\t} else if (instrument.type == InstrumentType.pickedString) {\n                    if (Config.stringSustainRange > 0x20 || SustainType.length > 2) {\n\t\t\t\t\t\tthrow new Error(\"Not enough bits to represent sustain value and type in same base64 character.\");\n\t\t\t\t\t}\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(SongTagCode.stringSustain, base64IntToCharCode[instrument.stringSustain | (instrument.stringSustainType << 5)]);\n                } else if (instrument.type == InstrumentType.mod) {\n                    // Handled down below. Could be moved, but meh.\n                } else {\n                    throw new Error(\"Unknown instrument type.\");\n                }\n\n                buffer.push(SongTagCode.envelopes, base64IntToCharCode[instrument.envelopeCount]);\n                // Added in JB v6: Options for envelopes come next.\n                buffer.push(base64IntToCharCode[instrument.envelopeSpeed]);\n                buffer.push(base64IntToCharCode[+instrument.discreteEnvelope]);\n                for (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].target]);\n                    if (Config.instrumentAutomationTargets[instrument.envelopes[envelopeIndex].target].maxCount > 1) {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].index]);\n                    }\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].envelope]);\n                }\n            }\n        }\n\n        buffer.push(SongTagCode.bars);\n        bits = new BitFieldWriter();\n        let neededBits: number = 0;\n        while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) for (let i: number = 0; i < this.barCount; i++) {\n            bits.write(neededBits, this.channels[channelIndex].bars[i]);\n        }\n        bits.encodeBase64(buffer);\n\n        buffer.push(SongTagCode.patterns);\n        bits = new BitFieldWriter();\n        const shapeBits: BitFieldWriter = new BitFieldWriter();\n        const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel: Channel = this.channels[channelIndex];\n            const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n            const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n            const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\n\n            // Some info about modulator settings immediately follows in mod channels.\n            if (isModChannel) {\n                const neededModInstrumentIndexBits: number = Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n\n                    let instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\n\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n                        const modChannel: number = instrument.modChannels[mod];\n                        const modInstrument: number = instrument.modInstruments[mod];\n                        const modSetting: number = instrument.modulators[mod];\n                        const modFilter: number = instrument.modFilterTypes[mod];\n\n                        // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\n                        // 0 - For pitch/noise\n                        // 1 - (used to be For noise, not needed)\n                        // 2 - For song\n                        // 3 - None\n\n                        let status: number = Config.modulators[modSetting].forSong ? 2 : 0;\n                        if (modSetting == Config.modulators.dictionary[\"none\"].index)\n                            status = 3;\n\n                        bits.write(2, status);\n\n                        // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\n                        if (status == 0 || status == 1) {\n                            bits.write(8, modChannel);\n                            bits.write(neededModInstrumentIndexBits, modInstrument);\n                        }\n\n                        // Only used if setting isn't \"none\".\n                        if (status != 3) {\n                            bits.write(6, modSetting);\n                        }\n\n                        // Write mod filter info, only if this is a filter mod\n                        if (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\") {\n                            bits.write(6, modFilter);\n                        }\n                    }\n                }\n            }\n            const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * Config.pitchesPerOctave;\n            let lastPitch: number = (isNoiseChannel ? 4 : octaveOffset);\n            const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n            const recentShapes: string[] = [];\n            for (let i: number = 0; i < recentPitches.length; i++) {\n                recentPitches[i] += octaveOffset;\n            }\n            for (const pattern of channel.patterns) {\n                if (this.patternInstruments) {\n                    const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, pattern.instruments.length);\n                    bits.write(neededInstrumentCountBits, instrumentCount - Config.instrumentCountMin);\n                    for (let i: number = 0; i < instrumentCount; i++) {\n                        bits.write(neededInstrumentIndexBits, pattern.instruments[i]);\n                    }\n                }\n\n                if (pattern.notes.length > 0) {\n                    bits.write(1, 1);\n\n                    let curPart: number = 0;\n                    for (const note of pattern.notes) {\n\n                        // For mod channels, a negative offset may be necessary.\n                        if (note.start < curPart && isModChannel) {\n                            bits.write(2, 0); // rest, then...\n                            bits.write(1, 1); // negative offset\n                            bits.writePartDuration(curPart - note.start);\n                        }\n\n                        if (note.start > curPart) {\n                            bits.write(2, 0); // rest\n                            if (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\n                            bits.writePartDuration(note.start - curPart);\n                        }\n\n                        shapeBits.clear();\n\n                        // Old format was:\n                        // 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\n                        // New format is:\n                        //      0: 1 pitch\n                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\n                        if (note.pitches.length == 1) {\n                            shapeBits.write(1, 0);\n                        } else {\n                            shapeBits.write(1, 1);\n                            shapeBits.write(3, note.pitches.length - 2);\n                        }\n\n                        shapeBits.writePinCount(note.pins.length - 1);\n\n                        if (!isModChannel) {\n                            shapeBits.write(bitsPerNoteSize, note.pins[0].size); // volume\n                        }\n                        else {\n                            shapeBits.write(9, note.pins[0].size); // Modulator value. 9 bits for now = 512 max mod value?\n                        }\n\n                        let shapePart: number = 0;\n                        let startPitch: number = note.pitches[0];\n                        let currentPitch: number = startPitch;\n                        const pitchBends: number[] = [];\n                        for (let i: number = 1; i < note.pins.length; i++) {\n                            const pin: NotePin = note.pins[i];\n                            const nextPitch: number = startPitch + pin.interval;\n                            if (currentPitch != nextPitch) {\n                                shapeBits.write(1, 1);\n                                pitchBends.push(nextPitch);\n                                currentPitch = nextPitch;\n                            } else {\n                                shapeBits.write(1, 0);\n                            }\n                            shapeBits.writePartDuration(pin.time - shapePart);\n                            shapePart = pin.time;\n                            if (!isModChannel) {\n                                shapeBits.write(bitsPerNoteSize, pin.size);\n                            } else {\n                                shapeBits.write(9, pin.size);\n                            }\n                        }\n\n                        const shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\n                        const shapeIndex: number = recentShapes.indexOf(shapeString);\n                        if (shapeIndex == -1) {\n                            bits.write(2, 1); // new shape\n                            bits.concat(shapeBits);\n                        } else {\n                            bits.write(1, 1); // old shape\n                            bits.writeLongTail(0, 0, shapeIndex);\n                            recentShapes.splice(shapeIndex, 1);\n                        }\n                        recentShapes.unshift(shapeString);\n                        if (recentShapes.length > 10) recentShapes.pop();\n\n                        const allPitches: number[] = note.pitches.concat(pitchBends);\n                        for (let i: number = 0; i < allPitches.length; i++) {\n                            const pitch: number = allPitches[i];\n                            const pitchIndex: number = recentPitches.indexOf(pitch);\n                            if (pitchIndex == -1) {\n                                let interval: number = 0;\n                                let pitchIter: number = lastPitch;\n                                if (pitchIter < pitch) {\n                                    while (pitchIter != pitch) {\n                                        pitchIter++;\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval++;\n                                    }\n                                } else {\n                                    while (pitchIter != pitch) {\n                                        pitchIter--;\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval--;\n                                    }\n                                }\n                                bits.write(1, 0);\n                                bits.writePitchInterval(interval);\n                            } else {\n                                bits.write(1, 1);\n                                bits.write(4, pitchIndex);\n                                recentPitches.splice(pitchIndex, 1);\n                            }\n                            recentPitches.unshift(pitch);\n                            if (recentPitches.length > 16) recentPitches.pop();\n\n                            if (i == note.pitches.length - 1) {\n                                lastPitch = note.pitches[0];\n                            } else {\n                                lastPitch = pitch;\n                            }\n                        }\n\n                        if (note.start == 0) {\n                            bits.write(1, note.continuesLastPattern ? 1 : 0);\n                        }\n\n                        curPart = note.end;\n                    }\n\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n                        bits.write(2, 0); // rest\n                        if (isModChannel) bits.write(1, 0); // positive offset\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\n                    }\n                } else {\n                    bits.write(1, 0);\n                }\n            }\n        }\n        let stringLength: number = bits.lengthBase64();\n        let digits: number[] = [];\n        while (stringLength > 0) {\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\n            stringLength = stringLength >> 6;\n        }\n        buffer.push(base64IntToCharCode[digits.length]);\n        Array.prototype.push.apply(buffer, digits); // append digits to buffer.\n        bits.encodeBase64(buffer);\n\t    \n        const maxApplyArgs: number = 64000;\n\t    \t\t\t            let customSamplesStr = \"\";\n            if(EditorConfig.customSamples != undefined && EditorConfig.customSamples.length > 0){\n              customSamplesStr = \"|\" + EditorConfig.customSamples.join(\"|\")\n              \n          }\n\t\t  //samplemark\n        if (buffer.length < maxApplyArgs) {\n            // Note: Function.apply may break for long argument lists. \n                            return String.fromCharCode.apply(null, buffer) + customSamplesStr;\n\t\t\t\t//samplemark\n        } else {\n            let result: string = \"\";\n            for (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\n            }\n                          return result + customSamplesStr;\n\t\t\t   //samplemark\n        }\n    }\n\n    private static _envelopeFromLegacyIndex(legacyIndex: number): Envelope {\n        // I swapped the order of \"custom\"/\"steady\", now \"none\"/\"note size\".\n        if (legacyIndex == 0) legacyIndex = 1; else if (legacyIndex == 1) legacyIndex = 0;\n        return Config.envelopes[clamp(0, Config.envelopes.length, legacyIndex)];\n    }\n\n    public fromBase64String(compressed: string): void {\n        if (compressed == null || compressed == \"\") {\n            Song._clearSamples();\n\n            this.initToDefault(true);\n            return;\n        }\n        let charIndex: number = 0;\n        // skip whitespace.\n        while (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\n        // skip hash mark.\n        if (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\n        // if it starts with curly brace, treat it as JSON.\n        if (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\n            return;\n        }\n\n        const variantTest: number = compressed.charCodeAt(charIndex);\n        let fromBeepBox: boolean;\n        let fromJummBox: boolean;\n        let fromGoldBox: boolean;\n\t    let fromUltraBox: boolean;\n        // let fromMidbox: boolean;\n        // let fromDogebox2: boolean;\n        // let fromAbyssBox: boolean;\n\n        // Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\n        if (variantTest == 0x6A) { //\"j\"\n            fromBeepBox = false;\n            fromJummBox = true;\n            fromGoldBox = false;\n\t        fromUltraBox = false;\n            charIndex++;\n        } else if (variantTest == 0x67) { //\"g\"\n            fromBeepBox = false;\n            fromJummBox = false;\n            fromGoldBox = true;\n\t        fromUltraBox = false;\n            charIndex++;\n        } else if (variantTest == 0x75) { //\"u\"\n                fromBeepBox = false;\n                fromJummBox = false;\n                fromGoldBox = false;\n\t\t        fromUltraBox = true;\n                charIndex++;\n            } else {\n            fromBeepBox = true;\n            fromJummBox = false;\n            fromGoldBox = false;\n\t        fromUltraBox = false;\n        }\n\n        const version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n        if (fromBeepBox && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\n        if (fromJummBox && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\n        if (fromGoldBox && (version == -1 || version > Song._latestGoldBoxVersion || version < Song._oldestGoldBoxVersion)) return;\n\t    if (fromUltraBox && (version == -1 || version > Song._latestUltraBoxVersion || version < Song._oldestUltraBoxVersion)) return;\n        const beforeTwo: boolean = version < 2;\n        const beforeThree: boolean = version < 3;\n        const beforeFour: boolean = version < 4;\n        const beforeFive: boolean = version < 5;\n        const beforeSix: boolean = version < 6;\n        const beforeSeven: boolean = version < 7;\n        const beforeEight: boolean = version < 8;\n        const beforeNine: boolean = version < 9;\n        this.initToDefault((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)));\n        const forceSimpleFilter: boolean = (fromBeepBox && beforeNine || fromJummBox && beforeFive);\n\n        let willLoadLegacySamplesForOldSongs: boolean = false;\n\n        if (fromUltraBox || fromGoldBox) {\n            compressed = compressed.replaceAll(\"%7C\", \"|\")\n                var compressed_array = compressed.split(\"|\");\n                compressed = compressed_array.shift()!;\n                if(EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != compressed_array.join(\", \")) {\n\n                    Song._restoreChipWaveListToDefault();\n\n                    let willLoadLegacySamples = false;\n                    let willLoadNintariboxSamples = false;\n                    let willLoadMarioPaintboxSamples = false;\n                    const customSampleUrls = [];\n                    const customSamplePresets: Preset[] = [];\n                    sampleLoadingState.statusTable = {};\n                    sampleLoadingState.urlTable = {};\n                    sampleLoadingState.totalSamples = 0;\n                    sampleLoadingState.samplesLoaded = 0;\n                    sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n                        sampleLoadingState.totalSamples,\n                        sampleLoadingState.samplesLoaded\n                    ));\n                    for (const url of compressed_array) {\n                        if (url.toLowerCase() === \"legacysamples\") {\n                            if (!willLoadLegacySamples) {\n                                willLoadLegacySamples = true;\n                                customSampleUrls.push(url);\n                                loadBuiltInSamples(0);\n                            }\n                        } \n                        else if (url.toLowerCase() === \"nintariboxsamples\") {\n                            if (!willLoadNintariboxSamples) {\n                                willLoadNintariboxSamples = true;\n                                customSampleUrls.push(url);\n                                loadBuiltInSamples(1);\n                            }\n                        }\n                        else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                            if (!willLoadMarioPaintboxSamples) {\n                                willLoadMarioPaintboxSamples = true;\n                                customSampleUrls.push(url);\n                                loadBuiltInSamples(2);\n                            }\n                        }\n                        \n                        else {\n                            // UB version 2 URLs and below will be using the old syntax, so we do need to parse it in that case.\n                            // UB version 3 URLs should only have the new syntax, though, unless the user has edited the URL manually.\n                            const parseOldSyntax: boolean = beforeThree;\n                            const ok: boolean = Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\n                            if (!ok) {\n                                continue;\n                            }\n                        }\n                    }\n                    if (customSampleUrls.length > 0) {\n                        EditorConfig.customSamples = customSampleUrls;\n                    }\n                    if (customSamplePresets.length > 0) {\n                        const customSamplePresetsMap: DictionaryArray<Preset> = toNameMap(customSamplePresets);\n                        EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\n                            name: \"Custom Sample Presets\",\n                            presets: customSamplePresetsMap,\n                            index: EditorConfig.presetCategories.length,\n                        };\n                        // EditorConfig.presetCategories.splice(1, 0, {\n                             // name: \"Custom Sample Presets\",\n                             // presets: customSamplePresets,\n                             // index: EditorConfig.presetCategories.length,\n                        // });\n                    }\n\n               \n                }\n                //samplemark\n        }\n\n        if (beforeThree && fromBeepBox) {\n            // Originally, the only instrument transition was \"instant\" and the only drum wave was \"retro\".\n            for (const channel of this.channels) {\n                channel.instruments[0].transition = Config.transitions.dictionary[\"interrupt\"].index;\n                channel.instruments[0].effects |= 1 << EffectType.transition;\n            }\n            this.channels[3].instruments[0].chipNoise = 0;\n        }\n\n        let legacySettingsCache: LegacySettings[][] | null = null;\n        if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n            // Unfortunately, old versions of BeepBox had a variety of different ways of saving\n            // filter-and-envelope-related parameters in the URL, and none of them directly\n            // correspond to the new way of saving these parameters. We can approximate the old\n            // settings by collecting all the old settings for an instrument and passing them to\n            // convertLegacySettings(), so I use this data structure to collect the settings\n            // for each instrument if necessary.\n            legacySettingsCache = [];\n            for (let i: number = legacySettingsCache.length; i < this.getChannelCount(); i++) {\n                legacySettingsCache[i] = [];\n                for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache[i][j] = {};\n            }\n        }\n\n        let legacyGlobalReverb: number = 0; // beforeNine reverb was song-global, record that reverb here and adapt it to instruments as needed.\n\n        let instrumentChannelIterator: number = 0;\n        let instrumentIndexIterator: number = -1;\n        let command: number;\n        let useSlowerArpSpeed: boolean = false;\n        let useFastTwoNoteArp: boolean = false;\n        while (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\n            case SongTagCode.songTitle: {\n                // Length of song name string\n                var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\n                document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\n\n                charIndex += songNameLength;\n            } break;\n            case SongTagCode.channelCount: {\n                this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                if (fromBeepBox || beforeTwo) {\n                    // No mod channel support before jummbox v2\n                    this.modChannelCount = 0;\n                } else {\n                    this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                }\n                this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\n                this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\n                this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\n\n                for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\n                    this.channels[channelIndex] = new Channel();\n                }\n                this.channels.length = this.getChannelCount();\n                if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    for (let i: number = legacySettingsCache!.length; i < this.getChannelCount(); i++) {\n                        legacySettingsCache![i] = [];\n                        for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache![i][j] = {};\n                    }\n                }\n            } break;\n            case SongTagCode.scale: {\n                this.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                // All the scales were jumbled around by Jummbox. Just convert to free.\n                if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n                    for (var i = 1; i < Config.pitchesPerOctave; i++) {\n                        this.scaleCustom[i] = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1; // ineffiecent? yes, all we're going to do for now? hell yes\n                    }\n                }\n                if (fromBeepBox) this.scale = 0;\n            } break;\n            case SongTagCode.key: {\n                if (beforeSeven && fromBeepBox) {\n                    this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.octave = 0;\n                } else if (fromBeepBox || fromJummBox) {\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.octave = 0;\n                } else if (fromGoldBox || (beforeThree && fromUltraBox)) {\n                    // GoldBox (so far) didn't introduce any new keys, but old\n                    // songs made with early versions of UltraBox share the\n                    // same URL format, and those can have more keys. This\n                    // shouldn't really result in anything other than 0-11 for\n                    // the key and 0 for the octave for GoldBox songs.\n                    const rawKeyIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const [key, octave]: [number, number] = convertLegacyKeyToKeyAndOctave(rawKeyIndex);\n                    this.key = key;\n                    this.octave = octave;\n                } else {\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.octaveMin);\n                }\n            } break;\n            case SongTagCode.loopStart: {\n                if (beforeFive && fromBeepBox) {\n                    this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                } else {\n                    this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                }\n            } break;\n            case SongTagCode.loopEnd: {\n                if (beforeFive && fromBeepBox) {\n                    this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                } else {\n                    this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                }\n            } break;\n            case SongTagCode.tempo: {\n                if (beforeFour && fromBeepBox) {\n                    this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                } else if (beforeSeven && fromBeepBox) {\n                    this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                } else {\n                    this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\n            } break;\n            case SongTagCode.reverb: {\n                if (beforeNine && fromBeepBox) {\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 12;\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                } else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                } else {\n                    // Do nothing, BeepBox v9+ do not support song-wide reverb - JummBox still does via modulator.\n                }\n            } break;\n            case SongTagCode.beatCount: {\n                if (beforeThree && fromBeepBox) {\n                    this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                } else {\n                    this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                }\n                this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\n            } break;\n            case SongTagCode.barCount: {\n                const barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\n                for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                    for (let bar = this.channels[channelIndex].bars.length; bar < this.barCount; bar++) {\n                        this.channels[channelIndex].bars[bar] = (bar < 4) ? 1 : 0;\n                    }\n                    this.channels[channelIndex].bars.length = this.barCount;\n                }\n            } break;\n            case SongTagCode.patternCount: {\n                let patternsPerChannel: number;\n                if (beforeEight && fromBeepBox) {\n                    patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                } else {\n                    patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                }\n                this.patternsPerChannel = validateRange(1, Config.barCountMax, patternsPerChannel);\n                const channelCount: number = this.getChannelCount();\n                for (let channelIndex: number = 0; channelIndex < channelCount; channelIndex++) {\n                    const patterns: Pattern[] = this.channels[channelIndex].patterns;\n                    for (let pattern = patterns.length; pattern < this.patternsPerChannel; pattern++) {\n                        patterns[pattern] = new Pattern();\n                    }\n                    patterns.length = this.patternsPerChannel;\n                }\n            } break;\n            case SongTagCode.instrumentCount: {\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    const instrumentsPerChannel: number = validateRange(Config.instrumentCountMin, Config.patternInstrumentCountMax, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                    this.layeredInstruments = false;\n                    this.patternInstruments = (instrumentsPerChannel > 1);\n\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                        const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n\n                        for (let instrumentIndex: number = this.channels[channelIndex].instruments.length; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                            this.channels[channelIndex].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\n                        }\n                        this.channels[channelIndex].instruments.length = instrumentsPerChannel;\n                        if (beforeSix && fromBeepBox) {\n                            for (let instrumentIndex: number = 0; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                                this.channels[channelIndex].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\n                            }\n                        }\n\n                        for (let j: number = legacySettingsCache![channelIndex].length; j < instrumentsPerChannel; j++) {\n                            legacySettingsCache![channelIndex][j] = {};\n                        }\n                    }\n                } else {\n                    const instrumentsFlagBits: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.layeredInstruments = (instrumentsFlagBits & (1 << 1)) != 0;\n                    this.patternInstruments = (instrumentsFlagBits & (1 << 0)) != 0;\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        let instrumentCount: number = 1;\n                        if (this.layeredInstruments || this.patternInstruments) {\n                            instrumentCount = validateRange(Config.instrumentCountMin, this.getMaxInstrumentsPerChannel(), base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                        }\n                        const channel: Channel = this.channels[channelIndex];\n                        const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n                        const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n                        for (let i: number = channel.instruments.length; i < instrumentCount; i++) {\n                            channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\n                        }\n                        channel.instruments.length = instrumentCount;\n                    }\n                }\n            } break;\n            case SongTagCode.rhythm: {\n                if (!fromUltraBox) {\n\t\t\tlet newRhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\t\n\t\t\tthis.rhythm = clamp(0, Config.rhythms.length, newRhythm + 2);\n\t\t\tif (fromJummBox && beforeThree || fromBeepBox) {\n\t\t\t\tif (this.rhythm == 2 || this.rhythm == 3) {\n\t\t\t\t\tuseSlowerArpSpeed = true;\n\t\t\t\t}\n\t\t\t\tif (this.rhythm >= 2) {\n\t\t\t\t\tuseFastTwoNoteArp = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\tthis.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t}\n\t\t//rhythm fixes\n            } break;\n            case SongTagCode.channelOctave: {\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                    if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\n                } else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                        if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\n                    }\n                } else {\n                    for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    for (let channelIndex: number = this.pitchChannelCount; channelIndex < this.getChannelCount(); channelIndex++) {\n                        this.channels[channelIndex].octave = 0;\n                    }\n                }\n            } break;\n            case SongTagCode.startInstrument: {\n                instrumentIndexIterator++;\n                if (instrumentIndexIterator >= this.channels[instrumentChannelIterator].instruments.length) {\n                    instrumentChannelIterator++;\n                    instrumentIndexIterator = 0;\n                }\n                validateRange(0, this.channels.length - 1, instrumentChannelIterator);\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                // JB before v5 had custom chip and mod before pickedString and supersaw were added. Index +2.\n                let instrumentType: number = validateRange(0, InstrumentType.length - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    if (instrumentType == InstrumentType.pickedString || instrumentType == InstrumentType.supersaw) {\n                        instrumentType += 2;\n                    }\n                }\n                // Similar story here, JB before v5 had custom chip and mod before supersaw was added. Index +1.\n                else if ((fromJummBox && beforeSix) || (fromGoldBox && !beforeFour) || (fromUltraBox && beforeFive) ) {\n                    if (instrumentType == InstrumentType.supersaw || instrumentType == InstrumentType.customChipWave || instrumentType == InstrumentType.mod) {\n                        instrumentType += 1;\n                    }\n                }\n                instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\n\n                // Anti-aliasing was added in BeepBox 3.0 (v6->v7) and JummBox 1.3 (v1->v2 roughly but some leakage possible)\n                if (((beforeSeven && fromBeepBox) || (beforeTwo && fromJummBox)) && (instrumentType == InstrumentType.chip || instrumentType == InstrumentType.customChipWave || instrumentType == InstrumentType.pwm)) {\n                    instrument.aliases = true;\n                    instrument.distortion = 0;\n                    instrument.effects |= 1 << EffectType.distortion;\n                }\n                if (useSlowerArpSpeed) {\n                    instrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\n                }\n                if (useFastTwoNoteArp) {\n                    instrument.fastTwoNoteArp = true;\n                }\n\n                if (beforeSeven && fromBeepBox) {\n                    instrument.effects = 0;\n                    // Chip/noise instruments had arpeggio and FM had custom interval but neither\n                    // explicitly saved the chorus setting beforeSeven so enable it here.\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                        // Enable chord if it was used.\n                        instrument.effects |= 1 << EffectType.chord;\n                    }\n                }\n            } break;\n            case SongTagCode.preset: {\n                const presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\n                // Picked string was inserted before custom chip in JB v5, so bump up preset index.\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.pickedString) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.customChipWave;\n                    }\n                }\n                // Similar story, supersaw is also before custom chip (and mod, but mods can't have presets).\n                else if ((fromJummBox && beforeSix) || (fromUltraBox && beforeFive)) {\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.supersaw ) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.customChipWave;\n                    }\n                    // ultra code for 6-op fm maybe\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.mod ) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.fm6op;\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.fm6op;\n                    }\n                }\n                // BeepBox directly tweaked \"grand piano\", but JB kept it the same. The most up to date version is now \"grand piano 3\"\n                if (fromBeepBox && presetValue == EditorConfig.nameToPresetValue(\"grand piano 1\") ) {\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = EditorConfig.nameToPresetValue(\"grand piano 3\")!;\n                }\n            } break;\n            case SongTagCode.wave: {\n                if (beforeThree && fromBeepBox) {\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                    instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n\n                    // Version 2 didn't save any settings for settings for filters, or envelopes,\n                    // just waves, so initialize them here I guess.\n                    instrument.convertLegacySettings(legacySettingsCache![channelIndex][0], forceSimpleFilter);\n\n                } else if (beforeSix && fromBeepBox) {\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (const instrument of this.channels[channelIndex].instruments) {\n                            if (channelIndex >= this.pitchChannelCount) {\n                                instrument.chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            } else {\n                                instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                            }\n                        }\n                    }\n                } else if (beforeSeven && fromBeepBox) {\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    } else {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                    }\n                } else {\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type == InstrumentType.noise) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    } else {\t\n\t\t\t\tif (fromUltraBox) {\n\t\t\t\t\tconst chipWaveReal = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\tconst chipWaveCounter = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\t\n\t\t\t\t\tif (chipWaveCounter == 3) {\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 186);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n\t\t\t\t\t} else if (chipWaveCounter == 2) {\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 124);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n\t\t\t\t\t} else if (chipWaveCounter == 1) {\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 62);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\t}\n\t\t }\n        \t}\n            } break;\n            case SongTagCode.eqFilter: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    if (beforeSeven && fromBeepBox) {\n                        const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\n                        //const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                        const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\n                            const legacyFilter: number = [1, 3, 4, 5][clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                            legacySettings.filterResonance = 0;\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        } else if (beforeSix && fromBeepBox) {\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\n                                    const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                                    if (channelIndex < this.pitchChannelCount) {\n                                        legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                        legacySettings.filterResonance = 0;\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                    } else {\n                                        legacySettings.filterCutoff = 10;\n                                        legacySettings.filterResonance = 0;\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[\"none\"];\n                                    }\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                }\n                            }\n                        } else {\n                            const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                            legacySettings.filterResonance = 0;\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                    } else {\n                        const filterCutoffRange: number = 11;\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                        legacySettings.filterCutoff = clamp(0, filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                    }\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    if (fromBeepBox || typeCheck == 0) {\n                        instrument.eqFilterType = false;\n                        if (fromJummBox || fromGoldBox || fromUltraBox)\n                            typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next to get control point count\n                        const originalControlPointCount: number = typeCheck;\n                        instrument.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n                        for (let i: number = instrument.eqFilter.controlPoints.length; i < instrument.eqFilter.controlPointCount; i++) {\n                            instrument.eqFilter.controlPoints[i] = new FilterControlPoint();\n                        }\n                        for (let i: number = 0; i < instrument.eqFilter.controlPointCount; i++) {\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[i];\n                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        for (let i: number = instrument.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\n                            charIndex += 3;\n                        }\n\n                        // Get subfilters as well. Skip Index 0, is a copy of the base filter.\n                        instrument.eqSubFilters[0] = instrument.eqFilter;\n                        if ((fromJummBox && !beforeFive) || (fromGoldBox && !beforeFour) || fromUltraBox) {\n                            let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                                if (usingSubFilterBitfield & (1 << j)) {\n                                    // Number of control points\n                                    const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if (instrument.eqSubFilters[j + 1] == null)\n                                        instrument.eqSubFilters[j + 1] = new FilterSettings();\n                                    instrument.eqSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPoints.length; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\n                                        instrument.eqSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\n                                    }\n                                    for (let i: number = 0; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\n                                        const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[i];\n                                        point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                        charIndex += 3;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        instrument.eqFilterType = true;\n                        instrument.eqFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.eqFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                }\n            } break;\n            case SongTagCode.filterResonance: {\n                if (fromUltraBox) {\n                    if (beforeThree) {\n                        // Still have to support the old and bad loop control data format written as a test, sigh.\n                        const sampleLoopInfoEncodedLength = decode32BitNumber(compressed, charIndex);\n                        charIndex += 6;\n                        const sampleLoopInfoEncoded = compressed.slice(charIndex, charIndex + sampleLoopInfoEncodedLength);\n                        charIndex += sampleLoopInfoEncodedLength;\n                        interface SampleLoopInfo {\n                            isUsingAdvancedLoopControls: boolean;\n                            chipWaveLoopStart: number;\n                            chipWaveLoopEnd: number;\n                            chipWaveLoopMode: number;\n                            chipWavePlayBackwards: boolean;\n                            chipWaveStartOffset: number;\n                        }\n                        interface SampleLoopInfoEntry {\n                            channel: number;\n                            instrument: number;\n                            info: SampleLoopInfo;\n                        }\n                        const sampleLoopInfo: SampleLoopInfoEntry[] = JSON.parse(atob(sampleLoopInfoEncoded));\n                        for (const entry of sampleLoopInfo) {\n                            const channelIndex: number = entry[\"channel\"];\n                            const instrumentIndex: number = entry[\"instrument\"];\n                            const info: SampleLoopInfo = entry[\"info\"];\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                            instrument.isUsingAdvancedLoopControls = info[\"isUsingAdvancedLoopControls\"];\n                            instrument.chipWaveLoopStart = info[\"chipWaveLoopStart\"];\n                            instrument.chipWaveLoopEnd = info[\"chipWaveLoopEnd\"];\n                            instrument.chipWaveLoopMode = info[\"chipWaveLoopMode\"];\n                            instrument.chipWavePlayBackwards = info[\"chipWavePlayBackwards\"];\n                            instrument.chipWaveStartOffset = info[\"chipWaveStartOffset\"];\n                            // @TODO: Whenever chipWaveReleaseMode is implemented, it should be set here to the default.\n                        }\n                    } else {\n                        // Read the new loop control data format.\n                        // See Song.toBase64String for details on the encodings used here.\n                        const encodedLoopMode: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        const isUsingAdvancedLoopControls: boolean = Boolean(encodedLoopMode & 1);\n                        const chipWaveLoopMode: number = encodedLoopMode >> 1;\n                        const encodedReleaseMode: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        const chipWavePlayBackwards: boolean = Boolean(encodedReleaseMode & 1);\n                        // const chipWaveReleaseMode: number = encodedReleaseMode >> 1;\n                        const chipWaveLoopStart: number = decode32BitNumber(compressed, charIndex);\n                        charIndex += 6;\n                        const chipWaveLoopEnd: number = decode32BitNumber(compressed, charIndex);\n                        charIndex += 6;\n                        const chipWaveStartOffset: number = decode32BitNumber(compressed, charIndex);\n                        charIndex += 6;\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.isUsingAdvancedLoopControls = isUsingAdvancedLoopControls;\n                        instrument.chipWaveLoopStart = chipWaveLoopStart;\n                        instrument.chipWaveLoopEnd = chipWaveLoopEnd;\n                        instrument.chipWaveLoopMode = chipWaveLoopMode;\n                        instrument.chipWavePlayBackwards = chipWavePlayBackwards;\n                        instrument.chipWaveStartOffset = chipWaveStartOffset;\n                        // instrument.chipWaveReleaseMode = chipWaveReleaseMode;\n                    }\n                }\n                else if (fromGoldBox && !beforeFour && beforeSix) {\n                    if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\n                            if (!willLoadLegacySamplesForOldSongs) {\n                                willLoadLegacySamplesForOldSongs = true;\n                                Config.willReloadForCustomSamples = true;\n                                EditorConfig.customSamples = [\"legacySamples\"];\n                                loadBuiltInSamples(0);\n                            }\n                    }\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 125);\t\t\t\t\t\t\n                } else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    const filterResonanceRange: number = 8;\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.drumsetEnvelopes: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)){\n\n                    }\n                    if (instrument.type == InstrumentType.drumset) {\n                        for (let i: number = 0; i < Config.drumCount; i++) {\n                            let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\n                            instrument.drumsetEnvelopes[i] = Song._envelopeFromLegacyIndex(aa).index;\n                        }\n                    } else {\n                        // This used to be used for general filter envelopes.\n                        // The presence of an envelope affects how convertLegacySettings\n                        // decides the closest possible approximation, so update it.\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                        let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\n                        legacySettings.filterEnvelope = Song._envelopeFromLegacyIndex(aa);\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                    }\n                } else {\n                    // This tag is now only used for drumset filter envelopes.\n                    for (let i: number = 0; i < Config.drumCount; i++) {\n                        let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\n                        instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, aa);\n                    }\n                }\n            } break;\n            case SongTagCode.pulseWidth: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                instrument.pulseWidth = clamp(0, Config.pulseWidthRange + (+(fromJummBox)) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                if (fromBeepBox) {\n                    // BeepBox formula\n                    instrument.pulseWidth = Math.round(Math.pow(0.5, (7 - instrument.pulseWidth) * Config.pulseWidthStepPower) * Config.pulseWidthRange);\n\n                }\n\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\n                    legacySettings.pulseEnvelope = Song._envelopeFromLegacyIndex(aa);\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                }\n\n                if (fromUltraBox && !beforeFour) {\n                    instrument.decimalOffset = clamp(0, 99 + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n\n            } break;\n            case SongTagCode.stringSustain: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                const sustainValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\tinstrument.stringSustain = clamp(0, Config.stringSustainRange, sustainValue & 0x1F);\n\t\t\t\tinstrument.stringSustainType = Config.enableAcousticSustain ? clamp(0, SustainType.length, sustainValue >> 5) : SustainType.bright;\n            } break;\n            case SongTagCode.fadeInOut: {\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    // this tag was used for a combination of transition and fade in/out.\n                    const legacySettings = [\n                        { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                        { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                        { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                        { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                        { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    ];\n                    if (beforeThree && fromBeepBox) {\n                        const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                            // Enable transition if it was used.\n                            instrument.effects |= 1 << EffectType.transition;\n                        }\n                    } else if (beforeSix && fromBeepBox) {\n                        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                            for (const instrument of this.channels[channelIndex].instruments) {\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                    // Enable transition if it was used.\n                                    instrument.effects |= 1 << EffectType.transition;\n                                }\n                            }\n                        }\n                    } else if ((beforeFour && !fromGoldBox && !fromUltraBox) || fromBeepBox) {\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                            // Enable transition if it was used.\n                            instrument.effects |= 1 << EffectType.transition;\n                        }\n                    } else {\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n\n                        // Read tie-note \n                        if (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] > 0) {\n                            // Set legacy tie over flag, which is only used to port notes in patterns using this instrument as tying.\n                            instrument.legacyTieOver = true;\n\n                        }\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index || instrument.clicklessTransition) {\n                            // Enable transition if it was used.\n                            instrument.effects |= 1 << EffectType.transition;\n                        }\n                    }\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.fadeIn = clamp(0, Config.fadeInRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.fadeOut = clamp(0, Config.fadeOutTicks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    if (fromJummBox||fromGoldBox||fromUltraBox)\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                }\n            } break;\n            case SongTagCode.vibrato: {\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    if (beforeSeven && fromBeepBox) {\n                        if (beforeThree && fromBeepBox) {\n                            const legacyEffects: number[] = [0, 3, 2, 0];\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"tremolo2\"];\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\n                            instrument.vibrato = legacyEffects[effect];\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n                                // Imitate the legacy tremolo with a filter envelope.\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                // Enable vibrato if it was used.\n                                instrument.effects |= 1 << EffectType.vibrato;\n                            }\n                        } else if (beforeSix && fromBeepBox) {\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\n                                    instrument.vibrato = legacyEffects[effect];\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n                                        // Imitate the legacy tremolo with a filter envelope.\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                    }\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                        // Enable vibrato if it was used.\n                                        instrument.effects |= 1 << EffectType.vibrato;\n                                    }\n                                    if ((legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) && !this.getChannelIsNoise(channelIndex)) {\n                                        // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\n                                        instrument.effects |= 1 << EffectType.reverb;\n                                        instrument.reverb = legacyGlobalReverb;\n                                    }\n                                }\n                            }\n                        } else {\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                            instrument.vibrato = legacyEffects[effect];\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n                                // Imitate the legacy tremolo with a filter envelope.\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                // Enable vibrato if it was used.\n                                instrument.effects |= 1 << EffectType.vibrato;\n                            }\n                            if (legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                                // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\n                                instrument.effects |= 1 << EffectType.reverb;\n                                instrument.reverb = legacyGlobalReverb;\n                            }\n                        }\n                    } else {\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.vibrato = vibrato;\n                        if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                            // Enable vibrato if it was used.\n                            instrument.effects |= 1 << EffectType.vibrato;\n                        }\n                        // Custom vibrato\n                        if (vibrato == Config.vibratos.length) {\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50;\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 2;\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.effects |= 1 << EffectType.vibrato;\n                        }\n                        // Enforce standard vibrato settings\n                        else {\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                            instrument.vibratoSpeed = 10; // Normal speed\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                        }\n                    }\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.arpeggioSpeed: {\n                // Deprecated, but supported for legacy purposes\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.arpeggioSpeed = clamp(0, Config.modulators.dictionary[\"arp speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\n                }\n                else {\n                    // Do nothing, deprecated for now\n                }\n            } break;\n            case SongTagCode.unison: {\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.channels[channelIndex].instruments[0].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                } else if (beforeSix && fromBeepBox) {\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (const instrument of this.channels[channelIndex].instruments) {\n                            const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            let unison: number = clamp(0, Config.unisons.length, originalValue);\n                            if (originalValue == 8) {\n                                // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\n                                unison = 2;\n                                instrument.chord = 3;\n                            }\n                            instrument.unison = unison;\n                        }\n                    }\n                } else if (beforeSeven && fromBeepBox) {\n                    const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    let unison: number = clamp(0, Config.unisons.length, originalValue);\n                    if (originalValue == 8) {\n                        // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\n                        unison = 2;\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\n                    }\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = unison;\n                } else {\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = clamp(0, Config.unisons.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                \n                if ((fromUltraBox && !beforeFive) && (instrument.unison == Config.unisons.length))  {\n                // if (instrument.unison == Config.unisons.length) {\n                    instrument.unisonVoices = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    const unisonSpreadNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const unisonSpread: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\n\n                    const unisonOffsetNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const unisonOffset: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\n\n                    const unisonExpressionNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const unisonExpression: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\n                    \n                    const unisonSignNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const unisonSign: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\n\n\n                    instrument.unisonSpread = unisonSpread / 1000;\n                    if (unisonSpreadNegative == 0) instrument.unisonSpread *= -1;\n\n                    instrument.unisonOffset = unisonOffset / 1000;\n                    if (unisonOffsetNegative == 0) instrument.unisonOffset *= -1;\n\n                    instrument.unisonExpression = unisonExpression / 1000;\n                    if (unisonExpressionNegative == 0) instrument.unisonExpression *= -1;\n\n                    instrument.unisonSign = unisonSign / 1000;\n                    if (unisonSignNegative == 0) instrument.unisonSign *= -1;\n                } else {\n                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                }\n            \n            } break;\n            case SongTagCode.chord: {\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                        // Enable chord if it was used.\n                        instrument.effects |= 1 << EffectType.chord;\n                    }\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.effects: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                    instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] & ((1 << EffectType.length) - 1));\n                    if (legacyGlobalReverb == 0 && !((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                        // Disable reverb if legacy song reverb was zero.\n                        instrument.effects &= ~(1 << EffectType.reverb);\n                    } else if (effectsIncludeReverb(instrument.effects)) {\n                        instrument.reverb = legacyGlobalReverb;\n                    }\n                    // @jummbus - Enabling pan effect on song import no matter what to make it a default.\n                    //if (instrument.pan != Config.panCenter) {\n                    instrument.effects |= 1 << EffectType.panning;\n                    //}\n                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                        // Enable vibrato if it was used.\n                        instrument.effects |= 1 << EffectType.vibrato;\n                    }\n                    if (instrument.detune != Config.detuneCenter) {\n                        // Enable detune if it was used.\n                        instrument.effects |= 1 << EffectType.detune;\n                    }\n                    if (instrument.aliases)\n                        instrument.effects |= 1 << EffectType.distortion;\n                    else\n                        instrument.effects &= ~(1 << EffectType.distortion);\n\n                    // convertLegacySettings may need to force-enable note filter, call\n                    // it again here to make sure that this override takes precedence.\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                } else {\n                    // BeepBox currently uses two base64 characters at 6 bits each for a bitfield representing all the enabled effects.\n                    if (EffectType.length > 12) throw new Error();\n                    instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\n                    if (effectsIncludeNoteFilter(instrument.effects)) {\n                        let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if (fromBeepBox || typeCheck == 0) {\n                            instrument.noteFilterType = false;\n                            if (fromJummBox || fromGoldBox || fromUltraBox)\n                                typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next index in jummbox to get actual count\n                            instrument.noteFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, typeCheck);\n                            for (let i: number = instrument.noteFilter.controlPoints.length; i < instrument.noteFilter.controlPointCount; i++) {\n                                instrument.noteFilter.controlPoints[i] = new FilterControlPoint();\n                            }\n                            for (let i: number = 0; i < instrument.noteFilter.controlPointCount; i++) {\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[i];\n                                point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            for (let i: number = instrument.noteFilter.controlPointCount; i < typeCheck; i++) {\n                                charIndex += 3;\n                            }\n\n                            // Get subfilters as well. Skip Index 0, is a copy of the base filter.\n                            instrument.noteSubFilters[0] = instrument.noteFilter;\n                            if ((fromJummBox && !beforeFive) || (fromGoldBox) || (fromUltraBox)) {\n                                let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                                    if (usingSubFilterBitfield & (1 << j)) {\n                                        // Number of control points\n                                        const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                        if (instrument.noteSubFilters[j + 1] == null)\n                                            instrument.noteSubFilters[j + 1] = new FilterSettings();\n                                        instrument.noteSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPoints.length; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\n                                            instrument.noteSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\n                                        }\n                                        for (let i: number = 0; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\n                                            const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[i];\n                                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                            charIndex += 3;\n                                        }\n                                    }\n                                }\n                            }\n                        } else {\n                            instrument.noteFilterType = true;\n                            instrument.noteFilter.reset();\n                            instrument.noteFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.noteFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\n                        }\n                    }\n                    if (effectsIncludeTransition(instrument.effects)) {\n                        instrument.transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludeChord(instrument.effects)) {\n                        instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        // Custom arpeggio speed... only in JB, and only if the instrument arpeggiates.\n                        if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && (fromJummBox||fromGoldBox||fromUltraBox)) {\n                            instrument.arpeggioSpeed = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            instrument.fastTwoNoteArp = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                        }\n                    }\n                    if (effectsIncludePitchShift(instrument.effects)) {\n                        instrument.pitchShift = clamp(0, Config.pitchShiftRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludeDetune(instrument.effects)) {\n                        if (fromBeepBox) {\n                            // Convert from BeepBox's formula\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.detune = Math.round((instrument.detune - 9) * (Math.abs(instrument.detune - 9) + 1) / 2 + Config.detuneCenter);\n                        } else {\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    if (effectsIncludeVibrato(instrument.effects)) {\n                        instrument.vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\n                        // Custom vibrato\n                        if (instrument.vibrato == Config.vibratos.length && (fromJummBox || fromGoldBox || fromUltraBox)) {\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        // Enforce standard vibrato settings\n                        else {\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                            instrument.vibratoSpeed = 10; // Normal speed\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                        }\n                    }\n                    if (effectsIncludeDistortion(instrument.effects)) {\n                        instrument.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if ((fromJummBox && !beforeFive) || fromGoldBox || fromUltraBox)\n                            instrument.aliases = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                    }\n                    if (effectsIncludeBitcrusher(instrument.effects)) {\n                        instrument.bitcrusherFreq = clamp(0, Config.bitcrusherFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludePanning(instrument.effects)) {\n                        if (fromBeepBox) {\n                            // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\n                            instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\n                        }\n                        else {\n                            instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n\n                        // Now, pan delay follows on new versions of jummbox.\n                        if ((fromJummBox && !beforeTwo) || fromGoldBox || fromUltraBox)\n                            instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    }\n                    if (effectsIncludeChorus(instrument.effects)) {\n                        if (fromBeepBox) {\n                            // BeepBox has 4 chorus values vs. JB's 8\n                            instrument.chorus = clamp(0, (Config.chorusRange / 2) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 2;\n                        }\n                        else {\n                            instrument.chorus = clamp(0, Config.chorusRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    if (effectsIncludeEcho(instrument.effects)) {\n                        instrument.echoSustain = clamp(0, Config.echoSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.echoDelay = clamp(0, Config.echoDelayRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludeReverb(instrument.effects)) {\n                        if (fromBeepBox) {\n                            instrument.reverb = clamp(0, Config.reverbRange, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * Config.reverbRange / 3.0));\n                        } else {\n                            instrument.reverb = clamp(0, Config.reverbRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                }\n                // Clamp the range.\n                instrument.effects &= (1 << EffectType.length) - 1;\n            } break;\n            case SongTagCode.volume: {\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                } else if (beforeSix && fromBeepBox) {\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (const instrument of this.channels[channelIndex].instruments) {\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                        }\n                    }\n                } else if (beforeSeven && fromBeepBox) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                } else if (fromBeepBox) {\n                    // Beepbox v9's volume range is 0-7 (0 is max, 7 is mute)\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    // Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\n                }\n            } break;\n            case SongTagCode.pan: {\n                if (beforeNine && fromBeepBox) {\n                    // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.pan = clamp(0, Config.panMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0));\n                } else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    // Pan delay follows on v3 + v4\n                    if (fromJummBox && !beforeThree || fromGoldBox || fromUltraBox) {\n                        instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    }\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.detune: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                    // Before jummbox v5, detune was -50 to 50. Now it is 0 to 400\n                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 4);\n                    instrument.effects |= 1 << EffectType.detune;\n                } else {\n                    // Now in v5, tag code is deprecated and handled thru detune effects.\n                }\n            } break;\n            case SongTagCode.customChipWave: {\n                let instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                // Pop custom wave values\n                for (let j: number = 0; j < 64; j++) {\n                    instrument.customChipWave[j]\n                        = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\n                }\n\n                let sum: number = 0.0;\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\n                    sum += instrument.customChipWave[i];\n                }\n                const average: number = sum / instrument.customChipWave.length;\n\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n                let cumulative: number = 0;\n                let wavePrev: number = 0;\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = instrument.customChipWave[i] - average;\n                    instrument.customChipWaveIntegral[i] = cumulative;\n                }\n\n                // 65th, last sample is for anti-aliasing\n                instrument.customChipWaveIntegral[64] = 0.0;\n\n            } break;\n            case SongTagCode.limiterSettings: {\n                let nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                // Check if limiter settings are used... if not, restore to default\n                if (nextValue == 0x3f) {\n                    this.restoreLimiterDefaults();\n                }\n                else {\n                    // Limiter is used, grab values\n                    this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\n                    nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\n                    this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\n                    this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                    this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                    this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\n                }\n            } break;\n            case SongTagCode.channelNames: {\n                for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\n                    // Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\n                    var channelNameLength;\n                    if (beforeFour && !fromGoldBox && !fromUltraBox)\n                        channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\n                    else\n                        channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\n\n                    charIndex += channelNameLength;\n                }\n            } break;\n            case SongTagCode.algorithm: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if (instrument.type == InstrumentType.fm) {\n                    instrument.algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                else {\n                    instrument.algorithm6Op = clamp(0, Config.algorithms6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.customAlgorithm.fromPreset(instrument.algorithm6Op);\n                    if (compressed.charCodeAt(charIndex) == SongTagCode.chord) {\n                        let carrierCountTemp = clamp(1, Config.operatorCount + 2+1, base64CharCodeToInt[compressed.charCodeAt(charIndex + 1)]);\n                        charIndex++\n                        let tempModArray: number[][] = [];\n                        if (compressed.charCodeAt(charIndex+1) == SongTagCode.effects) {\n                            charIndex++\n                            let j: number = 0;\n                            charIndex++\n                            while (compressed.charCodeAt(charIndex) != SongTagCode.effects) {\n                                tempModArray[j] = [];\n                                let o: number = 0;\n                                while (compressed.charCodeAt(charIndex) != SongTagCode.operatorWaves) {\n                                    tempModArray[j][o] = clamp(1, Config.operatorCount + 3, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\n                                    o++\n                                    charIndex++\n                                }\n                                j++;\n                                charIndex++\n                            }\n                            instrument.customAlgorithm.set(carrierCountTemp, tempModArray);\n                            charIndex++; //????\n                        }\n                    }\n                }\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    // The algorithm determines the carrier count, which affects how legacy settings are imported.\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                }\n            } break;\n            case SongTagCode.supersaw: {\n                if (fromGoldBox && !beforeFour && beforeSix) {\n                    //is it more useful to save base64 characters or url length?\n                    const chipWaveForCompat = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    if ((chipWaveForCompat + 62) > 85) {\n                        if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\n                            if (!willLoadLegacySamplesForOldSongs) {\n                                willLoadLegacySamplesForOldSongs = true;\n                                Config.willReloadForCustomSamples = true;\n                                EditorConfig.customSamples = [\"legacySamples\"];\n                                loadBuiltInSamples(0);\n                            }\n                        }\n                    }\n                    \n                    if ((chipWaveForCompat + 62) > 78) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 63);\t\n                    }\n                    else if ((chipWaveForCompat + 62) > 67) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 61);\t\n                    }\n                    else if ((chipWaveForCompat + 62) == 67) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = 40;\t\n                    }\n                    else {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 62);\t\t\t\n                    }\t\t\t\t\t\t\t\n                } \n                \n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.supersawShape = clamp(0, Config.supersawShapeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                \n\t\t\t} break;\n            case SongTagCode.feedbackType: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if (instrument.type == InstrumentType.fm) {\n                    instrument.feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                else {\n                    instrument.feedbackType6Op = clamp(0, Config.feedbacks6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.customFeedbackType.fromPreset(instrument.feedbackType6Op);\n                    let tempModArray: number[][] = [];\n                    if (compressed.charCodeAt(charIndex) == SongTagCode.effects) {\n                        let j: number = 0;\n                        charIndex++\n                        while (compressed.charCodeAt(charIndex) != SongTagCode.effects) {\n                            tempModArray[j] = [];\n                            let o: number = 0;\n                            while (compressed.charCodeAt(charIndex) != SongTagCode.operatorWaves) {\n                                tempModArray[j][o] = clamp(1, Config.operatorCount + 2, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\n                                o++\n                                charIndex++\n                            }\n                            j++;\n                            charIndex++\n                        }\n                        instrument.customFeedbackType.set(tempModArray);\n                        charIndex++; //???? weirdly needs to skip the end character or it'll use that next loop instead of like just moving to the next one itself\n                    }\n                }\n\n            } break;\n            case SongTagCode.feedbackAmplitude: {\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n            } break;\n            case SongTagCode.feedbackEnvelope: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    \n                    let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox)) aa = pregoldToEnvelope[aa];\n                    legacySettings.feedbackEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[aa]);\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.operatorFrequencies: {\n                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            if (beforeThree && fromGoldBox) {\n\t\t\t\t\t\t\t\tconst freqToGold3 = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 22, 24, 2, 1, 9, 17, 19, 21, 23, 0, 3];\n                               \n\t\t\t\t\t\t\t\tfor (let o = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                                    instrument.operators[o].frequency = freqToGold3[clamp(0, freqToGold3.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                }\n                            }\n\t\t\t\t\t\t\telse if (!fromGoldBox && !fromUltraBox) {\n\t\t\t\t\t\t\t\tconst freqToUltraBox = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 23, 27, 2, 1, 9, 17, 19, 21, 23, 0, 3];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor (let o = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                                    instrument.operators[o].frequency = freqToUltraBox[clamp(0, freqToUltraBox.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                }\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n                            else {\n                                for (let o = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                                    instrument.operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n            } break;\n            case SongTagCode.operatorAmplitudes: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                    instrument.operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n            } break;\n            case SongTagCode.envelopes: {\n                const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                const jummToUltraEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 58, 59, 60];\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    legacySettings.operatorEnvelopes = [];\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                        let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if ((beforeTwo && fromGoldBox) || (fromBeepBox)) aa = pregoldToEnvelope[aa];\n                        if (fromJummBox) aa = jummToUltraEnvelope[aa];\n                        legacySettings.operatorEnvelopes[o] = Song._envelopeFromLegacyIndex(aa);\n                    }\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                } else {\n                    const envelopeCount: number = clamp(0, Config.maxEnvelopeCount + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    // JB v6 adds some envelope options here in the sequence.\n                    if ((fromJummBox && !beforeSix) || (fromUltraBox && !beforeFive)) {\n                        instrument.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.discreteEnvelope = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                    }\n                    for (let i: number = 0; i < envelopeCount; i++) {\n                        const target: number = clamp(0, Config.instrumentAutomationTargets.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        let index: number = 0;\n                        const maxCount: number = Config.instrumentAutomationTargets[target].maxCount;\n                        if (maxCount > 1) {\n                            index = clamp(0, maxCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if ((beforeTwo && fromGoldBox) || (fromBeepBox)) aa = pregoldToEnvelope[aa]; \n                        if (fromJummBox) aa = jummToUltraEnvelope[aa];\n                        const envelope: number = clamp(0, Config.envelopes.length, aa);\n                        instrument.addEnvelope(target, index, envelope);\n                    }\n                }\n            } break;\n            case SongTagCode.operatorWaves: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\n                if (beforeThree && fromGoldBox) {\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\n                        const pre3To3g = [0, 1, 3, 2, 2, 2, 4, 5];\n                        const old: number = clamp(0, pre3To3g.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if (old == 3) {\n                            instrument.operators[o].pulseWidth = 5;\n                        } else if (old == 4) {\n                            instrument.operators[o].pulseWidth = 4;\n                        } else if (old == 5) {\n                            instrument.operators[o].pulseWidth = 6;\n                        }\n                        instrument.operators[o].waveform = pre3To3g[old];\n                    }\n                } else {\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\n                        if (fromJummBox) {\n                            const jummToG = [0, 1, 3, 2, 4, 5];\n                            instrument.operators[o].waveform = jummToG[clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        } else {\n                            instrument.operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        // Pulse width follows, if it is a pulse width operator wave\n                        if (instrument.operators[o].waveform == 2) {\n                            instrument.operators[o].pulseWidth = clamp(0, Config.pwmOperatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                }\n\n            } break;\n            case SongTagCode.spectrum: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if (instrument.type == InstrumentType.spectrum) {\n                    const byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                        instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                    }\n                    instrument.spectrumWave.markCustomWaveDirty();\n                    charIndex += byteCount;\n                } else if (instrument.type == InstrumentType.drumset) {\n                    const byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                    for (let j: number = 0; j < Config.drumCount; j++) {\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                            instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                        }\n                        instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\n                    }\n                    charIndex += byteCount;\n                } else {\n                    throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\n                }\n            } break;\n            case SongTagCode.harmonics: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                const byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                    instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\n                }\n                instrument.harmonicsWave.markCustomWaveDirty();\n                charIndex += byteCount;\n            } break;\n            case SongTagCode.aliases: {\n                if ((fromJummBox && beforeFive) || (fromGoldBox && beforeFour)) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.aliases = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                    if (instrument.aliases) {\n                        instrument.distortion = 0;\n                        instrument.effects |= 1 << EffectType.distortion;\n                    }\n                } else {\n                    if (fromUltraBox) {\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];  \n                        instrument.decimalOffset = clamp(0, 50 + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                }\n            }\n                break;\n            case SongTagCode.bars: {\n                let subStringLength: number;\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    subStringLength = Math.ceil(barCount * 0.5);\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                    for (let i: number = 0; i < barCount; i++) {\n                        this.channels[channelIndex].bars[i] = bits.read(3) + 1;\n                    }\n                } else if (beforeFive && fromBeepBox) {\n                    let neededBits: number = 0;\n                    while ((1 << neededBits) < this.patternsPerChannel) neededBits++;\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (let i: number = 0; i < this.barCount; i++) {\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits) + 1;\n                        }\n                    }\n                } else {\n                    let neededBits: number = 0;\n                    while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (let i: number = 0; i < this.barCount; i++) {\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits);\n                        }\n                    }\n                }\n                charIndex += subStringLength;\n            } break;\n            case SongTagCode.patterns: {\n                let bitStringLength: number = 0;\n                let channelIndex: number;\n                let largerChords: boolean = !((beforeFour && fromJummBox) || fromBeepBox);\n                let recentPitchBitLength: number = (largerChords ? 4 : 3);\n                let recentPitchLength: number = (largerChords ? 16 : 8);\n                if (beforeThree && fromBeepBox) {\n                    channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    // The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default. \n                    charIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    bitStringLength = bitStringLength << 6;\n                    bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                } else {\n                    channelIndex = 0;\n                    let bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    while (bitStringLengthLength > 0) {\n                        bitStringLength = bitStringLength << 6;\n                        bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        bitStringLengthLength--;\n                    }\n                }\n\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\n                charIndex += bitStringLength;\n\n                const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\n                let songReverbChannel: number = -1;\n                let songReverbInstrument: number = -1;\n                let songReverbIndex: number = -1;\n\n                while (true) {\n                    const channel: Channel = this.channels[channelIndex];\n                    const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n                    const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n\n                    const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\n                    const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n\n                    const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\n\n                    // Some info about modulator settings immediately follows in mod channels.\n                    if (isModChannel) {\n                        let jumfive: boolean = (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)\n\n                        // 2 more indices for 'all' and 'active'\n                        const neededModInstrumentIndexBits: number = (jumfive) ? neededInstrumentIndexBits : Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n\n                        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n\n                            let instrument: Instrument = channel.instruments[instrumentIndex];\n\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                                // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\n                                // 0 - For pitch/noise\n                                // 1 - (used to be For noise, not needed)\n                                // 2 - For song\n                                // 3 - None\n                                let status: number = bits.read(2);\n\n                                switch (status) {\n                                    case 0: // Pitch\n                                        instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + this.noiseChannelCount + 1, bits.read(8));\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededModInstrumentIndexBits));\n                                        break;\n                                    case 1: // Noise\n                                        // Getting a status of 1 means this is legacy mod info. Need to add pitch channel count, as it used to just store noise channel index and not overall channel index\n                                        instrument.modChannels[mod] = this.pitchChannelCount + clamp(0, this.noiseChannelCount + 1, bits.read(8));\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededInstrumentIndexBits));\n                                        break;\n                                    case 2: // For song\n                                        instrument.modChannels[mod] = -1;\n                                        break;\n                                    case 3: // None\n                                        instrument.modChannels[mod] = -2;\n                                        break;\n                                }\n\n                                // Mod setting is only used if the status isn't \"none\".\n                                if (status != 3) {\n                                    instrument.modulators[mod] = bits.read(6);\n                                }\n\n                                if (!jumfive && (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\")) {\n                                    instrument.modFilterTypes[mod] = bits.read(6);\n                                }\n\n                                if (jumfive && instrument.modChannels[mod] >= 0) {\n                                    let forNoteFilter: boolean = effectsIncludeNoteFilter(this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects);\n\n                                    // For legacy filter cut/peak, need to denote since scaling must be applied\n                                    if (instrument.modulators[mod] == 7) {\n                                        // Legacy filter cut index\n                                        // Check if there is no filter dot on prospective filter. If so, add a low pass at max possible freq.\n\n                                        if (forNoteFilter) {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt cut\"].index;\n                                        }\n                                        else {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt cut\"].index;\n                                        }\n\n                                        instrument.modFilterTypes[mod] = 1; // Dot 1 X\n\n                                    }\n                                    else if (instrument.modulators[mod] == 8) {\n                                        // Legacy filter peak index\n                                        if (forNoteFilter) {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt peak\"].index;\n                                        }\n                                        else {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt peak\"].index;\n                                        }\n\n                                        instrument.modFilterTypes[mod] = 2; // Dot 1 Y\n                                    }\n                                }\n                                else if (jumfive) {\n                                    // Check for song reverb mod, which must be handled differently now that it is a multiplier\n                                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"song reverb\"].index) {\n                                        songReverbChannel = channelIndex;\n                                        songReverbInstrument = instrumentIndex;\n                                        songReverbIndex = mod;\n                                    }\n                                }\n\n                                // Based on setting, enable some effects for the modulated instrument. This isn't always set, say if the instrument's pan was right in the center.\n                                // Only used on import of old songs, because sometimes an invalid effect can be set in a mod in the new version that is actually unused. In that case,\n                                // keeping the mod invalid is better since it preserves the state.\n                                if (jumfive && Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length) {\n                                    this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects |= 1 << Config.modulators[instrument.modulators[mod]].associatedEffect;\n                                }\n                            }\n                        }\n                    }\n\n                    // Scalar applied to detune mods since its granularity was upped. Could be repurposed later if any other granularity changes occur.\n                    const detuneScaleNotes: number[][] = [];\n                    for (let j: number = 0; j < channel.instruments.length; j++) {\n                        detuneScaleNotes[j] = [];\n                        for (let i: number = 0; i < Config.modCount; i++) {\n                            detuneScaleNotes[j][Config.modCount - 1 - i] = 1 + 3 * +(((beforeFive && fromJummBox) || (beforeFour&&fromGoldBox)) && isModChannel && (channel.instruments[j].modulators[i] == Config.modulators.dictionary[\"detune\"].index));\n                        }\n                    }\n                    const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * 12;\n                    let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : octaveOffset);\n                    const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n                    const recentShapes: any[] = [];\n                    for (let i: number = 0; i < recentPitches.length; i++) {\n                        recentPitches[i] += octaveOffset;\n                    }\n                    for (let i: number = 0; i < this.patternsPerChannel; i++) {\n                        const newPattern: Pattern = channel.patterns[i];\n\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            newPattern.instruments[0] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\n                            newPattern.instruments.length = 1;\n                        } else {\n                            if (this.patternInstruments) {\n                                const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, bits.read(neededInstrumentCountBits) + Config.instrumentCountMin);\n                                for (let j: number = 0; j < instrumentCount; j++) {\n                                    newPattern.instruments[j] = validateRange(0, channel.instruments.length - 1 + +(isModChannel) * 2, bits.read(neededInstrumentIndexBits));\n                                }\n                                newPattern.instruments.length = instrumentCount;\n                            } else {\n                                newPattern.instruments[0] = 0;\n                                newPattern.instruments.length = Config.instrumentCountMin;\n                            }\n                        }\n\n                        if (!(fromBeepBox && beforeThree) && bits.read(1) == 0) {\n                            newPattern.notes.length = 0;\n                            continue;\n                        }\n\n                        let curPart: number = 0;\n                        const newNotes: Note[] = newPattern.notes;\n                        let noteCount: number = 0;\n                        // Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\n                        while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n\n                            const useOldShape: boolean = bits.read(1) == 1;\n                            let newNote: boolean = false;\n                            let shapeIndex: number = 0;\n                            if (useOldShape) {\n                                shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\n                            } else {\n                                newNote = bits.read(1) == 1;\n                            }\n\n                            if (!useOldShape && !newNote) {\n                                // For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\n                                if (isModChannel) {\n                                    const isBackwards: boolean = bits.read(1) == 1;\n                                    const restLength: number = bits.readPartDuration();\n                                    if (isBackwards) {\n                                        curPart -= restLength;\n                                    }\n                                    else {\n                                        curPart += restLength;\n                                    }\n                                } else {\n                                    const restLength: number = (beforeSeven && fromBeepBox)\n                                        ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                        : bits.readPartDuration();\n                                    curPart += restLength;\n\n                                }\n                            } else {\n                                let shape: any;\n                                if (useOldShape) {\n                                    shape = recentShapes[shapeIndex];\n                                    recentShapes.splice(shapeIndex, 1);\n                                } else {\n                                    shape = {};\n\n                                    if (!largerChords) {\n                                        // Old format: X 1's followed by a 0 => X+1 pitches, up to 4\n                                        shape.pitchCount = 1;\n                                        while (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\n                                    }\n                                    else {\n                                        // New format is:\n                                        //      0: 1 pitch\n                                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\n                                        if (bits.read(1) == 1) {\n                                            shape.pitchCount = bits.read(3) + 2;\n                                        }\n                                        else {\n                                            shape.pitchCount = 1;\n                                        }\n                                    }\n\n                                    shape.pinCount = bits.readPinCount();\n                                    if (fromBeepBox) {\n                                        shape.initialSize = bits.read(2) * 2;\n                                    } else if (!isModChannel) {\n                                        shape.initialSize = bits.read(bitsPerNoteSize);\n                                    } else {\n                                        shape.initialSize = bits.read(9);\n                                    }\n\n                                    shape.pins = [];\n                                    shape.length = 0;\n                                    shape.bendCount = 0;\n                                    for (let j: number = 0; j < shape.pinCount; j++) {\n                                        let pinObj: any = {};\n                                        pinObj.pitchBend = bits.read(1) == 1;\n                                        if (pinObj.pitchBend) shape.bendCount++;\n                                        shape.length += (beforeSeven && fromBeepBox)\n                                            ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                            : bits.readPartDuration();\n                                        pinObj.time = shape.length;\n                                        if (fromBeepBox) {\n                                            pinObj.size = bits.read(2) * 2;\n                                        } else if (!isModChannel) {\n                                            pinObj.size = bits.read(bitsPerNoteSize);\n                                        }\n                                        else {\n                                            pinObj.size = bits.read(9);\n                                        }\n                                        shape.pins.push(pinObj);\n                                    }\n                                }\n                                recentShapes.unshift(shape);\n                                if (recentShapes.length > 10) recentShapes.pop(); // TODO: Use Deque?\n\n                                let note: Note;\n                                if (newNotes.length <= noteCount) {\n                                    note = new Note(0, curPart, curPart + shape.length, shape.initialSize);\n                                    newNotes[noteCount++] = note;\n                                } else {\n                                    note = newNotes[noteCount++];\n                                    note.start = curPart;\n                                    note.end = curPart + shape.length;\n                                    note.pins[0].size = shape.initialSize;\n                                }\n\n                                let pitch: number;\n                                let pitchCount: number = 0;\n                                const pitchBends: number[] = []; // TODO: allocate this array only once! keep separate length and iterator index. Use Deque?\n                                for (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\n                                    const useOldPitch: boolean = bits.read(1) == 1;\n                                    if (!useOldPitch) {\n                                        const interval: number = bits.readPitchInterval();\n                                        pitch = lastPitch;\n                                        let intervalIter: number = interval;\n                                        while (intervalIter > 0) {\n                                            pitch++;\n                                            while (recentPitches.indexOf(pitch) != -1) pitch++;\n                                            intervalIter--;\n                                        }\n                                        while (intervalIter < 0) {\n                                            pitch--;\n                                            while (recentPitches.indexOf(pitch) != -1) pitch--;\n                                            intervalIter++;\n                                        }\n                                    } else {\n                                        const pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\n                                        pitch = recentPitches[pitchIndex];\n                                        recentPitches.splice(pitchIndex, 1);\n                                    }\n\n                                    recentPitches.unshift(pitch);\n                                    if (recentPitches.length > recentPitchLength) recentPitches.pop();\n\n                                    if (j < shape.pitchCount) {\n                                        note.pitches[pitchCount++] = pitch;\n                                    } else {\n                                        pitchBends.push(pitch);\n                                    }\n\n                                    if (j == shape.pitchCount - 1) {\n                                        lastPitch = note.pitches[0];\n                                    } else {\n                                        lastPitch = pitch;\n                                    }\n                                }\n                                note.pitches.length = pitchCount;\n                                pitchBends.unshift(note.pitches[0]); // TODO: Use Deque?\n                                if (isModChannel) {\n                                    note.pins[0].size *= detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\n                                }\n                                let pinCount: number = 1;\n                                for (const pinObj of shape.pins) {\n                                    if (pinObj.pitchBend) pitchBends.shift();\n\n                                    const interval: number = pitchBends[0] - note.pitches[0];\n                                    if (note.pins.length <= pinCount) {\n                                        if (isModChannel) {\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]]);\n                                        } else {\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size);\n                                        }\n                                    } else {\n                                        const pin: NotePin = note.pins[pinCount++];\n                                        pin.interval = interval;\n                                        pin.time = pinObj.time;\n                                        if (isModChannel) {\n                                            pin.size = pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\n                                        } else {\n                                            pin.size = pinObj.size;\n                                        }\n                                    }\n                                }\n                                note.pins.length = pinCount;\n\n                                if (note.start == 0) {\n                                    if (!((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)||(beforeFour&&fromGoldBox))) {\n                                        note.continuesLastPattern = (bits.read(1) == 1);\n                                    } else {\n                                        if ((beforeFour && !fromUltraBox) || fromBeepBox) {\n                                            note.continuesLastPattern = false;\n                                        } else {\n                                            note.continuesLastPattern = channel.instruments[newPattern.instruments[0]].legacyTieOver;\n                                        }\n                                    }\n                                }\n\n                                curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\n                            }\n                        }\n                        newNotes.length = noteCount;\n                    }\n\n                    if (beforeThree && fromBeepBox) {\n                        break;\n                    } else {\n                        channelIndex++;\n                        if (channelIndex >= this.getChannelCount()) break;\n                    }\n                } // while (true)\n\n                // Correction for old JB songs that had song reverb mods. Change all instruments using reverb to max reverb\n                if (((fromJummBox && beforeFive)||(beforeFour && fromGoldBox)) && songReverbIndex >= 0) {\n                    for (let channelIndex: number = 0; channelIndex < this.channels.length; channelIndex++) {\n                        for (let instrumentIndex: number = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                            if (effectsIncludeReverb(instrument.effects)) {\n                                instrument.reverb = Config.reverbRange - 1;\n                            }\n                            // Set song reverb via mod to the old setting at song start.\n                            if (songReverbChannel == channelIndex && songReverbInstrument == instrumentIndex) {\n                                const patternIndex: number = this.channels[channelIndex].bars[0];\n                                if (patternIndex > 0) {\n                                    // Doesn't work if 1st pattern isn't using the right ins for song reverb...\n                                    // Add note to start of pattern\n                                    const pattern: Pattern = this.channels[channelIndex].patterns[patternIndex - 1];\n                                    let lowestPart: number = 6;\n                                    for (const note of pattern.notes) {\n                                        if (note.pitches[0] == Config.modCount - 1 - songReverbIndex) {\n                                            lowestPart = Math.min(lowestPart, note.start);\n                                        }\n                                    }\n\n                                    if (lowestPart > 0) {\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, lowestPart, legacyGlobalReverb));\n                                    }\n                                }\n                                else {\n                                    // Add pattern\n                                    if (this.channels[channelIndex].patterns.length < Config.barCountMax) {\n                                        const pattern: Pattern = new Pattern();\n                                        this.channels[channelIndex].patterns.push(pattern);\n                                        this.channels[channelIndex].bars[0] = this.channels[channelIndex].patterns.length;\n                                        if (this.channels[channelIndex].patterns.length > this.patternsPerChannel) {\n                                            for (let chn: number = 0; chn < this.channels.length; chn++) {\n                                                if (this.channels[chn].patterns.length <= this.patternsPerChannel) {\n                                                    this.channels[chn].patterns.push(new Pattern());\n                                                }\n                                            }\n                                            this.patternsPerChannel++;\n                                        }\n                                        pattern.instruments.length = 1;\n                                        pattern.instruments[0] = songReverbInstrument;\n                                        pattern.notes.length = 0;\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, 6, legacyGlobalReverb));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            } break;\n            default: {\n                throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1) + \" \" + compressed.substring(/*charIndex - 2*/0, charIndex));\n            } break;\n        }\n\n        if (Config.willReloadForCustomSamples) {\n            window.location.hash = this.toBase64String();\n            setTimeout(() => { location.reload(); }, 50);\n        }\n    }\n\n    private static _isProperUrl(string: string): boolean {\n        try { \n            return Boolean(new URL(string)); \n        }\n        catch(x){ \n            return false; \n        }\n    }\n\n    // @TODO: Share more of this code with AddSamplesPrompt.\n    private static _parseAndConfigureCustomSample(url: string, customSampleUrls: string[], customSamplePresets: Preset[], sampleLoadingState: SampleLoadingState, parseOldSyntax: boolean): boolean {\n        const defaultIndex: number = 0;\n        const defaultIntegratedSamples: Float32Array = Config.chipWaves[defaultIndex].samples;\n        const defaultSamples: Float32Array = Config.rawRawChipWaves[defaultIndex].samples;\n\n        const customSampleUrlIndex: number = customSampleUrls.length;\n        customSampleUrls.push(url);\n        // This depends on `Config.chipWaves` being the same\n        // length as `Config.rawRawChipWaves`.\n        const chipWaveIndex: number = Config.chipWaves.length;\n\n        let urlSliced: string = url;\n\n        let customSampleRate: number = 44100;\n        let isCustomPercussive: boolean = false;\n        let customRootKey: number = 60;\n        let presetIsUsingAdvancedLoopControls: boolean = false;\n        let presetChipWaveLoopStart: number | null = null;\n        let presetChipWaveLoopEnd: number | null = null;\n        let presetChipWaveStartOffset: number | null = null;\n        let presetChipWaveLoopMode: number | null = null;\n        let presetChipWavePlayBackwards: boolean = false;\n\n        let parsedSampleOptions: boolean = false;\n        let optionsStartIndex: number = url.indexOf(\"!\");\n        let optionsEndIndex: number = -1;\n        if (optionsStartIndex === 0) {\n            optionsEndIndex = url.indexOf(\"!\", optionsStartIndex + 1);\n            if (optionsEndIndex !== -1) {\n                const rawOptions: string[] = url.slice(optionsStartIndex + 1, optionsEndIndex).split(\",\");\n                for (const rawOption of rawOptions) {\n                    const optionCode: string = rawOption.charAt(0);\n                    const optionData: string = rawOption.slice(1, rawOption.length);\n                    if (optionCode === \"s\") {\n                        customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(optionData, 44100));\n                    } else if (optionCode === \"r\") {\n                        customRootKey = parseFloatWithDefault(optionData, 60);\n                    } else if (optionCode === \"p\") {\n                        isCustomPercussive = true;\n                    } else if (optionCode === \"a\") {\n                        presetChipWaveLoopStart = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopStart != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    } else if (optionCode === \"b\") {\n                        presetChipWaveLoopEnd = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopEnd != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    } else if (optionCode === \"c\") {\n                        presetChipWaveStartOffset = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveStartOffset != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    } else if (optionCode === \"d\") {\n                        presetChipWaveLoopMode = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopMode != null) {\n                            // @TODO: Error-prone. This should be automatically\n                            // derived from the list of available loop modes.\n                            presetChipWaveLoopMode = clamp(0, 3 + 1, presetChipWaveLoopMode);\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    } else if (optionCode === \"e\") {\n                        presetChipWavePlayBackwards = true;\n                        presetIsUsingAdvancedLoopControls = true;\n                    }\n                }\n                urlSliced = url.slice(optionsEndIndex + 1, url.length);\n                parsedSampleOptions = true;\n            }\n        }\n\n        let parsedUrl: URL | null = null;\n        if (Song._isProperUrl(urlSliced)) {\n            parsedUrl = new URL(urlSliced);\n        }\n        else {\n            alert(url + \" is not a valid url\");\n            return false;\n        }\n\n        if (parseOldSyntax) {\n            if (!parsedSampleOptions && parsedUrl != null) {\n                if (url.indexOf(\"@\") != -1) {\n                    //urlSliced = url.slice(url.indexOf(\"@\"), url.indexOf(\"@\"));\n                    urlSliced = url.replaceAll(\"@\", \"\")\n                    parsedUrl = new URL(urlSliced);\n                    isCustomPercussive = true;\t\n                }\t\n\n                function sliceForSampleRate() {\n                    urlSliced = url.slice(0, url.indexOf(\",\"));\n                    parsedUrl = new URL(urlSliced);\n                    customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(url.slice(url.indexOf(\",\") + 1), 44100));\n                    //should this be parseFloat or parseInt?\n                    //ig floats let you do decimals and such, but idk where that would be useful\n                }\n\n                function sliceForRootKey() {\n                    urlSliced = url.slice(0, url.indexOf(\"!\"));\n                    parsedUrl = new URL(urlSliced);\n                    customRootKey = parseFloatWithDefault(url.slice(url.indexOf(\"!\") + 1), 60);\n                }\n\n\n                if (url.indexOf(\",\") != -1 && url.indexOf(\"!\") != -1) {\n                    if (url.indexOf(\",\") < url.indexOf(\"!\")) {\n                        sliceForRootKey();\n                        sliceForSampleRate();\n                    }\n                    else {\n                        sliceForSampleRate();\n                        sliceForRootKey();\n                    }\t\n                }\n                else {\n                    if (url.indexOf(\",\") != -1) {\n                        sliceForSampleRate();\n                    }\t\n                    if (url.indexOf(\"!\") != -1) {\n                        sliceForRootKey();\n                    }\t\n                }\n            }\n        }\n\n        if (parsedUrl != null) {\n            // Store in the new format.\n            let urlWithNamedOptions = urlSliced;\n            const namedOptions: string[] = [];\n            if (customSampleRate !== 44100) namedOptions.push(\"s\" + customSampleRate);\n            if (customRootKey !== 60) namedOptions.push(\"r\" + customRootKey);\n            if (isCustomPercussive) namedOptions.push(\"p\");\n            if (presetIsUsingAdvancedLoopControls) {\n                if (presetChipWaveLoopStart != null) namedOptions.push(\"a\" + presetChipWaveLoopStart);\n                if (presetChipWaveLoopEnd != null) namedOptions.push(\"b\" + presetChipWaveLoopEnd);\n                if (presetChipWaveStartOffset != null) namedOptions.push(\"c\" + presetChipWaveStartOffset);\n                if (presetChipWaveLoopMode != null) namedOptions.push(\"d\" + presetChipWaveLoopMode);\n                if (presetChipWavePlayBackwards) namedOptions.push(\"e\");\n            }\n            if (namedOptions.length > 0) {\n                urlWithNamedOptions = \"!\" + namedOptions.join(\",\") + \"!\" + urlSliced;\n            }\n            customSampleUrls[customSampleUrlIndex] = urlWithNamedOptions;\n\n            // @TODO: Could also remove known extensions, but it\n            // would probably be much better to be able to specify\n            // a custom name.\n            // @TODO: If for whatever inexplicable reason someone\n            // uses an url like `https://example.com`, this will\n            // result in an empty name here.\n            const name: string = decodeURIComponent(parsedUrl.pathname.replace(/^([^\\/]*\\/)+/, \"\"));\n            // @TODO: What to do about samples with the same name?\n            // The problem with using the url is that the name is\n            // user-facing and long names break assumptions of the\n            // UI.\n            const expression: number = 1.0;\n            Config.chipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultIntegratedSamples,\n                index: chipWaveIndex,\n            };\n            Config.rawChipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultSamples,\n                index: chipWaveIndex,\n            };\n            Config.rawRawChipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultSamples,\n                index: chipWaveIndex,\n            };\n            const customSamplePresetSettings: Dictionary<any> = {\n                \"type\": \"chip\",\n                \"eqFilter\": [],\n                \"effects\": [],\n                \"transition\": \"normal\",\n                \"fadeInSeconds\": 0,\n                \"fadeOutTicks\": -3,\n                \"chord\": \"harmony\",\n                \"wave\": name,\n                \"unison\": \"none\",\n                \"envelopes\": [],\n            };\n            if (presetIsUsingAdvancedLoopControls) {\n                customSamplePresetSettings[\"isUsingAdvancedLoopControls\"] = true;\n                customSamplePresetSettings[\"chipWaveLoopStart\"] = presetChipWaveLoopStart != null ? presetChipWaveLoopStart : 0;\n                customSamplePresetSettings[\"chipWaveLoopEnd\"] = presetChipWaveLoopEnd != null ? presetChipWaveLoopEnd : 2;\n                customSamplePresetSettings[\"chipWaveLoopMode\"] = presetChipWaveLoopMode != null ? presetChipWaveLoopMode : 0;\n                customSamplePresetSettings[\"chipWavePlayBackwards\"] = presetChipWavePlayBackwards;\n                customSamplePresetSettings[\"chipWaveStartOffset\"] = presetChipWaveStartOffset != null ? presetChipWaveStartOffset : 0;\n            }\n            const customSamplePreset: Preset = {\n                index: 0, // This should be overwritten by toNameMap, in our caller.\n                name: name,\n                midiProgram: 80,\n                settings: customSamplePresetSettings,\n            };\n            customSamplePresets.push(customSamplePreset);\n            if (!Config.willReloadForCustomSamples) {\n                const rawLoopOptions: any = {\n                    \"isUsingAdvancedLoopControls\": presetIsUsingAdvancedLoopControls,\n                    \"chipWaveLoopStart\": presetChipWaveLoopStart,\n                    \"chipWaveLoopEnd\": presetChipWaveLoopEnd,\n                    \"chipWaveLoopMode\": presetChipWaveLoopMode,\n                    \"chipWavePlayBackwards\": presetChipWavePlayBackwards,\n                    \"chipWaveStartOffset\": presetChipWaveStartOffset,\n                };\n                startLoadingSample(urlSliced, chipWaveIndex, customSamplePresetSettings, rawLoopOptions, customSampleRate);\n            }\n            sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\n            sampleLoadingState.urlTable[chipWaveIndex] = urlSliced;\n            sampleLoadingState.totalSamples++;\n        }\n\n        return true;\n    }\n\n    private static _restoreChipWaveListToDefault(): void {\n        Config.chipWaves = toNameMap(Config.chipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n        Config.rawChipWaves = toNameMap(Config.rawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n        Config.rawRawChipWaves = toNameMap(Config.rawRawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n    }\n\n    private static _clearSamples(): void {\n        EditorConfig.customSamples = null;\n\n        Song._restoreChipWaveListToDefault();\n\n        sampleLoadingState.statusTable = {};\n        sampleLoadingState.urlTable = {};\n        sampleLoadingState.totalSamples = 0;\n        sampleLoadingState.samplesLoaded = 0;\n        sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\n            sampleLoadingState.totalSamples,\n            sampleLoadingState.samplesLoaded\n        ));\n    }\n\n    public toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\n        const channelArray: Object[] = [];\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel: Channel = this.channels[channelIndex];\n            const instrumentArray: Object[] = [];\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n            for (const instrument of channel.instruments) {\n                instrumentArray.push(instrument.toJsonObject());\n            }\n\n            const patternArray: Object[] = [];\n            for (const pattern of channel.patterns) {\n                patternArray.push(pattern.toJsonObject(this, channel, isModChannel));\n            }\n\n            const sequenceArray: number[] = [];\n            if (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\n                sequenceArray.push(channel.bars[i]);\n            }\n            for (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\n                sequenceArray.push(channel.bars[i]);\n            }\n            if (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\n                sequenceArray.push(channel.bars[i]);\n            }\n\n            const channelObject: any = {\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\n                \"name\": channel.name,\n                \"instruments\": instrumentArray,\n                \"patterns\": patternArray,\n                \"sequence\": sequenceArray,\n            };\n            if (!isNoiseChannel) {\n                // For compatibility with old versions the octave is offset by one.\n                channelObject[\"octaveScrollBar\"] = channel.octave - 1;\n            }\n            channelArray.push(channelObject);\n        }\n\n        const result: any = {\n            \"name\": this.title,\n            \"format\": Song._format,\n            \"version\": Song._latestUltraBoxVersion,\n            \"scale\": Config.scales[this.scale].name,\n            \"customScale\": this.scaleCustom,\n            \"key\": Config.keys[this.key].name,\n            \"keyOctave\": this.octave,\n            \"introBars\": this.loopStart,\n            \"loopBars\": this.loopLength,\n            \"beatsPerBar\": this.beatsPerBar,\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\n            \"beatsPerMinute\": this.tempo,\n            \"reverb\": this.reverb,\n            \"masterGain\": this.masterGain,\n            \"compressionThreshold\": this.compressionThreshold,\n            \"limitThreshold\": this.limitThreshold,\n            \"limitDecay\": this.limitDecay,\n            \"limitRise\": this.limitRise,\n            \"limitRatio\": this.limitRatio,\n            \"compressionRatio\": this.compressionRatio,\n            //\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\n            //\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\n            \"layeredInstruments\": this.layeredInstruments,\n            \"patternInstruments\": this.patternInstruments,\n            \"channels\": channelArray,\n        };\n\n        if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\n            result[\"customSamples\"] = EditorConfig.customSamples;\n        }\n\n        return result;\n    }\n\n    public fromJsonObject(jsonObject: any): void {\n        this.initToDefault(true);\n        if (!jsonObject) return;\n\n        //const version: number = jsonObject[\"version\"] | 0;\n        //if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\n\n        if (jsonObject[\"name\"] != undefined) {\n            this.title = jsonObject[\"name\"];\n        }\n\n\t    \t\t\t// if (jsonObject[\"customSamples\"] != undefined && EditorConfig.customSamples == undefined) {\n                // EditorConfig.customSamples = atob(jsonObject[\"customSamples\"]);\n\t\t\t\t// console.log(EditorConfig.customSamples);\n\t\t\t\t// location.reload(); \n            // }\n\t\t\t//jsonmark\n\t\t\t//this doesn't work\n\n        if (jsonObject[\"customSamples\"] != undefined) {\n            const customSamples: string[] = jsonObject[\"customSamples\"];\n            if (EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != customSamples.join(\", \")) {\n                // Have to duplicate the work done in Song.fromBase64String\n                // early here, because Instrument.fromJsonObject depends on the\n                // chip wave list having the correct items already in memory.\n\n                Config.willReloadForCustomSamples = true;\n\n                Song._restoreChipWaveListToDefault();\n\n                let willLoadLegacySamples: boolean = false;\n                let willLoadNintariboxSamples: boolean = false;\n                let willLoadMarioPaintboxSamples: boolean = false;\n                const customSampleUrls: string[] = [];\n                const customSamplePresets: Preset[] = [];\n                for (const url of customSamples) {\n                    if (url.toLowerCase() === \"legacysamples\") {\n                        if (!willLoadLegacySamples) {\n                            willLoadLegacySamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(0);\n                        }\n                    } \n                    else if (url.toLowerCase() === \"nintariboxsamples\") {\n                        if (!willLoadNintariboxSamples) {\n                            willLoadNintariboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(1);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                        if (!willLoadMarioPaintboxSamples) {\n                            willLoadMarioPaintboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(2);\n                        }\n                    }\n                    \n                    else {\n                        // When EditorConfig.customSamples is saved in the json\n                        // export, it should be using the new syntax, unless\n                        // the user has manually modified the URL, so we don't\n                        // really need to parse the old syntax here.\n                        const parseOldSyntax: boolean = false;\n                        Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\n                    }\n                }\n                if (customSampleUrls.length > 0) {\n                    EditorConfig.customSamples = customSampleUrls;\n                }\n                if (customSamplePresets.length > 0) {\n                    const customSamplePresetsMap: DictionaryArray<Preset> = toNameMap(customSamplePresets);\n                    EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\n                        name: \"Custom Sample Presets\",\n                        presets: customSamplePresetsMap,\n                        index: EditorConfig.presetCategories.length,\n                    };\n                }\n            }\n        } else {\n            // No custom samples, so the only possibility at this point is that\n            // we need to load the legacy samples. Let's check whether that's\n            // necessary.\n            let shouldLoadLegacySamples: boolean = false;\n            if (jsonObject[\"channels\"] != undefined) {\n                for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                    const channelObject: any = jsonObject[\"channels\"][channelIndex];\n                    if (channelObject[\"type\"] !== \"pitch\") {\n                        // Legacy samples can only exist in pitch channels.\n                        continue;\n                    }\n                    if (Array.isArray(channelObject[\"instruments\"])) {\n                        const instrumentObjects: any[] = channelObject[\"instruments\"];\n                        for (let i: number = 0; i < instrumentObjects.length; i++) {\n                            const instrumentObject: any = instrumentObjects[i];\n                            if (instrumentObject[\"type\"] !== \"chip\") {\n                                // Legacy samples can only exist in chip wave\n                                // instruments.\n                                continue;\n                            }\n                            if (instrumentObject[\"wave\"] == null) {\n                                // This should exist if things got saved\n                                // correctly, but if they didn't, skip this.\n                                continue;\n                            }\n                            const waveName: string = instrumentObject[\"wave\"];\n                            // @TODO: Avoid this duplication.\n                            const names: string[] = [\n                                \"paandorasbox kick\",\n                                \"paandorasbox snare\",\n                                \"paandorasbox piano1\",\n                                \"paandorasbox WOW\",\n                                \"paandorasbox overdrive\",\n                                \"paandorasbox trumpet\",\n                                \"paandorasbox saxophone\",\n                                \"paandorasbox orchestrahit\",\n                                \"paandorasbox detatched violin\",\n                                \"paandorasbox synth\",\n                                \"paandorasbox sonic3snare\",\n                                \"paandorasbox come on\",\n                                \"paandorasbox choir\",\n                                \"paandorasbox overdriveguitar\",\n                                \"paandorasbox flute\",\n                                \"paandorasbox legato violin\",\n                                \"paandorasbox tremolo violin\",\n                                \"paandorasbox amen break\",\n                                \"paandorasbox pizzicato violin\",\n                                \"paandorasbox tim allen grunt\",\n                                \"paandorasbox tuba\",\n                                \"paandorasbox loopingcymbal\",\n                                \"paandorasbox standardkick\",\n                                \"paandorasbox standardsnare\",\n                                \"paandorasbox closedhihat\",\n                                \"paandorasbox foothihat\",\n                                \"paandorasbox openhihat\",\n                                \"paandorasbox crashcymbal\",\n                                \"paandorasbox pianoC4\",\n                                \"paandorasbox liver pad\",\n                                \"paandorasbox marimba\",\n                                \"paandorasbox susdotwav\",\n                                \"paandorasbox wackyboxtts\",\n                                \"paandorasbox peppersteak_1\",\n                                \"paandorasbox peppersteak_2\",\n                                \"paandorasbox vinyl_noise\",\n                                \"paandorasbeta slap bass\",\n                                \"paandorasbeta HD EB overdrive guitar\",\n                                \"paandorasbeta sunsoft bass\",\n                                \"paandorasbeta masculine choir\",\n                                \"paandorasbeta feminine choir\",\n                                \"paandorasbeta tololoche\",\n                                \"paandorasbeta harp\",\n                                \"paandorasbeta pan flute\",\n                                \"paandorasbeta krumhorn\",\n                                \"paandorasbeta timpani\",\n                                \"paandorasbeta crowd hey\",\n                                \"paandorasbeta wario land 4 brass\",\n                                \"paandorasbeta wario land 4 rock organ\",\n                                \"paandorasbeta wario land 4 DAOW\",\n                                \"paandorasbeta wario land 4 hour chime\",\n                                \"paandorasbeta wario land 4 tick\",\n                                \"paandorasbeta kirby kick\",\n                                \"paandorasbeta kirby snare\",\n                                \"paandorasbeta kirby bongo\",\n                                \"paandorasbeta kirby click\",\n                                \"paandorasbeta sonor kick\",\n                                \"paandorasbeta sonor snare\",\n                                \"paandorasbeta sonor snare (left hand)\",\n                                \"paandorasbeta sonor snare (right hand)\",\n                                \"paandorasbeta sonor high tom\",\n                                \"paandorasbeta sonor low tom\",\n                                \"paandorasbeta sonor hihat (closed)\",\n                                \"paandorasbeta sonor hihat (half opened)\",\n                                \"paandorasbeta sonor hihat (open)\",\n                                \"paandorasbeta sonor hihat (open tip)\",\n                                \"paandorasbeta sonor hihat (pedal)\",\n                                \"paandorasbeta sonor crash\",\n                                \"paandorasbeta sonor crash (tip)\",\n                                \"paandorasbeta sonor ride\"\n                            ];\n                            // The difference for these is in the doubled a.\n                            const oldNames: string[] = [\n                                \"pandoraasbox kick\",\n                                \"pandoraasbox snare\",\n                                \"pandoraasbox piano1\",\n                                \"pandoraasbox WOW\",\n                                \"pandoraasbox overdrive\",\n                                \"pandoraasbox trumpet\",\n                                \"pandoraasbox saxophone\",\n                                \"pandoraasbox orchestrahit\",\n                                \"pandoraasbox detatched violin\",\n                                \"pandoraasbox synth\",\n                                \"pandoraasbox sonic3snare\",\n                                \"pandoraasbox come on\",\n                                \"pandoraasbox choir\",\n                                \"pandoraasbox overdriveguitar\",\n                                \"pandoraasbox flute\",\n                                \"pandoraasbox legato violin\",\n                                \"pandoraasbox tremolo violin\",\n                                \"pandoraasbox amen break\",\n                                \"pandoraasbox pizzicato violin\",\n                                \"pandoraasbox tim allen grunt\",\n                                \"pandoraasbox tuba\",\n                                \"pandoraasbox loopingcymbal\",\n                                \"pandoraasbox standardkick\",\n                                \"pandoraasbox standardsnare\",\n                                \"pandoraasbox closedhihat\",\n                                \"pandoraasbox foothihat\",\n                                \"pandoraasbox openhihat\",\n                                \"pandoraasbox crashcymbal\",\n                                \"pandoraasbox pianoC4\",\n                                \"pandoraasbox liver pad\",\n                                \"pandoraasbox marimba\",\n                                \"pandoraasbox susdotwav\",\n                                \"pandoraasbox wackyboxtts\",\n                                \"pandoraasbox peppersteak_1\",\n                                \"pandoraasbox peppersteak_2\",\n                                \"pandoraasbox vinyl_noise\",\n                                \"pandoraasbeta slap bass\",\n                                \"pandoraasbeta HD EB overdrive guitar\",\n                                \"pandoraasbeta sunsoft bass\",\n                                \"pandoraasbeta masculine choir\",\n                                \"pandoraasbeta feminine choir\",\n                                \"pandoraasbeta tololoche\",\n                                \"pandoraasbeta harp\",\n                                \"pandoraasbeta pan flute\",\n                                \"pandoraasbeta krumhorn\",\n                                \"pandoraasbeta timpani\",\n                                \"pandoraasbeta crowd hey\",\n                                \"pandoraasbeta wario land 4 brass\",\n                                \"pandoraasbeta wario land 4 rock organ\",\n                                \"pandoraasbeta wario land 4 DAOW\",\n                                \"pandoraasbeta wario land 4 hour chime\",\n                                \"pandoraasbeta wario land 4 tick\",\n                                \"pandoraasbeta kirby kick\",\n                                \"pandoraasbeta kirby snare\",\n                                \"pandoraasbeta kirby bongo\",\n                                \"pandoraasbeta kirby click\",\n                                \"pandoraasbeta sonor kick\",\n                                \"pandoraasbeta sonor snare\",\n                                \"pandoraasbeta sonor snare (left hand)\",\n                                \"pandoraasbeta sonor snare (right hand)\",\n                                \"pandoraasbeta sonor high tom\",\n                                \"pandoraasbeta sonor low tom\",\n                                \"pandoraasbeta sonor hihat (closed)\",\n                                \"pandoraasbeta sonor hihat (half opened)\",\n                                \"pandoraasbeta sonor hihat (open)\",\n                                \"pandoraasbeta sonor hihat (open tip)\",\n                                \"pandoraasbeta sonor hihat (pedal)\",\n                                \"pandoraasbeta sonor crash\",\n                                \"pandoraasbeta sonor crash (tip)\",\n                                \"pandoraasbeta sonor ride\"\n                            ];\n                            // This mirrors paandorasboxWaveNames, which is unprefixed.\n                            const veryOldNames: string[] = [\n                                \"kick\",\n                                \"snare\",\n                                \"piano1\",\n                                \"WOW\",\n                                \"overdrive\",\n                                \"trumpet\",\n                                \"saxophone\",\n                                \"orchestrahit\",\n                                \"detatched violin\",\n                                \"synth\",\n                                \"sonic3snare\",\n                                \"come on\",\n                                \"choir\",\n                                \"overdriveguitar\",\n                                \"flute\",\n                                \"legato violin\",\n                                \"tremolo violin\",\n                                \"amen break\",\n                                \"pizzicato violin\",\n                                \"tim allen grunt\",\n                                \"tuba\",\n                                \"loopingcymbal\",\n                                \"standardkick\",\n                                \"standardsnare\",\n                                \"closedhihat\",\n                                \"foothihat\",\n                                \"openhihat\",\n                                \"crashcymbal\",\n                                \"pianoC4\",\n                                \"liver pad\",\n                                \"marimba\",\n                                \"susdotwav\",\n                                \"wackyboxtts\"\n                            ];\n                            if (names.includes(waveName)) {\n                                shouldLoadLegacySamples = true;\n                            } else if (oldNames.includes(waveName)) {\n                                shouldLoadLegacySamples = true;\n                                // If we see one of these old names, update it\n                                // to the corresponding new name.\n                                instrumentObject[\"wave\"] = names[oldNames.findIndex(x => x === waveName)];\n                            } else if (veryOldNames.includes(waveName)) {\n                                if (waveName === \"trumpet\" || waveName === \"flute\") {\n                                    // @TODO: This isn't exactly correct, but for now, if we see one of these two,\n                                    // leave them with the JummBox chip waves. The actual solution here will probably\n                                    // involve disambiguation via user input.\n                                } else {\n                                    // There's no other chip waves with ambiguous names like that, so it should\n                                    // be okay to assume we'll need to load the legacy samples now.\n                                    shouldLoadLegacySamples = true;\n                                    // If we see one of these old names, update it\n                                    // to the corresponding new name.\n                                    instrumentObject[\"wave\"] = names[veryOldNames.findIndex(x => x === waveName)];\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (shouldLoadLegacySamples) {\n                Config.willReloadForCustomSamples = true;\n\n                Song._restoreChipWaveListToDefault();\n\n                loadBuiltInSamples(0);\n                EditorConfig.customSamples = [\"legacySamples\"];\n            } else {\n                // We don't need to load the legacy samples, but we may have\n                // leftover samples in memory. If we do, clear them.\n                if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\n                    // We need to reload anyway in this case, because (for now)\n                    // the chip wave lists won't be correctly updated.\n                    Config.willReloadForCustomSamples = true;\n                    Song._clearSamples();\n                }\n            }\n        }\n\n        this.scale = 0; // default to free.\n        if (jsonObject[\"scale\"] != undefined) {\n            const oldScaleNames: Dictionary<string> = {\n                \"romani :)\": \"double harmonic :)\",\n\t\t\t\t\"romani :(\": \"double harmonic :(\",\n\t\t\t\t\"dbl harmonic :)\": \"double harmonic :)\",\n\t\t\t\t\"dbl harmonic :(\": \"double harmonic :(\",\n                \"enigma\": \"strange\",\n            };\n            const scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\n            const scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\n            if (scale != -1) this.scale = scale;\n            if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n                if (jsonObject[\"customScale\"] != undefined) {\n                    for (var i of jsonObject[\"customScale\"].keys()) {\n                        this.scaleCustom[i] = jsonObject[\"customScale\"][i];\n                    }\n                }\n            }\n        }\n\n        if (jsonObject[\"key\"] != undefined) {\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\n            } else if (typeof (jsonObject[\"key\"]) == \"string\") {\n                const key: string = jsonObject[\"key\"];\n                // This conversion code depends on C through B being\n                // available as keys, of course.\n                if (key === \"C+\") {\n                    this.key = 0;\n                    this.octave = 1;\n                } else if (key === \"G- (actually F#-)\") {\n                    this.key = 6;\n                    this.octave = -1;\n                } else if (key === \"C-\") {\n                    this.key = 0;\n                    this.octave = -1;\n                } else if (key === \"oh no (F-)\") {\n                    this.key = 5;\n                    this.octave = -1;\n                } else {\n                    const letter: string = key.charAt(0).toUpperCase();\n                    const symbol: string = key.charAt(1).toLowerCase();\n                    const letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\n                    const accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\n                    let index: number | undefined = letterMap[letter];\n                    const offset: number | undefined = accidentalMap[symbol];\n                    if (index != undefined) {\n                        if (offset != undefined) index += offset;\n                        if (index < 0) index += 12;\n                        index = index % 12;\n                        this.key = index;\n                    }\n                }\n            }\n        }\n\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\n        }\n\n        if (jsonObject[\"keyOctave\"] != undefined) {\n            this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, jsonObject[\"keyOctave\"] | 0);\n        }\n\n        let legacyGlobalReverb: number = 0; // In older songs, reverb was song-global, record that here and pass it to Instrument.fromJsonObject() for context.\n        if (jsonObject[\"reverb\"] != undefined) {\n            legacyGlobalReverb = clamp(0, 32, jsonObject[\"reverb\"] | 0);\n        }\n\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\n        }\n\n        let importedPartsPerBeat: number = 4;\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\n            if (this.rhythm == -1) {\n                this.rhythm = 1;\n            }\n        }\n\n        // Read limiter settings. Ranges and defaults are based on slider settings\n\n        if (jsonObject[\"masterGain\"] != undefined) {\n            this.masterGain = Math.max(0.0, Math.min(5.0, jsonObject[\"masterGain\"] || 0));\n        } else {\n            this.masterGain = 1.0;\n        }\n\n        if (jsonObject[\"limitThreshold\"] != undefined) {\n            this.limitThreshold = Math.max(0.0, Math.min(2.0, jsonObject[\"limitThreshold\"] || 0));\n        }\n        else {\n            this.limitThreshold = 1.0;\n        }\n\n        if (jsonObject[\"compressionThreshold\"] != undefined) {\n            this.compressionThreshold = Math.max(0.0, Math.min(1.1, jsonObject[\"compressionThreshold\"] || 0));\n        }\n        else {\n            this.compressionThreshold = 1.0;\n        }\n\n        if (jsonObject[\"limitRise\"] != undefined) {\n            this.limitRise = Math.max(2000.0, Math.min(10000.0, jsonObject[\"limitRise\"] || 0));\n        }\n        else {\n            this.limitRise = 4000.0;\n        }\n\n        if (jsonObject[\"limitDecay\"] != undefined) {\n            this.limitDecay = Math.max(1.0, Math.min(30.0, jsonObject[\"limitDecay\"] || 0));\n        }\n        else {\n            this.limitDecay = 4.0;\n        }\n\n        if (jsonObject[\"limitRatio\"] != undefined) {\n            this.limitRatio = Math.max(0.0, Math.min(11.0, jsonObject[\"limitRatio\"] || 0));\n        }\n        else {\n            this.limitRatio = 1.0;\n        }\n\n        if (jsonObject[\"compressionRatio\"] != undefined) {\n            this.compressionRatio = Math.max(0.0, Math.min(1.168, jsonObject[\"compressionRatio\"] || 0));\n        }\n        else {\n            this.compressionRatio = 1.0;\n        }\n\n        let maxInstruments: number = 1;\n        let maxPatterns: number = 1;\n        let maxBars: number = 1;\n        if (jsonObject[\"channels\"] != undefined) {\n            for (const channelObject of jsonObject[\"channels\"]) {\n                if (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\n                if (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\n                if (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\n            }\n        }\n\n        if (jsonObject[\"layeredInstruments\"] != undefined) {\n            this.layeredInstruments = !!jsonObject[\"layeredInstruments\"];\n        } else {\n            this.layeredInstruments = false;\n        }\n        if (jsonObject[\"patternInstruments\"] != undefined) {\n            this.patternInstruments = !!jsonObject[\"patternInstruments\"];\n        } else {\n            this.patternInstruments = (maxInstruments > 1);\n        }\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\n        this.barCount = Math.min(maxBars, Config.barCountMax);\n\n        if (jsonObject[\"introBars\"] != undefined) {\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\n        }\n        if (jsonObject[\"loopBars\"] != undefined) {\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\n        }\n\n        const newPitchChannels: Channel[] = [];\n        const newNoiseChannels: Channel[] = [];\n        const newModChannels: Channel[] = [];\n        if (jsonObject[\"channels\"] != undefined) {\n            for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                let channelObject: any = jsonObject[\"channels\"][channelIndex];\n\n                const channel: Channel = new Channel();\n\n                let isNoiseChannel: boolean = false;\n                let isModChannel: boolean = false;\n                if (channelObject[\"type\"] != undefined) {\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\n                } else {\n                    // for older files, assume drums are channel 3.\n                    isNoiseChannel = (channelIndex >= 3);\n                }\n                if (isNoiseChannel) {\n                    newNoiseChannels.push(channel);\n                } else if (isModChannel) {\n                    newModChannels.push(channel);\n                }\n                else {\n                    newPitchChannels.push(channel);\n                }\n\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\n                    channel.octave = clamp(0, Config.pitchOctaves, (channelObject[\"octaveScrollBar\"] | 0) + 1);\n                    if (isNoiseChannel) channel.octave = 0;\n                }\n\n                if (channelObject[\"name\"] != undefined) {\n                    channel.name = channelObject[\"name\"];\n                }\n                else {\n                    channel.name = \"\";\n                }\n\n                if (Array.isArray(channelObject[\"instruments\"])) {\n                    const instrumentObjects: any[] = channelObject[\"instruments\"];\n                    for (let i: number = 0; i < instrumentObjects.length; i++) {\n                        if (i >= this.getMaxInstrumentsPerChannel()) break;\n                        const instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\n                        channel.instruments[i] = instrument;\n                        instrument.fromJsonObject(instrumentObjects[i], isNoiseChannel, isModChannel, false, false, legacyGlobalReverb);\n                    }\n\n                }\n\n                for (let i: number = 0; i < this.patternsPerChannel; i++) {\n                    const pattern: Pattern = new Pattern();\n                    channel.patterns[i] = pattern;\n\n                    let patternObject: any = undefined;\n                    if (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\n                    if (patternObject == undefined) continue;\n\n                    pattern.fromJsonObject(patternObject, this, channel, importedPartsPerBeat, isNoiseChannel, isModChannel);\n                }\n                channel.patterns.length = this.patternsPerChannel;\n\n                for (let i: number = 0; i < this.barCount; i++) {\n                    channel.bars[i] = (channelObject[\"sequence\"] != undefined) ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n        }\n\n        if (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\n        if (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\n        if (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\n        this.pitchChannelCount = newPitchChannels.length;\n        this.noiseChannelCount = newNoiseChannels.length;\n        this.modChannelCount = newModChannels.length;\n        this.channels.length = 0;\n        Array.prototype.push.apply(this.channels, newPitchChannels);\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\n        Array.prototype.push.apply(this.channels, newModChannels);\n\n        if (Config.willReloadForCustomSamples) {\n            window.location.hash = this.toBase64String();\n            // The prompt seems to get stuck if reloading is done too quickly.\n            setTimeout(() => { location.reload(); }, 50);\n        }\n    }\n\n    public getPattern(channelIndex: number, bar: number): Pattern | null {\n        if (bar < 0 || bar >= this.barCount) return null;\n        const patternIndex: number = this.channels[channelIndex].bars[bar];\n        if (patternIndex == 0) return null;\n        return this.channels[channelIndex].patterns[patternIndex - 1];\n    }\n\n    public getBeatsPerMinute(): number {\n        return this.tempo;\n    }\n\n    public static getNeededBits(maxValue: number): number {\n        return 32 - Math.clz32(Math.ceil(maxValue + 1) - 1);\n    }\n\n    public restoreLimiterDefaults(): void {\n        this.compressionRatio = 1.0;\n        this.limitRatio = 1.0;\n        this.limitRise = 4000.0;\n        this.limitDecay = 4.0;\n        this.limitThreshold = 1.0;\n        this.compressionThreshold = 1.0;\n        this.masterGain = 1.0;\n    }\n}\n\nclass PickedString {\n    public delayLine: Float32Array | null = null;\n    public delayIndex: number;\n    public allPassSample: number;\n    public allPassPrevInput: number;\n    public sustainFilterSample: number;\n\tpublic sustainFilterPrevOutput2: number;\n\tpublic sustainFilterPrevInput1: number;\n\tpublic sustainFilterPrevInput2: number;\n    public fractionalDelaySample: number;\n    public prevDelayLength: number;\n    public delayLengthDelta: number;\n    public delayResetOffset: number;\n\n    public allPassG: number = 0.0;\n    public allPassGDelta: number = 0.0;\n    public sustainFilterA1: number = 0.0;\n\tpublic sustainFilterA1Delta: number = 0.0;\n\tpublic sustainFilterA2: number = 0.0;\n\tpublic sustainFilterA2Delta: number = 0.0;\n\tpublic sustainFilterB0: number = 0.0;\n\tpublic sustainFilterB0Delta: number = 0.0;\n\tpublic sustainFilterB1: number = 0.0;\n\tpublic sustainFilterB1Delta: number = 0.0;\n\tpublic sustainFilterB2: number = 0.0;\n\tpublic sustainFilterB2Delta: number = 0.0;\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset(): void {\n        this.delayIndex = -1;\n        this.allPassSample = 0.0;\n        this.allPassPrevInput = 0.0;\n        this.sustainFilterSample = 0.0;\n\t\tthis.sustainFilterPrevOutput2 = 0.0;\n\t\tthis.sustainFilterPrevInput1 = 0.0;\n\t\tthis.sustainFilterPrevInput2 = 0.0;\n        this.fractionalDelaySample = 0.0;\n        this.prevDelayLength = -1.0;\n        this.delayResetOffset = 0;\n    }\n\n    public update(synth: Synth, instrumentState: InstrumentState, tone: Tone, stringIndex: number, roundedSamplesPerTick: number, stringDecayStart: number, stringDecayEnd: number, sustainType: SustainType): void {\n        const allPassCenter: number = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\n\n        const prevDelayLength: number = this.prevDelayLength;\n\n        const phaseDeltaStart: number = tone.phaseDeltas[stringIndex];\n        const phaseDeltaScale: number = tone.phaseDeltaScales[stringIndex];\n        const phaseDeltaEnd: number = phaseDeltaStart * Math.pow(phaseDeltaScale, roundedSamplesPerTick);\n\n        const radiansPerSampleStart: number = Math.PI * 2.0 * phaseDeltaStart;\n        const radiansPerSampleEnd: number = Math.PI * 2.0 * phaseDeltaEnd;\n\n        const centerHarmonicStart: number = radiansPerSampleStart * 2.0;\n        const centerHarmonicEnd: number = radiansPerSampleEnd * 2.0;\n\n        const allPassRadiansStart: number = Math.min(Math.PI, radiansPerSampleStart * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart, Config.pickedStringDispersionFreqScale));\n        const allPassRadiansEnd: number = Math.min(Math.PI, radiansPerSampleEnd * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd, Config.pickedStringDispersionFreqScale));\n        const shelfRadians: number = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\n\t\tconst decayCurveStart: number = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\n\t\tconst decayCurveEnd: number   = (Math.pow(100.0, stringDecayEnd  ) - 1.0) / 99.0;\n\t\tconst register: number = sustainType == SustainType.acoustic ? 0.25 : 0.0;\n\t\tconst registerShelfCenter: number = 15.6;\n\t\tconst registerLowpassCenter: number = 3.0 * synth.samplesPerSecond / 48000;\n\t\t//const decayRateStart: number = Math.pow(0.5, decayCurveStart * shelfRadians / radiansPerSampleStart);\n\t\t//const decayRateEnd: number   = Math.pow(0.5, decayCurveEnd   * shelfRadians / radiansPerSampleEnd);\n\t\tconst decayRateStart: number = Math.pow(0.5, decayCurveStart * Math.pow(shelfRadians / (radiansPerSampleStart * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n\t\tconst decayRateEnd:   number = Math.pow(0.5, decayCurveEnd   * Math.pow(shelfRadians / (radiansPerSampleEnd   * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n        \n        const expressionDecayStart: number = Math.pow(decayRateStart, 0.002);\n        const expressionDecayEnd: number = Math.pow(decayRateEnd, 0.002);\n\n        Synth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n        const allPassGStart: number = Synth.tempFilterStartCoefficients.b[0]; /* same as a[1] */\n        const allPassPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n\n        Synth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n        const allPassGEnd: number = Synth.tempFilterEndCoefficients.b[0]; /* same as a[1] */\n        const allPassPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n\n        // 1st order shelf filters and 2nd order lowpass filters have differently shaped frequency\n\t\t// responses, as well as adjustable shapes. I originally picked a 1st order shelf filter,\n\t\t// but I kinda prefer 2nd order lowpass filters now and I designed a couple settings:\n\t\tconst enum PickedStringBrightnessType {\n\t\t\tbright, // 1st order shelf\n\t\t\tnormal, // 2nd order lowpass, rounded corner\n\t\t\tresonant, // 3rd order lowpass, harder corner\n\t\t}\n\t\tconst brightnessType: PickedStringBrightnessType = <any> sustainType == SustainType.bright ? PickedStringBrightnessType.bright : PickedStringBrightnessType.normal;\n\t\tif (brightnessType == PickedStringBrightnessType.bright) {\n\t\t\tconst shelfGainStart: number = Math.pow(decayRateStart, Config.stringDecayRate);\n\t\t\tconst shelfGainEnd: number   = Math.pow(decayRateEnd,   Config.stringDecayRate);\n\t\t\tSynth.tempFilterStartCoefficients.highShelf2ndOrder(shelfRadians, shelfGainStart, 0.5);\n\t\t\tSynth.tempFilterEndCoefficients.highShelf2ndOrder(shelfRadians, shelfGainEnd, 0.5);\n\t\t} else {\n\t\t\tconst cornerHardness: number = Math.pow(brightnessType == PickedStringBrightnessType.normal ? 0.0 : 1.0, 0.25);\n\t\t\tconst lowpass1stOrderCutoffRadiansStart: number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleStart * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveStart, .5);\n\t\t\tconst lowpass1stOrderCutoffRadiansEnd:   number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleEnd   * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveEnd,   .5);\n\t\t\tconst lowpass2ndOrderCutoffRadiansStart: number = lowpass1stOrderCutoffRadiansStart * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n\t\t\tconst lowpass2ndOrderCutoffRadiansEnd:   number = lowpass1stOrderCutoffRadiansEnd   * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n\t\t\tconst lowpass2ndOrderGainStart: number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n\t\t\tconst lowpass2ndOrderGainEnd:   number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n\t\t\tSynth.tempFilterStartCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansStart), lowpass2ndOrderGainStart);\n\t\t\tSynth.tempFilterEndCoefficients  .lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansEnd),   lowpass2ndOrderGainEnd);\n\t\t}\n\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n\t\tconst sustainFilterA1Start: number = Synth.tempFilterStartCoefficients.a[1];\n\t\tconst sustainFilterA2Start: number = Synth.tempFilterStartCoefficients.a[2];\n\t\tconst sustainFilterB0Start: number = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart;\n\t\tconst sustainFilterB1Start: number = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart;\n\t\tconst sustainFilterB2Start: number = Synth.tempFilterStartCoefficients.b[2] * expressionDecayStart;\n\t\tconst sustainFilterPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n\t\tconst sustainFilterA1End: number = Synth.tempFilterEndCoefficients.a[1];\n\t\tconst sustainFilterA2End: number = Synth.tempFilterEndCoefficients.a[2];\n\t\tconst sustainFilterB0End: number = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd;\n\t\tconst sustainFilterB1End: number = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd;\n\t\tconst sustainFilterB2End: number = Synth.tempFilterEndCoefficients.b[2] * expressionDecayEnd;\n\t\tconst sustainFilterPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n\n\t\tconst periodLengthStart: number = 1.0 / phaseDeltaStart;\n\t\tconst periodLengthEnd: number = 1.0 / phaseDeltaEnd;\n\t\tconst minBufferLength: number = Math.ceil(Math.max(periodLengthStart, periodLengthEnd) * 2);\n\t\tconst delayLength: number = periodLengthStart - allPassPhaseDelayStart - sustainFilterPhaseDelayStart;\n\t\tconst delayLengthEnd: number = periodLengthEnd - allPassPhaseDelayEnd - sustainFilterPhaseDelayEnd;\n\n\t\tthis.prevDelayLength = delayLength;\n\t\tthis.delayLengthDelta = (delayLengthEnd - delayLength) / roundedSamplesPerTick;\n\t\tthis.allPassG = allPassGStart;\n\t\tthis.sustainFilterA1 = sustainFilterA1Start;\n\t\tthis.sustainFilterA2 = sustainFilterA2Start;\n\t\tthis.sustainFilterB0 = sustainFilterB0Start;\n\t\tthis.sustainFilterB1 = sustainFilterB1Start;\n\t\tthis.sustainFilterB2 = sustainFilterB2Start;\n\t\tthis.allPassGDelta = (allPassGEnd - allPassGStart) / roundedSamplesPerTick;\n\t\tthis.sustainFilterA1Delta = (sustainFilterA1End - sustainFilterA1Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterA2Delta = (sustainFilterA2End - sustainFilterA2Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterB0Delta = (sustainFilterB0End - sustainFilterB0Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterB1Delta = (sustainFilterB1End - sustainFilterB1Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterB2Delta = (sustainFilterB2End - sustainFilterB2Start) / roundedSamplesPerTick;\n\n        const pitchChanged: boolean = Math.abs(Math.log2(delayLength / prevDelayLength)) > 0.01;\n\n        const reinitializeImpulse: boolean = (this.delayIndex == -1 || pitchChanged);\n        if (this.delayLine == null || this.delayLine.length <= minBufferLength) {\n            // The delay line buffer will get reused for other tones so might as well\n            // start off with a buffer size that is big enough for most notes.\n            const likelyMaximumLength: number = Math.ceil(2 * synth.samplesPerSecond / Instrument.frequencyFromPitch(12));\n            const newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n            if (!reinitializeImpulse && this.delayLine != null) {\n                // If the tone has already started but the buffer needs to be reallocated,\n                // transfer the old data to the new buffer.\n                const oldDelayBufferMask: number = (this.delayLine.length - 1) >> 0;\n                const startCopyingFromIndex: number = this.delayIndex + this.delayResetOffset;\n                this.delayIndex = this.delayLine.length - this.delayResetOffset;\n                for (let i: number = 0; i < this.delayLine.length; i++) {\n                    newDelayLine[i] = this.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n                }\n            }\n            this.delayLine = newDelayLine;\n        }\n        const delayLine: Float32Array = this.delayLine;\n        const delayBufferMask: number = (delayLine.length - 1) >> 0;\n\n        if (reinitializeImpulse) {\n            // -1 delay index means the tone was reset.\n            // Also, if the pitch changed suddenly (e.g. from seamless or arpeggio) then reset the wave.\n\n            this.delayIndex = 0;\n            this.allPassSample = 0.0;\n            this.allPassPrevInput = 0.0;\n            this.sustainFilterSample = 0.0;\n\t\t\tthis.sustainFilterPrevOutput2 = 0.0;\n\t\t\tthis.sustainFilterPrevInput1 = 0.0;\n\t\t\tthis.sustainFilterPrevInput2 = 0.0;\n            this.fractionalDelaySample = 0.0;\n\n            // Clear away a region of the delay buffer for the new impulse.\n            const startImpulseFrom: number = -delayLength;\n            const startZerosFrom: number = Math.floor(startImpulseFrom - periodLengthStart / 2);\n            const stopZerosAt: number = Math.ceil(startZerosFrom + periodLengthStart * 2);\n            this.delayResetOffset = stopZerosAt; // And continue clearing the area in front of the delay line.\n            for (let i: number = startZerosFrom; i <= stopZerosAt; i++) {\n                delayLine[i & delayBufferMask] = 0.0;\n            }\n\n            const impulseWave: Float32Array = instrumentState.wave!;\n            const impulseWaveLength: number = impulseWave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n            const impulsePhaseDelta: number = impulseWaveLength / periodLengthStart;\n\n            const fadeDuration: number = Math.min(periodLengthStart * 0.2, synth.samplesPerSecond * 0.003);\n            const startImpulseFromSample: number = Math.ceil(startImpulseFrom);\n            const stopImpulseAt: number = startImpulseFrom + periodLengthStart + fadeDuration;\n            const stopImpulseAtSample: number = stopImpulseAt;\n            let impulsePhase: number = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\n            let prevWaveIntegral: number = 0.0;\n            for (let i: number = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\n                const impulsePhaseInt: number = impulsePhase | 0;\n                const index: number = impulsePhaseInt % impulseWaveLength;\n                let nextWaveIntegral: number = impulseWave[index];\n                const phaseRatio: number = impulsePhase - impulsePhaseInt;\n                nextWaveIntegral += (impulseWave[index + 1] - nextWaveIntegral) * phaseRatio;\n                const sample: number = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\n                const fadeIn: number = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\n                const fadeOut: number = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\n                const combinedFade: number = fadeIn * fadeOut;\n                const curvedFade: number = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade); // A cubic sigmoid from 0 to 1.\n                delayLine[i & delayBufferMask] += sample * curvedFade;\n                prevWaveIntegral = nextWaveIntegral;\n                impulsePhase += impulsePhaseDelta;\n            }\n        }\n    }\n}\n\nclass EnvelopeComputer {\n    public noteSecondsStart: number = 0.0;\n    public noteSecondsEnd: number = 0.0;\n    public noteTicksStart: number = 0.0;\n    public noteTicksEnd: number = 0.0;\n    public noteSizeStart: number = Config.noteSizeMax;\n    public noteSizeEnd: number = Config.noteSizeMax;\n    public prevNoteSize: number = Config.noteSizeMax;\n    public nextNoteSize: number = Config.noteSizeMax;\n    private _noteSizeFinal: number = Config.noteSizeMax;\n    public prevNoteSecondsStart: number = 0.0;\n    public prevNoteSecondsEnd: number = 0.0;\n    public prevNoteTicksStart: number = 0.0;\n    public prevNoteTicksEnd: number = 0.0;\n    private _prevNoteSizeFinal: number = Config.noteSizeMax;\n\n    public prevSlideStart: boolean = false;\n    public prevSlideEnd: boolean = false;\n    public nextSlideStart: boolean = false;\n    public nextSlideEnd: boolean = false;\n    public prevSlideRatioStart: number = 0.0;\n    public prevSlideRatioEnd: number = 0.0;\n    public nextSlideRatioStart: number = 0.0;\n    public nextSlideRatioEnd: number = 0.0;\n\n    public readonly envelopeStarts: number[] = [];\n    public readonly envelopeEnds: number[] = [];\n    private readonly _modifiedEnvelopeIndices: number[] = [];\n    private _modifiedEnvelopeCount: number = 0;\n    public lowpassCutoffDecayVolumeCompensation: number = 1.0;\n\n    constructor(/*private _perNote: boolean*/) {\n        //const length: number = this._perNote ? EnvelopeComputeIndex.length : InstrumentAutomationIndex.length;\n        const length: number = EnvelopeComputeIndex.length;\n        for (let i: number = 0; i < length; i++) {\n            this.envelopeStarts[i] = 1.0;\n            this.envelopeEnds[i] = 1.0;\n        }\n\n        this.reset();\n    }\n\n    public reset(): void {\n        this.noteSecondsEnd = 0.0;\n        this.noteTicksEnd = 0.0;\n        this._noteSizeFinal = Config.noteSizeMax;\n        this.prevNoteSecondsEnd = 0.0;\n        this.prevNoteTicksEnd = 0.0;\n        this._prevNoteSizeFinal = Config.noteSizeMax;\n        this._modifiedEnvelopeCount = 0;\n    }\n\n    public computeEnvelopes(instrument: Instrument, currentPart: number, tickTimeStart: number, tickTimeStartReal: number, secondsPerTick: number, tone: Tone | null, timeScale: number): void {\n        secondsPerTick *= timeScale;\n        const transition: Transition = instrument.getTransition();\n        if (tone != null && tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n            this.prevNoteSecondsEnd = this.noteSecondsEnd;\n            this.prevNoteTicksEnd = this.noteTicksEnd;\n            this._prevNoteSizeFinal = this._noteSizeFinal;\n            this.noteSecondsEnd = 0.0;\n            this.noteTicksEnd = 0.0;\n        }\n        if (tone != null) {\n            if (tone.note != null) {\n                this._noteSizeFinal = tone.note.pins[tone.note.pins.length - 1].size;\n            } else {\n                this._noteSizeFinal = Config.noteSizeMax;\n            }\n        }\n        const tickTimeEnd: number = tickTimeStart + timeScale;\n        const tickTimeEndReal: number = tickTimeStartReal + 1.0;\n        const noteSecondsStart: number = this.noteSecondsEnd;\n        const noteSecondsEnd: number = noteSecondsStart + secondsPerTick;\n        const noteTicksStart: number = this.noteTicksEnd;\n        const noteTicksEnd: number = noteTicksStart + 1.0;\n        const prevNoteSecondsStart: number = this.prevNoteSecondsEnd;\n        const prevNoteSecondsEnd: number = prevNoteSecondsStart + secondsPerTick;\n        const prevNoteTicksStart: number = this.prevNoteTicksEnd;\n        const prevNoteTicksEnd: number = prevNoteTicksStart + 1.0;\n\n        const beatsPerTick: number = 1.0 / (Config.ticksPerPart * Config.partsPerBeat);\n        const beatTimeStart: number = beatsPerTick * tickTimeStart;\n        const beatTimeEnd: number = beatsPerTick * tickTimeEnd;\n\n        let noteSizeStart: number = this._noteSizeFinal;\n        let noteSizeEnd: number = this._noteSizeFinal;\n        let prevNoteSize: number = this._prevNoteSizeFinal;\n        let nextNoteSize: number = 0;\n        let prevSlideStart: boolean = false;\n        let prevSlideEnd: boolean = false;\n        let nextSlideStart: boolean = false;\n        let nextSlideEnd: boolean = false;\n        let prevSlideRatioStart: number = 0.0;\n        let prevSlideRatioEnd: number = 0.0;\n        let nextSlideRatioStart: number = 0.0;\n        let nextSlideRatioEnd: number = 0.0;\n        if (tone != null && tone.note != null && !tone.passedEndOfNote) {\n            const endPinIndex: number = tone.note.getEndPinIndex(currentPart);\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\n            const endPin: NotePin = tone.note.pins[endPinIndex];\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart: number = (tickTimeStartReal - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd: number = (tickTimeEndReal - startPinTick) / (endPinTick - startPinTick);\n            noteSizeStart = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            noteSizeEnd = startPin.size + (endPin.size - startPin.size) * ratioEnd;\n\n            if (transition.slides) {\n                const noteStartTick: number = tone.noteStartPart * Config.ticksPerPart;\n                const noteEndTick: number = tone.noteEndPart * Config.ticksPerPart;\n                const noteLengthTicks: number = noteEndTick - noteStartTick;\n                const maximumSlideTicks: number = noteLengthTicks * 0.5;\n                const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\n                if (tone.prevNote != null && !tone.forceContinueAtStart) {\n                    if (tickTimeStartReal - noteStartTick < slideTicks) {\n                        prevSlideStart = true;\n                        prevSlideRatioStart = 0.5 * (1.0 - (tickTimeStartReal - noteStartTick) / slideTicks);\n                    }\n                    if (tickTimeEndReal - noteStartTick < slideTicks) {\n                        prevSlideEnd = true;\n                        prevSlideRatioEnd = 0.5 * (1.0 - (tickTimeEndReal - noteStartTick) / slideTicks);\n                    }\n                }\n                if (tone.nextNote != null && !tone.forceContinueAtEnd) {\n                    nextNoteSize = tone.nextNote.pins[0].size\n                    if (noteEndTick - tickTimeStartReal < slideTicks) {\n                        nextSlideStart = true;\n                        nextSlideRatioStart = 0.5 * (1.0 - (noteEndTick - tickTimeStartReal) / slideTicks);\n                    }\n                    if (noteEndTick - tickTimeEndReal < slideTicks) {\n                        nextSlideEnd = true;\n                        nextSlideRatioEnd = 0.5 * (1.0 - (noteEndTick - tickTimeEndReal) / slideTicks);\n                    }\n                }\n            }\n        }\n\n        let lowpassCutoffDecayVolumeCompensation: number = 1.0;\n        let usedNoteSize: boolean = false;\n        for (let envelopeIndex: number = 0; envelopeIndex <= instrument.envelopeCount; envelopeIndex++) {\n            let automationTarget: AutomationTarget;\n            let targetIndex: number;\n            let envelope: Envelope;\n            if (envelopeIndex == instrument.envelopeCount) {\n                if (usedNoteSize /*|| !this._perNote*/) break;\n                // Special case: if no other envelopes used note size, default to applying it to note volume.\n                automationTarget = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n                targetIndex = 0;\n                envelope = Config.envelopes.dictionary[\"note size\"];\n            } else {\n                let envelopeSettings: EnvelopeSettings = instrument.envelopes[envelopeIndex];\n                automationTarget = Config.instrumentAutomationTargets[envelopeSettings.target];\n                targetIndex = envelopeSettings.index;\n                envelope = Config.envelopes[envelopeSettings.envelope];\n                if (envelope.type == EnvelopeType.noteSize) usedNoteSize = true;\n            }\n            if (/*automationTarget.perNote == this._perNote &&*/ automationTarget.computeIndex != null) {\n                const computeIndex: number = automationTarget.computeIndex + targetIndex;\n                let envelopeStart: number = EnvelopeComputer.computeEnvelope(envelope, noteSecondsStart, beatTimeStart, noteSizeStart);\n                if (prevSlideStart) {\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsStart, beatTimeStart, prevNoteSize);\n                    envelopeStart += (other - envelopeStart) * prevSlideRatioStart;\n                }\n                if (nextSlideStart) {\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeStart, nextNoteSize);\n                    envelopeStart += (other - envelopeStart) * nextSlideRatioStart;\n                }\n                let envelopeEnd: number = envelopeStart;\n                if (instrument.discreteEnvelope == false) {\n                    envelopeEnd = EnvelopeComputer.computeEnvelope(envelope, noteSecondsEnd, beatTimeEnd, noteSizeEnd);\n                    if (prevSlideEnd) {\n                        const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsEnd, beatTimeEnd, prevNoteSize);\n                        envelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\n                    }\n                    if (nextSlideEnd) {\n                        const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeEnd, nextNoteSize);\n                        envelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\n                    }\n                }\n\n                this.envelopeStarts[computeIndex] *= envelopeStart;\n                this.envelopeEnds[computeIndex] *= envelopeEnd;\n                this._modifiedEnvelopeIndices[this._modifiedEnvelopeCount++] = computeIndex;\n\n                if (automationTarget.isFilter) {\n                    const filterSettings: FilterSettings = /*this._perNote ?*/ (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter /*: instrument.eqFilter*/;\n                    if (filterSettings.controlPointCount > targetIndex && filterSettings.controlPoints[targetIndex].type == FilterType.lowPass) {\n                        lowpassCutoffDecayVolumeCompensation = Math.max(lowpassCutoffDecayVolumeCompensation, EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(envelope));\n                    }\n                }\n            }\n        }\n\n        this.noteSecondsStart = noteSecondsStart;\n        this.noteSecondsEnd = noteSecondsEnd;\n        this.noteTicksStart = noteTicksStart;\n        this.noteTicksEnd = noteTicksEnd;\n        this.prevNoteSecondsStart = prevNoteSecondsStart;\n        this.prevNoteSecondsEnd = prevNoteSecondsEnd;\n        this.prevNoteTicksStart = prevNoteTicksStart;\n        this.prevNoteTicksEnd = prevNoteTicksEnd;\n        this.prevNoteSize = prevNoteSize;\n        this.nextNoteSize = nextNoteSize;\n        this.noteSizeStart = noteSizeStart;\n        this.noteSizeEnd = noteSizeEnd;\n        this.prevSlideStart = prevSlideStart;\n        this.prevSlideEnd = prevSlideEnd;\n        this.nextSlideStart = nextSlideStart;\n        this.nextSlideEnd = nextSlideEnd;\n        this.prevSlideRatioStart = prevSlideRatioStart;\n        this.prevSlideRatioEnd = prevSlideRatioEnd;\n        this.nextSlideRatioStart = nextSlideRatioStart;\n        this.nextSlideRatioEnd = nextSlideRatioEnd;\n        this.lowpassCutoffDecayVolumeCompensation = lowpassCutoffDecayVolumeCompensation;\n    }\n\n    public clearEnvelopes(): void {\n        for (let envelopeIndex: number = 0; envelopeIndex < this._modifiedEnvelopeCount; envelopeIndex++) {\n            const computeIndex: number = this._modifiedEnvelopeIndices[envelopeIndex];\n            this.envelopeStarts[computeIndex] = 1.0;\n            this.envelopeEnds[computeIndex] = 1.0;\n        }\n        this._modifiedEnvelopeCount = 0;\n    }\n\n    public static computeEnvelope(envelope: Envelope, time: number, beats: number, noteSize: number): number {\n        switch (envelope.type) {\n            case EnvelopeType.noteSize: return Synth.noteSizeToVolumeMult(noteSize);\n            case EnvelopeType.none: return 1.0;\n            case EnvelopeType.twang: return 1.0 / (1.0 + time * envelope.speed);\n            case EnvelopeType.swell: return 1.0 - 1.0 / (1.0 + time * envelope.speed);\n            case EnvelopeType.tremolo: return 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\n            case EnvelopeType.tremolo2: return 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\n            case EnvelopeType.punch: return Math.max(1.0, 2.0 - time * 10.0);\n            case EnvelopeType.flare: const attack: number = 0.25 / Math.sqrt(envelope.speed); return time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * envelope.speed);\n            case EnvelopeType.decay: return Math.pow(2, -envelope.speed * time);\n            case EnvelopeType.blip: return 1.0 * +(time < (0.25 / Math.sqrt(envelope.speed)));\n            case EnvelopeType.wibble:\n                let temp = 0.5 - Math.cos(beats * envelope.speed) * 0.5;\n                temp = 1.0 / (1.0 + time * (envelope.speed - (temp / (1.5 / envelope.speed))));\n                temp = temp > 0.0 ? temp : 0.0;\n                return temp;\n            case EnvelopeType.linear: {\n                let lin = (1.0 - (time / (16 / envelope.speed)));\n                lin = lin > 0.0 ? lin : 0.0;\n                return lin;\n            }\n            case EnvelopeType.rise: {\n                let lin = (time / (16 / envelope.speed));\n                lin = lin < 1.0 ? lin : 1.0;\n                return lin;\n            }\n            default: throw new Error(\"Unrecognized operator envelope type.\");\n        }\n\n    }\n\n    public static getLowpassCutoffDecayVolumeCompensation(envelope: Envelope): number {\n        // This is a little hokey in the details, but I designed it a while ago and keep it \n        // around for compatibility. This decides how much to increase the volume (or\n        // expression) to compensate for a decaying lowpass cutoff to maintain perceived\n        // volume overall.\n        if (envelope.type == EnvelopeType.decay) return 1.25 + 0.025 * envelope.speed;\n        if (envelope.type == EnvelopeType.twang) return 1.0 + 0.02 * envelope.speed;\n        return 1.0;\n    }\n}\n\nclass Tone {\n    public instrumentIndex: number;\n    public readonly pitches: number[] = Array(Config.maxChordSize+2).fill(0);\n    public pitchCount: number = 0;\n    public chordSize: number = 0;\n    public drumsetPitch: number | null = null;\n    public note: Note | null = null;\n    public prevNote: Note | null = null;\n    public nextNote: Note | null = null;\n    public prevNotePitchIndex: number = 0;\n    public nextNotePitchIndex: number = 0;\n    public freshlyAllocated: boolean = true;\n    public atNoteStart: boolean = false;\n    public isOnLastTick: boolean = false; // Whether the tone is finished fading out and ready to be freed.\n    public passedEndOfNote: boolean = false;\n    public forceContinueAtStart: boolean = false;\n    public forceContinueAtEnd: boolean = false;\n    public noteStartPart: number = 0;\n    public noteEndPart: number = 0;\n    public ticksSinceReleased: number = 0;\n    public liveInputSamplesHeld: number = 0;\n    public lastInterval: number = 0;\n    public noiseSample: number = 0.0;\n    public stringSustainStart: number = 0;\n    public stringSustainEnd: number = 0;\n    public readonly phases: number[] = [];\n    public readonly operatorWaves: OperatorWave[] = [];\n    public readonly phaseDeltas: number[] = [];\n\t\t\t// advloop addition\n        public directions: number[] = [];\n        public chipWaveCompletions: number[] = [];\n        public chipWavePrevWaves: number[] = [];\n        public chipWaveCompletionsLastWave: number[] = [];\n           // advloop addition\n    public readonly phaseDeltaScales: number[] = [];\n    public expression: number = 0.0;\n    public expressionDelta: number = 0.0;\n    public readonly operatorExpressions: number[] = [];\n    public readonly operatorExpressionDeltas: number[] = [];\n    public readonly prevPitchExpressions: Array<number | null> = Array(Config.maxPitchOrOperatorCount).fill(null);\n    public prevVibrato: number | null = null;\n    public prevStringDecay: number | null = null;\n    public pulseWidth: number = 0.0;\n    public pulseWidthDelta: number = 0.0;\n    public decimalOffset: number = 0.0;\n    public supersawDynamism: number = 0.0;\n\tpublic supersawDynamismDelta: number = 0.0;\n\tpublic supersawUnisonDetunes: number[] = []; // These can change over time, but slowly enough that I'm not including corresponding delta values within a tick run.\n\tpublic supersawShape: number = 0.0;\n\tpublic supersawShapeDelta: number = 0.0;\n\tpublic supersawDelayLength: number = 0.0;\n\tpublic supersawDelayLengthDelta: number = 0.0;\n\tpublic supersawDelayLine: Float32Array | null = null;\n\tpublic supersawDelayIndex: number = -1;\n\tpublic supersawPrevPhaseDelta: number | null = null;\n    public readonly pickedStrings: PickedString[] = [];\n\n    public readonly noteFilters: DynamicBiquadFilter[] = [];\n    public noteFilterCount: number = 0;\n    public initialNoteFilterInput1: number = 0.0;\n    public initialNoteFilterInput2: number = 0.0;\n\n    public specialIntervalExpressionMult: number = 1.0;\n    public readonly feedbackOutputs: number[] = [];\n    public feedbackMult: number = 0.0;\n    public feedbackDelta: number = 0.0;\n    public stereoVolumeLStart: number = 0.0;\n    public stereoVolumeRStart: number = 0.0;\n    public stereoVolumeLDelta: number = 0.0;\n    public stereoVolumeRDelta: number = 0.0;\n    public stereoDelayStart: number = 0.0;\n    public stereoDelayEnd: number = 0.0;\n    public stereoDelayDelta: number = 0.0;\n    public customVolumeStart: number = 0.0;\n    public customVolumeEnd: number = 0.0;\n    public filterResonanceStart: number = 0.0;\n    public filterResonanceDelta: number = 0.0;\n    public isFirstOrder: boolean = false;\n\n    public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(/*true*/);\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset(): void {\n        this.noiseSample = 0.0;\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            this.phases[i] = 0.0;\n\t\t\t\t\t\t// advloop addition\n                this.directions[i] = 1;\n                this.chipWaveCompletions[i] = 0;\n                this.chipWavePrevWaves[i] = 0;\n                this.chipWaveCompletionsLastWave[i] = 0;\n                // advloop addition\n            this.operatorWaves[i] = Config.operatorWaves[0];\n            this.feedbackOutputs[i] = 0.0;\n            this.prevPitchExpressions[i] = null;\n        }\n        for (let i: number = 0; i < this.noteFilterCount; i++) {\n            this.noteFilters[i].resetOutput();\n        }\n        this.noteFilterCount = 0;\n        this.initialNoteFilterInput1 = 0.0;\n        this.initialNoteFilterInput2 = 0.0;\n        this.liveInputSamplesHeld = 0;\n        this.supersawDelayIndex = -1;\n        for (const pickedString of this.pickedStrings) {\n            pickedString.reset();\n        }\n        this.envelopeComputer.reset();\n        this.prevVibrato = null;\n        this.prevStringDecay = null;\n        this.supersawPrevPhaseDelta = null;\n        this.drumsetPitch = null;\n    }\n}\n\nclass InstrumentState {\n    public awake: boolean = false; // Whether the instrument's effects-processing loop should continue.\n    public computed: boolean = false; // Whether the effects-processing parameters are up-to-date for the current synth run.\n    public tonesAddedInThisTick: boolean = false; // Whether any instrument tones are currently active.\n    public flushingDelayLines: boolean = false; // If no tones were active recently, enter a mode where the delay lines are filled with zeros to reset them for later use.\n    public deactivateAfterThisTick: boolean = false; // Whether the instrument is ready to be deactivated because the delay lines, if any, are fully zeroed.\n    public attentuationProgress: number = 0.0; // How long since an active tone introduced an input signal to the delay lines, normalized from 0 to 1 based on how long to wait until the delay lines signal will have audibly dissapated.\n    public flushedSamples: number = 0; // How many delay line samples have been flushed to zero.\n    public readonly activeTones: Deque<Tone> = new Deque<Tone>();\n    public readonly activeModTones: Deque<Tone> = new Deque<Tone>();\n    public readonly releasedTones: Deque<Tone> = new Deque<Tone>(); // Tones that are in the process of fading out after the corresponding notes ended.\n    public readonly liveInputTones: Deque<Tone> = new Deque<Tone>(); // Tones that are initiated by a source external to the loaded song data.\n\n    public type: InstrumentType = InstrumentType.chip;\n    public synthesizer: Function | null = null;\n    public wave: Float32Array | null = null;\n\t\t\t\t // advloop addition\n            public isUsingAdvancedLoopControls = false;\n            public chipWaveLoopStart = 0;\n            public chipWaveLoopEnd = 0;\n            public chipWaveLoopMode = 0;\n            public chipWavePlayBackwards = false;\n            public chipWaveStartOffset = 0;\n            // advloop addition\n    public noisePitchFilterMult: number = 1.0;\n    public unison: Unison | null = null;\n    public unisonVoices: number = 1;\n    public unisonSpread: number = 0.0;\n    public unisonOffset: number = 0.0;\n    public unisonExpression: number = 1.4;\n    public unisonSign: number = 1.0;\n    public chord: Chord | null = null;\n    public effects: number = 0;\n\n    public volumeScale: number = 0;\n    public aliases: boolean = false;\n    public arpTime: number = 0;\n    public vibratoTime: number = 0;\n    public nextVibratoTime: number = 0;\n    public envelopeTime: number = 0;\n\n    public eqFilterVolume: number = 1.0;\n    public eqFilterVolumeDelta: number = 0.0;\n    public mixVolume: number = 1.0;\n    public mixVolumeDelta: number = 0.0;\n    public delayInputMult: number = 0.0;\n    public delayInputMultDelta: number = 0.0;\n\n    public distortion: number = 0.0;\n    public distortionDelta: number = 0.0;\n    public distortionDrive: number = 0.0;\n    public distortionDriveDelta: number = 0.0;\n    public distortionFractionalInput1: number = 0.0;\n    public distortionFractionalInput2: number = 0.0;\n    public distortionFractionalInput3: number = 0.0;\n    public distortionPrevInput: number = 0.0;\n    public distortionNextOutput: number = 0.0;\n\n    public bitcrusherPrevInput: number = 0.0;\n    public bitcrusherCurrentOutput: number = 0.0;\n    public bitcrusherPhase: number = 1.0;\n    public bitcrusherPhaseDelta: number = 0.0;\n    public bitcrusherPhaseDeltaScale: number = 1.0;\n    public bitcrusherScale: number = 1.0;\n    public bitcrusherScaleScale: number = 1.0;\n    public bitcrusherFoldLevel: number = 1.0;\n    public bitcrusherFoldLevelScale: number = 1.0;\n\n    public readonly eqFilters: DynamicBiquadFilter[] = [];\n    public eqFilterCount: number = 0;\n    public initialEqFilterInput1: number = 0.0;\n    public initialEqFilterInput2: number = 0.0;\n\n    public panningDelayLine: Float32Array | null = null;\n    public panningDelayPos: number = 0;\n    public panningVolumeL: number = 0.0;\n    public panningVolumeR: number = 0.0;\n    public panningVolumeDeltaL: number = 0.0;\n    public panningVolumeDeltaR: number = 0.0;\n    public panningOffsetL: number = 0.0;\n    public panningOffsetR: number = 0.0;\n    public panningOffsetDeltaL: number = 0.0;\n    public panningOffsetDeltaR: number = 0.0;\n\n    public chorusDelayLineL: Float32Array | null = null;\n    public chorusDelayLineR: Float32Array | null = null;\n    public chorusDelayLineDirty: boolean = false;\n    public chorusDelayPos: number = 0;\n    public chorusPhase: number = 0;\n    public chorusVoiceMult: number = 0;\n    public chorusVoiceMultDelta: number = 0;\n    public chorusCombinedMult: number = 0;\n    public chorusCombinedMultDelta: number = 0;\n\n    public echoDelayLineL: Float32Array | null = null;\n    public echoDelayLineR: Float32Array | null = null;\n    public echoDelayLineDirty: boolean = false;\n    public echoDelayPos: number = 0;\n    public echoDelayOffsetStart: number = 0;\n    public echoDelayOffsetEnd: number | null = null;\n    public echoDelayOffsetRatio: number = 0.0;\n    public echoDelayOffsetRatioDelta: number = 0.0;\n    public echoMult: number = 0.0;\n    public echoMultDelta: number = 0.0;\n    public echoShelfA1: number = 0.0;\n    public echoShelfB0: number = 0.0;\n    public echoShelfB1: number = 0.0;\n    public echoShelfSampleL: number = 0.0;\n    public echoShelfSampleR: number = 0.0;\n    public echoShelfPrevInputL: number = 0.0;\n    public echoShelfPrevInputR: number = 0.0;\n\n    public reverbDelayLine: Float32Array | null = null;\n    public reverbDelayLineDirty: boolean = false;\n    public reverbDelayPos: number = 0;\n    public reverbMult: number = 0.0;\n    public reverbMultDelta: number = 0.0;\n    public reverbShelfA1: number = 0.0;\n    public reverbShelfB0: number = 0.0;\n    public reverbShelfB1: number = 0.0;\n    public reverbShelfSample0: number = 0.0;\n    public reverbShelfSample1: number = 0.0;\n    public reverbShelfSample2: number = 0.0;\n    public reverbShelfSample3: number = 0.0;\n    public reverbShelfPrevInput0: number = 0.0;\n    public reverbShelfPrevInput1: number = 0.0;\n    public reverbShelfPrevInput2: number = 0.0;\n    public reverbShelfPrevInput3: number = 0.0;\n\n    //public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(false);\n\n    public readonly spectrumWave: SpectrumWaveState = new SpectrumWaveState();\n    public readonly harmonicsWave: HarmonicsWaveState = new HarmonicsWaveState();\n    public readonly drumsetSpectrumWaves: SpectrumWaveState[] = [];\n\n    constructor() {\n        for (let i: number = 0; i < Config.drumCount; i++) {\n            this.drumsetSpectrumWaves[i] = new SpectrumWaveState();\n        }\n    }\n\n\n    public allocateNecessaryBuffers(synth: Synth, instrument: Instrument, samplesPerTick: number): void {\n        if (effectsIncludePanning(instrument.effects)) {\n            if (this.panningDelayLine == null || this.panningDelayLine.length < synth.panningDelayBufferSize) {\n                this.panningDelayLine = new Float32Array(synth.panningDelayBufferSize);\n            }\n        }\n        if (effectsIncludeChorus(instrument.effects)) {\n            if (this.chorusDelayLineL == null || this.chorusDelayLineL.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineL = new Float32Array(synth.chorusDelayBufferSize);\n            }\n            if (this.chorusDelayLineR == null || this.chorusDelayLineR.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineR = new Float32Array(synth.chorusDelayBufferSize);\n            }\n        }\n        if (effectsIncludeEcho(instrument.effects)) {\n            // account for tempo and delay automation changing delay length during a tick?\n            const safeEchoDelaySteps: number = Math.max(Config.echoDelayRange >> 1, (instrument.echoDelay + 1)); // The delay may be very short now, but if it increases later make sure we have enough sample history.\n            const baseEchoDelayBufferSize: number = Synth.fittingPowerOfTwo(safeEchoDelaySteps * Config.echoDelayStepTicks * samplesPerTick);\n            const safeEchoDelayBufferSize: number = baseEchoDelayBufferSize * 2; // If the tempo or delay changes and we suddenly need a longer delay, make sure that we have enough sample history to accomodate the longer delay.\n\n            if (this.echoDelayLineL == null || this.echoDelayLineR == null) {\n                this.echoDelayLineL = new Float32Array(safeEchoDelayBufferSize);\n                this.echoDelayLineR = new Float32Array(safeEchoDelayBufferSize);\n            } else if (this.echoDelayLineL.length < safeEchoDelayBufferSize || this.echoDelayLineR.length < safeEchoDelayBufferSize) {\n                // The echo delay length may change whlie the song is playing if tempo changes,\n                // so buffers may need to be reallocated, but we don't want to lose any echoes\n                // so we need to copy the contents of the old buffer to the new one.\n                const newDelayLineL: Float32Array = new Float32Array(safeEchoDelayBufferSize);\n                const newDelayLineR: Float32Array = new Float32Array(safeEchoDelayBufferSize);\n                const oldMask: number = this.echoDelayLineL.length - 1;\n\n                for (let i = 0; i < this.echoDelayLineL.length; i++) {\n                    newDelayLineL[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n                    newDelayLineR[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n                }\n\n                this.echoDelayPos = this.echoDelayLineL.length;\n                this.echoDelayLineL = newDelayLineL;\n                this.echoDelayLineR = newDelayLineR;\n            }\n        }\n        if (effectsIncludeReverb(instrument.effects)) {\n            // TODO: Make reverb delay line sample rate agnostic. Maybe just double buffer size for 96KHz? Adjust attenuation and shelf cutoff appropriately?\n            if (this.reverbDelayLine == null) {\n                this.reverbDelayLine = new Float32Array(Config.reverbDelayBufferSize);\n            }\n        }\n    }\n\n    public deactivate(): void {\n        this.bitcrusherPrevInput = 0.0;\n        this.bitcrusherCurrentOutput = 0.0;\n        this.bitcrusherPhase = 1.0;\n        for (let i: number = 0; i < this.eqFilterCount; i++) {\n            this.eqFilters[i].resetOutput();\n        }\n        this.eqFilterCount = 0;\n        this.initialEqFilterInput1 = 0.0;\n        this.initialEqFilterInput2 = 0.0;\n        this.distortionFractionalInput1 = 0.0;\n        this.distortionFractionalInput2 = 0.0;\n        this.distortionFractionalInput3 = 0.0;\n        this.distortionPrevInput = 0.0;\n        this.distortionNextOutput = 0.0;\n        this.panningDelayPos = 0;\n        if (this.panningDelayLine != null) for (let i: number = 0; i < this.panningDelayLine.length; i++) this.panningDelayLine[i] = 0.0;\n        this.echoDelayOffsetEnd = null;\n        this.echoShelfSampleL = 0.0;\n        this.echoShelfSampleR = 0.0;\n        this.echoShelfPrevInputL = 0.0;\n        this.echoShelfPrevInputR = 0.0;\n        this.reverbShelfSample0 = 0.0;\n        this.reverbShelfSample1 = 0.0;\n        this.reverbShelfSample2 = 0.0;\n        this.reverbShelfSample3 = 0.0;\n        this.reverbShelfPrevInput0 = 0.0;\n        this.reverbShelfPrevInput1 = 0.0;\n        this.reverbShelfPrevInput2 = 0.0;\n        this.reverbShelfPrevInput3 = 0.0;\n\n        this.volumeScale = 1.0;\n        this.aliases = false;\n\n        this.awake = false;\n        this.flushingDelayLines = false;\n        this.deactivateAfterThisTick = false;\n        this.attentuationProgress = 0.0;\n        this.flushedSamples = 0;\n    }\n\n    public resetAllEffects(): void {\n        this.deactivate();\n        // LFOs are reset here rather than in deactivate() for periodic oscillation that stays \"on the beat\". Resetting in deactivate() will cause it to reset with each note.\n        this.vibratoTime = 0;\n        this.nextVibratoTime = 0;\n        this.arpTime = 0;\n        this.envelopeTime = 0;\n\n        if (this.chorusDelayLineDirty) {\n            for (let i: number = 0; i < this.chorusDelayLineL!.length; i++) this.chorusDelayLineL![i] = 0.0;\n            for (let i: number = 0; i < this.chorusDelayLineR!.length; i++) this.chorusDelayLineR![i] = 0.0;\n        }\n        if (this.echoDelayLineDirty) {\n            for (let i: number = 0; i < this.echoDelayLineL!.length; i++) this.echoDelayLineL![i] = 0.0;\n            for (let i: number = 0; i < this.echoDelayLineR!.length; i++) this.echoDelayLineR![i] = 0.0;\n        }\n        if (this.reverbDelayLineDirty) {\n            for (let i: number = 0; i < this.reverbDelayLine!.length; i++) this.reverbDelayLine![i] = 0.0;\n        }\n\n        this.chorusPhase = 0.0;\n    }\n\n    public compute(synth: Synth, instrument: Instrument, samplesPerTick: number, roundedSamplesPerTick: number, tone: Tone | null, channelIndex: number, instrumentIndex: number): void {\n        this.computed = true;\n\n        this.type = instrument.type;\n        this.synthesizer = Synth.getInstrumentSynthFunction(instrument);\n        this.unison = Config.unisons[instrument.unison];\n        this.chord = instrument.getChord();\n        this.noisePitchFilterMult = Config.chipNoises[instrument.chipNoise].pitchFilterMult;\n        this.effects = instrument.effects;\t\n\n        this.aliases = instrument.aliases;\n        this.volumeScale = 1.0;\n\n        this.allocateNecessaryBuffers(synth, instrument, samplesPerTick);\n\n        const samplesPerSecond: number = synth.samplesPerSecond;\n        this.updateWaves(instrument, samplesPerSecond);\n\n        //const ticksIntoBar: number = synth.getTicksIntoBar();\n        //const tickTimeStart: number = ticksIntoBar;\n        //const tickTimeEnd:   number = ticksIntoBar + 1.0;\n        //const secondsPerTick: number = samplesPerTick / synth.samplesPerSecond;\n        //const currentPart: number = synth.getCurrentPart();\n        //this.envelopeComputer.computeEnvelopes(instrument, currentPart, tickTimeStart, secondsPerTick, tone);\n        //const envelopeStarts: number[] = this.envelopeComputer.envelopeStarts;\n        //const envelopeEnds: number[] = this.envelopeComputer.envelopeEnds;\n\n        const usesDistortion: boolean = effectsIncludeDistortion(this.effects);\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(this.effects);\n        const usesPanning: boolean = effectsIncludePanning(this.effects);\n        const usesChorus: boolean = effectsIncludeChorus(this.effects);\n        const usesEcho: boolean = effectsIncludeEcho(this.effects);\n        const usesReverb: boolean = effectsIncludeReverb(this.effects);\n\n        if (usesDistortion) {\n            let useDistortionStart: number = instrument.distortion;\n            let useDistortionEnd: number = instrument.distortion;\n\n            // Check for distortion mods\n            if (synth.isModActive(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex)) {\n                useDistortionStart = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, false);\n                useDistortionEnd = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            const distortionSliderStart = Math.min(1.0, /*envelopeStarts[InstrumentAutomationIndex.distortion] **/ useDistortionStart / (Config.distortionRange - 1));\n            const distortionSliderEnd = Math.min(1.0, /*envelopeEnds[  InstrumentAutomationIndex.distortion] **/ useDistortionEnd / (Config.distortionRange - 1));\n            const distortionStart: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderStart) - 1.0) / 19.0, 2.0);\n            const distortionEnd: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderEnd) - 1.0) / 19.0, 2.0);\n            const distortionDriveStart: number = (1.0 + 2.0 * distortionSliderStart) / Config.distortionBaseVolume;\n            const distortionDriveEnd: number = (1.0 + 2.0 * distortionSliderEnd) / Config.distortionBaseVolume;\n            this.distortion = distortionStart;\n            this.distortionDelta = (distortionEnd - distortionStart) / roundedSamplesPerTick;\n            this.distortionDrive = distortionDriveStart;\n            this.distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / roundedSamplesPerTick;\n        }\n\n        if (usesBitcrusher) {\n            let freqSettingStart: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherFrequency])*/;\n            let freqSettingEnd: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherFrequency])*/;\n\n            // Check for freq crush mods\n            if (synth.isModActive(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex)) {\n                freqSettingStart = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, false);\n                freqSettingEnd = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            let quantizationSettingStart: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherQuantization])*/;\n            let quantizationSettingEnd: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherQuantization])*/;\n\n            // Check for bitcrush mods\n            if (synth.isModActive(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex)) {\n                quantizationSettingStart = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, false);\n                quantizationSettingEnd = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            const basePitch: number = Config.keys[synth.song!.key].basePitch + (Config.pitchesPerOctave * synth.song!.octave); // TODO: What if there's a key change mid-song?\n            const freqStart: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingStart) * Config.bitcrusherOctaveStep);\n            const freqEnd: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingEnd) * Config.bitcrusherOctaveStep);\n            const phaseDeltaStart: number = Math.min(1.0, freqStart / samplesPerSecond);\n            const phaseDeltaEnd: number = Math.min(1.0, freqEnd / samplesPerSecond);\n            this.bitcrusherPhaseDelta = phaseDeltaStart;\n            this.bitcrusherPhaseDeltaScale = Math.pow(phaseDeltaEnd / phaseDeltaStart, 1.0 / roundedSamplesPerTick);\n\n            const scaleStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart) * 0.5));\n            const scaleEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd) * 0.5));\n            this.bitcrusherScale = scaleStart;\n            this.bitcrusherScaleScale = Math.pow(scaleEnd / scaleStart, 1.0 / roundedSamplesPerTick);\n\n            const foldLevelStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart);\n            const foldLevelEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd);\n            this.bitcrusherFoldLevel = foldLevelStart;\n            this.bitcrusherFoldLevelScale = Math.pow(foldLevelEnd / foldLevelStart, 1.0 / roundedSamplesPerTick);\n        }\n\n        let eqFilterVolume: number = 1.0; //this.envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n        if (instrument.eqFilterType) {\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\n            const eqFilterSettingsStart: FilterSettings = instrument.eqFilter;\n            if (instrument.eqSubFilters[1] == null)\n                instrument.eqSubFilters[1] = new FilterSettings();\n            const eqFilterSettingsEnd: FilterSettings = instrument.eqSubFilters[1];\n\n            // Change location based on slider values\n            let startSimpleFreq: number = instrument.eqFilterSimpleCut;\n            let startSimpleGain: number = instrument.eqFilterSimplePeak;\n            let endSimpleFreq: number = instrument.eqFilterSimpleCut;\n            let endSimpleGain: number = instrument.eqFilterSimplePeak;\n\n            let filterChanges: boolean = false;\n\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex)) {\n                startSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, false);\n                endSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex)) {\n                startSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, false);\n                endSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, true);\n                filterChanges = true;\n            }\n\n            let startPoint: FilterControlPoint;\n\n            if (filterChanges) {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\n\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                let endPoint: FilterControlPoint = eqFilterSettingsEnd.controlPoints[0];\n\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n\n            } else {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\n\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n\n            }\n\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\n\n            this.eqFilterCount = 1;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        else {\n            const eqFilterSettings: FilterSettings = (instrument.tmpEqFilterStart != null) ? instrument.tmpEqFilterStart : instrument.eqFilter;\n            //const eqAllFreqsEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterAllFreqs];\n            //const eqAllFreqsEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterAllFreqs];\n            for (let i: number = 0; i < eqFilterSettings.controlPointCount; i++) {\n                //const eqFreqEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterFreq0 + i];\n                //const eqFreqEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterFreq0 + i];\n                //const eqPeakEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterGain0 + i];\n                //const eqPeakEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterGain0 + i];\n                let startPoint: FilterControlPoint = eqFilterSettings.controlPoints[i];\n                let endPoint: FilterControlPoint = (instrument.tmpEqFilterEnd != null && instrument.tmpEqFilterEnd.controlPoints[i] != null) ? instrument.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\n\n                // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\n                if (startPoint.type != endPoint.type) {\n                    startPoint = endPoint;\n                }\n\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeStart * eqFreqEnvelopeStart*/ 1.0, /*eqPeakEnvelopeStart*/ 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeEnd   * eqFreqEnvelopeEnd*/   1.0, /*eqPeakEnvelopeEnd*/   1.0);\n                if (this.eqFilters.length <= i) this.eqFilters[i] = new DynamicBiquadFilter();\n                this.eqFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\n\n            }\n            this.eqFilterCount = eqFilterSettings.controlPointCount;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n\n        const mainInstrumentVolume: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\n        this.mixVolume = mainInstrumentVolume /** envelopeStarts[InstrumentAutomationIndex.mixVolume]*/;\n        let mixVolumeEnd: number = mainInstrumentVolume /** envelopeEnds[  InstrumentAutomationIndex.mixVolume]*/;\n\n        // Check for mod-related volume delta\n        if (synth.isModActive(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex)) {\n            // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\n            const startVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, false);\n            const endVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, true)\n            this.mixVolume *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n            mixVolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n        }\n\n        // Check for SONG mod-related volume delta\n        if (synth.isModActive(Config.modulators.dictionary[\"song volume\"].index)) {\n            this.mixVolume *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, false)) / 100.0;\n            mixVolumeEnd *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, true)) / 100.0;\n        }\n\n        this.mixVolumeDelta = (mixVolumeEnd - this.mixVolume) / roundedSamplesPerTick;\n\n        let eqFilterVolumeStart: number = eqFilterVolume;\n        let eqFilterVolumeEnd: number = eqFilterVolume;\n        let delayInputMultStart: number = 1.0;\n        let delayInputMultEnd: number = 1.0;\n\n        if (usesPanning) {\n            //const panEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.panning] * 2.0 - 1.0;\n            //const panEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.panning] * 2.0 - 1.0;\n\n            let usePanStart: number = instrument.pan;\n            let usePanEnd: number = instrument.pan;\n            // Check for pan mods\n            if (synth.isModActive(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex)) {\n                usePanStart = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, false);\n                usePanEnd = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            let panStart: number = Math.max(-1.0, Math.min(1.0, (usePanStart - Config.panCenter) / Config.panCenter /** panEnvelopeStart*/));\n            let panEnd: number = Math.max(-1.0, Math.min(1.0, (usePanEnd - Config.panCenter) / Config.panCenter /** panEnvelopeEnd  */));\n\n            const volumeStartL: number = Math.cos((1 + panStart) * Math.PI * 0.25) * 1.414;\n            const volumeStartR: number = Math.cos((1 - panStart) * Math.PI * 0.25) * 1.414;\n            const volumeEndL: number = Math.cos((1 + panEnd) * Math.PI * 0.25) * 1.414;\n            const volumeEndR: number = Math.cos((1 - panEnd) * Math.PI * 0.25) * 1.414;\n            const maxDelaySamples: number = samplesPerSecond * Config.panDelaySecondsMax;\n\n            let usePanDelayStart: number = instrument.panDelay;\n            let usePanDelayEnd: number = instrument.panDelay;\n            // Check for pan delay mods\n            if (synth.isModActive(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex)) {\n                usePanDelayStart = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, false);\n                usePanDelayEnd = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            const delayStart: number = panStart * usePanDelayStart * maxDelaySamples / 10;\n            const delayEnd: number = panEnd * usePanDelayEnd * maxDelaySamples / 10;\n            const delayStartL: number = Math.max(0.0, delayStart);\n            const delayStartR: number = Math.max(0.0, -delayStart);\n            const delayEndL: number = Math.max(0.0, delayEnd);\n            const delayEndR: number = Math.max(0.0, -delayEnd);\n\n            this.panningVolumeL = volumeStartL;\n            this.panningVolumeR = volumeStartR;\n            this.panningVolumeDeltaL = (volumeEndL - volumeStartL) / roundedSamplesPerTick;\n            this.panningVolumeDeltaR = (volumeEndR - volumeStartR) / roundedSamplesPerTick;\n            this.panningOffsetL = this.panningDelayPos - delayStartL + synth.panningDelayBufferSize;\n            this.panningOffsetR = this.panningDelayPos - delayStartR + synth.panningDelayBufferSize;\n            this.panningOffsetDeltaL = (delayEndL - delayStartL) / roundedSamplesPerTick;\n            this.panningOffsetDeltaR = (delayEndR - delayStartR) / roundedSamplesPerTick;\n        }\n\n        if (usesChorus) {\n            //const chorusEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.chorus];\n            //const chorusEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.chorus];\n            let useChorusStart: number = instrument.chorus;\n            let useChorusEnd: number = instrument.chorus;\n            // Check for chorus mods\n            if (synth.isModActive(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex)) {\n                useChorusStart = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, false);\n                useChorusEnd = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            let chorusStart: number = Math.min(1.0, /*chorusEnvelopeStart **/ useChorusStart / (Config.chorusRange - 1));\n            let chorusEnd: number = Math.min(1.0, /*chorusEnvelopeEnd   **/ useChorusEnd / (Config.chorusRange - 1));\n            chorusStart = chorusStart * 0.6 + (Math.pow(chorusStart, 6.0)) * 0.4;\n            chorusEnd = chorusEnd * 0.6 + (Math.pow(chorusEnd, 6.0)) * 0.4;\n            const chorusCombinedMultStart = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\n            const chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\n            this.chorusVoiceMult = chorusStart;\n            this.chorusVoiceMultDelta = (chorusEnd - chorusStart) / roundedSamplesPerTick;\n            this.chorusCombinedMult = chorusCombinedMultStart;\n            this.chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMultStart) / roundedSamplesPerTick;\n        }\n\n        let maxEchoMult = 0.0;\n        let averageEchoDelaySeconds: number = 0.0;\n        if (usesEcho) {\n            //const echoSustainEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.echoSustain];\n            //const echoSustainEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.echoSustain];\n            let useEchoSustainStart: number = instrument.echoSustain;\n            let useEchoSustainEnd: number = instrument.echoSustain;\n            // Check for echo mods\n            if (synth.isModActive(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex)) {\n                useEchoSustainStart = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, false) );\n                useEchoSustainEnd = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, true) );\n            }\n            const echoMultStart: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeStart **/ useEchoSustainStart / Config.echoSustainRange, 1.1)) * 0.9;\n            const echoMultEnd: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeEnd   **/ useEchoSustainEnd / Config.echoSustainRange, 1.1)) * 0.9;\n            this.echoMult = echoMultStart;\n            this.echoMultDelta = Math.max(0.0, (echoMultEnd - echoMultStart) / roundedSamplesPerTick);\n            maxEchoMult = Math.max(echoMultStart, echoMultEnd);\n\n            // TODO: After computing a tick's settings once for multiple run lengths (which is\n            // good for audio worklet threads), compute the echo delay envelopes at tick (or\n            // part) boundaries to interpolate between two delay taps.\n            //const echoDelayEnvelopeStart:   number = envelopeStarts[InstrumentAutomationIndex.echoDelay];\n            //const echoDelayEnvelopeEnd:     number = envelopeEnds[  InstrumentAutomationIndex.echoDelay];\n            let useEchoDelayStart: number = instrument.echoDelay;\n            let useEchoDelayEnd: number = instrument.echoDelay;\n            let ignoreTicks: boolean = false;\n            // Check for pan delay mods\n            if (synth.isModActive(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex)) {\n                useEchoDelayStart = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, false);\n                useEchoDelayEnd = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, true);\n                ignoreTicks = true;\n            }\n\n            const tmpEchoDelayOffsetStart: number = Math.round((useEchoDelayStart + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            const tmpEchoDelayOffsetEnd: number = Math.round((useEchoDelayEnd + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            if (this.echoDelayOffsetEnd != null && !ignoreTicks) {\n                this.echoDelayOffsetStart = this.echoDelayOffsetEnd;\n            } else {\n                this.echoDelayOffsetStart = tmpEchoDelayOffsetStart;\n            }\n\n            this.echoDelayOffsetEnd = tmpEchoDelayOffsetEnd;\n            averageEchoDelaySeconds = (this.echoDelayOffsetStart + this.echoDelayOffsetEnd) * 0.5 / samplesPerSecond;\n\n            this.echoDelayOffsetRatio = 0.0;\n            this.echoDelayOffsetRatioDelta = 1.0 / roundedSamplesPerTick;\n\n            const shelfRadians: number = 2.0 * Math.PI * Config.echoShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.echoShelfGain);\n            this.echoShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.echoShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.echoShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n\n        let maxReverbMult = 0.0;\n        if (usesReverb) {\n            //const reverbEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.reverb];\n            //const reverbEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.reverb];\n\n            let useReverbStart: number = instrument.reverb;\n            let useReverbEnd: number = instrument.reverb;\n\n            // Check for mod reverb, instrument level\n            if (synth.isModActive(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, false);\n                useReverbEnd = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, true);\n            }\n            // Check for mod reverb, song scalar\n            if (synth.isModActive(Config.modulators.dictionary[\"song reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n                useReverbEnd *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n            }\n\n            const reverbStart: number = Math.min(1.0, Math.pow(/*reverbEnvelopeStart **/ useReverbStart / Config.reverbRange, 0.667)) * 0.425;\n            const reverbEnd: number = Math.min(1.0, Math.pow(/*reverbEnvelopeEnd   **/ useReverbEnd / Config.reverbRange, 0.667)) * 0.425;\n\n            this.reverbMult = reverbStart;\n            this.reverbMultDelta = (reverbEnd - reverbStart) / roundedSamplesPerTick;\n            maxReverbMult = Math.max(reverbStart, reverbEnd);\n\n            const shelfRadians: number = 2.0 * Math.PI * Config.reverbShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.reverbShelfGain);\n            this.reverbShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.reverbShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.reverbShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n\n        if (this.tonesAddedInThisTick) {\n            this.attentuationProgress = 0.0;\n            this.flushedSamples = 0;\n            this.flushingDelayLines = false;\n        } else if (!this.flushingDelayLines) {\n            // If this instrument isn't playing tones anymore, the volume can fade out by the\n            // end of the first tick. It's possible for filters and the panning delay line to\n            // continue past the end of the tone but they should have mostly dissipated by the\n            // end of the tick anyway.\n            if (this.attentuationProgress == 0.0) {\n                eqFilterVolumeEnd = 0.0;\n            } else {\n                eqFilterVolumeStart = 0.0;\n                eqFilterVolumeEnd = 0.0;\n            }\n\n            const attenuationThreshold: number = 1.0 / 256.0; // when the delay line signal has attenuated this much, it should be inaudible and should be flushed to zero.\n            const halfLifeMult: number = -Math.log2(attenuationThreshold);\n            let delayDuration: number = 0.0;\n\n            if (usesChorus) {\n                delayDuration += Config.chorusMaxDelay;\n            }\n\n            if (usesEcho) {\n                const attenuationPerSecond: number = Math.pow(maxEchoMult, 1.0 / averageEchoDelaySeconds);\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\n                const echoDuration: number = halfLife * halfLifeMult;\n                delayDuration += echoDuration;\n            }\n\n            if (usesReverb) {\n                const averageMult: number = maxReverbMult * 2.0;\n                const averageReverbDelaySeconds: number = (Config.reverbDelayBufferSize / 4.0) / samplesPerSecond;\n                const attenuationPerSecond: number = Math.pow(averageMult, 1.0 / averageReverbDelaySeconds);\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\n                const reverbDuration: number = halfLife * halfLifeMult;\n                delayDuration += reverbDuration;\n            }\n\n            const secondsInTick: number = samplesPerTick / samplesPerSecond;\n            const progressInTick: number = secondsInTick / delayDuration;\n            const progressAtEndOfTick: number = this.attentuationProgress + progressInTick;\n            if (progressAtEndOfTick >= 1.0) {\n                delayInputMultEnd = 0.0;\n            }\n\n            this.attentuationProgress = progressAtEndOfTick;\n            if (this.attentuationProgress >= 1.0) {\n                this.flushingDelayLines = true;\n            }\n        } else {\n            // Flushing delay lines to zero since the signal has mostly dissipated.\n            eqFilterVolumeStart = 0.0;\n            eqFilterVolumeEnd = 0.0;\n            delayInputMultStart = 0.0;\n            delayInputMultEnd = 0.0;\n\n            let totalDelaySamples: number = 0;\n            if (usesChorus) totalDelaySamples += synth.chorusDelayBufferSize;\n            if (usesEcho) totalDelaySamples += this.echoDelayLineL!.length;\n            if (usesReverb) totalDelaySamples += Config.reverbDelayBufferSize;\n\n            this.flushedSamples += roundedSamplesPerTick;\n            if (this.flushedSamples >= totalDelaySamples) {\n                this.deactivateAfterThisTick = true;\n            }\n        }\n\n        this.eqFilterVolume = eqFilterVolumeStart;\n        this.eqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\n        this.delayInputMult = delayInputMultStart;\n        this.delayInputMultDelta = (delayInputMultEnd - delayInputMultStart) / roundedSamplesPerTick;\n    }\n\n    public updateWaves(instrument: Instrument, samplesPerSecond: number): void {\n        this.volumeScale = 1.0;\n        if (instrument.type == InstrumentType.chip) {\n            this.wave = (this.aliases) ? Config.rawChipWaves[instrument.chipWave].samples : Config.chipWaves[instrument.chipWave].samples;\n\t\t\t\t\t\t // advloop addition\n                this.isUsingAdvancedLoopControls = instrument.isUsingAdvancedLoopControls;\n                this.chipWaveLoopStart = instrument.chipWaveLoopStart;\n                this.chipWaveLoopEnd = instrument.chipWaveLoopEnd;\n                this.chipWaveLoopMode = instrument.chipWaveLoopMode;\n                this.chipWavePlayBackwards = instrument.chipWavePlayBackwards;\n                this.chipWaveStartOffset = instrument.chipWaveStartOffset;\n               // advloop addition\n\n               this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        } else if (instrument.type == InstrumentType.customChipWave) {\n            this.wave = (this.aliases) ? instrument.customChipWave! : instrument.customChipWaveIntegral!;\n            this.volumeScale = 0.05;\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        } else if (instrument.type == InstrumentType.noise) {\n            this.wave = getDrumWave(instrument.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\n        } else if (instrument.type == InstrumentType.harmonics) {\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        } else if (instrument.type == InstrumentType.pickedString) {\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        } else if (instrument.type == InstrumentType.spectrum) {\n            this.wave = this.spectrumWave.getCustomWave(instrument.spectrumWave, 8);\n        } else if (instrument.type == InstrumentType.drumset) {\n            for (let i: number = 0; i < Config.drumCount; i++) {\n                this.drumsetSpectrumWaves[i].getCustomWave(instrument.drumsetSpectrumWaves[i], InstrumentState._drumsetIndexToSpectrumOctave(i));\n            }\n            this.wave = null;\n        } else {\n            this.wave = null;\n        }\n    }\n\n    public getDrumsetWave(pitch: number): Float32Array {\n        if (this.type == InstrumentType.drumset) {\n            return this.drumsetSpectrumWaves[pitch].wave!;\n        } else {\n            throw new Error(\"Unhandled instrument type in getDrumsetWave\");\n        }\n    }\n\n    public static drumsetIndexReferenceDelta(index: number): number {\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\n    }\n\n    private static _drumsetIndexToSpectrumOctave(index: number): number {\n        return 15 + Math.log2(InstrumentState.drumsetIndexReferenceDelta(index));\n    }\n}\n\nclass ChannelState {\n    public readonly instruments: InstrumentState[] = [];\n    public muted: boolean = false;\n    public singleSeamlessInstrument: number | null = null; // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\n}\n\nexport class Synth {\n\n    private syncSongState(): void {\n        const channelCount: number = this.song!.getChannelCount();\n        for (let i: number = this.channels.length; i < channelCount; i++) {\n            this.channels[i] = new ChannelState();\n        }\n        this.channels.length = channelCount;\n        for (let i: number = 0; i < channelCount; i++) {\n            const channel: Channel = this.song!.channels[i];\n            const channelState: ChannelState = this.channels[i];\n            for (let j: number = channelState.instruments.length; j < channel.instruments.length; j++) {\n                channelState.instruments[j] = new InstrumentState();\n            }\n            channelState.instruments.length = channel.instruments.length;\n\n            if (channelState.muted != channel.muted) {\n                channelState.muted = channel.muted;\n                if (channelState.muted) {\n                    for (const instrumentState of channelState.instruments) {\n                        instrumentState.resetAllEffects();\n                    }\n                }\n            }\n        }\n    }\n\n    public initModFilters(song: Song | null): void {\n        if (song != null) {\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    instrument.tmpEqFilterStart = instrument.eqFilter;\n                    instrument.tmpEqFilterEnd = null;\n                    instrument.tmpNoteFilterStart = instrument.noteFilter;\n                    instrument.tmpNoteFilterEnd = null;\n                }\n            }\n        }\n    }\n    public warmUpSynthesizer(song: Song | null): void {\n        // Don't bother to generate the drum waves unless the song actually\n        // uses them, since they may require a lot of computation.\n        if (song != null) {\n            this.syncSongState();\n            const samplesPerTick: number = this.getSamplesPerTick();\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    Synth.getInstrumentSynthFunction(instrument);\n                    instrumentState.vibratoTime = 0;\n                    instrumentState.nextVibratoTime = 0;\n                    instrumentState.envelopeTime = 0;\n                    instrumentState.arpTime = 0;\n                    instrumentState.updateWaves(instrument, this.samplesPerSecond);\n                    instrumentState.allocateNecessaryBuffers(this, instrument, samplesPerTick);\n                }\n\n            }\n        }\n        // JummBox needs to run synth functions for at least one sample (for JIT purposes)\n\t\t// before starting audio callbacks to avoid skipping the initial output.\n        var dummyArray = new Float32Array(1);\n        this.isPlayingSong = true;\n        this.synthesize(dummyArray, dummyArray, 1, true);\n        this.isPlayingSong = false;\n\t\t//BUGFIX FROM JUMMBOX\n    }\n\n    public computeLatestModValues(): void {\n\n        if (this.song != null && this.song.modChannelCount > 0) {\n\n            // Clear all mod values, and set up temp variables for the time a mod would be set at.\n            let latestModTimes: (number | null)[] = [];\n            let latestModInsTimes: (number | null)[][][] = [];\n            this.modValues = [];\n            this.nextModValues = [];\n            this.modInsValues = [];\n            this.nextModInsValues = [];\n            this.heldMods = [];\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                latestModInsTimes[channel] = [];\n                this.modInsValues[channel] = [];\n                this.nextModInsValues[channel] = [];\n\n                for (let instrument: number = 0; instrument < this.song.channels[channel].instruments.length; instrument++) {\n                    this.modInsValues[channel][instrument] = [];\n                    this.nextModInsValues[channel][instrument] = [];\n                    latestModInsTimes[channel][instrument] = [];\n                }\n            }\n\n            // Find out where we're at in the fraction of the current bar.\n            let currentPart: number = this.beat * Config.partsPerBeat + this.part;\n\n            // For mod channels, calculate last set value for each mod\n            for (let channelIndex: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex < this.song.getChannelCount(); channelIndex++) {\n                if (!(this.song.channels[channelIndex].muted)) {\n\n                    let pattern: Pattern | null;\n\n                    for (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\n                        pattern = this.song.getPattern(channelIndex, currentBar);\n\n                        if (pattern != null) {\n                            let instrumentIdx: number = pattern.instruments[0];\n                            let instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIdx];\n                            let latestPinParts: number[] = [];\n                            let latestPinValues: number[] = [];\n\n                            let partsInBar: number = (currentBar == this.bar)\n                                ? currentPart\n                                : this.findPartsInBar(currentBar);\n\n                            for (const note of pattern.notes) {\n                                if (note.start <= partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\n                                    if (note.start == partsInBar) { // This can happen with next bar mods, and the value of the aligned note's start pin will be used.\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.start;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[0].size;\n                                    }\n                                    if (note.end <= partsInBar) {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n\n                            // Set modulator value, if it wasn't set in another pattern already scanned\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                                if (latestPinParts[mod] != null) {\n                                    if (Config.modulators[instrument.modulators[mod]].forSong) {\n                                        if (latestModTimes[instrument.modulators[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modulators[mod]] as number)) {\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], instrument.modInstruments[mod], instrument.modulators[mod]);\n                                            latestModTimes[instrument.modulators[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                        }\n                                    }\n                                    else {\n                                        // Generate list of used instruments\n                                        let usedInstruments: number[] = [];\n                                        // All\n                                        if (instrument.modInstruments[mod] == this.song.channels[instrument.modChannels[mod]].instruments.length) {\n                                            for (let i: number = 0; i < this.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\n                                                usedInstruments.push(i);\n                                            }\n                                        }\n                                        // Active\n                                        else if (instrument.modInstruments[mod] > this.song.channels[instrument.modChannels[mod]].instruments.length) {\n                                            const tgtPattern: Pattern | null = this.song.getPattern(instrument.modChannels[mod], currentBar);\n                                            if (tgtPattern != null)\n                                                usedInstruments = tgtPattern.instruments;\n                                        } else {\n                                            usedInstruments.push(instrument.modInstruments[mod]);\n                                        }\n                                        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n                                            // Iterate through all used instruments by this modulator\n                                            // Special indices for mod filter targets, since they control multiple things.\n                                            const eqFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index;\n                                            const noteFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                            let modulatorAdjust: number = instrument.modulators[mod];\n                                            if (eqFilterParam) {\n                                                modulatorAdjust = Config.modulators.length + (instrument.modFilterTypes[mod] | 0);\n                                            } else if (noteFilterParam) {\n                                                // Skip all possible indices for eq filter\n                                                modulatorAdjust = Config.modulators.length + 1 + (2 * Config.filterMaxPoints) + (instrument.modFilterTypes[mod] | 0);\n                                            }\n\n                                            if (latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] == null\n                                                || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust]!) {\n\n                                                if (eqFilterParam) {\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpEqFilterStart = tgtInstrument.eqSubFilters[latestPinValues[mod]];\n                                                    } else {\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpEqFilterStart != null && tgtInstrument.tmpEqFilterStart == tgtInstrument.eqSubFilters[i]) {\n                                                                tgtInstrument.tmpEqFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpEqFilterStart.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (tgtInstrument.tmpEqFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpEqFilterStart.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpEqFilterEnd = tgtInstrument.tmpEqFilterStart;\n                                                } else if (noteFilterParam) {\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpNoteFilterStart = tgtInstrument.noteSubFilters[latestPinValues[mod]];\n                                                    } else {\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpNoteFilterStart != null && tgtInstrument.tmpNoteFilterStart == tgtInstrument.noteSubFilters[i]) {\n                                                                tgtInstrument.tmpNoteFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpNoteFilterStart.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (tgtInstrument.tmpNoteFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpNoteFilterStart.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpNoteFilterEnd = tgtInstrument.tmpNoteFilterStart;\n                                                }\n                                                else this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], usedInstruments[instrumentIndex], modulatorAdjust);\n\n                                                latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // Detects if a modulator is set, but not valid for the current effects/instrument type/filter type\n    // Note, setting 'none' or the intermediary steps when clicking to add a mod, like an unset channel/unset instrument, counts as valid.\n    // TODO: This kind of check is mirrored in SongEditor.ts' whenUpdated. Creates a lot of redundancy for adding new mods. Can be moved into new properties for mods, to avoid this later.\n    public determineInvalidModulators(instrument: Instrument): void {\n        if (this.song == null)\n            return;\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\n            instrument.invalidModulators[mod] = true;\n            // For song modulator, valid if any setting used\n            if (instrument.modChannels[mod] == -1) {\n                if (instrument.modulators[mod] != 0)\n                    instrument.invalidModulators[mod] = false;\n                continue;\n            }\n            const channel: Channel | null = this.song.channels[instrument.modChannels[mod]];\n            if (channel == null) continue;\n            let tgtInstrumentList: Instrument[] = [];\n            if (instrument.modInstruments[mod] >= channel.instruments.length) { // All or active\n                tgtInstrumentList = channel.instruments;\n            } else {\n                tgtInstrumentList = [channel.instruments[instrument.modInstruments[mod]]];\n            }\n            for (let i: number = 0; i < tgtInstrumentList.length; i++) {\n                const tgtInstrument: Instrument | null = tgtInstrumentList[i];\n                if (tgtInstrument == null) continue;\n                const str: string = Config.modulators[instrument.modulators[mod]].name;\n                // Check effects\n                if (!((Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length && !(tgtInstrument.effects & (1 << Config.modulators[instrument.modulators[mod]].associatedEffect)))\n                    // Instrument type specific\n                    || ((tgtInstrument.type != InstrumentType.fm && tgtInstrument.type != InstrumentType.fm6op) && (str == \"fm slider 1\" || str == \"fm slider 2\" || str == \"fm slider 3\" || str == \"fm slider 4\" || str == \"fm feedback\"))\n                    || tgtInstrument.type != InstrumentType.fm6op && (str == \"fm slider 5\" || str == \"fm slider 6\")\n                    || ((tgtInstrument.type != InstrumentType.pwm && tgtInstrument.type != InstrumentType.supersaw) && (str == \"pulse width\" || str == \"decimal offset\"))\n                    || ((tgtInstrument.type != InstrumentType.supersaw) && (str == \"dynamism\" || str == \"spread\" || str == \"saw shape\"))\n                    // Arp check\n                    || (!tgtInstrument.getChord().arpeggiates && (str == \"arp speed\" || str == \"reset arp\"))\n                    // EQ Filter check\n                    || (tgtInstrument.eqFilterType && str == \"eq filter\")\n                    || (!tgtInstrument.eqFilterType && (str == \"eq filt cut\" || str == \"eq filt peak\"))\n                    || (str == \"eq filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(false))\n                    // Note Filter check\n                    || (tgtInstrument.noteFilterType && str == \"note filter\")\n                    || (!tgtInstrument.noteFilterType && (str == \"note filt cut\" || str == \"note filt peak\"))\n                    || (str == \"note filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(true)))) {\n\n                    instrument.invalidModulators[mod] = false;\n                    i = tgtInstrumentList.length;\n                }\n            }\n\n        }\n    }\n\n    private static operatorAmplitudeCurve(amplitude: number): number {\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\n    }\n\n    public samplesPerSecond: number = 44100;\n    public panningDelayBufferSize: number;\n    public panningDelayBufferMask: number;\n    public chorusDelayBufferSize: number;\n    public chorusDelayBufferMask: number;\n    // TODO: reverb\n\n    public song: Song | null = null;\n    public preferLowerLatency: boolean = false; // enable when recording performances from keyboard or MIDI. Takes effect next time you activate audio.\n    public anticipatePoorPerformance: boolean = false; // enable on mobile devices to reduce audio stutter glitches. Takes effect next time you activate audio.\n    public liveInputDuration: number = 0;\n    public liveBassInputDuration: number = 0;\n    public liveInputStarted: boolean = false;\n    public liveBassInputStarted: boolean = false;\n    public liveInputPitches: number[] = [];\n    public liveBassInputPitches: number[] = [];\n    public liveInputChannel: number = 0;\n    public liveBassInputChannel: number = 0;\n    public liveInputInstruments: number[] = [];\n    public liveBassInputInstruments: number[] = [];\n    public loopRepeatCount: number = -1;\n    public volume: number = 1.0;\n    public oscRefreshEventTimer: number = 0;\n    public oscEnabled: boolean = true;\n    public enableMetronome: boolean = false;\n    public countInMetronome: boolean = false;\n    public renderingSong: boolean = false;\n    public heldMods: HeldMod[] = [];\n    private wantToSkip: boolean = false;\n    private playheadInternal: number = 0.0;\n    private bar: number = 0;\n    private prevBar: number | null = null;\n    private nextBar: number | null = null;\n    private beat: number = 0;\n    private part: number = 0;\n    private tick: number = 0;\n    public isAtStartOfTick: boolean = true;\n    public isAtEndOfTick: boolean = true;\n    public tickSampleCountdown: number = 0;\n    private modValues: (number | null)[] = [];\n    private modInsValues: (number | null)[][][] = [];\n    private nextModValues: (number | null)[] = [];\n    private nextModInsValues: (number | null)[][][] = [];\n    private isPlayingSong: boolean = false;\n    private isRecording: boolean = false;\n    private liveInputEndTime: number = 0.0;\n    private browserAutomaticallyClearsAudioBuffer: boolean = true; // Assume true until proven otherwise. Older Chrome does not clear the buffer so it needs to be cleared manually.\n\n    public static readonly tempFilterStartCoefficients: FilterCoefficients = new FilterCoefficients();\n    public static readonly tempFilterEndCoefficients: FilterCoefficients = new FilterCoefficients();\n    private tempDrumSetControlPoint: FilterControlPoint = new FilterControlPoint();\n    public tempFrequencyResponse: FrequencyResponse = new FrequencyResponse();\n    public loopBar: number = -1;\n\n    private static readonly fmSynthFunctionCache: Dictionary<Function> = {};\n    private static readonly fm6SynthFunctionCache: Dictionary<Function> = {};\n    private static readonly effectsFunctionCache: Function[] = Array(1 << 7).fill(undefined); // keep in sync with the number of post-process effects.\n    private static readonly pickedStringFunctionCache: Function[] = Array(3).fill(undefined); // keep in sync with the number of unison voices.\n\n    private readonly channels: ChannelState[] = [];\n    private readonly tonePool: Deque<Tone> = new Deque<Tone>();\n    private readonly tempMatchedPitchTones: Array<Tone | null> = Array(Config.maxChordSize).fill(null);\n\n    private startedMetronome: boolean = false;\n    private metronomeSamplesRemaining: number = -1;\n    private metronomeAmplitude: number = 0.0;\n    private metronomePrevAmplitude: number = 0.0;\n    private metronomeFilter: number = 0.0;\n    private limit: number = 0.0;\n\n    private tempMonoInstrumentSampleBuffer: Float32Array | null = null;\n\n    private audioCtx: any | null = null;\n    private scriptNode: any | null = null;\n\n    public get playing(): boolean {\n        return this.isPlayingSong;\n    }\n\n    public get recording(): boolean {\n        return this.isRecording;\n    }\n\n    public get playhead(): number {\n        return this.playheadInternal;\n    }\n\n    public set playhead(value: number) {\n        if (this.song != null) {\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\n            let remainder: number = this.playheadInternal;\n            this.bar = Math.floor(remainder);\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\n            this.beat = Math.floor(remainder);\n            remainder = Config.partsPerBeat * (remainder - this.beat);\n            this.part = Math.floor(remainder);\n            remainder = Config.ticksPerPart * (remainder - this.part);\n            this.tick = Math.floor(remainder);\n            this.tickSampleCountdown = 0;\n            this.isAtStartOfTick = true;\n            this.prevBar = null;\n        }\n    }\n\n    public getSamplesPerBar(): number {\n        if (this.song == null) throw new Error();\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\n    }\n\n    public getTicksIntoBar(): number {\n        return (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n    }\n    public getCurrentPart(): number {\n        return (this.beat * Config.partsPerBeat + this.part);\n    }\n\n    private findPartsInBar(bar: number): number {\n        if (this.song == null) return 0;\n        let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\n            let pattern: Pattern | null = this.song.getPattern(channel, bar);\n            if (pattern != null) {\n                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                        for (const note of pattern.notes) {\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                // Find the earliest next bar note.\n                                if (partsInBar > note.start)\n                                    partsInBar = note.start;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return partsInBar;\n    }\n\n    // Returns the total samples in the song\n    public getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\n        if (this.song == null)\n            return -1;\n\n        // Compute the window to be checked (start bar to end bar)\n        let startBar: number = enableIntro ? 0 : this.song.loopStart;\n        let endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\n        let hasTempoMods: boolean = false;\n        let hasNextBarMods: boolean = false;\n        let prevTempo: number = this.song.tempo;\n\n        // Determine if any tempo or next bar mods happen anywhere in the window\n        for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n            for (let bar: number = startBar; bar < endBar; bar++) {\n                let pattern: Pattern | null = this.song.getPattern(channel, bar);\n                if (pattern != null) {\n                    let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\n                            hasTempoMods = true;\n                        }\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                            hasNextBarMods = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        // If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\n        if (startBar > 0) {\n            let latestTempoPin: number | null = null;\n            let latestTempoValue: number = 0;\n\n            for (let bar: number = startBar - 1; bar >= 0; bar--) {\n                for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n                    let pattern = this.song.getPattern(channel, bar);\n\n                    if (pattern != null) {\n                        let instrumentIdx: number = pattern.instruments[0];\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\n\n                        let partsInBar: number = this.findPartsInBar(bar);\n\n                        for (const note of pattern.notes) {\n                            if (instrument.modulators[Config.modCount - 1 - note.pitches[0]] == Config.modulators.dictionary[\"tempo\"].index) {\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\n                                    if (note.end <= partsInBar) {\n                                        latestTempoPin = note.end;\n                                        latestTempoValue = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestTempoPin = partsInBar;\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Done once you process a pattern where tempo mods happened, since the search happens backward\n                if (latestTempoPin != null) {\n                    prevTempo = latestTempoValue + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                    bar = -1;\n                }\n            }\n        }\n\n        if (hasTempoMods || hasNextBarMods) {\n            // Run from start bar to end bar and observe looping, computing average tempo across each bar\n            let bar: number = startBar;\n            let ended: boolean = false;\n            let totalSamples: number = 0;\n\n            while (!ended) {\n                // Compute the subsection of the pattern that will play\n                let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\n                let currentPart: number = 0;\n\n                if (hasNextBarMods) {\n                    partsInBar = this.findPartsInBar(bar);\n                }\n\n                // Compute average tempo in this tick window, or use last tempo if nothing happened\n                if (hasTempoMods) {\n                    let foundMod: boolean = false;\n                    for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n                        if (foundMod == false) {\n                            let pattern: Pattern | null = this.song.getPattern(channel, bar);\n                            if (pattern != null) {\n                                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                                    if (foundMod == false && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\n                                        // Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\n                                        foundMod = true;\n                                        // Need to re-sort the notes by start time to make the next part much less painful.\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n                                        for (const note of pattern.notes) {\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                                // Compute samples up to this note\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n\n                                                if (note.start < partsInBar) {\n                                                    for (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\n                                                        // Compute samples up to this pin\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\n                                                            const tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\n                                                            const prevPinTempo: number = note.pins[pinIdx - 1].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            let currPinTempo: number = note.pins[pinIdx].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                                // Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\n                                                                currPinTempo = note.pins[pinIdx - 1].size + (note.pins[pinIdx].size - note.pins[pinIdx - 1].size) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time) + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            }\n                                                            let bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\n\n                                                            if (currPinTempo != prevPinTempo) {\n\n                                                                // Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\n                                                                // The starting formula is\n                                                                // SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\n                                                                //\n                                                                // This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\n                                                                // But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\n                                                                // ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\n                                                                // Substituting BPM for a step variable that moves with respect to the current tick, we get\n                                                                // SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\n                                                                //\n                                                                // When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\n                                                                //   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\n\n                                                                totalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\n\n                                                            }\n                                                            else {\n\n                                                                // No tempo change between the two pins.\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\n\n                                                            }\n                                                            prevTempo = currPinTempo;\n                                                        }\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Compute samples for the rest of the bar\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n\n                bar++;\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\n                    bar = this.song.loopStart;\n                    if (loop > 0) loop--;\n                }\n                if (bar >= endBar) {\n                    ended = true;\n                }\n\n            }\n\n            return Math.ceil(totalSamples);\n        }\n        else {\n            // No tempo or next bar mods... phew! Just calculate normally.\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\n        }\n    }\n\n    public getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\n        if (this.song == null) throw new Error();\n        let bars: number = this.song.loopLength * (useLoopCount + 1);\n        if (enableIntro) bars += this.song.loopStart;\n        if (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\n        return bars;\n    }\n\n    constructor(song: Song | string | null = null) {\n        this.computeDelayBufferSizes();\n        if (song != null) this.setSong(song);\n    }\n\n    public setSong(song: Song | string): void {\n        if (typeof (song) == \"string\") {\n            this.song = new Song(song);\n        } else if (song instanceof Song) {\n            this.song = song;\n        }\n        this.prevBar = null;\n    }\n\n    private computeDelayBufferSizes(): void {\n        this.panningDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.panDelaySecondsMax);\n        this.panningDelayBufferMask = this.panningDelayBufferSize - 1;\n        this.chorusDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.chorusMaxDelay);\n        this.chorusDelayBufferMask = this.chorusDelayBufferSize - 1;\n    }\n\n    private activateAudio(): void {\n        const bufferSize: number = this.anticipatePoorPerformance ? (this.preferLowerLatency ? 2048 : 4096) : (this.preferLowerLatency ? 512 : 2048);\n        if (this.audioCtx == null || this.scriptNode == null || this.scriptNode.bufferSize != bufferSize) {\n            if (this.scriptNode != null) this.deactivateAudio();\n            const latencyHint: string = this.anticipatePoorPerformance ? (this.preferLowerLatency ? \"balanced\" : \"playback\") : (this.preferLowerLatency ? \"interactive\" : \"balanced\");\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)({ latencyHint: latencyHint });\n            this.samplesPerSecond = this.audioCtx.sampleRate;\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(bufferSize, 0, 2) : this.audioCtx.createJavaScriptNode(bufferSize, 0, 2); // bufferSize samples per callback buffer, 0 input channels, 2 output channels (left/right)\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\n            this.scriptNode.channelCountMode = 'explicit';\n            this.scriptNode.channelInterpretation = 'speakers';\n            this.scriptNode.connect(this.audioCtx.destination);\n\n            this.computeDelayBufferSizes();\n        }\n        this.audioCtx.resume();\n    }\n\n    private deactivateAudio(): void {\n        if (this.audioCtx != null && this.scriptNode != null) {\n            this.scriptNode.disconnect(this.audioCtx.destination);\n            this.scriptNode = null;\n            if (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\n            this.audioCtx = null;\n        }\n    }\n\n    public maintainLiveInput(): void {\n        this.activateAudio();\n        this.liveInputEndTime = performance.now() + 10000.0;\n    }\n\n    public play(): void {\n        if (this.isPlayingSong) return;\n        this.initModFilters(this.song);\n        this.computeLatestModValues();\n        this.activateAudio();\n        this.warmUpSynthesizer(this.song);\n        this.isPlayingSong = true;\n    }\n\n    public pause(): void {\n        if (!this.isPlayingSong) return;\n        this.isPlayingSong = false;\n        this.isRecording = false;\n        this.modValues = [];\n        this.nextModValues = [];\n        this.heldMods = [];\n        if (this.song != null) {\n            this.song.inVolumeCap = 0.0;\n            this.song.outVolumeCap = 0.0;\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                this.modInsValues[channelIndex] = [];\n                this.nextModInsValues[channelIndex] = [];\n            }\n        }\n    }\n\n    public startRecording(): void {\n        this.preferLowerLatency = true;\n        this.isRecording = true;\n        this.play();\n    }\n\n    public resetEffects(): void {\n        this.limit = 0.0;\n        this.freeAllTones();\n        if (this.song != null) {\n            for (const channelState of this.channels) {\n                for (const instrumentState of channelState.instruments) {\n                    instrumentState.resetAllEffects();\n                }\n            }\n        }\n    }\n\n    public setModValue(volumeStart: number, volumeEnd: number, channelIndex: number, instrumentIndex: number, setting: number): number {\n        let val: number = volumeStart + Config.modulators[setting].convertRealFactor;\n        let nextVal: number = volumeEnd + Config.modulators[setting].convertRealFactor;\n        // should these be turned into a function?\n        if (Config.modulators[setting].optionalModify == \"invert-0to50\") {\n            val = 50 - val;\n            nextVal = 50 - nextVal;\n        }\n        if (Config.modulators[setting].optionalModify == \"invert-0to99\") {\n            val = 99 - val;\n            nextVal = 99 - nextVal;\n        }\n        if (Config.modulators[setting].forSong) {\n            if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\n                this.modValues[setting] = val;\n                this.nextModValues[setting] = nextVal;\n            }\n        } else {\n            if (this.modInsValues[channelIndex][instrumentIndex][setting] == null\n                || this.modInsValues[channelIndex][instrumentIndex][setting] != val\n                || this.nextModInsValues[channelIndex][instrumentIndex][setting] != nextVal) {\n                this.modInsValues[channelIndex][instrumentIndex][setting] = val;\n                this.nextModInsValues[channelIndex][instrumentIndex][setting] = nextVal;\n            }\n        }\n\n        return val;\n    }\n\n    public getModValue(setting: number, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\n        const forSong: boolean = Config.modulators[setting].forSong;\n        if (forSong) {\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\n                return nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\n            }\n        } else if (channel != undefined && instrument != undefined) {\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                return nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\n            }\n        }\n        return -1;\n    }\n\n    // Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\n    public isAnyModActive(channel: number, instrument: number): boolean {\n        for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n            if ((this.modValues != undefined && this.modValues[setting] != null)\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public unsetMod(setting: number, channel?: number, instrument?: number) {\n        if (this.isModActive(setting) || (channel != undefined && instrument != undefined && this.isModActive(setting, channel, instrument))) {\n            this.modValues[setting] = null;\n            this.nextModValues[setting] = null;\n            for (let i: number = 0; i < this.heldMods.length; i++) {\n                if (channel != undefined && instrument != undefined) {\n                    if (this.heldMods[i].channelIndex == channel && this.heldMods[i].instrumentIndex == instrument && this.heldMods[i].setting == setting)\n                        this.heldMods.splice(i, 1);\n                } else {\n                    if (this.heldMods[i].setting == setting)\n                        this.heldMods.splice(i, 1);\n                }\n            }\n            if (channel != undefined && instrument != undefined) {\n                this.modInsValues[channel][instrument][setting] = null;\n                this.nextModInsValues[channel][instrument][setting] = null;\n            }\n        }\n    }\n\n    public isFilterModActive(forNoteFilter: boolean, channelIdx: number, instrumentIdx: number) {\n        const instrument: Instrument = this.song!.channels[channelIdx].instruments[instrumentIdx];\n\n        if (forNoteFilter) {\n            if (instrument.noteFilterType)\n                return false;\n            if (instrument.tmpNoteFilterEnd != null)\n                return true;\n        }\n        else {\n            if (instrument.eqFilterType)\n                return false;\n            if (instrument.tmpEqFilterEnd != null)\n                return true;\n        }\n        return false\n    }\n\n    public isModActive(setting: number, channel?: number, instrument?: number): boolean {\n        const forSong: boolean = Config.modulators[setting].forSong;\n        if (forSong) {\n            return (this.modValues != undefined && this.modValues[setting] != null);\n        } else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null) {\n            return (this.modInsValues[channel][instrument][setting] != null);\n        }\n        return false;\n    }\n\n    // Force a modulator to be held at the given volumeStart for a brief duration.\n    public forceHoldMods(volumeStart: number, channelIndex: number, instrumentIndex: number, setting: number): void {\n        let found: boolean = false;\n        for (let i: number = 0; i < this.heldMods.length; i++) {\n            if (this.heldMods[i].channelIndex == channelIndex && this.heldMods[i].instrumentIndex == instrumentIndex && this.heldMods[i].setting == setting) {\n                this.heldMods[i].volume = volumeStart;\n                this.heldMods[i].holdFor = 24;\n                found = true;\n            }\n        }\n        // Default: hold for 24 ticks / 12 parts (half a beat).\n        if (!found)\n            this.heldMods.push({ volume: volumeStart, channelIndex: channelIndex, instrumentIndex: instrumentIndex, setting: setting, holdFor: 24 });\n    }\n\n    public snapToStart(): void {\n        this.bar = 0;\n        this.resetEffects();\n        this.snapToBar();\n    }\n\n    public goToBar(bar: number): void {\n        this.bar = bar;\n        this.resetEffects();\n        this.playheadInternal = this.bar;\n    }\n\n    public snapToBar(): void {\n        this.playheadInternal = this.bar;\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = 0;\n    }\n\n    public jumpIntoLoop(): void {\n        if (!this.song) return;\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\n            const oldBar: number = this.bar;\n            this.bar = this.song.loopStart;\n            this.playheadInternal += this.bar - oldBar;\n\n            if (this.playing)\n                this.computeLatestModValues();\n        }\n    }\n\n    public goToNextBar(): void {\n        if (!this.song) return;\n        this.prevBar = this.bar;\n        const oldBar: number = this.bar;\n        this.bar++;\n        if (this.bar >= this.song.barCount) {\n            this.bar = 0;\n        }\n        this.playheadInternal += this.bar - oldBar;\n\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n\n    public goToPrevBar(): void {\n        if (!this.song) return;\n        this.prevBar = null;\n        const oldBar: number = this.bar;\n        this.bar--;\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\n            this.bar = this.song.barCount - 1;\n        }\n        this.playheadInternal += this.bar - oldBar;\n\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n\n    private getNextBar(): number {\n        let nextBar: number = this.bar + 1;\n        if (this.isRecording) {\n            if (nextBar >= this.song!.barCount) {\n                nextBar = this.song!.barCount - 1;\n            }\n        } else if (this.bar == this.loopBar && !this.renderingSong) {\n            nextBar = this.bar;\n        }\n        else if (this.loopRepeatCount != 0 && nextBar == this.song!.loopStart + this.song!.loopLength) {\n            nextBar = this.song!.loopStart;\n        }\n        return nextBar;\n    }\n\n    public skipBar(): void {\n        if (!this.song) return;\n        const samplesPerTick: number = this.getSamplesPerTick();\n        this.bar++;\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = samplesPerTick;\n\t    \t\t\tthis.isAtStartOfTick = true;\n\t\t\t//BUGFIX FROM JUMMBOX\n\n        if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\n            this.bar = this.song.loopStart;\n            if (this.loopRepeatCount > 0) this.loopRepeatCount--;\n        }\n\n    }\n\n    private audioProcessCallback = (audioProcessingEvent: any): void => {\n        const outputBuffer = audioProcessingEvent.outputBuffer;\n        const outputDataL: Float32Array = outputBuffer.getChannelData(0);\n        const outputDataR: Float32Array = outputBuffer.getChannelData(1);\n\n        if (this.browserAutomaticallyClearsAudioBuffer && (outputDataL[0] != 0.0 || outputDataR[0] != 0.0 || outputDataL[outputBuffer.length - 1] != 0.0 || outputDataR[outputBuffer.length - 1] != 0.0)) {\n            // If the buffer is ever initially nonzero, then this must be an older browser that doesn't automatically clear the audio buffer.\n            this.browserAutomaticallyClearsAudioBuffer = false;\n        }\n        if (!this.browserAutomaticallyClearsAudioBuffer) {\n            // If this browser does not clear the buffer automatically, do so manually before continuing.\n            const length: number = outputBuffer.length;\n            for (let i: number = 0; i < length; i++) {\n                outputDataL[i] = 0.0;\n                outputDataR[i] = 0.0;\n            }\n        }\n\n        if (!this.isPlayingSong && performance.now() >= this.liveInputEndTime) {\n            this.deactivateAudio();\n        } else {\n            this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\n\n            if (this.oscEnabled) {\n                if (this.oscRefreshEventTimer <= 0) {\n                    events.raise(\"oscillascopeUpdate\", outputDataL, outputDataR);\n                    this.oscRefreshEventTimer = 2;\n                } else {\n                    this.oscRefreshEventTimer--;\n                }\n            }\n        }\n    }\n\n    public synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\n        if (this.song == null) {\n            for (let i: number = 0; i < outputBufferLength; i++) {\n                outputDataL[i] = 0.0;\n                outputDataR[i] = 0.0;\n            }\n            this.deactivateAudio();\n            return;\n        }\n\n        const song: Song = this.song;\n        this.song.inVolumeCap = 0.0 // Reset volume cap for this run\n        this.song.outVolumeCap = 0.0;\n\n        let samplesPerTick: number = this.getSamplesPerTick();\n        let ended: boolean = false;\n\n        // Check the bounds of the playhead:\n        if (this.tickSampleCountdown <= 0 || this.tickSampleCountdown > samplesPerTick) {\n            this.tickSampleCountdown = samplesPerTick;\n            this.isAtStartOfTick = true;\n        }\n        if (playSong) {\n            if (this.beat >= song.beatsPerBar) {\n                this.beat = 0;\n                this.part = 0;\n                this.tick = 0;\n                this.tickSampleCountdown = samplesPerTick;\n                this.isAtStartOfTick = true;\n\n                this.prevBar = this.bar;\n                this.bar = this.getNextBar();\n                if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\n\n            }\n            if (this.bar >= song.barCount) {\n                this.bar = 0;\n                if (this.loopRepeatCount != -1) {\n                    ended = true;\n                    this.pause();\n                }\n            }\n        }\n\n        //const synthStartTime: number = performance.now();\n\n        this.syncSongState();\n\n        if (this.tempMonoInstrumentSampleBuffer == null || this.tempMonoInstrumentSampleBuffer.length < outputBufferLength) {\n            this.tempMonoInstrumentSampleBuffer = new Float32Array(outputBufferLength);\n        }\n\n        // Post processing parameters:\n        const volume: number = +this.volume;\n        const limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond);\n        const limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond);\n        let limit: number = +this.limit;\n\t    \t\t\tlet skippedBars = [];\n        let firstSkippedBufferIndex = -1;\n\t\t//BUGFIX FROM JUMMBOX\n\n        let bufferIndex: number = 0;\n        while (bufferIndex < outputBufferLength && !ended) {\n\n            this.nextBar = this.getNextBar();\n            if (this.nextBar >= song.barCount) this.nextBar = null;\n\n            const samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\n            const samplesLeftInTick: number = Math.ceil(this.tickSampleCountdown);\n            const runLength: number = Math.min(samplesLeftInTick, samplesLeftInBuffer);\n            const runEnd: number = bufferIndex + runLength;\n\n            // Handle mod synth\n            if (this.isPlayingSong || this.renderingSong) {\n\n                // First modulation pass. Determines active tones.\n                // Runs everything but Dot X/Y mods, to let them always come after morph.\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel: Channel = song.channels[channelIndex];\n                    const channelState: ChannelState = this.channels[channelIndex];\n\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong);\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone: Tone = instrumentState.activeModTones.get(i);\n                            const channel: Channel = song.channels[channelIndex];\n                            const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n                            let mod: number = Config.modCount - 1 - tone.pitches[0];\n\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index)\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\n                                continue;\n                            }\n                            this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                        }\n                    }\n                }\n\n                 // Second modulation pass.\n                // Only for Dot X/Y mods.\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel: Channel = song.channels[channelIndex];\n                    const channelState: ChannelState = this.channels[channelIndex];\n\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone: Tone = instrumentState.activeModTones.get(i);\n                            const channel: Channel = song.channels[channelIndex];\n                            const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n                            let mod: number = Config.modCount - 1 - tone.pitches[0];\n\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index)\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\n\n                                this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                            }\n\n                        }\n                    }\n                }\n            }\n\n            // Handle next bar mods if they were set\n            if (this.wantToSkip) {\n\t\t    \t\t\t\t\t// Unable to continue, as we have skipped back to a previously visited bar without generating new samples, which means we are infinitely skipping.\n                // In this case processing will return before the designated number of samples are processed. In other words, silence will be generated.\n                let barVisited = skippedBars.includes(this.bar);\n                if (barVisited && bufferIndex == firstSkippedBufferIndex)\n                    return;\n                if (firstSkippedBufferIndex == -1) {\n                    firstSkippedBufferIndex = bufferIndex;\n                }\n                if (!barVisited)\n                    skippedBars.push(this.bar);\n\t\t\t\t//BUGFIX FROM JUMMBOX\n                this.wantToSkip = false;\n                this.skipBar();\n\t\t    \t\t\t\t\tcontinue;\n\t\t\t\t\t//BUGFIX FROM JUMMBOX\n            }\n\n            for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount + song.noiseChannelCount; channelIndex++) {\n                const channel: Channel = song.channels[channelIndex];\n                const channelState: ChannelState = this.channels[channelIndex];\n\n                if (this.isAtStartOfTick) {\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong && !this.countInMetronome);\n                    this.determineLiveInputTones(song, channelIndex, samplesPerTick);\n                }\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\n                    const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n\n                    if (this.isAtStartOfTick) {\n                        let tonesPlayedInThisInstrument: number = instrumentState.activeTones.count() + instrumentState.liveInputTones.count();\n\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone: Tone = instrumentState.releasedTones.get(i);\n                            if (tone.ticksSinceReleased >= Math.abs(instrument.getFadeOutTicks())) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                                continue;\n                            }\n                            const shouldFadeOutFast: boolean = (tonesPlayedInThisInstrument >= Config.maximumTonesPerChannel);\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, true, shouldFadeOutFast);\n                            tonesPlayedInThisInstrument++;\n                        }\n\n                        if (instrumentState.awake) {\n                            if (!instrumentState.computed) {\n                                instrumentState.compute(this, instrument, samplesPerTick, Math.ceil(samplesPerTick), null, channelIndex, instrumentIndex);\n                            }\n\n                            instrumentState.computed = false;\n                            //instrumentState.envelopeComputer.clearEnvelopes();\n                        }\n                    }\n\n                    for (let i: number = 0; i < instrumentState.activeTones.count(); i++) {\n                        const tone: Tone = instrumentState.activeTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n\n                    for (let i: number = 0; i < instrumentState.liveInputTones.count(); i++) {\n                        const tone: Tone = instrumentState.liveInputTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n\n                    for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n                        const tone: Tone = instrumentState.releasedTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n\n                    if (instrumentState.awake) {\n                        Synth.effectsSynth(this, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n                    }\n\n                    // Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\n\n                    const tickSampleCountdown: number = this.tickSampleCountdown;\n                    const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\n                    const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\n                    const ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n                    const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\n                    const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\n                    const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n                    const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n                    let useVibratoSpeed: number = instrument.vibratoSpeed;\n\n                    instrumentState.vibratoTime = instrumentState.nextVibratoTime;\n\n                    if (this.isModActive(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex)) {\n                        useVibratoSpeed = this.getModValue(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex);\n                    }\n\n                    if (useVibratoSpeed == 0) {\n                        instrumentState.vibratoTime = 0;\n                        instrumentState.nextVibratoTime = 0;\n                    }\n                    else {\n                        instrumentState.nextVibratoTime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\n                    }\n                }\n            }\n\n            if (this.enableMetronome || this.countInMetronome) {\n                if (this.part == 0) {\n                    if (!this.startedMetronome) {\n                        const midBeat: boolean = (song.beatsPerBar > 4 && (song.beatsPerBar % 2 == 0) && this.beat == song.beatsPerBar / 2);\n                        const periods: number = (this.beat == 0) ? 8 : midBeat ? 6 : 4;\n                        const hz: number = (this.beat == 0) ? 1600 : midBeat ? 1200 : 800;\n                        const amplitude: number = (this.beat == 0) ? 0.06 : midBeat ? 0.05 : 0.04;\n                        const samplesPerPeriod: number = this.samplesPerSecond / hz;\n                        const radiansPerSample: number = Math.PI * 2.0 / samplesPerPeriod;\n                        this.metronomeSamplesRemaining = Math.floor(samplesPerPeriod * periods);\n                        this.metronomeFilter = 2.0 * Math.cos(radiansPerSample);\n                        this.metronomeAmplitude = amplitude * Math.sin(radiansPerSample);\n                        this.metronomePrevAmplitude = 0.0;\n\n                        this.startedMetronome = true;\n                    }\n                    if (this.metronomeSamplesRemaining > 0) {\n                        const stopIndex: number = Math.min(runEnd, bufferIndex + this.metronomeSamplesRemaining);\n                        this.metronomeSamplesRemaining -= stopIndex - bufferIndex;\n                        for (let i: number = bufferIndex; i < stopIndex; i++) {\n                            outputDataL[i] += this.metronomeAmplitude;\n                            outputDataR[i] += this.metronomeAmplitude;\n                            const tempAmplitude: number = this.metronomeFilter * this.metronomeAmplitude - this.metronomePrevAmplitude;\n                            this.metronomePrevAmplitude = this.metronomeAmplitude;\n                            this.metronomeAmplitude = tempAmplitude;\n                        }\n                    }\n                } else {\n                    this.startedMetronome = false;\n                }\n            }\n\n            // Post processing:\n            for (let i: number = bufferIndex; i < runEnd; i++) {\n                // A compressor/limiter.\n                const sampleL = outputDataL[i] * song.masterGain * song.masterGain;\n                const sampleR = outputDataR[i] * song.masterGain * song.masterGain;\n                const absL: number = sampleL < 0.0 ? -sampleL : sampleL;\n                const absR: number = sampleR < 0.0 ? -sampleR : sampleR;\n                const abs: number = absL > absR ? absL : absR;\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\n                // Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\n                const limitRange: number = (+(abs > song.compressionThreshold)) + (+(abs > song.limitThreshold));\n                // Determine the target amplification based on the range of the curve\n                const limitTarget: number =\n                    (+(limitRange == 0)) * (((abs + 1 - song.compressionThreshold) * 0.8 + 0.25) * song.compressionRatio + 1.05 * (1 - song.compressionRatio))\n                    + (+(limitRange == 1)) * (1.05)\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - song.limitThreshold) * song.limitRatio + (1 - song.limitThreshold)));\n                // Move the limit towards the target\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\n                outputDataL[i] = sampleL * limitedVolume;\n                outputDataR[i] = sampleR * limitedVolume;\n\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\n            }\n\n            bufferIndex += runLength;\n\n            this.isAtStartOfTick = false;\n            this.tickSampleCountdown -= runLength;\n            if (this.tickSampleCountdown <= 0) {\n                this.isAtStartOfTick = true;\n\n                // Track how long tones have been released, and free them if there are too many.\n                // Also reset awake InstrumentStates that didn't have any Tones during this tick.\n                for (const channelState of this.channels) {\n                    for (const instrumentState of channelState.instruments) {\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone: Tone = instrumentState.releasedTones.get(i);\n                            if (tone.isOnLastTick) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                            } else {\n                                tone.ticksSinceReleased++;\n                            }\n                        }\n                        if (instrumentState.deactivateAfterThisTick) {\n                            instrumentState.deactivate();\n                        }\n                        instrumentState.tonesAddedInThisTick = false;\n                    }\n                }\n\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        let instrumentState: InstrumentState = this.channels[channel].instruments[instrumentIdx];\n\n                        // Update arpeggio time, which is used to calculate arpeggio position\n                        let useArpeggioSpeed: number = instrument.arpeggioSpeed;\n                        if (this.isModActive(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx)) {\n                            useArpeggioSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length-1, this.getModValue(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx, false)));\n                            if (Number.isInteger(useArpeggioSpeed)) {\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                            } else {\n                                // Linear interpolate arpeggio values\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\n                            }\n                        }\n                        else {\n                            instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                        }\n\n                        // Update envelope time, which is used to calculate (all envelopes') position\n                        let useEnvelopeSpeed: number = instrument.envelopeSpeed;\n                        if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx)) {\n                            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length-1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx, false)));\n                            if (Number.isInteger(useEnvelopeSpeed)) {\n                                instrumentState.envelopeTime += Config.arpSpeedScale[useEnvelopeSpeed];\n                            } else {\n                                // Linear interpolate envelope values\n                                instrumentState.envelopeTime += (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)];\n                            }\n                        }\n                        else {\n                            instrumentState.envelopeTime += Config.arpSpeedScale[useEnvelopeSpeed];\n                        }\n                    }\n                }\n\n                // Update next-used filters after each run\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        if (instrument.tmpEqFilterEnd != null) {\n                            instrument.tmpEqFilterStart = instrument.tmpEqFilterEnd;\n                        } else {\n                            instrument.tmpEqFilterStart = instrument.eqFilter;\n                        }\n                        if (instrument.tmpNoteFilterEnd != null) {\n                            instrument.tmpNoteFilterStart = instrument.tmpNoteFilterEnd;\n                        } else {\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\n                        }\n                    }\n                }\n\n                this.tick++;\n                this.tickSampleCountdown += samplesPerTick;\n                if (this.tick == Config.ticksPerPart) {\n                    this.tick = 0;\n                    this.part++;\n                    this.liveInputDuration--;\n                    this.liveBassInputDuration--;\n                    // Decrement held modulator counters after each run\n                    for (let i: number = 0; i < this.heldMods.length; i++) {\n                        this.heldMods[i].holdFor--;\n                        if (this.heldMods[i].holdFor <= 0) {\n                            this.heldMods.splice(i, 1);\n                        }\n                    }\n\n                    if (this.part == Config.partsPerBeat) {\n                        this.part = 0;\n\n                        if (playSong) {\n                            this.beat++;\n                            if (this.beat == song.beatsPerBar) {\n                                // bar changed, reset for next bar:\n                                this.beat = 0;\n\n                                if (this.countInMetronome) {\n                                    this.countInMetronome = false;\n                                } else {\n                                    this.prevBar = this.bar;\n                                    this.bar = this.getNextBar();\n                                    if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\n\n                                    if (this.bar >= song.barCount) {\n                                        this.bar = 0;\n                                        if (this.loopRepeatCount != -1) {\n                                            ended = true;\n                                            this.resetEffects();\n                                            this.pause();\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Update mod values so that next values copy to current values\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\n                    this.modValues[setting] = this.nextModValues[setting];\n            }\n\n            // Set samples per tick if song tempo mods changed it\n            if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n                samplesPerTick = this.getSamplesPerTick();\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\n            }\n\n            // Bound LFO times to be within their period (to keep values from getting large)\n            // I figured this modulo math probably doesn't have to happen every LFO tick.\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                for (let instrumentIndex = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    const instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIndex];\n                    instrumentState.nextVibratoTime = (instrumentState.nextVibratoTime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\n                    instrumentState.arpTime = (instrumentState.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\n                    instrumentState.envelopeTime = (instrumentState.envelopeTime % (Config.partsPerBeat * Config.ticksPerPart * this.song.beatsPerBar));\n                }\n            }\n\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrument: number = 0; instrument < this.song.getMaxInstrumentsPerChannel(); instrument++) {\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\n                        }\n                    }\n                }\n            }\n        }\n\n        // Optimization: Avoid persistent reverb values in the float denormal range.\n        if (!Number.isFinite(limit) || Math.abs(limit) < epsilon) limit = 0.0;\n        this.limit = limit;\n\n        if (playSong && !this.countInMetronome) {\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / song.beatsPerBar + this.bar;\n        }\n\n        /*\n        const synthDuration: number = performance.now() - synthStartTime;\n        // Performance measurements:\n        samplesAccumulated += outputBufferLength;\n        samplePerformance += synthDuration;\n    \t\n        if (samplesAccumulated >= 44100 * 4) {\n            const secondsGenerated = samplesAccumulated / 44100;\n            const secondsRequired = samplePerformance / 1000;\n            const ratio = secondsRequired / secondsGenerated;\n            console.log(ratio);\n            samplePerformance = 0;\n            samplesAccumulated = 0;\n        }\n        */\n    }\n\n    private freeTone(tone: Tone): void {\n        this.tonePool.pushBack(tone);\n    }\n\n    private newTone(): Tone {\n        if (this.tonePool.count() > 0) {\n            const tone: Tone = this.tonePool.popBack();\n            tone.freshlyAllocated = true;\n            return tone;\n        }\n        return new Tone();\n    }\n\n    private releaseTone(instrumentState: InstrumentState, tone: Tone): void {\n        instrumentState.releasedTones.pushFront(tone);\n        tone.atNoteStart = false;\n        tone.passedEndOfNote = true;\n    }\n\n    private freeReleasedTone(instrumentState: InstrumentState, toneIndex: number): void {\n        this.freeTone(instrumentState.releasedTones.get(toneIndex));\n        instrumentState.releasedTones.remove(toneIndex);\n    }\n\n    public freeAllTones(): void {\n        for (const channelState of this.channels) {\n            for (const instrumentState of channelState.instruments) {\n                while (instrumentState.activeTones.count() > 0) this.freeTone(instrumentState.activeTones.popBack());\n                while (instrumentState.activeModTones.count() > 0) this.freeTone(instrumentState.activeModTones.popBack());\n                while (instrumentState.releasedTones.count() > 0) this.freeTone(instrumentState.releasedTones.popBack());\n                while (instrumentState.liveInputTones.count() > 0) this.freeTone(instrumentState.liveInputTones.popBack());\n            }\n        }\n    }\n\n    private determineLiveInputTones(song: Song, channelIndex: number, samplesPerTick: number): void {\n        const channel: Channel = song.channels[channelIndex];\n        const channelState: ChannelState = this.channels[channelIndex];\n        const pitches: number[] = this.liveInputPitches;\n        const bassPitches: number[] = this.liveBassInputPitches;\n\n        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n            const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n            const toneList: Deque<Tone> = instrumentState.liveInputTones;\n            let toneCount: number = 0;\n            if (this.liveInputDuration > 0 && (channelIndex == this.liveInputChannel) && pitches.length > 0 && this.liveInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument: Instrument = channel.instruments[instrumentIndex];\n\n                if (instrument.getChord().singleTone) {\n                    let tone: Tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    } else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n\n                    for (let i: number = 0; i < pitches.length; i++) {\n                        tone.pitches[i] = pitches[i];\n                    }\n                    tone.pitchCount = pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                } else {\n                    //const transition: Transition = instrument.getTransition();\n\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, pitches);\n\n                    for (let i: number = 0; i < pitches.length; i++) {\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\n\n                        let tone: Tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount]!;\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != pitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        } else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n\n                        tone.pitches[0] = pitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = pitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n\n            if (this.liveBassInputDuration > 0 && (channelIndex == this.liveBassInputChannel) && bassPitches.length > 0 && this.liveBassInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument: Instrument = channel.instruments[instrumentIndex];\n\n                if (instrument.getChord().singleTone) {\n                    let tone: Tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    } else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n\n                    for (let i: number = 0; i < bassPitches.length; i++) {\n                        tone.pitches[i] = bassPitches[i];\n                    }\n                    tone.pitchCount = bassPitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveBassInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                } else {\n                    //const transition: Transition = instrument.getTransition();\n\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, bassPitches);\n\n                    for (let i: number = 0; i < bassPitches.length; i++) {\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\n\n                        let tone: Tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount]!;\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != bassPitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        } else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n\n                        tone.pitches[0] = bassPitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = bassPitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveBassInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n\n            while (toneList.count() > toneCount) {\n                this.releaseTone(instrumentState, toneList.popBack());\n            }\n\n            this.clearTempMatchedPitchTones(toneCount, instrumentState);\n        }\n\n        this.liveInputStarted = false;\n        this.liveBassInputStarted = false;\n    }\n\n    // Returns the chord type of the instrument in the adjacent pattern if it is compatible for a\n    // seamless transition across patterns, otherwise returns null.\n    private adjacentPatternHasCompatibleInstrumentTransition(song: Song, channel: Channel, pattern: Pattern, otherPattern: Pattern, instrumentIndex: number, transition: Transition, chord: Chord, note: Note, otherNote: Note, forceContinue: boolean): Chord | null {\n        if (song.patternInstruments && otherPattern.instruments.indexOf(instrumentIndex) == -1) {\n            // The adjacent pattern does not contain the same instrument as the current pattern.\n\n            if (pattern.instruments.length > 1 || otherPattern.instruments.length > 1) {\n                // The current or adjacent pattern contains more than one instrument, don't bother\n                // trying to connect them.\n                return null;\n            }\n            // Otherwise, the two patterns each contain one instrument, but not the same instrument.\n            // Try to connect them.\n            const otherInstrument: Instrument = channel.instruments[otherPattern.instruments[0]];\n\n            if (forceContinue) {\n                // Even non-seamless instruments can be connected across patterns if forced.\n                return otherInstrument.getChord();\n            }\n\n            // Otherwise, check that both instruments are seamless across patterns.\n            const otherTransition: Transition = otherInstrument.getTransition();\n            if (transition.includeAdjacentPatterns && otherTransition.includeAdjacentPatterns && otherTransition.slides == transition.slides) {\n                return otherInstrument.getChord();\n            } else {\n                return null;\n            }\n        } else {\n            // If both patterns contain the same instrument, check that it is seamless across patterns.\n            return (forceContinue || transition.includeAdjacentPatterns) ? chord : null;\n        }\n    }\n\n    public static adjacentNotesHaveMatchingPitches(firstNote: Note, secondNote: Note): boolean {\n        if (firstNote.pitches.length != secondNote.pitches.length) return false;\n        const firstNoteInterval: number = firstNote.pins[firstNote.pins.length - 1].interval;\n        for (const pitch of firstNote.pitches) {\n            if (secondNote.pitches.indexOf(pitch + firstNoteInterval) == -1) return false;\n        }\n        return true;\n    }\n\n    private moveTonesIntoOrderedTempMatchedList(toneList: Deque<Tone>, notePitches: number[]): void {\n        // The tones are about to seamlessly transition to a new note. The pitches\n        // from the old note may or may not match any of the pitches in the new\n        // note, and not necessarily in order, but if any do match, they'll sound\n        // better if those tones continue to have the same pitch. Attempt to find\n        // the right spot for each old tone in the new chord if possible.\n\n        for (let i: number = 0; i < toneList.count(); i++) {\n            const tone: Tone = toneList.get(i);\n            const pitch: number = tone.pitches[0] + tone.lastInterval;\n            for (let j: number = 0; j < notePitches.length; j++) {\n                if (notePitches[j] == pitch) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    toneList.remove(i);\n                    i--;\n                    break;\n                }\n            }\n        }\n\n        // Any tones that didn't get matched should just fill in the gaps.\n        while (toneList.count() > 0) {\n            const tone: Tone = toneList.popFront();\n            for (let j: number = 0; j < this.tempMatchedPitchTones.length; j++) {\n                if (this.tempMatchedPitchTones[j] == null) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    break;\n                }\n            }\n        }\n    }\n\n    private determineCurrentActiveTones(song: Song, channelIndex: number, samplesPerTick: number, playSong: boolean): void {\n        const channel: Channel = song.channels[channelIndex];\n        const channelState: ChannelState = this.channels[channelIndex];\n        const pattern: Pattern | null = song.getPattern(channelIndex, this.bar);\n        const currentPart: number = this.getCurrentPart();\n        const currentTick: number = this.tick + Config.ticksPerPart * currentPart;\n\n        if (playSong && song.getChannelIsMod(channelIndex)) {\n\n            // For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\n            // The same transition logic should apply though, even though it isn't really used by mod channels.\n            let notes: (Note | null)[] = [];\n            let prevNotes: (Note | null)[] = [];\n            let nextNotes: (Note | null)[] = [];\n            let fillCount: number = Config.modCount;\n            while (fillCount--) {\n                notes.push(null);\n                prevNotes.push(null);\n                nextNotes.push(null);\n            }\n\n            if (pattern != null && !channel.muted) {\n                for (let i: number = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        // Actually need to check which note starts closer to the start of this note.\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start > currentPart) {\n                        // Actually need to check which note starts closer to the end of this note.\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                }\n            }\n\n            let modToneCount: number = 0;\n            const newInstrumentIndex: number = (song.patternInstruments && (pattern != null)) ? pattern!.instruments[0] : 0;\n            const instrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n            const toneList: Deque<Tone> = instrumentState.activeModTones;\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                if (notes[mod] != null) {\n                    if (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\n                    if (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\n\n                }\n\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeModTones.count() > 0) {\n                        destInstrumentState.activeModTones.pushFront(sourceInstrumentState.activeModTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n\n                if (notes[mod] != null) {\n                    let prevNoteForThisInstrument: Note | null = prevNotes[mod];\n                    let nextNoteForThisInstrument: Note | null = nextNotes[mod];\n\n                    let forceContinueAtStart: boolean = false;\n                    let forceContinueAtEnd: boolean = false;\n                    const atNoteStart: boolean = (Config.ticksPerPart * notes[mod]!.start == currentTick) && this.isAtStartOfTick;\n                    let tone: Tone;\n                    if (toneList.count() <= modToneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    } else if (atNoteStart && (prevNoteForThisInstrument == null)) {\n                        const oldTone: Tone = toneList.get(modToneCount);\n                        if (oldTone.isOnLastTick) {\n                            this.freeTone(oldTone);\n                        } else {\n                            this.releaseTone(instrumentState, oldTone);\n                        }\n                        tone = this.newTone();\n                        toneList.set(modToneCount, tone);\n                    } else {\n                        tone = toneList.get(modToneCount);\n                    }\n                    modToneCount++;\n\n                    for (let i: number = 0; i < notes[mod]!.pitches.length; i++) {\n                        tone.pitches[i] = notes[mod]!.pitches[i];\n                    }\n                    tone.pitchCount = notes[mod]!.pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = newInstrumentIndex;\n                    tone.note = notes[mod];\n                    tone.noteStartPart = notes[mod]!.start;\n                    tone.noteEndPart = notes[mod]!.end;\n                    tone.prevNote = prevNoteForThisInstrument;\n                    tone.nextNote = nextNoteForThisInstrument;\n                    tone.prevNotePitchIndex = 0;\n                    tone.nextNotePitchIndex = 0;\n                    tone.atNoteStart = atNoteStart;\n                    tone.passedEndOfNote = false;\n                    tone.forceContinueAtStart = forceContinueAtStart;\n                    tone.forceContinueAtEnd = forceContinueAtEnd;\n                }\n            }\n            // Automatically free or release seamless tones if there's no new note to take over.\n            while (toneList.count() > modToneCount) {\n                const tone: Tone = toneList.popBack();\n                const channel: Channel = song.channels[channelIndex];\n                if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[tone.instrumentIndex];\n                    this.releaseTone(instrumentState, tone);\n                } else {\n                    this.freeTone(tone);\n                }\n            }\n\n        }\n        else if (!song.getChannelIsMod(channelIndex)) {\n\n            let note: Note | null = null;\n            let prevNote: Note | null = null;\n            let nextNote: Note | null = null;\n\n            if (playSong && pattern != null && !channel.muted && (!this.isRecording || this.liveInputChannel != channelIndex)) {\n                for (let i: number = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        prevNote = pattern.notes[i];\n                    } else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        note = pattern.notes[i];\n                    } else if (pattern.notes[i].start > currentPart) {\n                        nextNote = pattern.notes[i];\n                        break;\n                    }\n                }\n\n                if (note != null) {\n                    if (prevNote != null && prevNote.end != note.start) prevNote = null;\n                    if (nextNote != null && nextNote.start != note.end) nextNote = null;\n                }\n            }\n\n            // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\n            if (pattern != null && (!song.layeredInstruments || channel.instruments.length == 1 || (song.patternInstruments && pattern.instruments.length == 1))) {\n                const newInstrumentIndex: number = song.patternInstruments ? pattern.instruments[0] : 0;\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeTones.count() > 0) {\n                        destInstrumentState.activeTones.pushFront(sourceInstrumentState.activeTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n            } else {\n                channelState.singleSeamlessInstrument = null;\n            }\n\n            for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n                const toneList: Deque<Tone> = instrumentState.activeTones;\n                let toneCount: number = 0;\n                if ((note != null) && (!song.patternInstruments || (pattern!.instruments.indexOf(instrumentIndex) != -1))) {\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\n                    let prevNoteForThisInstrument: Note | null = prevNote;\n                    let nextNoteForThisInstrument: Note | null = nextNote;\n\n                    const partsPerBar: Number = Config.partsPerBeat * song.beatsPerBar;\n                    const transition: Transition = instrument.getTransition();\n                    const chord: Chord = instrument.getChord();\n                    let forceContinueAtStart: boolean = false;\n                    let forceContinueAtEnd: boolean = false;\n                    let tonesInPrevNote: number = 0;\n                    let tonesInNextNote: number = 0;\n                    if (note.start == 0) {\n                        // If the beginning of the note coincides with the beginning of the pattern,\n                        let prevPattern: Pattern | null = (this.prevBar == null) ? null : song.getPattern(channelIndex, this.prevBar);\n                        if (prevPattern != null) {\n                            const lastNote: Note | null = (prevPattern.notes.length <= 0) ? null : prevPattern.notes[prevPattern.notes.length - 1];\n                            if (lastNote != null && lastNote.end == partsPerBar) {\n                                const patternForcesContinueAtStart: boolean = note.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(lastNote, note);\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, prevPattern, instrumentIndex, transition, chord, note, lastNote, patternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    prevNoteForThisInstrument = lastNote;\n                                    tonesInPrevNote = chordOfCompatibleInstrument.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\n                                    forceContinueAtStart = patternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    } else if (prevNoteForThisInstrument != null) {\n                        tonesInPrevNote = chord.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\n                    }\n                    if (note.end == partsPerBar) {\n                        // If the end of the note coincides with the end of the pattern, look for an\n                        // adjacent note at the beginning of the next pattern.\n                        let nextPattern: Pattern | null = (this.nextBar == null) ? null : song.getPattern(channelIndex, this.nextBar);\n                        if (nextPattern != null) {\n                            const firstNote: Note | null = (nextPattern.notes.length <= 0) ? null : nextPattern.notes[0];\n                            if (firstNote != null && firstNote.start == 0) {\n                                const nextPatternForcesContinueAtStart: boolean = firstNote.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(note, firstNote);\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, nextPattern, instrumentIndex, transition, chord, note, firstNote, nextPatternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    nextNoteForThisInstrument = firstNote;\n                                    tonesInNextNote = chordOfCompatibleInstrument.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\n                                    forceContinueAtEnd = nextPatternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    } else if (nextNoteForThisInstrument != null) {\n                        tonesInNextNote = chord.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\n                    }\n\n                    if (chord.singleTone) {\n                        const atNoteStart: boolean = (Config.ticksPerPart * note.start == currentTick);\n                        let tone: Tone;\n                        if (toneList.count() <= toneCount) {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        } else if (atNoteStart && ((!(transition.isSeamless || instrument.clicklessTransition) && !forceContinueAtStart) || prevNoteForThisInstrument == null)) {\n                            const oldTone: Tone = toneList.get(toneCount);\n                            if (oldTone.isOnLastTick) {\n                                this.freeTone(oldTone);\n                            } else {\n                                this.releaseTone(instrumentState, oldTone);\n                            }\n                            tone = this.newTone();\n                            toneList.set(toneCount, tone);\n                        } else {\n                            tone = toneList.get(toneCount);\n                        }\n                        toneCount++;\n\n                        for (let i: number = 0; i < note.pitches.length; i++) {\n                            tone.pitches[i] = note.pitches[i];\n                        }\n                        tone.pitchCount = note.pitches.length;\n                        tone.chordSize = 1;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = note;\n                        tone.noteStartPart = note.start;\n                        tone.noteEndPart = note.end;\n                        tone.prevNote = prevNoteForThisInstrument;\n                        tone.nextNote = nextNoteForThisInstrument;\n                        tone.prevNotePitchIndex = 0;\n                        tone.nextNotePitchIndex = 0;\n                        tone.atNoteStart = atNoteStart;\n                        tone.passedEndOfNote = false;\n                        tone.forceContinueAtStart = forceContinueAtStart;\n                        tone.forceContinueAtEnd = forceContinueAtEnd;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    } else {\n                        const transition: Transition = instrument.getTransition();\n\n                        if (((transition.isSeamless && !transition.slides && chord.strumParts == 0) || forceContinueAtStart) && (Config.ticksPerPart * note.start == currentTick) && prevNoteForThisInstrument != null) {\n                            this.moveTonesIntoOrderedTempMatchedList(toneList, note.pitches);\n                        }\n\n                        let strumOffsetParts: number = 0;\n                        for (let i: number = 0; i < note.pitches.length; i++) {\n\n                            let prevNoteForThisTone: Note | null = (tonesInPrevNote > i) ? prevNoteForThisInstrument : null;\n                            let noteForThisTone: Note = note;\n                            let nextNoteForThisTone: Note | null = (tonesInNextNote > i) ? nextNoteForThisInstrument : null;\n                            let noteStartPart: number = noteForThisTone.start + strumOffsetParts;\n                            let passedEndOfNote: boolean = false;\n\n                            // Strumming may mean that a note's actual start time may be after the\n                            // note's displayed start time. If the note start hasn't been reached yet,\n                            // carry over the previous tone if available and seamless, otherwise skip\n                            // the new tone until it is ready to start.\n                            if (noteStartPart > currentPart) {\n                                if (toneList.count() > i && (transition.isSeamless || forceContinueAtStart) && prevNoteForThisTone != null) {\n                                    // Continue the previous note's chord until the current one takes over.\n                                    nextNoteForThisTone = noteForThisTone;\n                                    noteForThisTone = prevNoteForThisTone;\n                                    prevNoteForThisTone = null;\n                                    noteStartPart = noteForThisTone.start + strumOffsetParts;\n                                    passedEndOfNote = true;\n                                } else {\n                                    // This and the rest of the tones in the chord shouldn't start yet.\n                                    break;\n                                }\n                            }\n\n                            let noteEndPart: number = noteForThisTone.end;\n                            if ((transition.isSeamless || forceContinueAtStart) && nextNoteForThisTone != null) {\n                                noteEndPart = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEndPart + strumOffsetParts);\n                            }\n                            if ((!transition.continues && !forceContinueAtStart) || prevNoteForThisTone == null) {\n                                strumOffsetParts += chord.strumParts;\n                            }\n\n                            const atNoteStart: boolean = (Config.ticksPerPart * noteStartPart == currentTick);\n                            let tone: Tone;\n                            if (this.tempMatchedPitchTones[toneCount] != null) {\n                                tone = this.tempMatchedPitchTones[toneCount]!;\n                                this.tempMatchedPitchTones[toneCount] = null;\n                                toneList.pushBack(tone);\n                            } else if (toneList.count() <= toneCount) {\n                                tone = this.newTone();\n                                toneList.pushBack(tone);\n                            } else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisTone == null)) {\n                                const oldTone: Tone = toneList.get(toneCount);\n                                if (oldTone.isOnLastTick) {\n                                    this.freeTone(oldTone);\n                                } else {\n                                    this.releaseTone(instrumentState, oldTone);\n                                }\n                                tone = this.newTone();\n                                toneList.set(toneCount, tone);\n                            } else {\n                                tone = toneList.get(toneCount);\n                            }\n                            toneCount++;\n\n                            tone.pitches[0] = noteForThisTone.pitches[i];\n                            tone.pitchCount = 1;\n                            tone.chordSize = noteForThisTone.pitches.length;\n                            tone.instrumentIndex = instrumentIndex;\n                            tone.note = noteForThisTone;\n                            tone.noteStartPart = noteStartPart;\n                            tone.noteEndPart = noteEndPart;\n                            tone.prevNote = prevNoteForThisTone;\n                            tone.nextNote = nextNoteForThisTone;\n                            tone.prevNotePitchIndex = i;\n                            tone.nextNotePitchIndex = i;\n                            tone.atNoteStart = atNoteStart;\n                            tone.passedEndOfNote = passedEndOfNote;\n                            tone.forceContinueAtStart = forceContinueAtStart && prevNoteForThisTone != null;\n                            tone.forceContinueAtEnd = forceContinueAtEnd && nextNoteForThisTone != null;\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                        }\n                    }\n                }\n                // Automatically free or release seamless tones if there's no new note to take over.\n                while (toneList.count() > toneCount) {\n                    const tone: Tone = toneList.popBack();\n                    const channel: Channel = song.channels[channelIndex];\n                    if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n                        this.releaseTone(instrumentState, tone);\n                    } else {\n                        this.freeTone(tone);\n                    }\n                }\n\n                this.clearTempMatchedPitchTones(toneCount, instrumentState);\n            }\n        }\n    }\n\n    private clearTempMatchedPitchTones(toneCount: number, instrumentState: InstrumentState): void {\n        for (let i: number = toneCount; i < this.tempMatchedPitchTones.length; i++) {\n            const oldTone: Tone | null = this.tempMatchedPitchTones[i];\n            if (oldTone != null) {\n                if (oldTone.isOnLastTick) {\n                    this.freeTone(oldTone);\n                } else {\n                    this.releaseTone(instrumentState, oldTone);\n                }\n                this.tempMatchedPitchTones[i] = null;\n            }\n        }\n    }\n\n\n    private playTone(channelIndex: number, bufferIndex: number, runLength: number, tone: Tone): void {\n        const channelState: ChannelState = this.channels[channelIndex];\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n\n        if (instrumentState.synthesizer != null) instrumentState.synthesizer!(this, bufferIndex, runLength, tone, instrumentState);\n        tone.envelopeComputer.clearEnvelopes();\n    }\n\n    // Computes mod note position at the start and end of the window and \"plays\" the mod tone, setting appropriate mod data.\n    private playModTone(song: Song, channelIndex: number, samplesPerTick: number, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\n        const channel: Channel = song.channels[channelIndex];\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n\n        if (tone.note != null) {\n            const ticksIntoBar: number = this.getTicksIntoBar();\n            const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\n            const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\n            const tickSampleCountdown: number = this.tickSampleCountdown;\n            const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\n            const endRatio: number = 1.0 - (tickSampleCountdown - roundedSamplesPerTick) / samplesPerTick;\n            const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n            const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n            const tickTimeStart: number = Config.ticksPerPart * partTimeStart;\n            const tickTimeEnd: number = Config.ticksPerPart * partTimeEnd;\n            const endPinIndex: number = tone.note.getEndPinIndex(this.getCurrentPart());\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\n            const endPin: NotePin = tone.note.pins[endPinIndex];\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart: number = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd: number = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\n            tone.expression = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            tone.expressionDelta = (startPin.size + (endPin.size - startPin.size) * ratioEnd) - tone.expression;\n\n            Synth.modSynth(this, bufferIndex, roundedSamplesPerTick, tone, instrument);\n        }\n    }\n\n    private static computeChordExpression(chordSize: number): number {\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\n    }\n\n    private computeTone(song: Song, channelIndex: number, samplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\n        const roundedSamplesPerTick: number = Math.ceil(samplesPerTick);\n        const channel: Channel = song.channels[channelIndex];\n        const channelState: ChannelState = this.channels[channelIndex];\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n        instrumentState.awake = true;\n        instrumentState.tonesAddedInThisTick = true;\n        if (!instrumentState.computed) {\n            instrumentState.compute(this, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, tone.instrumentIndex);\n        }\n        const transition: Transition = instrument.getTransition();\n        const chord: Chord = instrument.getChord();\n        const chordExpression: number = chord.singleTone ? 1.0 : Synth.computeChordExpression(tone.chordSize);\n        const isNoiseChannel: boolean = song.getChannelIsNoise(channelIndex);\n        const intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\n        const secondsPerPart: number = Config.ticksPerPart * samplesPerTick / this.samplesPerSecond;\n        const sampleTime: number = 1.0 / this.samplesPerSecond;\n        const beatsPerPart: number = 1.0 / Config.partsPerBeat;\n        const ticksIntoBar: number = this.getTicksIntoBar();\n        const partTimeStart: number = (ticksIntoBar) / Config.ticksPerPart;\n        const partTimeEnd: number = (ticksIntoBar + 1.0) / Config.ticksPerPart;\n        const currentPart: number = this.getCurrentPart();\n\n        let specialIntervalMult: number = 1.0;\n        tone.specialIntervalExpressionMult = 1.0;\n\n        //if (synth.isModActive(ModSetting.mstPan, channelIndex, tone.instrumentIndex)) {\n        //    startPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\n        //    endPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\n        //}\n\n        let toneIsOnLastTick: boolean = shouldFadeOutFast;\n        let intervalStart: number = 0.0;\n        let intervalEnd: number = 0.0;\n        let fadeExpressionStart: number = 1.0;\n        let fadeExpressionEnd: number = 1.0;\n        let chordExpressionStart: number = chordExpression;\n        let chordExpressionEnd: number = chordExpression;\n\n        let expressionReferencePitch: number = 16; // A low \"E\" as a MIDI pitch.\n        let basePitch: number = Config.keys[song.key].basePitch + (Config.pitchesPerOctave * song.octave);\n        let baseExpression: number = 1.0;\n        let pitchDamping: number = 48;\n        if (instrument.type == InstrumentType.spectrum) {\n            baseExpression = Config.spectrumBaseExpression;\n            if (isNoiseChannel) {\n                basePitch = Config.spectrumBasePitch;\n                baseExpression *= 2.0; // Note: spectrum is louder for drum channels than pitch channels!\n            }\n            expressionReferencePitch = Config.spectrumBasePitch;\n            pitchDamping = 28;\n        } else if (instrument.type == InstrumentType.drumset) {\n            basePitch = Config.spectrumBasePitch;\n            baseExpression = Config.drumsetBaseExpression;\n            expressionReferencePitch = basePitch;\n        } else if (instrument.type == InstrumentType.noise) {\n            // dogebox2 code, makes basic noise affected by keys in pitch channels\n            basePitch = isNoiseChannel ? Config.chipNoises[instrument.chipNoise].basePitch : basePitch + Config.chipNoises[instrument.chipNoise].basePitch - 12;\n            // maybe also lower expression in pitch channels?\n            baseExpression = Config.noiseBaseExpression;\n            expressionReferencePitch = basePitch;\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\n        } else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\n            baseExpression = Config.fmBaseExpression;\n        } else if (instrument.type == InstrumentType.chip){\n                baseExpression = Config.chipBaseExpression;\n\t\t\t\tif (Config.chipWaves[instrument.chipWave].isCustomSampled) {\n\t\t\t\t\tif (Config.chipWaves[instrument.chipWave].isPercussion){\n\t\t\t\t\t\tbasePitch = -84.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length/Config.chipWaves[instrument.chipWave].sampleRate!) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey!);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse {\n\t\t\t\t\t\tbasePitch += -96.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length/Config.chipWaves[instrument.chipWave].sampleRate!) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey!); \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (Config.chipWaves[instrument.chipWave].isSampled && !Config.chipWaves[instrument.chipWave].isPercussion) {\n\t\t\t\t\t\tbasePitch = basePitch - 63 + Config.chipWaves[instrument.chipWave].extraSampleDetune!\n\t\t\t\t\t}\n\t\t\t\t\telse if (Config.chipWaves[instrument.chipWave].isSampled && Config.chipWaves[instrument.chipWave].isPercussion) {\n\t\t\t\t\tbasePitch = -51 + Config.chipWaves[instrument.chipWave].extraSampleDetune!;\n\t\t\t\t\t}\n\t\t\t\t}\n            } else if (instrument.type == InstrumentType.customChipWave) {\n            baseExpression = Config.chipBaseExpression;\n        } else if (instrument.type == InstrumentType.harmonics) {\n            baseExpression = Config.harmonicsBaseExpression;\n        } else if (instrument.type == InstrumentType.pwm) {\n            baseExpression = Config.pwmBaseExpression;\n        } else if (instrument.type == InstrumentType.supersaw) {\n\t\t\tbaseExpression = Config.supersawBaseExpression;\n        } else if (instrument.type == InstrumentType.pickedString) {\n            baseExpression = Config.pickedStringBaseExpression;\n        } else if (instrument.type == InstrumentType.mod) {\n            baseExpression = 1.0;\n            expressionReferencePitch = 0;\n            pitchDamping = 1.0;\n            basePitch = 0;\n        } else {\n            throw new Error(\"Unknown instrument type in computeTone.\");\n        }\n\n        if ((tone.atNoteStart && !transition.isSeamless && !tone.forceContinueAtStart) || tone.freshlyAllocated) {\n            tone.reset();\n\t\t\t\t\t\t // advloop addition\n                         if (instrument.type == InstrumentType.chip && instrument.isUsingAdvancedLoopControls) {\n                const chipWaveLength = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\n                const firstOffset = instrument.chipWaveStartOffset / chipWaveLength;\n                // const lastOffset = (chipWaveLength - 0.01) / chipWaveLength;\n                // @TODO: This is silly and I should actually figure out how to\n                // properly keep lastOffset as 1.0 and not get it wrapped back\n                // to 0 once it's in `Synth.loopableChipSynth`.\n                const lastOffset = 0.999999999999999;\n                for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\n                    tone.phases[i] = instrument.chipWavePlayBackwards ? Math.max(0, Math.min(lastOffset, firstOffset)) : Math.max(0, firstOffset);\n                    tone.directions[i] = instrument.chipWavePlayBackwards ? -1 : 1;\n                    tone.chipWaveCompletions[i] = 0;\n                    tone.chipWavePrevWaves[i] = 0;\n                    tone.chipWaveCompletionsLastWave[i] = 0;\n                }\n                // console.log(tone.directions);\n            }\n                // advloop addition\n        }\n        tone.freshlyAllocated = false;\n\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            tone.phaseDeltas[i] = 0.0;\n            tone.phaseDeltaScales[i] = 0.0;\n            tone.operatorExpressions[i] = 0.0;\n            tone.operatorExpressionDeltas[i] = 0.0;\n        }\n        tone.expression = 0.0;\n        tone.expressionDelta = 0.0;\n        for (let i: number = 0; i < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); i++) {\n            tone.operatorWaves[i] = Synth.getOperatorWave(instrument.operators[i].waveform, instrument.operators[i].pulseWidth);\n        }\n\n        if (released) {\n            const startTicksSinceReleased: number = tone.ticksSinceReleased;\n            const endTicksSinceReleased: number = tone.ticksSinceReleased + 1.0;\n            intervalStart = intervalEnd = tone.lastInterval;\n            const fadeOutTicks: number = Math.abs(instrument.getFadeOutTicks());\n            fadeExpressionStart = Synth.noteSizeToVolumeMult((1.0 - startTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n            fadeExpressionEnd = Synth.noteSizeToVolumeMult((1.0 - endTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n\n            if (shouldFadeOutFast) {\n                fadeExpressionEnd = 0.0;\n            }\n\n            if (tone.ticksSinceReleased + 1 >= fadeOutTicks) toneIsOnLastTick = true;\n        } else if (tone.note == null) {\n            fadeExpressionStart = fadeExpressionEnd = 1.0;\n            tone.lastInterval = 0;\n            tone.ticksSinceReleased = 0;\n            tone.liveInputSamplesHeld += roundedSamplesPerTick;\n        } else {\n            const note: Note = tone.note;\n            const nextNote: Note | null = tone.nextNote;\n\n            const noteStartPart: number = tone.noteStartPart;\n            const noteEndPart: number = tone.noteEndPart;\n\n\n            const endPinIndex: number = note.getEndPinIndex(currentPart);\n            const startPin: NotePin = note.pins[endPinIndex - 1];\n            const endPin: NotePin = note.pins[endPinIndex];\n            const noteStartTick: number = noteStartPart * Config.ticksPerPart;\n            const noteEndTick: number = noteEndPart * Config.ticksPerPart;\n            const pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\n            const pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\n\n            tone.ticksSinceReleased = 0;\n\n            const tickTimeStart: number = currentPart * Config.ticksPerPart + this.tick;\n            const tickTimeEnd: number = tickTimeStart + 1.0;\n            const noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\n            const noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\n            const pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\n            const pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\n            fadeExpressionStart = 1.0;\n            fadeExpressionEnd = 1.0;\n            intervalStart = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\n            intervalEnd = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\n            tone.lastInterval = intervalEnd;\n\n            if ((!transition.isSeamless && !tone.forceContinueAtEnd) || nextNote == null) {\n                const fadeOutTicks: number = -instrument.getFadeOutTicks();\n                if (fadeOutTicks > 0.0) {\n                    // If the tone should fade out before the end of the note, do so here.\n                    const noteLengthTicks: number = noteEndTick - noteStartTick;\n                    fadeExpressionStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / fadeOutTicks);\n                    fadeExpressionEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / fadeOutTicks);\n                    if (tickTimeEnd >= noteStartTick + noteLengthTicks) toneIsOnLastTick = true;\n                }\n            }\n\n        }\n\n        tone.isOnLastTick = toneIsOnLastTick;\n\n        let tmpNoteFilter: FilterSettings = instrument.noteFilter;\n        let startPoint: FilterControlPoint;\n        let endPoint: FilterControlPoint;\n\n        if (instrument.noteFilterType) {\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\n            const noteFilterSettingsStart: FilterSettings = instrument.noteFilter;\n            if (instrument.noteSubFilters[1] == null)\n                instrument.noteSubFilters[1] = new FilterSettings();\n            const noteFilterSettingsEnd: FilterSettings = instrument.noteSubFilters[1];\n\n            // Change location based on slider values\n            let startSimpleFreq: number = instrument.noteFilterSimpleCut;\n            let startSimpleGain: number = instrument.noteFilterSimplePeak;\n            let endSimpleFreq: number = instrument.noteFilterSimpleCut;\n            let endSimpleGain: number = instrument.noteFilterSimplePeak;\n            let filterChanges: boolean = false;\n\n            if (this.isModActive(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n\n            noteFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, !filterChanges);\n            noteFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain, !filterChanges);\n\n            startPoint = noteFilterSettingsStart.controlPoints[0];\n            endPoint = noteFilterSettingsEnd.controlPoints[0];\n\n            // Temporarily override so that envelope computer uses appropriate computed note filter\n            instrument.noteFilter = noteFilterSettingsStart;\n            instrument.tmpNoteFilterStart = noteFilterSettingsStart;\n        }\n\n        // Compute envelopes *after* resetting the tone, otherwise the envelope computer gets reset too!\n        const envelopeComputer: EnvelopeComputer = tone.envelopeComputer;\n        let useEnvelopeSpeed: number = Config.arpSpeedScale[instrument.envelopeSpeed];\n        if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex)) {\n            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex, false)));\n            if (Number.isInteger(useEnvelopeSpeed)) {\n                useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed];\n            } else {\n                // Linear interpolate envelope values\n                useEnvelopeSpeed = (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)];\n            }\n        }\n        envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, Config.ticksPerPart * partTimeStart, samplesPerTick / this.samplesPerSecond, tone, useEnvelopeSpeed);\n        const envelopeStarts: number[] = tone.envelopeComputer.envelopeStarts;\n        const envelopeEnds: number[] = tone.envelopeComputer.envelopeEnds;\n        instrument.noteFilter = tmpNoteFilter;\n\n        if (tone.note != null && transition.slides) {\n            // Slide interval and chordExpression at the start and/or end of the note if necessary.\n            const prevNote: Note | null = tone.prevNote;\n            const nextNote: Note | null = tone.nextNote;\n            if (prevNote != null) {\n                const intervalDiff: number = prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval - tone.pitches[0];\n                if (envelopeComputer.prevSlideStart) intervalStart += intervalDiff * envelopeComputer.prevSlideRatioStart;\n                if (envelopeComputer.prevSlideEnd) intervalEnd += intervalDiff * envelopeComputer.prevSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff: number = prevNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.prevSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioStart);\n                    if (envelopeComputer.prevSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioEnd);\n                }\n            }\n            if (nextNote != null) {\n                const intervalDiff: number = nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + tone.note.pins[tone.note.pins.length - 1].interval);\n                if (envelopeComputer.nextSlideStart) intervalStart += intervalDiff * envelopeComputer.nextSlideRatioStart;\n                if (envelopeComputer.nextSlideEnd) intervalEnd += intervalDiff * envelopeComputer.nextSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff: number = nextNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.nextSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioStart);\n                    if (envelopeComputer.nextSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioEnd);\n                }\n            }\n        }\n\n        if (effectsIncludePitchShift(instrument.effects)) {\n            let pitchShift: number = Config.justIntonationSemitones[instrument.pitchShift] / intervalScale;\n            let pitchShiftScalarStart: number = 1.0;\n            let pitchShiftScalarEnd: number = 1.0;\n            if (this.isModActive(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\n                pitchShiftScalarStart = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pitchShiftCenter);\n                pitchShiftScalarEnd = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pitchShiftCenter);\n            }\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.pitchShift];\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.pitchShift];\n            intervalStart += pitchShift * envelopeStart * pitchShiftScalarStart;\n            intervalEnd += pitchShift * envelopeEnd * pitchShiftScalarEnd;\n        }\n        if (effectsIncludeDetune(instrument.effects) || this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.detune];\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.detune];\n            let modDetuneStart: number = instrument.detune;\n            let modDetuneEnd: number = instrument.detune;\n            if (this.isModActive(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, false) + Config.detuneCenter;\n                modDetuneEnd = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, true) + Config.detuneCenter;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, false);\n                modDetuneEnd += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, true);\n            }\n            intervalStart += Synth.detuneToCents(modDetuneStart) * envelopeStart * Config.pitchesPerOctave / (12.0 * 100.0);\n            intervalEnd += Synth.detuneToCents(modDetuneEnd) * envelopeEnd * Config.pitchesPerOctave / (12.0 * 100.0);\n        }\n\n        if (effectsIncludeVibrato(instrument.effects)) {\n            let delayTicks: number;\n            let vibratoAmplitudeStart: number;\n            let vibratoAmplitudeEnd: number;\n            // Custom vibrato\n            if (instrument.vibrato == Config.vibratos.length) {\n                delayTicks = instrument.vibratoDelay * 2; // Delay was changed from parts to ticks in BB v9\n                // Special case: if vibrato delay is max, NEVER vibrato.\n                if (instrument.vibratoDelay == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol)\n                    delayTicks = Number.POSITIVE_INFINITY;\n                vibratoAmplitudeStart = instrument.vibratoDepth;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            } else {\n                delayTicks = Config.vibratos[instrument.vibrato].delayTicks;\n                vibratoAmplitudeStart = Config.vibratos[instrument.vibrato].amplitude;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            }\n\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex)) {\n                delayTicks = this.getModValue(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex, false) * 2; // Delay was changed from parts to ticks in BB v9\n                if (delayTicks == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol * 2)\n                    delayTicks = Number.POSITIVE_INFINITY;\n\n            }\n\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex)) {\n                vibratoAmplitudeStart = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, false) / 25;\n                vibratoAmplitudeEnd = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, true) / 25;\n            }\n\n\n            // To maintain pitch continuity, (mostly for picked string which retriggers impulse\n            // otherwise) remember the vibrato at the end of this run and reuse it at the start\n            // of the next run if available.\n            let vibratoStart: number;\n            if (tone.prevVibrato != null) {\n                vibratoStart = tone.prevVibrato;\n            } else {\n                let vibratoLfoStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.vibratoTime);\n                const vibratoDepthEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.vibratoDepth];\n                vibratoStart = vibratoAmplitudeStart * vibratoLfoStart * vibratoDepthEnvelopeStart;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoStart: number = delayTicks - envelopeComputer.noteTicksStart;\n                    vibratoStart *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoStart / 2.0));\n                }\n            }\n\n            let vibratoLfoEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.nextVibratoTime);\n            const vibratoDepthEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.vibratoDepth];\n            if (instrument.type != InstrumentType.mod) {\n                let vibratoEnd: number = vibratoAmplitudeEnd * vibratoLfoEnd * vibratoDepthEnvelopeEnd;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoEnd: number = delayTicks - envelopeComputer.noteTicksEnd;\n                    vibratoEnd *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoEnd / 2.0));\n                }\n\n                tone.prevVibrato = vibratoEnd;\n\n                intervalStart += vibratoStart;\n                intervalEnd += vibratoEnd;\n            }\n        }\n\n        if ((!transition.isSeamless && !tone.forceContinueAtStart) || tone.prevNote == null) {\n            // Fade in the beginning of the note.\n            const fadeInSeconds: number = instrument.getFadeInSeconds();\n            if (fadeInSeconds > 0.0) {\n                fadeExpressionStart *= Math.min(1.0, envelopeComputer.noteSecondsStart / fadeInSeconds);\n                fadeExpressionEnd *= Math.min(1.0, envelopeComputer.noteSecondsEnd / fadeInSeconds);\n            }\n        }\n\n\n        if (instrument.type == InstrumentType.drumset && tone.drumsetPitch == null) {\n            // It's possible that the note will change while the user is editing it,\n            // but the tone's pitches don't get updated because the tone has already\n            // ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\n            tone.drumsetPitch = tone.pitches[0];\n            if (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\n        }\n\n        let noteFilterExpression: number = envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n        if (!effectsIncludeNoteFilter(instrument.effects)) {\n            tone.noteFilterCount = 0;\n        } else {\n\n            const noteAllFreqsEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterAllFreqs];\n            const noteAllFreqsEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterAllFreqs];\n\n            // Simple note filter\n            if (instrument.noteFilterType) {\n                const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0];\n                const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0];\n                const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0];\n                const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0];\n\n                startPoint!.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                endPoint!.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n\n                if (tone.noteFilters.length < 1) tone.noteFilters[0] = new DynamicBiquadFilter();\n                tone.noteFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint!.type == FilterType.lowPass);\n                noteFilterExpression *= startPoint!.getVolumeCompensationMult();\n\n                tone.noteFilterCount = 1;\n            }\n            else {\n                const noteFilterSettings: FilterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\n\n                for (let i: number = 0; i < noteFilterSettings.controlPointCount; i++) {\n                    const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0 + i];\n                    const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0 + i];\n                    const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0 + i];\n                    const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0 + i];\n                    let startPoint: FilterControlPoint = noteFilterSettings.controlPoints[i];\n                    const endPoint: FilterControlPoint = (instrument.tmpNoteFilterEnd != null && instrument.tmpNoteFilterEnd.controlPoints[i] != null) ? instrument.tmpNoteFilterEnd.controlPoints[i] : noteFilterSettings.controlPoints[i];\n\n                    // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\n                    if (startPoint.type != endPoint.type) {\n                        startPoint = endPoint;\n                    }\n\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                    endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n                    if (tone.noteFilters.length <= i) tone.noteFilters[i] = new DynamicBiquadFilter();\n                    tone.noteFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n                    noteFilterExpression *= startPoint.getVolumeCompensationMult();\n                }\n                tone.noteFilterCount = noteFilterSettings.controlPointCount;\n            }\n        }\n\n        if (instrument.type == InstrumentType.drumset) {\n            const drumsetFilterEnvelope: Envelope = instrument.getDrumsetEnvelope(tone.drumsetPitch!);\n            //const timeScale: number = Config.arpSpeedScale[instrument.envelopeSpeed];\n            //secondsPerTick *= timeScale;\n            // If the drumset lowpass cutoff decays, compensate by increasing expression.\n            noteFilterExpression *= EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(drumsetFilterEnvelope)\n\n            // Drumset filters use the same envelope timing as the rest of the envelopes, but do not include support for slide transitions.\n            let drumsetFilterEnvelopeStart: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.noteSizeStart);\n\n            // Apply slide interpolation to drumset envelope.\n            if (envelopeComputer.prevSlideStart) {\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.prevNoteSize);\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.prevSlideRatioStart;\n            }\n            if (envelopeComputer.nextSlideStart) {\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeStart, envelopeComputer.nextNoteSize);\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.nextSlideRatioStart;\n            }\n            \n            let drumsetFilterEnvelopeEnd: number = drumsetFilterEnvelopeStart;\n\n            if ( instrument.discreteEnvelope == false ) {\n                drumsetFilterEnvelopeEnd = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.noteSizeEnd);\n\n                if (envelopeComputer.prevSlideEnd) {\n                    const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.prevNoteSize);\n                    drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.prevSlideRatioEnd;\n                }\n                if (envelopeComputer.nextSlideEnd) {\n                    const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeEnd, envelopeComputer.nextNoteSize);\n                    drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.nextSlideRatioEnd;\n                }\n            }\n\n            const point: FilterControlPoint = this.tempDrumSetControlPoint;\n            point.type = FilterType.lowPass;\n            point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(0.5);\n            point.freq = FilterControlPoint.getRoundedSettingValueFromHz(8000.0);\n            // Drumset envelopes are warped to better imitate the legacy simplified 2nd order lowpass at ~48000Hz that I used to use.\n            point.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeStart * (1.0 + drumsetFilterEnvelopeStart), 1.0);\n            point.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeEnd * (1.0 + drumsetFilterEnvelopeEnd), 1.0);\n            if (tone.noteFilters.length == tone.noteFilterCount) tone.noteFilters[tone.noteFilterCount] = new DynamicBiquadFilter();\n            tone.noteFilters[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\n            tone.noteFilterCount++;\n        }\n\n        noteFilterExpression = Math.min(3.0, noteFilterExpression);\n\n        if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\n            // phase modulation!\n\n            let sineExpressionBoost: number = 1.0;\n            let totalCarrierExpression: number = 0.0;\n\n            let arpeggioInterval: number = 0;\n            const arpeggiates: boolean = chord.arpeggiates;\n            if (tone.pitchCount > 1 && arpeggiates) {\n                const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n            }\n\n\n            const carrierCount: number = (instrument.type == InstrumentType.fm6op ? instrument.customAlgorithm.carrierCount : Config.algorithms[instrument.algorithm].carrierCount);\n            for (let i: number = 0; i < (instrument.type == InstrumentType.fm6op? 6 : Config.operatorCount); i++) {\n\n                const associatedCarrierIndex: number = (instrument.type == InstrumentType.fm6op ? instrument.customAlgorithm.associatedCarrier[i]-1:Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1);\n                const pitch: number = tone.pitches[arpeggiates ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\n                const pitchStart: number = basePitch + (pitch + intervalStart) * intervalScale + interval;\n                const pitchEnd: number = basePitch + (pitch + intervalEnd) * intervalScale + interval;\n                const baseFreqStart: number = Instrument.frequencyFromPitch(pitchStart);\n                const baseFreqEnd: number = Instrument.frequencyFromPitch(pitchEnd);\n                const hzOffset: number = Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\n                const targetFreqStart: number = freqMult * baseFreqStart + hzOffset;\n                const targetFreqEnd: number = freqMult * baseFreqEnd + hzOffset;\n\n                \n                const freqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.operatorFrequency0 + i];\n                const freqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.operatorFrequency0 + i];\n                let freqStart: number;\n                let freqEnd: number;\n                if (freqEnvelopeStart != 1.0 || freqEnvelopeEnd != 1.0) {\n                    freqStart = Math.pow(2.0, Math.log2(targetFreqStart / baseFreqStart) * freqEnvelopeStart) * baseFreqStart;\n                    freqEnd = Math.pow(2.0, Math.log2(targetFreqEnd / baseFreqEnd) * freqEnvelopeEnd) * baseFreqEnd;\n                } else {\n                    freqStart = targetFreqStart;\n                    freqEnd = targetFreqEnd;\n                }\n                tone.phaseDeltas[i] = freqStart * sampleTime;\n                tone.phaseDeltaScales[i] = Math.pow(freqEnd / freqStart, 1.0 / roundedSamplesPerTick);\n\n                let amplitudeStart: number = instrument.operators[i].amplitude;\n                let amplitudeEnd: number = instrument.operators[i].amplitude;\n                if (i < 4){\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex)) {\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, false) / 15.0;\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, true) / 15.0;\n                    }\n                } else {\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex)) {\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex, false) / 15.0;\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex, true) / 15.0;\n                    }\n                }\n\n                const amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\n                const amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\n                const amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n                const amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n\n                let expressionStart: number = amplitudeMultStart;\n                let expressionEnd: number = amplitudeMultEnd;\n\n\n                if (i < carrierCount) {\n                    // carrier\n                    let pitchExpressionStart: number;\n                    if (tone.prevPitchExpressions[i] != null) {\n                        pitchExpressionStart = tone.prevPitchExpressions[i]!;\n                    } else {\n                        pitchExpressionStart = Math.pow(2.0, -(pitchStart - expressionReferencePitch) / pitchDamping);\n                    }\n                    const pitchExpressionEnd: number = Math.pow(2.0, -(pitchEnd - expressionReferencePitch) / pitchDamping);\n                    tone.prevPitchExpressions[i] = pitchExpressionEnd;\n                    expressionStart *= pitchExpressionStart;\n                    expressionEnd *= pitchExpressionEnd;\n\n                    totalCarrierExpression += amplitudeCurveEnd;\n                } else {\n                    // modulator\n                    expressionStart *= Config.sineWaveLength * 1.5;\n                    expressionEnd *= Config.sineWaveLength * 1.5;\n\n                    sineExpressionBoost *= 1.0 - Math.min(1.0, instrument.operators[i].amplitude / 15);\n                }\n\n                expressionStart *= envelopeStarts[EnvelopeComputeIndex.operatorAmplitude0 + i];\n                expressionEnd *= envelopeEnds[EnvelopeComputeIndex.operatorAmplitude0 + i];\n\n                // Check for mod-related volume delta\n                // @jummbus - This amplification is also applied to modulator FM operators which distorts the sound.\n                // The fix is to apply this only to carriers, but as this is a legacy bug and it can cause some interesting sounds, it's left in.\n                // You can use the mix volume modulator instead to avoid this effect.\n\n                if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\n                    // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\n                    const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\n                    const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true);\n                    expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                    expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n                }\n\n                tone.operatorExpressions[i] = expressionStart;\n                tone.operatorExpressionDeltas[i] = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\n            }\n\n            sineExpressionBoost *= (Math.pow(2.0, (2.0 - 1.4 * instrument.feedbackAmplitude / 15.0)) - 1.0) / 3.0;\n            sineExpressionBoost *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierExpression - 1) / 2.0);\n            sineExpressionBoost = 1.0 + sineExpressionBoost * 3.0;\n            const expressionStart: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionStart * chordExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume];\n            const expressionEnd: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionEnd * chordExpressionEnd * envelopeEnds[EnvelopeComputeIndex.noteVolume];\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\n\n            let useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\n            let useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\n            if (this.isModActive(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex)) {\n                useFeedbackAmplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, false) / 15.0;\n                useFeedbackAmplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, true) / 15.0;\n            }\n\n            let feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\n            const feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\n\n            let feedbackStart: number = feedbackAmplitudeStart * envelopeStarts[EnvelopeComputeIndex.feedbackAmplitude];\n            let feedbackEnd: number = feedbackAmplitudeEnd * envelopeEnds[EnvelopeComputeIndex.feedbackAmplitude];\n            tone.feedbackMult = feedbackStart;\n            tone.feedbackDelta = (feedbackEnd - feedbackStart) / roundedSamplesPerTick;\n\n\n        } else {\n            const freqEndRatio: number = Math.pow(2.0, (intervalEnd - intervalStart) * intervalScale / 12.0);\n\t\t\tconst basePhaseDeltaScale: number = Math.pow(freqEndRatio, 1.0 / roundedSamplesPerTick);\n\n\n            let pitch: number = tone.pitches[0];\n            if (tone.pitchCount > 1 && (chord.arpeggiates || chord.customInterval)) {\n                const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n                if (chord.customInterval) {\n                    const intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n                    specialIntervalMult = Math.pow(2.0, intervalOffset / 12.0);\n                    tone.specialIntervalExpressionMult = Math.pow(2.0, -intervalOffset / pitchDamping);\n                } else {\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\n                }\n            }\n\n            const startPitch: number = basePitch + (pitch + intervalStart) * intervalScale;\n            const endPitch: number = basePitch + (pitch + intervalEnd) * intervalScale;\n            let pitchExpressionStart: number;\n            // TODO: use the second element of prevPitchExpressions for the unison voice, compute a separate expression delta for it.\n            if (tone.prevPitchExpressions[0] != null) {\n                pitchExpressionStart = tone.prevPitchExpressions[0]!;\n            } else {\n                pitchExpressionStart = Math.pow(2.0, -(startPitch - expressionReferencePitch) / pitchDamping);\n            }\n            const pitchExpressionEnd: number = Math.pow(2.0, -(endPitch - expressionReferencePitch) / pitchDamping);\n            tone.prevPitchExpressions[0] = pitchExpressionEnd;\n            let settingsExpressionMult: number = baseExpression * noteFilterExpression;\n\n            if (instrument.type == InstrumentType.noise) {\n                settingsExpressionMult *= Config.chipNoises[instrument.chipNoise].expression;\n            }\n            if (instrument.type == InstrumentType.chip) {\n                settingsExpressionMult *= Config.chipWaves[instrument.chipWave].expression;\n            }\n            if (instrument.type == InstrumentType.pwm) {\n                const basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\n\n                // Check for PWM mods to this instrument\n                let pulseWidthModStart: number = basePulseWidth;\n                let pulseWidthModEnd: number = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n\n                const pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\n                const pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\n                tone.pulseWidth = pulseWidthStart;\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / roundedSamplesPerTick;\n\n                //decimal offset mods\n                let decimalOffsetModStart: number = instrument.decimalOffset;\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\n                }\n \n                const decimalOffsetStart: number = decimalOffsetModStart * envelopeStarts[EnvelopeComputeIndex.decimalOffset];\n                tone.decimalOffset = decimalOffsetStart;\n                \n                tone.pulseWidth -= (tone.decimalOffset) / 10000;\n            }\n            if (instrument.type == InstrumentType.pickedString) {\n                // Check for sustain mods\n                let useSustainStart: number = instrument.stringSustain;\n                let useSustainEnd: number = instrument.stringSustain;\n                if (this.isModActive(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSustainStart = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, false);\n                    useSustainEnd = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, true);\n                }\n\n                tone.stringSustainStart = useSustainStart;\n                tone.stringSustainEnd = useSustainEnd;\n\n                // Increase expression to compensate for string decay.\n                settingsExpressionMult *= Math.pow(2.0, 0.7 * (1.0 - useSustainStart / (Config.stringSustainRange - 1)));\n\n            }\n\n            const startFreq: number = Instrument.frequencyFromPitch(startPitch);\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n                // These instruments have two waves at different frequencies for the unison feature.\n                //const unison: Unison = Config.unisons[instrument.unison];\n                const unisonVoices: number = instrument.unisonVoices;\n                const unisonSpread: number = instrument.unisonSpread;\n                const unisonOffset: number = instrument.unisonOffset;\n                const unisonExpression: number = instrument.unisonExpression;\n                //const unisonSign: number = Config.unisons[instrument.unisonSign];\n                //const unison: Unison = [voices:, ];\n                const voiceCountExpression: number = (instrument.type == InstrumentType.pickedString) ? 1 : unisonVoices / 2.0;\n                settingsExpressionMult *= unisonExpression * voiceCountExpression;\n                const unisonEnvelopeStart = envelopeStarts[EnvelopeComputeIndex.unison];\n                const unisonEnvelopeEnd = envelopeEnds[EnvelopeComputeIndex.unison];\n                const unisonAStart: number = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeStart / 12.0);\n                const unisonAEnd: number = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeEnd / 12.0);\n                const unisonBStart: number = Math.pow(2.0, (unisonOffset - unisonSpread) * unisonEnvelopeStart / 12.0) * specialIntervalMult;\n                const unisonBEnd: number = Math.pow(2.0, (unisonOffset- unisonSpread) * unisonEnvelopeEnd / 12.0) * specialIntervalMult;\n                tone.phaseDeltas[0] = startFreq * sampleTime * unisonAStart;\n                tone.phaseDeltas[1] = startFreq * sampleTime * unisonBStart;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale * Math.pow(unisonAEnd / unisonAStart, 1.0 / roundedSamplesPerTick);\n                tone.phaseDeltaScales[1] = basePhaseDeltaScale * Math.pow(unisonBEnd / unisonBStart, 1.0 / roundedSamplesPerTick);\n            } else {\n                tone.phaseDeltas[0] = startFreq * sampleTime;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale;\n            }\n\n             // TODO: make expressionStart and expressionEnd variables earlier and modify those\n\t\t\t// instead of these supersawExpression variables.\n\t\t\tlet supersawExpressionStart: number = 1.0;\n\t\t\tlet supersawExpressionEnd: number = 1.0;\n\t\t\tif (instrument.type == InstrumentType.supersaw) {\n\t\t\t\tconst minFirstVoiceAmplitude: number = 1.0 / Math.sqrt(Config.supersawVoiceCount);\n\n                // Dynamism mods\n                let useDynamismStart: number = instrument.supersawDynamism / Config.supersawDynamismMax;\n                let useDynamismEnd: number = instrument.supersawDynamism / Config.supersawDynamismMax;\n                if (this.isModActive(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex)) {\n                    useDynamismStart = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawDynamismMax;\n                    useDynamismEnd = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawDynamismMax;\n                }\n\n\t\t\t\tconst curvedDynamismStart: number = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismStart * envelopeStarts[EnvelopeComputeIndex.supersawDynamism]), 0.2);\n\t\t\t\tconst curvedDynamismEnd:   number = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismEnd * envelopeEnds[  EnvelopeComputeIndex.supersawDynamism]), 0.2);\n\t\t\t\tconst firstVoiceAmplitudeStart: number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismStart);\n\t\t\t\tconst firstVoiceAmplitudeEnd:   number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismEnd);\n\n\t\t\t\tconst dynamismStart: number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeStart, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n\t\t\t\tconst dynamismEnd:   number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeEnd, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n\t\t\t\ttone.supersawDynamism = dynamismStart;\n\t\t\t\ttone.supersawDynamismDelta = (dynamismEnd - dynamismStart) / roundedSamplesPerTick;\n\n\t\t\t\tconst initializeSupersaw: boolean = (tone.supersawDelayIndex == -1);\n\t\t\t\tif (initializeSupersaw) {\n\t\t\t\t\t// Goal: generate sawtooth phases such that the combined initial amplitude\n\t\t\t\t\t// cancel out to minimize pop. Algorithm: generate sorted phases, iterate over\n\t\t\t\t\t// their sawtooth drop points to find a combined zero crossing, then offset the\n\t\t\t\t\t// phases so they start there.\n\n\t\t\t\t\t// Generate random phases in ascending order by adding positive randomly\n\t\t\t\t\t// sized gaps between adjacent phases. For a proper distribution of random\n\t\t\t\t\t// events, the gaps sizes should be an \"exponential distribution\", which is\n\t\t\t\t\t// just: -Math.log(Math.random()). At the end, normalize the phases to a 0-1\n\t\t\t\t\t// range by dividing by the final value of the accumulator.\n\t\t\t\t\tlet accumulator: number = 0.0;\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t\ttone.phases[i] = accumulator;\n\t\t\t\t\t\taccumulator += -Math.log(Math.random());\n\t\t\t\t\t}\n\n\t\t\t\t\tconst amplitudeSum: number = 1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart;\n\t\t\t\t\tconst slope: number = amplitudeSum;\n\n\t\t\t\t\t// Find the initial amplitude of the sum of sawtooths with the normalized\n\t\t\t\t\t// set of phases.\n\t\t\t\t\tlet sample: number = 0.0;\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\n\t\t\t\t\t\tconst normalizedPhase: number = tone.phases[i] / accumulator;\n\t\t\t\t\t\ttone.phases[i] = normalizedPhase;\n\t\t\t\t\t\tsample += (normalizedPhase - 0.5) * amplitude;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Find the phase of the zero crossing of the sum of the sawtooths. You can\n\t\t\t\t\t// use a constant slope and the distance between sawtooth drops to determine if\n\t\t\t\t\t// the zero crossing occurs between them. Note that a small phase means that\n\t\t\t\t\t// the corresponding drop for that wave is far away, and a big phase means the\n\t\t\t\t\t// drop is nearby, so to iterate forward through the drops we iterate backward\n\t\t\t\t\t// through the phases.\n\t\t\t\t\tlet zeroCrossingPhase: number = 1.0;\n\t\t\t\t\tlet prevDrop: number = 0.0;\n\t\t\t\t\tfor (let i: number = Config.supersawVoiceCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tconst nextDrop: number = 1.0 - tone.phases[i];\n\t\t\t\t\t\tconst phaseDelta: number = nextDrop - prevDrop;\n\t\t\t\t\t\tif (sample < 0.0) {\n\t\t\t\t\t\t\tconst distanceToZeroCrossing: number = -sample / slope;\n\t\t\t\t\t\t\tif (distanceToZeroCrossing < phaseDelta) {\n\t\t\t\t\t\t\t\tzeroCrossingPhase = prevDrop + distanceToZeroCrossing;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\n\t\t\t\t\t\tsample += phaseDelta * slope - amplitude;\n\t\t\t\t\t\tprevDrop = nextDrop;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t\ttone.phases[i] += zeroCrossingPhase;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Randomize the (initially sorted) order of the phases (aside from the\n\t\t\t\t\t// first one) so that they don't correlate to the detunes that are also\n\t\t\t\t\t// based on index.\n\t\t\t\t\tfor (let i: number = 1; i < Config.supersawVoiceCount - 1; i++) {\n\t\t\t\t\t\tconst swappedIndex: number = i + Math.floor(Math.random() * (Config.supersawVoiceCount - i));\n\t\t\t\t\t\tconst temp: number = tone.phases[i];\n\t\t\t\t\t\ttone.phases[i] = tone.phases[swappedIndex];\n\t\t\t\t\t\ttone.phases[swappedIndex] = temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst baseSpreadSlider: number = instrument.supersawSpread / Config.supersawSpreadMax;\n\t\t\t\t// Spread mods\n\t\t\t\tlet useSpreadStart: number = baseSpreadSlider;\n\t\t\t\tlet useSpreadEnd:   number = baseSpreadSlider;\n                if (this.isModActive(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSpreadStart = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawSpreadMax;\n                    useSpreadEnd = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawSpreadMax;\n                }\n\n\t\t\t\tconst spreadSliderStart: number = useSpreadStart * envelopeStarts[EnvelopeComputeIndex.supersawSpread];\n\t\t\t\tconst spreadSliderEnd:   number = useSpreadEnd * envelopeEnds[  EnvelopeComputeIndex.supersawSpread];\n\t\t\t\t// Just use the average detune for the current tick in the below loop.\n\t\t\t\tconst averageSpreadSlider: number = (spreadSliderStart + spreadSliderEnd) * 0.5;\n\t\t\t\tconst curvedSpread: number = Math.pow(1.0 - Math.sqrt(Math.max(0.0, 1.0 - averageSpreadSlider)), 1.75);\n\t\t\t\tfor (let i = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t// Spread out the detunes around the center;\n\t\t\t\t\tconst offset: number = (i == 0) ? 0.0 : Math.pow((((i + 1) >> 1) - 0.5 + 0.025 * ((i & 2) - 1)) / (Config.supersawVoiceCount >> 1), 1.1) * ((i & 1) * 2 - 1);\n\t\t\t\t\ttone.supersawUnisonDetunes[i] = Math.pow(2.0, curvedSpread * offset / 12.0);\n\t\t\t\t}\n\n\t\t\t\tconst baseShape: number = instrument.supersawShape / Config.supersawShapeMax;\n\t\t\t\t// Saw shape mods\n\t\t\t\tlet useShapeStart: number = baseShape * envelopeStarts[EnvelopeComputeIndex.supersawShape];\n\t\t\t\tlet useShapeEnd:   number = baseShape * envelopeEnds[  EnvelopeComputeIndex.supersawShape];\n                if (this.isModActive(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex)) {\n                    useShapeStart = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawShapeMax;\n                    useShapeEnd = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawShapeMax;\n                }\n\n\t\t\t\tconst shapeStart: number = useShapeStart * envelopeStarts[EnvelopeComputeIndex.supersawShape];\n\t\t\t\tconst shapeEnd:   number = useShapeEnd * envelopeEnds[EnvelopeComputeIndex.supersawShape];\n\t\t\t\ttone.supersawShape = shapeStart;\n\t\t\t\ttone.supersawShapeDelta = (shapeEnd - shapeStart) / roundedSamplesPerTick;\n\n                //decimal offset mods\n                let decimalOffsetModStart: number = instrument.decimalOffset;\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\n                }\n \n                const decimalOffsetStart: number = decimalOffsetModStart * envelopeStarts[EnvelopeComputeIndex.decimalOffset];\n                // ...is including tone.decimalOffset still necessary?\n                tone.decimalOffset = decimalOffsetStart;\n\n                const basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\n\n                // Check for PWM mods to this instrument\n                let pulseWidthModStart: number = basePulseWidth;\n                let pulseWidthModEnd: number = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n\n                let pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\n                let pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\n                pulseWidthStart -= decimalOffsetStart / 10000;\n                pulseWidthEnd -= decimalOffsetStart / 10000;\n\t\t\t\tconst phaseDeltaStart: number = (tone.supersawPrevPhaseDelta != null) ? tone.supersawPrevPhaseDelta : startFreq * sampleTime;\n\t\t\t\tconst phaseDeltaEnd: number = startFreq * sampleTime * freqEndRatio;\n\t\t\t\ttone.supersawPrevPhaseDelta = phaseDeltaEnd;\n\t\t\t\tconst delayLengthStart = pulseWidthStart / phaseDeltaStart;\n\t\t\t\tconst delayLengthEnd = pulseWidthEnd / phaseDeltaEnd;\n\t\t\t\ttone.supersawDelayLength = delayLengthStart;\n\t\t\t\ttone.supersawDelayLengthDelta = (delayLengthEnd - delayLengthStart) / roundedSamplesPerTick;\n\t\t\t\tconst minBufferLength: number = Math.ceil(Math.max(delayLengthStart, delayLengthEnd)) + 2;\n\n\t\t\t\tif (tone.supersawDelayLine == null || tone.supersawDelayLine.length <= minBufferLength) {\n\t\t\t\t\t// The delay line buffer will get reused for other tones so might as well\n\t\t\t\t\t// start off with a buffer size that is big enough for most notes.\n\t\t\t\t\tconst likelyMaximumLength: number = Math.ceil(0.5 * this.samplesPerSecond / Instrument.frequencyFromPitch(24));\n\t\t\t\t\tconst newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n\t\t\t\t\tif (!initializeSupersaw && tone.supersawDelayLine != null) {\n\t\t\t\t\t\t// If the tone has already started but the buffer needs to be reallocated,\n\t\t\t\t\t\t// transfer the old data to the new buffer.\n\t\t\t\t\t\tconst oldDelayBufferMask: number = (tone.supersawDelayLine.length - 1) >> 0;\n\t\t\t\t\t\tconst startCopyingFromIndex: number = tone.supersawDelayIndex;\n\t\t\t\t\t\tfor (let i: number = 0; i < tone.supersawDelayLine.length; i++) {\n\t\t\t\t\t\t\tnewDelayLine[i] = tone.supersawDelayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttone.supersawDelayLine = newDelayLine;\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\n\t\t\t\t} else if (initializeSupersaw) {\n\t\t\t\t\ttone.supersawDelayLine.fill(0.0);\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\n\t\t\t\t}\n\n\t\t\t\tconst pulseExpressionRatio: number = Config.pwmBaseExpression / Config.supersawBaseExpression;\n\t\t\t\tsupersawExpressionStart *= (1.0 + (pulseExpressionRatio - 1.0) * shapeStart) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart * dynamismStart);\n\t\t\t\tsupersawExpressionEnd *= (1.0 + (pulseExpressionRatio - 1.0) * shapeEnd) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismEnd * dynamismEnd);\n\t\t\t}\n\n\t\t\tlet expressionStart: number = settingsExpressionMult * fadeExpressionStart * chordExpressionStart * pitchExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume] * supersawExpressionStart;\n\t\t\tlet expressionEnd:   number = settingsExpressionMult * fadeExpressionEnd   * chordExpressionEnd   * pitchExpressionEnd   * envelopeEnds[  EnvelopeComputeIndex.noteVolume] * supersawExpressionEnd;\n\n            // Check for mod-related volume delta\n            if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\n                // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\n                const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\n                const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true)\n                expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n            }\n\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\n\n            if (instrument.type == InstrumentType.pickedString) {\n                let stringDecayStart: number;\n                if (tone.prevStringDecay != null) {\n                    stringDecayStart = tone.prevStringDecay;\n                } else {\n                    const sustainEnvelopeStart: number = tone.envelopeComputer.envelopeStarts[EnvelopeComputeIndex.stringSustain];\n                    stringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * tone.stringSustainStart / (Config.stringSustainRange - 1));\n                }\n                const sustainEnvelopeEnd: number = tone.envelopeComputer.envelopeEnds[EnvelopeComputeIndex.stringSustain];\n                let stringDecayEnd: number = 1.0 - Math.min(1.0, sustainEnvelopeEnd * tone.stringSustainEnd / (Config.stringSustainRange - 1));\n                tone.prevStringDecay = stringDecayEnd;\n\n                //const unison: Unison = Config.unisons[instrument.unison];\n                const unisonVoices: number = instrument.unisonVoices;\n                for (let i: number = tone.pickedStrings.length; i < unisonVoices; i++) {\n                    tone.pickedStrings[i] = new PickedString();\n                }\n\n                if (tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n                    for (const pickedString of tone.pickedStrings) {\n                        // Force the picked string to retrigger the attack impulse at the start of the note.\n                        pickedString.delayIndex = -1;\n                    }\n                }\n\n                for (let i: number = 0; i < unisonVoices; i++) {\n                    tone.pickedStrings[i].update(this, instrumentState, tone, i, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, instrument.stringSustainType);\n                }\n            }\n        }\n    }\n\n    public static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\n        let effect: number = 0.0;\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\n            effect += Math.sin(Math.PI * 2.0 * secondsIntoBar / vibratoPeriodSeconds);\n        }\n        return effect;\n    }\n\n\n    public static getInstrumentSynthFunction(instrument: Instrument): Function {\n        if (instrument.type == InstrumentType.fm) {\n            const fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\n                const synthSource: string[] = [];\n\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs: string[] = [];\n                        for (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j: number = Config.operatorCount - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n\n                                    const feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks: string[] = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                } else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    } else if (line.indexOf(\"#\") != -1) {\n                        for (let j: number = 0; j < Config.operatorCount; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    } else {\n                        synthSource.push(line);\n                    }\n                }\n\n                //console.log(synthSource.join(\"\\n\"));\n\n                const wrappedFmSynth: string = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\n\n\t\t\t\tSynth.fmSynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFmSynth)(Config, Synth);\n\n            }\n            return Synth.fmSynthFunctionCache[fingerprint];\n        } else if (instrument.type == InstrumentType.chip) {\n\t\t                 // advloop addition\n                if (instrument.isUsingAdvancedLoopControls) {\n                    return Synth.loopableChipSynth;\n                }\n                // advloop addition\n            return Synth.chipSynth;\n        } else if (instrument.type == InstrumentType.customChipWave) {\n            return Synth.chipSynth;\n        } else if (instrument.type == InstrumentType.harmonics) {\n            return Synth.harmonicsSynth;\n        } else if (instrument.type == InstrumentType.pwm) {\n            return Synth.pulseWidthSynth;\n        } else if (instrument.type == InstrumentType.supersaw) {\n\t\t\treturn Synth.supersawSynth;\n        } else if (instrument.type == InstrumentType.pickedString) {\n            return Synth.pickedStringSynth;\n        } else if (instrument.type == InstrumentType.noise) {\n            return Synth.noiseSynth;\n        } else if (instrument.type == InstrumentType.spectrum) {\n            return Synth.spectrumSynth;\n        } else if (instrument.type == InstrumentType.drumset) {\n            return Synth.drumsetSynth;\n        } else if (instrument.type == InstrumentType.mod) {\n            return Synth.modSynth;\n        } else if (instrument.type == InstrumentType.fm6op) {\n            const fingerprint: string = instrument.customAlgorithm.name + \"_\" + instrument.customFeedbackType.name;\n            if (Synth.fm6SynthFunctionCache[fingerprint] == undefined) {\n                const synthSource: string[] = [];\n\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs: string[] = [];\n                        for (let j: number = 0; j < instrument.customAlgorithm.carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j: number = Config.operatorCount+2 - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of instrument.customAlgorithm.modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n\n                                    const feedbackIndices: ReadonlyArray<number> = instrument.customFeedbackType.indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks: string[] = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                } else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    } else if (line.indexOf(\"#\") != -1) {\n                        for (let j = 0; j < Config.operatorCount+2; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    } else {\n                        synthSource.push(line);\n                    }\n                }\n\n                //console.log(synthSource.join(\"\\n\"));\n\n                const wrappedFm6Synth: string = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\n\n\t\t\t\tSynth.fm6SynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFm6Synth)(Config, Synth);\n            }\n            return Synth.fm6SynthFunctionCache[fingerprint];\n        }else{\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\n        }\n    }\n// advloop addition\n        static wrap(x: number, b: number): number {\n            return (x % b + b) % b;\n        }\n        static loopableChipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n            // @TODO:\n            // - Longer declicking? This is more difficult than I thought.\n            //   When determining this automatically is difficult (or the input\n            //   samples are expected to vary too much), this is left up to the\n            //   user.\n            const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n            // const aliases = false;\n            const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n            const wave: Float32Array = instrumentState.wave!;\n            const volumeScale: number = instrumentState.volumeScale;\n            const waveLength: number = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\n            let chipWaveLoopEnd: number = Math.max(0, Math.min(waveLength, instrumentState.chipWaveLoopEnd));\n            let chipWaveLoopStart: number = Math.max(0, Math.min(chipWaveLoopEnd - 1, instrumentState.chipWaveLoopStart));\n\t\t\t// @TODO: This is where to set things up for the release loop mode.\n           // const ticksSinceReleased = tone.ticksSinceReleased;\n            // if (ticksSinceReleased > 0) {\n            //     chipWaveLoopStart = 0;\n            //     chipWaveLoopEnd = waveLength - 1;\n            // }\n            let chipWaveLoopLength: number = chipWaveLoopEnd - chipWaveLoopStart;\n\t\t\tif (chipWaveLoopLength < 2) {\n                chipWaveLoopStart = 0;\n                chipWaveLoopEnd = waveLength;\n                chipWaveLoopLength = waveLength;\n            }\n            const chipWaveLoopMode: number = instrumentState.chipWaveLoopMode;\n            const chipWavePlayBackwards: boolean = instrumentState.chipWavePlayBackwards;\n            const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n            if (instrumentState.unisonVoices == 1 && !instrumentState.chord!.customInterval)\n                tone.phases[1] = tone.phases[0];\n            let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n            let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n            let directionA: number = tone.directions[0];\n            let directionB: number = tone.directions[1];\n            let chipWaveCompletionA: number = tone.chipWaveCompletions[0];\n            let chipWaveCompletionB: number = tone.chipWaveCompletions[1];\n            if (chipWaveLoopMode === 3 || chipWaveLoopMode === 2 || chipWaveLoopMode === 0) {\n                // If playing once or looping, we force the correct direction,\n                // since it shouldn't really change. This is mostly so that if\n                // the mode is changed midway through playback, it won't get\n                // stuck on the wrong direction.\n                if (!chipWavePlayBackwards) {\n                    directionA = 1;\n                    directionB = 1;\n                } else {\n                    directionA = -1;\n                    directionB = -1;\n                }\n            }\n            if (chipWaveLoopMode === 0 || chipWaveLoopMode === 1) {\n                // If looping or ping-ponging, we clear the completion status,\n                // as it's not relevant anymore. This is mostly so that if the\n                // mode is changed midway through playback, it won't get stuck\n                // on zero volume.\n                chipWaveCompletionA = 0;\n                chipWaveCompletionB = 0;\n            }\n            let lastWaveA: number = tone.chipWaveCompletionsLastWave[0];\n            let lastWaveB: number = tone.chipWaveCompletionsLastWave[1];\n            const chipWaveCompletionFadeLength: number = 1000;\n            const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n            const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n            let expression: number = +tone.expression;\n            const expressionDelta: number = +tone.expressionDelta;\n            let phaseA: number = Synth.wrap(tone.phases[0], 1) * waveLength;\n            let phaseB: number = Synth.wrap(tone.phases[1], 1) * waveLength;\n            let prevWaveIntegralA: number = 0;\n            let prevWaveIntegralB: number = 0;\n            if (!aliases) {\n                const phaseAInt = Math.floor(phaseA);\n                const phaseBInt = Math.floor(phaseB);\n                const indexA = Synth.wrap(phaseAInt, waveLength);\n               const indexB = Synth.wrap(phaseBInt, waveLength);\n                const phaseRatioA = phaseA - phaseAInt;\n                const phaseRatioB = phaseB - phaseBInt;\n                prevWaveIntegralA = +wave[indexA];\n                prevWaveIntegralB = +wave[indexB];\n                prevWaveIntegralA += (wave[Synth.wrap(indexA + 1, waveLength)] - prevWaveIntegralA) * phaseRatioA;\n                prevWaveIntegralB += (wave[Synth.wrap(indexB + 1, waveLength)] - prevWaveIntegralB) * phaseRatioB;\n           }\n            const filters = tone.noteFilters;\n            const filterCount: number = tone.noteFilterCount | 0;\n            let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n            let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n            const applyFilters: Function = Synth.applyFilters;\n            const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n            let prevWaveA: number = tone.chipWavePrevWaves[0];\n            let prevWaveB: number = tone.chipWavePrevWaves[1];\n            for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n                if (chipWaveCompletionA > 0 && chipWaveCompletionA < chipWaveCompletionFadeLength) {\n                    chipWaveCompletionA++;\n                }\n                if (chipWaveCompletionB > 0 && chipWaveCompletionB < chipWaveCompletionFadeLength) {\n                    chipWaveCompletionB++;\n                }\n               let wrapped: number = 0;\n                phaseA += phaseDeltaA * directionA;\n                phaseB += phaseDeltaB * directionB;\n                if (chipWaveLoopMode === 2) {\n                    // once\n                    if (directionA === 1) {\n                        if (phaseA > waveLength) {\n                            if (chipWaveCompletionA <= 0) {\n                                lastWaveA = prevWaveA;\n                                chipWaveCompletionA++;\n                            }\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseA < 0) {\n                            if (chipWaveCompletionA <= 0) {\n                                lastWaveA = prevWaveA;\n                                chipWaveCompletionA++;\n                            }\n                            wrapped = 1;\n                        }\n                    }\n                    if (directionB === 1) {\n                        if (phaseB > waveLength) {\n                            if (chipWaveCompletionB <= 0) {\n                                lastWaveB = prevWaveB;\n                                chipWaveCompletionB++;\n                            }\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseB < 0) {\n                            if (chipWaveCompletionB <= 0) {\n                                lastWaveB = prevWaveB;\n                                chipWaveCompletionB++;\n                            }\n                            wrapped = 1;\n                        }\n                    }\n                } else if (chipWaveLoopMode === 3) {\n                    // loop once\n                    if (directionA === 1) {\n                        if (phaseA > chipWaveLoopEnd) {\n                            if (chipWaveCompletionA <= 0) {\n                                lastWaveA = prevWaveA;\n                                chipWaveCompletionA++;\n                            }\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseA < chipWaveLoopStart) {\n                            if (chipWaveCompletionA <= 0) {\n                                lastWaveA = prevWaveA;\n                                chipWaveCompletionA++;\n                            }\n                            wrapped = 1;\n                        }\n                    }\n                    if (directionB === 1) {\n                        if (phaseB > chipWaveLoopEnd) {\n                            if (chipWaveCompletionB <= 0) {\n                                lastWaveB = prevWaveB;\n                                chipWaveCompletionB++;\n                            }\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseB < chipWaveLoopStart) {\n                            if (chipWaveCompletionB <= 0) {\n                                lastWaveB = prevWaveB;\n                                chipWaveCompletionB++;\n                            }\n                            wrapped = 1;\n                        }\n                    }\n                } else if (chipWaveLoopMode === 0) {\n                    // loop\n                    if (directionA === 1) {\n                        if (phaseA > chipWaveLoopEnd) {\n                            phaseA = chipWaveLoopStart + Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\n                            // phaseA = chipWaveLoopStart;\n                            wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseA < chipWaveLoopStart) {\n                            phaseA = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\n                            // phaseA = chipWaveLoopEnd;\n                            wrapped = 1;\n                        }\n                    }\n                    if (directionB === 1) {\n                        if (phaseB > chipWaveLoopEnd) {\n                            phaseB = chipWaveLoopStart + Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\n                            // phaseB = chipWaveLoopStart;\n                            wrapped = 1;\n                        }\n                    } else if (directionB === -1) {\n                        if (phaseB < chipWaveLoopStart) {\n                            phaseB = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\n                            // phaseB = chipWaveLoopEnd;\n                            wrapped = 1;\n                        }\n                    }\n                } else if (chipWaveLoopMode === 1) {\n                    // ping-pong\n                    if (directionA === 1) {\n                        if (phaseA > chipWaveLoopEnd) {\n                            phaseA = chipWaveLoopEnd - Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\n                            // phaseA = chipWaveLoopEnd;\n                            directionA = -1;\n                           wrapped = 1;\n                        }\n                    } else if (directionA === -1) {\n                        if (phaseA < chipWaveLoopStart) {\n                            phaseA = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\n                            // phaseA = chipWaveLoopStart;\n                            directionA = 1;\n                           wrapped = 1;\n                        }\n                    }\n                    if (directionB === 1) {\n                        if (phaseB > chipWaveLoopEnd) {\n                            phaseB = chipWaveLoopEnd - Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\n                            // phaseB = chipWaveLoopEnd;\n                            directionB = -1;\n                            wrapped = 1;\n                        }\n                    } else if (directionB === -1) {\n                        if (phaseB < chipWaveLoopStart) {\n                            phaseB = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\n                            // phaseB = chipWaveLoopStart;\n                            directionB = 1;\n                            wrapped = 1;\n                        }\n                    }\n               }\n                let waveA = 0;\n                let waveB = 0;\n                let inputSample = 0;\n                if (aliases) {\n                    waveA = wave[Synth.wrap(Math.floor(phaseA), waveLength)];\n                    waveB = wave[Synth.wrap(Math.floor(phaseB), waveLength)];\n                    prevWaveA = waveA;\n                    prevWaveB = waveB;\n                    const completionFadeA: number = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                    const completionFadeB: number = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                    inputSample = 0;\n                    if (chipWaveCompletionA > 0) {\n                        inputSample += lastWaveA * completionFadeA;\n                    } else {\n                        inputSample += waveA;\n                    }\n                    if (chipWaveCompletionB > 0) {\n                        inputSample += lastWaveB * completionFadeB;\n                    } else {\n                        inputSample += waveB;\n                    }\n                }\n                else {\n                    const phaseAInt = Math.floor(phaseA);\n                    const phaseBInt = Math.floor(phaseB);\n                    const indexA = Synth.wrap(phaseAInt, waveLength);\n                    const indexB = Synth.wrap(phaseBInt, waveLength);\n                    let nextWaveIntegralA = wave[indexA];\n                    let nextWaveIntegralB = wave[indexB];\n                    const phaseRatioA = phaseA - phaseAInt;\n                    const phaseRatioB = phaseB - phaseBInt;\n                    nextWaveIntegralA += (wave[Synth.wrap(indexA + 1, waveLength)] - nextWaveIntegralA) * phaseRatioA;\n                    nextWaveIntegralB += (wave[Synth.wrap(indexB + 1, waveLength)] - nextWaveIntegralB) * phaseRatioB;\n                    if (!(chipWaveLoopMode === 0 && chipWaveLoopStart === 0 && chipWaveLoopEnd === waveLength) && wrapped !== 0) {\n                        let pwia = 0;\n                        let pwib = 0;\n                        const phaseA_ = Math.max(0, phaseA - phaseDeltaA * directionA);\n                        const phaseB_ = Math.max(0, phaseB - phaseDeltaB * directionB);\n                        const phaseAInt = Math.floor(phaseA_);\n                        const phaseBInt = Math.floor(phaseB_);\n                        const indexA = Synth.wrap(phaseAInt, waveLength);\n                        const indexB = Synth.wrap(phaseBInt, waveLength);\n                        pwia = wave[indexA];\n                        pwib = wave[indexB];\n                        pwia += (wave[Synth.wrap(indexA + 1, waveLength)] - pwia) * (phaseA_ - phaseAInt) * directionA;\n                        pwib += (wave[Synth.wrap(indexB + 1, waveLength)] - pwib) * (phaseB_ - phaseBInt) * directionB;\n                        prevWaveIntegralA = pwia;\n                        prevWaveIntegralB = pwib;\n\t\t\t\t   }\n                   if (chipWaveLoopMode === 1 && wrapped !== 0) {\n                       waveA = prevWaveA;\n                       waveB = prevWaveB;\n                   } else {\n                       waveA = (nextWaveIntegralA - prevWaveIntegralA) / (phaseDeltaA * directionA);\n                       waveB = (nextWaveIntegralB - prevWaveIntegralB) / (phaseDeltaB * directionB);\n                   }\n                   prevWaveA = waveA;\n                   prevWaveB = waveB;\n\t\t\t\t   prevWaveIntegralA = nextWaveIntegralA;\n\t\t\t\t   prevWaveIntegralB = nextWaveIntegralB;\n                    const completionFadeA = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                    const completionFadeB = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                    if (chipWaveCompletionA > 0) {\n                        inputSample += lastWaveA * completionFadeA;\n                    } else {\n                        inputSample += waveA;\n                    }\n                    if (chipWaveCompletionB > 0) {\n                        inputSample += lastWaveB * completionFadeB;\n                    } else {\n                        inputSample += waveB * unisonSign;\n                    }\n                }\n                const sample = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n                initialFilterInput2 = initialFilterInput1;\n                initialFilterInput1 = inputSample * volumeScale;\n                phaseDeltaA *= phaseDeltaScaleA;\n                phaseDeltaB *= phaseDeltaScaleB;\n                const output = sample * expression;\n                expression += expressionDelta;\n                data[sampleIndex] += output;\n            }\n            tone.phases[0] = phaseA / waveLength;\n            tone.phases[1] = phaseB / waveLength;\n            tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n            tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n            tone.directions[0] = directionA;\n            tone.directions[1] = directionB;\n            tone.chipWaveCompletions[0] = chipWaveCompletionA;\n            tone.chipWaveCompletions[1] = chipWaveCompletionB;\n            tone.chipWavePrevWaves[0] = prevWaveA;\n            tone.chipWavePrevWaves[1] = prevWaveB;\n            tone.chipWaveCompletionsLastWave[0] = lastWaveA;\n            tone.chipWaveCompletionsLastWave[1] = lastWaveB;\n            tone.expression = expression;\n            synth.sanitizeFilters(filters);\n            tone.initialNoteFilterInput1 = initialFilterInput1;\n            tone.initialNoteFilterInput2 = initialFilterInput2;\n        }\n        // advloop addition\n    private static chipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        const volumeScale = instrumentState.volumeScale;\n\n        const waveLength = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\n\t\t\t//BUGFIX FROM JUMMBOX\n\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n        let prevWaveIntegralA: number = 0;\n        let prevWaveIntegralB: number = 0;\n\n        if (!aliases) {\n            const phaseAInt: number = phaseA | 0;\n            const phaseBInt: number = phaseB | 0;\n            const indexA: number = phaseAInt % waveLength;\n            const indexB: number = phaseBInt % waveLength;\n            const phaseRatioA: number = phaseA - phaseAInt;\n            const phaseRatioB: number = phaseB - phaseBInt;\n            prevWaveIntegralA = +wave[indexA];\n            prevWaveIntegralB = +wave[indexB];\n            prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\n            prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\n        }\n\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n\n            let waveA: number;\n            let waveB: number;\n            let inputSample: number;\n\n            if (aliases) {\n                waveA = wave[(0 | phaseA) % waveLength];\n                waveB = wave[(0 | phaseB) % waveLength];\n                inputSample = waveA + waveB;\n            } else {\n                const phaseAInt: number = phaseA | 0;\n                const phaseBInt: number = phaseB | 0;\n                const indexA: number = phaseAInt % waveLength;\n                const indexB: number = phaseBInt % waveLength;\n                let nextWaveIntegralA: number = wave[indexA];\n                let nextWaveIntegralB: number = wave[indexB];\n                const phaseRatioA: number = phaseA - phaseAInt;\n                const phaseRatioB: number = phaseB - phaseBInt;\n                nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\n                nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\n                waveA = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\n                waveB = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\n                prevWaveIntegralA = nextWaveIntegralA;\n                prevWaveIntegralB = nextWaveIntegralB;\n                inputSample = waveA + waveB * unisonSign;\n            }\n\n            const sample: number = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t//BUGFIX FROM JUMMBOX\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample * volumeScale;\n\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n\n            const output: number = sample * expression;\n\t\t//BUGFIX FROM JUMMBOX\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phaseA / waveLength;\n        tone.phases[1] = phaseB / waveLength;\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n        tone.expression = expression;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static harmonicsSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        const waveLength: number = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        const phaseAInt: number = phaseA | 0;\n        const phaseBInt: number = phaseB | 0;\n        const indexA: number = phaseAInt % waveLength;\n        const indexB: number = phaseBInt % waveLength;\n        const phaseRatioA: number = phaseA - phaseAInt;\n        const phaseRatioB: number = phaseB - phaseBInt;\n        let prevWaveIntegralA: number = +wave[indexA];\n        let prevWaveIntegralB: number = +wave[indexB];\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\n\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n\n            const phaseAInt: number = phaseA | 0;\n            const phaseBInt: number = phaseB | 0;\n            const indexA: number = phaseAInt % waveLength;\n            const indexB: number = phaseBInt % waveLength;\n            let nextWaveIntegralA: number = wave[indexA];\n            let nextWaveIntegralB: number = wave[indexB];\n            const phaseRatioA: number = phaseA - phaseAInt;\n            const phaseRatioB: number = phaseB - phaseBInt;\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\n            const waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\n            const waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\n            prevWaveIntegralA = nextWaveIntegralA;\n            prevWaveIntegralB = nextWaveIntegralB;\n\n            const inputSample: number = waveA + waveB * unisonSign;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phaseA / waveLength;\n        tone.phases[1] = phaseB / waveLength;\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n        tone.expression = expression;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static pickedStringSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        // This algorithm is similar to the Karpluss-Strong algorithm in principle, but with an\n        // all-pass filter for dispersion and with more control over the impulse harmonics.\n        // The source code is processed as a string before being compiled, in order to\n        // handle the unison feature. If unison is disabled or set to none, then only one\n        // string voice is required, otherwise two string voices are required. We only want\n        // to compute the minimum possible number of string voices, so omit the code for\n        // processing extra ones if possible. Any line containing a \"#\" is duplicated for\n        // each required voice, replacing the \"#\" with the voice index.\n\n        const voiceCount: number = instrumentState.unisonVoices;\n        let pickedStringFunction: Function = Synth.pickedStringFunctionCache[voiceCount];\n        if (pickedStringFunction == undefined) {\n            let pickedStringSource: string = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n\n\n            pickedStringSource += `\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst Synth = beepbox.Synth;\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expression;\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\t\t\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFilters;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (`\n\n            const sampleList: string[] = [];\n            for (let voice: number = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"fractionalDelaySample\" + voice + (voice == 1 ? \" * unisonSign\" : \"\"));\n            }\n\n            pickedStringSource += sampleList.join(\" + \");\n\n            pickedStringSource += `) * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\tdata[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\tpickedString#.allPassG = allPassG#;\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\n\t\t\t\t\n\t\t\t\ttone.expression = expression;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t\t}`\n\n            // Duplicate lines containing \"#\" for each voice and replace the \"#\" with the voice index.\n            pickedStringSource = pickedStringSource.replace(/^.*\\#.*$/mg, line => {\n                const lines = [];\n                for (let voice: number = 0; voice < voiceCount; voice++) {\n                    lines.push(line.replace(/\\#/g, String(voice)));\n                }\n                return lines.join(\"\\n\");\n            });\n\n            //console.log(pickedStringSource);\n            pickedStringFunction = new Function(\"Config\", \"Synth\", pickedStringSource)(Config, Synth);\n\t\t\tSynth.pickedStringFunctionCache[voiceCount] = pickedStringFunction;\n        }\n\n        pickedStringFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n\n    private static effectsSynth(synth: Synth, outputDataL: Float32Array, outputDataR: Float32Array, bufferIndex: number, runLength: number, instrumentState: InstrumentState): void {\n        // TODO: If automation is involved, don't assume sliders will stay at zero.\n        // @jummbus - ^ Correct, removed the non-zero checks as modulation can change them.\n\n        const usesDistortion: boolean = effectsIncludeDistortion(instrumentState.effects);\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(instrumentState.effects);\n        const usesEqFilter: boolean = instrumentState.eqFilterCount > 0;\n        const usesPanning: boolean = effectsIncludePanning(instrumentState.effects);\n        const usesChorus: boolean = effectsIncludeChorus(instrumentState.effects);\n        const usesEcho: boolean = effectsIncludeEcho(instrumentState.effects);\n        const usesReverb: boolean = effectsIncludeReverb(instrumentState.effects);\n        let signature: number = 0; if (usesDistortion) signature = signature | 1;\n        signature = signature << 1; if (usesBitcrusher) signature = signature | 1;\n        signature = signature << 1; if (usesEqFilter) signature = signature | 1;\n        signature = signature << 1; if (usesPanning) signature = signature | 1;\n        signature = signature << 1; if (usesChorus) signature = signature | 1;\n        signature = signature << 1; if (usesEcho) signature = signature | 1;\n        signature = signature << 1; if (usesReverb) signature = signature | 1;\n\n        let effectsFunction: Function = Synth.effectsFunctionCache[signature];\n        if (effectsFunction == undefined) {\n            let effectsSource: string = \"return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {\";\n\n            const usesDelays: boolean = usesChorus || usesReverb || usesEcho;\n\n            effectsSource += `\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;`\n\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;`\n            }\n\n            if (usesDistortion) {\n                // Distortion can sometimes create noticeable aliasing.\n                // It seems the established industry best practice for distortion antialiasing\n                // is to upsample the inputs (\"zero stuffing\" followed by a brick wall lowpass\n                // at the original nyquist frequency), perform the distortion, then downsample\n                // (the lowpass again followed by dropping in-between samples). This is\n                // \"mathematically correct\" in that it preserves only the intended frequencies,\n                // but it has several unfortunate tradeoffs depending on the choice of filter,\n                // introducing latency and/or time smearing, since no true brick wall filter\n                // exists. For the time being, I've opted to instead generate in-between input\n                // samples using fractional delay all-pass filters, and after distorting them,\n                // I \"downsample\" these with a simple weighted sum.\n\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\n\t\t\t\tlet distortion = instrumentState.distortion;\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\n\t\t\t\tconst distortionFractionalResolution = 4.0;\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\t\t\t\t\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;`\n            }\n\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;`\n            }\n\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet filters = instrumentState.eqFilters;\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;`\n            }\n\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\n            effectsSource += `\n\t\t\t\t\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;`\n\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;`\n            }\n\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\n\t\t\t\t\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\n\t\t\t\t\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\n\t\t\t\tchorusPhase += chorusAngle * runLength;\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;`\n            }\n\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\n\t\t\t\t\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\n\t\t\t\t\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\n\t\t\t\t\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;`\n            }\n\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\n\t\t\t\t\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\n\t\t\t\t\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;`\n            }\n\n            effectsSource += `\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;`\n\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\n\t\t\t\t\tsample = distortionNextOutput;\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\n\t\t\t\t\tsample *= distortionOversampleCompensation;\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\n\t\t\t\t\tdistortion += distortionDelta;\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;`\n            }\n\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\n\t\t\t\t\t}\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;`\n            }\n\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = sample;\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;`\n            }\n\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\n            effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tsample *= eqFilterVolume;\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;`\n\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;`\n            } else {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tlet sampleL = sample;\n\t\t\t\t\tlet sampleR = sample;`\n            }\n\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;`\n            }\n\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\t\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\n\t\t\t\t\tsampleL += echoShelfSampleL;\n\t\t\t\t\tsampleR += echoShelfSampleR;\n\t\t\t\t\t\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\n\t\t\t\t\techoMult += echoMultDelta;\n                    `\n            }\n\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\n\t\t\t\t\treverb += reverbDelta;`\n            }\n\n            effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\n\t\t\t\t\tmixVolume += mixVolumeDelta;`\n\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;`\n            }\n\n            effectsSource += `\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);`\n\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;`\n            }\n\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.distortion = distortion;\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\n\t\t\t\t\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;`\n            }\n\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;`\n\n            }\n\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\t// The filter input here is downstream from another filter so we\n\t\t\t\t// better make sure it's safe too.\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\n\t\t\t\t\tinitialFilterInput1 = 0.0;\n\t\t\t\t\tinitialFilterInput2 = 0.0;\n\t\t\t\t}\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;`\n            }\n\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;`\n            }\n\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;`\n            }\n\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\n\t\t\t\tinstrumentState.echoMult = echoMult;\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;`\n            }\n\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\n\t\t\t\tinstrumentState.reverbMult = reverb;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;`\n            }\n\n            effectsSource += \"}\";\n\n            //console.log(effectsSource);\n            effectsFunction = new Function(\"Config\", \"Synth\", effectsSource)(Config, Synth);\n            Synth.effectsFunctionCache[signature] = effectsFunction;\n        }\n\n        effectsFunction(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n    }\n\n    private static pulseWidthSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\n        let phaseDelta: number = tone.phaseDeltas[0];\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phase: number = (tone.phases[0] % 1);\n\n        let pulseWidth: number = tone.pulseWidth;\n        const pulseWidthDelta: number = tone.pulseWidthDelta;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\n            const sawPhaseA: number = phase % 1;\n            const sawPhaseB: number = (phase + pulseWidth) % 1;\n\n            let pulseWave: number = sawPhaseB - sawPhaseA;\n\n            // This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n            if (!instrument.aliases) {\n                if (sawPhaseA < phaseDelta) {\n                    var t = sawPhaseA / phaseDelta;\n                    pulseWave += (t + t - t * t - 1) * 0.5;\n                } else if (sawPhaseA > 1.0 - phaseDelta) {\n                    var t = (sawPhaseA - 1.0) / phaseDelta;\n                    pulseWave += (t + t + t * t + 1) * 0.5;\n                }\n                if (sawPhaseB < phaseDelta) {\n                    var t = sawPhaseB / phaseDelta;\n                    pulseWave -= (t + t - t * t - 1) * 0.5;\n                } else if (sawPhaseB > 1.0 - phaseDelta) {\n                    var t = (sawPhaseB - 1.0) / phaseDelta;\n                    pulseWave -= (t + t + t * t + 1) * 0.5;\n                }\n            }\n\n            const inputSample: number = pulseWave;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n            pulseWidth += pulseWidthDelta;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase;\n        tone.phaseDeltas[0] = phaseDelta;\n        tone.expression = expression;\n        tone.pulseWidth = pulseWidth;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static supersawSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\t\tconst voiceCount: number = Config.supersawVoiceCount|0;\n\n\t\tlet phaseDelta: number = tone.phaseDeltas[0];\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n\t\tlet expression: number = +tone.expression;\n\t\tconst expressionDelta: number = +tone.expressionDelta;\n\t\tlet phases: number[] = tone.phases;\n\n\t\tlet dynamism: number = +tone.supersawDynamism;\n\t\tconst dynamismDelta: number = +tone.supersawDynamismDelta;\n\t\tconst unisonDetunes: number[] = tone.supersawUnisonDetunes;\n\t\tlet shape: number = +tone.supersawShape;\n\t\tconst shapeDelta: number = +tone.supersawShapeDelta;\n\t\tlet delayLength: number = +tone.supersawDelayLength;\n\t\tconst delayLengthDelta: number = +tone.supersawDelayLengthDelta;\n\t\tconst delayLine: Float32Array = tone.supersawDelayLine!;\n\t\tconst delayBufferMask: number = (delayLine.length - 1) >> 0;\n\t\tlet delayIndex: number = tone.supersawDelayIndex|0;\n\t\tdelayIndex = (delayIndex & delayBufferMask) + delayLine.length;\n\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\n\t\tconst filterCount: number = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters: Function = Synth.applyFilters;\n\n\t\tconst stopIndex: number = bufferIndex + runLength;\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t// The phase initially starts at a zero crossing so apply\n\t\t\t// the delta before first sample to get a nonzero value.\n\t\t\tlet phase: number = (phases[0] + phaseDelta) % 1.0;\n\t\t\tlet supersawSample: number = phase - 0.5 * (1.0 + (voiceCount - 1.0) * dynamism);\n\n\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n            if (!instrumentState.aliases) {\n                if (phase < phaseDelta) {\n                    var t: number = phase / phaseDelta;\n                    supersawSample -= (t + t - t * t - 1) * 0.5;\n                } else if (phase > 1.0 - phaseDelta) {\n                    var t: number = (phase - 1.0) / phaseDelta;\n                    supersawSample -= (t + t + t * t + 1) * 0.5;\n                }\n            }\n\n\t\t\tphases[0] = phase;\n\n\t\t\tfor (let i: number = 1; i < voiceCount; i++) {\n\t\t\t\tconst detunedPhaseDelta: number = phaseDelta * unisonDetunes[i];\n\t\t\t\t// The phase initially starts at a zero crossing so apply\n\t\t\t\t// the delta before first sample to get a nonzero value.\n\t\t\t\tlet phase: number = (phases[i] + detunedPhaseDelta) % 1.0;\n\t\t\t\tsupersawSample += phase * dynamism;\n\n\t\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n                if (!instrumentState.aliases) {\n                    if (phase < detunedPhaseDelta) {\n                        const t: number = phase / detunedPhaseDelta;\n                        supersawSample -= (t + t - t * t - 1) * 0.5 * dynamism;\n                    } else if (phase > 1.0 - detunedPhaseDelta) {\n                        const t: number = (phase - 1.0) / detunedPhaseDelta;\n                        supersawSample -= (t + t + t * t + 1) * 0.5 * dynamism;\n                    }\n                }\n\n\t\t\t\tphases[i] = phase;\n\t\t\t}\n\n\t\t\tdelayLine[delayIndex & delayBufferMask] = supersawSample;\n\t\t\tconst delaySampleTime: number = delayIndex - delayLength;\n\t\t\tconst lowerIndex: number = delaySampleTime | 0;\n\t\t\tconst upperIndex: number = lowerIndex + 1;\n\t\t\tconst delayRatio: number = delaySampleTime - lowerIndex;\n\t\t\tconst prevDelaySample: number = delayLine[lowerIndex & delayBufferMask];\n\t\t\tconst nextDelaySample: number = delayLine[upperIndex & delayBufferMask];\n\t\t\tconst delaySample: number = prevDelaySample + (nextDelaySample - prevDelaySample) * delayRatio;\n\t\t\tdelayIndex++;\n\n\t\t\tconst inputSample: number = supersawSample - delaySample * shape;\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\n\t\t\tphaseDelta *= phaseDeltaScale;\n\t\t\tdynamism += dynamismDelta;\n\t\t\tshape += shapeDelta;\n\t\t\tdelayLength += delayLengthDelta;\n\n\t\t\tconst output: number = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t}\n\n\t\ttone.phaseDeltas[0] = phaseDelta;\n\t\ttone.expression = expression;\n\t\ttone.supersawDynamism = dynamism;\n\t\ttone.supersawShape = shape;\n\t\ttone.supersawDelayLength = delayLength;\n\t\ttone.supersawDelayIndex = delayIndex;\n\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t}\n\n    private static fmSourceTemplate: string[] = (`\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\tconst sineWave = Config.sineWave;\n\t\t\t\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n        const operator#Wave      = tone.operatorWaves[#].samples;\n\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\n        let expression = +tone.expression;\n\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\n\t\tconst filters = tone.noteFilters;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\tconst output = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / ` + Config.sineWaveLength + `;\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\n\t\t    tone.feedbackOutputs[#] = operator#Output;\n\t\t    tone.feedbackMult = feedbackMult;\n\t\t    tone.expression = expression;\n\t\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t`).split(\"\\n\");\n\n    private static operatorSourceTemplate: string[] = (`\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\n                const operator#Sample   = operator#Wave[operator#Index];\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t`).split(\"\\n\");\n\n    private static noiseSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        let phaseDelta: number = +tone.phaseDeltas[0];\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\n        if (tone.phases[0] == 0.0) {\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\n            phase = Math.random() * Config.chipNoiseLength;\n        }\n        const phaseMask: number = Config.chipNoiseLength - 1;\n        let noiseSample: number = +tone.noiseSample;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta * instrumentState.noisePitchFilterMult);\n\n        const stopIndex: number = bufferIndex + runLength;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const waveSample: number = wave[phase & phaseMask];\n\n            noiseSample += (waveSample - noiseSample) * pitchRelativefilter;\n\n            const inputSample: number = noiseSample;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase / Config.chipNoiseLength;\n        tone.phaseDeltas[0] = phaseDelta;\n        tone.expression = expression;\n        tone.noiseSample = noiseSample;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static spectrumSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        const samplesInPeriod: number = (1 << 7);\n        let phaseDelta: number = tone.phaseDeltas[0] * samplesInPeriod;\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let noiseSample: number = +tone.noiseSample;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\n        if (tone.phases[0] == 0.0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\n\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta);\n\n        const stopIndex: number = bufferIndex + runLength;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const phaseInt: number = phase | 0;\n            const index: number = phaseInt & phaseMask;\n            let waveSample: number = wave[index];\n            const phaseRatio: number = phase - phaseInt;\n            waveSample += (wave[index + 1] - waveSample) * phaseRatio;\n\n            noiseSample += (waveSample - noiseSample) * pitchRelativefilter;\n\n\n            const inputSample: number = noiseSample;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\n        tone.phaseDeltas[0] = phaseDelta / samplesInPeriod;\n        tone.expression = expression;\n        tone.noiseSample = noiseSample;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static drumsetSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        let wave: Float32Array = instrumentState.getDrumsetWave(tone.drumsetPitch!);\n        const referenceDelta: number = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch!);\n        let phaseDelta: number = tone.phaseDeltas[0] / referenceDelta;\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\n        if (tone.phases[0] == 0.0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\n\n        const stopIndex: number = bufferIndex + runLength;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const phaseInt: number = phase | 0;\n            const index: number = phaseInt & phaseMask;\n            let noiseSample: number = wave[index];\n            const phaseRatio: number = phase - phaseInt;\n            noiseSample += (wave[index + 1] - noiseSample) * phaseRatio;\n\n            const inputSample: number = noiseSample;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\n        tone.phaseDeltas[0] = phaseDelta * referenceDelta;\n        tone.expression = expression;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static modSynth(synth: Synth, stereoBufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\n        // Note: present modulator value is tone.expressionStarts[0].\n\n        if (!synth.song) return;\n\n        let mod: number = Config.modCount - 1 - tone.pitches[0];\n\n        // Flagged as invalid because unused by current settings, skip\n        if (instrument.invalidModulators[mod]) return;\n\n        let setting: number = instrument.modulators[mod];\n\n        // Generate list of used instruments\n        let usedInstruments: number[] = [];\n        if (Config.modulators[instrument.modulators[mod]].forSong) {\n            // Instrument doesn't matter for song, just push a random index to run the modsynth once\n            usedInstruments.push(0);\n        } else {\n            // All\n            if (instrument.modInstruments[mod] == synth.song.channels[instrument.modChannels[mod]].instruments.length) {\n                for (let i: number = 0; i < synth.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\n                    usedInstruments.push(i);\n                }\n            }\n            // Active\n            else if (instrument.modInstruments[mod] > synth.song.channels[instrument.modChannels[mod]].instruments.length) {\n                if (synth.song.getPattern(instrument.modChannels[mod], synth.bar) != null)\n                    usedInstruments = synth.song.getPattern(instrument.modChannels[mod], synth.bar)!.instruments;\n            } else {\n                usedInstruments.push(instrument.modInstruments[mod]);\n            }\n        }\n\n        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n\n            synth.setModValue(tone.expression, tone.expression + tone.expressionDelta, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n\n            // If mods are being held (for smoother playback while recording mods), use those values instead.\n            for (let i: number = 0; i < synth.heldMods.length; i++) {\n                if (Config.modulators[instrument.modulators[mod]].forSong) {\n                    if (synth.heldMods[i].setting == setting)\n                        synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n                }\n                else if (synth.heldMods[i].channelIndex == instrument.modChannels[mod] && synth.heldMods[i].instrumentIndex == usedInstruments[instrumentIndex] && synth.heldMods[i].setting == setting) {\n                    synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n                }\n            }\n\n            // Reset arps, but only at the start of the note\n            if (setting == Config.modulators.dictionary[\"reset arp\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\n                synth.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]].arpTime = 0;\n            }\n            // Denote next bar skip\n            else if (setting == Config.modulators.dictionary[\"next bar\"].index) {\n                synth.wantToSkip = true;\n            }\n            // Extra info for eq filter target needs to be set as well\n            else if (setting == Config.modulators.dictionary[\"eq filter\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n\n                if (!tgtInstrument.eqFilterType) {\n\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\n\n                        let pinIdx: number = 0;\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\n                        // 0 to 1 based on distance to next morph\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n\n                        // Compute the new settings to go to.\n                        if (tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\n                        } else {\n                            // No mutation will occur to the filter object so we can safely return it without copying\n                            tgtInstrument.tmpEqFilterEnd = tgtInstrument.eqFilter;\n                        }\n\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\n                    else {\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpEqFilterEnd == tgtInstrument.eqSubFilters[i] && tgtInstrument.tmpEqFilterEnd != null) {\n                                tgtInstrument.tmpEqFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpEqFilterEnd == null) {\n                            tgtInstrument.tmpEqFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqFilter.toJsonObject());\n                        }\n\n                        if (tgtInstrument.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) { // X\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            } else { // Y\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            }\n            // Extra info for note filter target needs to be set as well\n            else if (setting == Config.modulators.dictionary[\"note filter\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n\n                if (!tgtInstrument.noteFilterType) {\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\n\n                        let pinIdx: number = 0;\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\n                        // 0 to 1 based on distance to next morph\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n\n                        // Compute the new settings to go to.\n                        if (tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpNoteFilterEnd = FilterSettings.lerpFilters(tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\n                        } else {\n                            // No mutation will occur to the filter object so we can safely return it without copying\n                            tgtInstrument.tmpNoteFilterEnd = tgtInstrument.noteFilter;\n                        }\n\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\n                    else {\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\n\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpNoteFilterEnd == tgtInstrument.noteSubFilters[i] && tgtInstrument.tmpNoteFilterEnd != null) {\n                                tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpNoteFilterEnd == null) {\n                            tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteFilter.toJsonObject());\n                        }\n\n                        if (tgtInstrument.tmpNoteFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) { // X\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            } else { // Y\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private static findRandomZeroCrossing(wave: Float32Array, waveLength: number): number {\n        let phase: number = Math.random() * waveLength;\n        const phaseMask: number = waveLength - 1;\n\n        // Spectrum and drumset waves sounds best when they start at a zero crossing,\n        // otherwise they pop. Try to find a zero crossing.\n        let indexPrev: number = phase & phaseMask;\n        let wavePrev: number = wave[indexPrev];\n        const stride: number = 16;\n        for (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\n            const indexNext: number = (indexPrev + stride) & phaseMask;\n            const waveNext: number = wave[indexNext];\n            if (wavePrev * waveNext <= 0.0) {\n                // Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\n                for (let i: number = 0; i < stride; i++) {\n                    const innerIndexNext: number = (indexPrev + 1) & phaseMask;\n                    const innerWaveNext: number = wave[innerIndexNext];\n                    if (wavePrev * innerWaveNext <= 0.0) {\n                        // Found the zero crossing again! Now let's find the exact intersection.\n                        const slope: number = innerWaveNext - wavePrev;\n                        phase = indexPrev;\n                        if (Math.abs(slope) > 0.00000001) {\n                            phase += -wavePrev / slope;\n                        }\n                        phase = Math.max(0, phase) % waveLength;\n                        break;\n                    } else {\n                        indexPrev = innerIndexNext;\n                        wavePrev = innerWaveNext;\n                    }\n                }\n                break;\n            } else {\n                indexPrev = indexNext;\n                wavePrev = waveNext;\n            }\n        }\n\n        return phase;\n    }\n\n    public static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\n    }\n    public static volumeMultToInstrumentVolume(volumeMult: number): number {\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\n    }\n    public static noteSizeToVolumeMult(size: number): number {\n        return Math.pow(Math.max(0.0, size) / Config.noteSizeMax, 1.5);\n    }\n    public static volumeMultToNoteSize(volumeMult: number): number {\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * Config.noteSizeMax;\n    }\n\n    public static fadeInSettingToSeconds(setting: number): number {\n        return 0.0125 * (0.95 * setting + 0.05 * setting * setting);\n    }\n    public static secondsToFadeInSetting(seconds: number): number {\n        return clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\n    }\n    public static fadeOutSettingToTicks(setting: number): number {\n        return Config.fadeOutTicks[setting];\n    }\n    public static ticksToFadeOutSetting(ticks: number): number {\n        let lower: number = Config.fadeOutTicks[0];\n        if (ticks <= lower) return 0;\n        for (let i: number = 1; i < Config.fadeOutTicks.length; i++) {\n            let upper: number = Config.fadeOutTicks[i];\n            if (ticks <= upper) return (ticks < (lower + upper) / 2) ? i - 1 : i;\n            lower = upper;\n        }\n        return Config.fadeOutTicks.length - 1;\n    }\n\n    public static detuneToCents(detune: number): number {\n        // BeepBox formula, for reference:\n        // return detune * (Math.abs(detune) + 1) / 2;\n        return detune - Config.detuneCenter;\n    }\n    public static centsToDetune(cents: number): number {\n        // BeepBox formula, for reference:\n        // return Math.sign(cents) * (Math.sqrt(1 + 8 * Math.abs(cents)) - 1) / 2.0;\n        return cents + Config.detuneCenter;\n    }\n\n    public static getOperatorWave(waveform: number, pulseWidth: number) {\n        if (waveform != 2) {\n            return Config.operatorWaves[waveform];\n        }\n        else {\n            return Config.pwmOperatorWaves[pulseWidth];\n        }\n    }\n\n    private getSamplesPerTick(): number {\n        if (this.song == null) return 0;\n        let beatsPerMinute: number = this.song.getBeatsPerMinute();\n        if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n            beatsPerMinute = this.getModValue(Config.modulators.dictionary[\"tempo\"].index);\n        }\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\n    }\n\n    private getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\n        const beatsPerSecond: number = beatsPerMinute / 60.0;\n        const partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\n        const tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\n        return this.samplesPerSecond / tickPerSecond;\n    }\n\n    public static fittingPowerOfTwo(x: number): number {\n        return 1 << (32 - Math.clz32(Math.ceil(x) - 1));\n    }\n\n    private sanitizeFilters(filters: DynamicBiquadFilter[]): void {\n        let reset: boolean = false;\n        for (const filter of filters) {\n            const output1: number = Math.abs(filter.output1);\n            const output2: number = Math.abs(filter.output2);\n            // If either is a large value, Infinity, or NaN, then just reset all filter history.\n            if (!(output1 < 100) || !(output2 < 100)) {\n                reset = true;\n                break;\n            }\n            if (output1 < epsilon) filter.output1 = 0.0;\n            if (output2 < epsilon) filter.output2 = 0.0;\n        }\n        if (reset) {\n            for (const filter of filters) {\n                filter.output1 = 0.0;\n                filter.output2 = 0.0;\n            }\n        }\n    }\n\n    public static sanitizeDelayLine(delayLine: Float32Array, lastIndex: number, mask: number): void {\n        while (true) {\n            lastIndex--;\n            const index: number = lastIndex & mask;\n            const sample: number = Math.abs(delayLine[index]);\n            if (Number.isFinite(sample) && (sample == 0.0 || sample >= epsilon)) break;\n            delayLine[index] = 0.0;\n        }\n    }\n\n    public static applyFilters(sample: number, input1: number, input2: number, filterCount: number, filters: DynamicBiquadFilter[]): number {\n        for (let i: number = 0; i < filterCount; i++) {\n            const filter: DynamicBiquadFilter = filters[i];\n            const output1: number = filter.output1;\n            const output2: number = filter.output2;\n            const a1: number = filter.a1;\n            const a2: number = filter.a2;\n            const b0: number = filter.b0;\n            const b1: number = filter.b1;\n            const b2: number = filter.b2;\n            sample = b0 * sample + b1 * input1 + b2 * input2 - a1 * output1 - a2 * output2;\n            filter.a1 = a1 + filter.a1Delta;\n            filter.a2 = a2 + filter.a2Delta;\n            if (filter.useMultiplicativeInputCoefficients) {\n                filter.b0 = b0 * filter.b0Delta;\n                filter.b1 = b1 * filter.b1Delta;\n                filter.b2 = b2 * filter.b2Delta;\n            } else {\n                filter.b0 = b0 + filter.b0Delta;\n                filter.b1 = b1 + filter.b1Delta;\n                filter.b2 = b2 + filter.b2Delta;\n            }\n            filter.output2 = output1;\n            filter.output1 = sample;\n            // Updating the input values is waste if the next filter doesn't exist...\n            input2 = output2;\n            input1 = output1;\n        }\n        return sample;\n    }\n}\n\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\nexport { Dictionary, DictionaryArray, FilterType, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };","import {ColorConfig} from \"../editor/ColorConfig\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\ndocument.head.appendChild(HTML.style({type: \"text/css\"}, `\r\n\tbody {\r\n\t\tcolor: ${ColorConfig.primaryText};\r\n\t\tbackground: ${ColorConfig.editorBackground};\r\n\t}\r\n\th1 {\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 22px;\r\n\t\ttext-align: initial;\r\n\t\tmargin: 0;\r\n\t}\r\n\ta {\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 22px;\r\n\t\twhite-space: nowrap;\r\n\t\tcolor: ${ColorConfig.linkAccent};\r\n\t}\r\n\tbutton {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tposition: relative;\r\n\t\tborder: none;\r\n\t\tborder-radius: 5px;\r\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\t\tcolor: ${ColorConfig.primaryText};\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\tfont-family: inherit;\r\n\t}\r\n\tbutton:hover, button:focus {\r\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\t}\r\n\t.playButton, .pauseButton {\r\n\t\tpadding-left: 24px;\r\n\t\tpadding-right: 6px;\r\n\t}\r\n\t.playButton::before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\tleft: 6px;\r\n\t\ttop: 50%;\r\n\t\tmargin-top: -6px;\r\n\t\twidth: 12px;\r\n\t\theight: 12px;\r\n\t\tpointer-events: none;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><path d=\"M 6 0 L -5 6 L -5 -6 z\" fill=\"gray\"/></svg>');\r\n\t\t-webkit-mask-repeat: no-repeat;\r\n\t\t-webkit-mask-position: center;\r\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><path d=\"M 6 0 L -5 6 L -5 -6 z\" fill=\"gray\"/></svg>');\r\n\t\tmask-repeat: no-repeat;\r\n\t\tmask-position: center;\r\n\t}\r\n\t.pauseButton::before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\tleft: 6px;\r\n\t\ttop: 50%;\r\n\t\tmargin-top: -6px;\r\n\t\twidth: 12px;\r\n\t\theight: 12px;\r\n\t\tpointer-events: none;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><rect x=\"-5\" y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/><rect x=\"2\"  y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/></svg>');\r\n\t\t-webkit-mask-repeat: no-repeat;\r\n\t\t-webkit-mask-position: center;\r\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><rect x=\"-5\" y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/><rect x=\"2\"  y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/></svg>');\r\n\t\tmask-repeat: no-repeat;\r\n\t\tmask-position: center;\r\n\t}\r\n\t\r\n\tinput[type=range] {\r\n\t\t-webkit-appearance: none;\r\n\t\tappearance: none;\r\n\t\theight: 16px;\r\n\t\tmargin: 0;\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: ${ColorConfig.editorBackground};\r\n\t\ttouch-action: pan-y;\r\n\t}\r\n\tinput[type=range]:focus {\r\n\t\toutline: none;\r\n\t}\r\n\tinput[type=range]::-webkit-slider-runnable-track {\r\n\t\twidth: 100%;\r\n\t\theight: 4px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\tinput[type=range]::-webkit-slider-thumb {\r\n\t\theight: 16px;\r\n\t\twidth: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\tcursor: pointer;\r\n\t\t-webkit-appearance: none;\r\n\t\tmargin-top: -6px;\r\n\t}\r\n\tinput[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {\r\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\t}\r\n\tinput[type=range]::-moz-range-track {\r\n\t\twidth: 100%;\r\n\t\theight: 4px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\tinput[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {\r\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\t}\r\n\tinput[type=range]::-moz-range-thumb {\r\n\t\theight: 16px;\r\n\t\twidth: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tborder: none;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\tcursor: pointer;\r\n\t}\r\n\tinput[type=range]::-ms-track {\r\n\t\twidth: 100%;\r\n\t\theight: 4px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\t\tborder-color: transparent;\r\n\t}\r\n\tinput[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {\r\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\t}\r\n\tinput[type=range]::-ms-thumb {\r\n\t\theight: 16px;\r\n\t\twidth: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\tcursor: pointer;\r\n\t}\r\n`)); ","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\nimport { ColorConfig } from \"../editor/ColorConfig\";\nimport { NotePin, Note, Pattern, Instrument, Channel, Synth } from \"../synth/synth\";\nimport { oscilascopeCanvas } from \"../global/Oscilascope\";\nimport \"./style\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\n\n\tconst {a, button, div, h1, input, canvas} = HTML;\n\tconst {svg, circle, rect, path} = SVG;\n\n\tconst isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\n\n\tconst colorTheme: string | null = getLocalStorage(\"colorTheme\");\n\tColorConfig.setTheme(colorTheme === null ? \"AbyssBox Classic\" : colorTheme);\n\t\n\tlet prevHash: string | null = null;\n\tlet id: string = ((Math.random() * 0xffffffff) >>> 0).toString(16);\n\tlet pauseButtonDisplayed: boolean = false;\n\tlet animationRequest: number | null;\n\tlet zoomEnabled: boolean = false;\n\tlet timelineWidth: number = 1;\n\tlet outVolumeHistoricTimer: number = 0;\n\tlet outVolumeHistoricCap: number = 0;\n\t\n\tconst synth: Synth = new Synth();\n\tconst oscilascope: oscilascopeCanvas = new oscilascopeCanvas(canvas({ width: isMobile? 144:288, height: isMobile?32:64, style: `border:2px solid ${ColorConfig.uiWidgetBackground}; overflow: hidden;` , id: \"oscilascopeAll\" }), isMobile?1:2);\n\tconst showOscilloscope: boolean = getLocalStorage(\"showOscilloscope\") != \"false\";\n\tif (!showOscilloscope) {\n\t\toscilascope.canvas.style.display = \"none\";\n\t\tsynth.oscEnabled = false;\n\t}\n\tlet titleText: HTMLHeadingElement = h1({ style: \"flex-grow: 1; margin: 0 1px; margin-left: 10px; overflow: hidden;\" }, \"\");\n\t\tlet editLink: HTMLAnchorElement = a({target: \"_top\", style: \"margin: 0 4px;\"}, \"✎ Edit\");\n\t\tlet copyLink: HTMLAnchorElement = a({href: \"javascript:void(0)\", style: \"margin: 0 4px;\"}, \"⎘ Copy URL\");\n\t\tlet shareLink: HTMLAnchorElement = a({href: \"javascript:void(0)\", style: \"margin: 0 4px;\"}, \"⤳ Share\");\n\t\tlet fullscreenLink: HTMLAnchorElement = a({target: \"_top\", style: \"margin: 0 4px;\"}, \"⇱ Fullscreen\");\n\t\n\tlet draggingPlayhead: boolean = false;\n\t\tconst playButton: HTMLButtonElement = button({style: \"width: 100%; height: 100%; max-height: 50px;\"});\n\t\tconst playButtonContainer: HTMLDivElement = div({class: \"playButtonContainer\",style: \"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;\"},\n\t\tplayButton,\n\t);\n\t\tconst loopIcon: SVGPathElement = path({d: \"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z\"});\n\t\tconst loopButton: HTMLButtonElement = button({title: \"loop\", style: \"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;\"}, svg({width: 12, height: 12, viewBox: \"0 0 12 12\"},\n\t\tloopIcon,\n\t));\n\t\n\t\tconst volumeIcon: SVGSVGElement = svg({style: \"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;\", viewBox: \"0 0 12 12\"},\n\t\t\tpath({fill: ColorConfig.uiWidgetBackground, d: \"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z\"}),\n\t);\n\tconst volumeSlider: HTMLInputElement = input({ title: \"volume\", type: \"range\", value: 75, min: 0, max: 75, step: 1, style: \"width: 12vw; max-width: 100px; margin: 0 1px;\" });\n\t\n\t\tconst zoomIcon: SVGSVGElement = svg({width: 12, height: 12, viewBox: \"0 0 12 12\"},\n\t\t\tcircle({cx: \"5\", cy: \"5\", r: \"4.5\", \"stroke-width\": \"1\", stroke: \"currentColor\", fill: \"none\"}),\n\t\t\tpath({stroke: \"currentColor\", \"stroke-width\": \"2\", d: \"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5\", fill: \"none\"}),\n\t);\n\t\tconst zoomButton: HTMLButtonElement = button({title: \"zoom\", style: \"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;\"},\n\t\tzoomIcon,\n\t);\n\t\n\t\tconst timeline: SVGSVGElement = svg({style: \"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;\"});\n\t\tconst playhead: HTMLDivElement = div({class: \"playhead\",style: `position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${ColorConfig.playhead}; pointer-events: none;`});\n\t\tconst timelineContainer: HTMLDivElement = div({class: \"timeline\",style: \"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;\"}, timeline, playhead);\n\t\tconst visualizationContainer: HTMLDivElement = div({class: \"visualizer\",style: \"display: flex; flex-grow: 1; flex-shrink: 1; height: 0; position: relative; align-items: center; overflow: hidden;\"}, timelineContainer);\n\t\tlet noteFlashElementsPerBar: (SVGPathElement[])[];\n\t\tlet currentNoteFlashElements: SVGPathElement[] = [];\n\t\tlet currentNoteFlashBar: number = -1;\n\t\tconst notesFlashWhenPlayed: boolean = getLocalStorage(\"notesFlashWhenPlayed\") == \"true\";\n\t\n\tconst outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\n\tconst outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\n\tconst outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\n\tconst stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\n\tconst stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\n\tconst stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\n\tconst gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, stop1, stop2, stop3);\n\tconst defs: SVGDefsElement = SVG.defs({}, gradient);\n\tconst volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: hidden; margin: auto;`, width: \"160px\", height: \"10px\", preserveAspectRatio: \"none\" },\n\t\tdefs,\n\t\toutVolumeBarBg,\n\t\toutVolumeBar,\n\t\toutVolumeCap,\n\t);\n\tdocument.body.appendChild(visualizationContainer);\n\tdocument.body.appendChild(\n\t\t\tdiv({class: \"control-center\",style: `flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center;`},\n\t\t\tplayButtonContainer,\n\t\t\tloopButton,\n\t\t\tvolumeIcon,\n\t\t\tvolumeSlider,\n\t\t\tzoomButton,\n\t\t\tvolumeBarContainer,\n\t\t\toscilascope.canvas, //make it auto remove itself later\n\t\t\ttitleText,\n\t\t\teditLink,\n\t\t\tcopyLink,\n\t\t\tshareLink,\n\t\t\tfullscreenLink,\n\t\t),\n\t);\n\t\n\t// Some browsers have an option to \"block third-party cookies\" (it's enabled by\n\t// default in icognito Chrome windows) that throws an error on trying to access\n\t// localStorage from cross-domain iframe such as this song player, so wrap the\n\t// access in a try-catch block to ignore the error instead of interrupting\n\t// execution.\n\tfunction setLocalStorage(key: string, value: string): void {\n\t\ttry {\n\t\t\tlocalStorage.setItem(key, value);\n\t\t} catch (error) {\n\t\t\t// Ignore the error since we can't fix it.\n\t\t}\n\t}\n\tfunction getLocalStorage(key: string): string | null {\n\t\ttry {\n\t\t\treturn localStorage.getItem(key);\n\t\t} catch (error) {\n\t\t\t// Ignore the error since we can't fix it.\n\t\t\treturn null;\n\t\t}\n\t}\n\t\n\tfunction removeFromUnorderedArray<T>(array: T[], index: number): void {\n\t\tif (array.length < 1) {\n\t\t\t// Don't need to do anything when `array` is empty.\n\t\t\treturn;\n\t\t}\n\t\tif (index === array.length - 1) {\n\t\t\t// Trivial case.\n\t\t\tarray.pop();\n\t\t} else if (index >= 0 && index < array.length - 1) {\n\t\t\t// The idea here is that we want to remove an element from the array\n\t\t\t// quickly, and the fastest way to do that is to use `array.pop()`. As\n\t\t\t// the name of this function says, we assume `array` to be unordered,\n\t\t\t// so this trick is okay to do.\n\t\t\tconst lastElement: T = array.pop()!;\n\t\t\tarray[index] = lastElement;\n\t\t}\n\t}\n\n\tfunction loadSong(songString: string, reuseParams: boolean): void {\n\t\tsynth.setSong(songString);\n\t\tsynth.snapToStart();\n\t\tconst updatedSongString: string = synth.song!.toBase64String();\n\t\teditLink.href = \"../#\" + updatedSongString;\n\t\t//@jummbus - these lines convert old url vers loaded into the player to the new url ver. The problem is, if special chars are included,\n\t\t// they appear to get double-encoded (e.g. the '%' in %20 is encoded again), which breaks the link. Disabled for now until I have a chance\n\t\t// to look into it more.\n\t\t//const hashQueryParams = new URLSearchParams(reuseParams ? location.hash.slice(1) : \"\");\n\t\t//hashQueryParams.set(\"song\", updatedSongString);\n\t\t//location.hash = hashQueryParams.toString();\n\t}\n\t\n\tfunction hashUpdatedExternally(): void {\n\t\tlet myHash: string = location.hash;\n\t\tif (prevHash == myHash || myHash == \"\") return;\n\t\t\t\n\t\tprevHash = myHash;\n\t\t\t\n\t\tif (myHash.charAt(0) == \"#\") {\n\t\t\tmyHash = myHash.substring(1);\n\t\t}\n\t\t\t\n\t\t\n\t\tfullscreenLink.href = location.href;\n\t\t\t\n\t\t\t// @TODO: This can be moved back into splitting merely on & once samples\n\t\t\t// are reworked so that the URLs don't clash with the overall URL syntax\n\t\t\t// that's assumed to be respected here (and probably elsewhere...)\n\t\tfor (const parameter of myHash.split(/&(?=[a-z]+=)/g)) {\n\t\t\tlet equalsIndex: number = parameter.indexOf(\"=\");\n\t\t\tif (equalsIndex != -1) {\n\t\t\t\tlet paramName: string = parameter.substring(0, equalsIndex);\n\t\t\t\tlet value: string = parameter.substring(equalsIndex + 1);\n\t\t\t\tswitch (paramName) {\n\t\t\t\t\tcase \"song\":\n\t\t\t\t\t\tloadSong(value, true);\n\t\t\t\t\t\tif (synth.song) {\n\t\t\t\t\t\t\ttitleText.textContent = synth.song.title;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t//case \"title\":\n\t\t\t\t\t//\ttitleText.textContent = decodeURIComponent(value);\n\t\t\t\t\t//\tbreak;\n\t\t\t\t\tcase \"loop\":\n\t\t\t\t\t\tsynth.loopRepeatCount = (value != \"1\") ? 0 : -1;\n\t\t\t\t\t\trenderLoopIcon();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloadSong(myHash, false);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\trenderTimeline();\n\t}\n\t\n\tfunction onWindowResize(): void {\n\t\trenderTimeline();\n\t}\n\t\n\tlet pauseIfAnotherPlayerStartsHandle: ReturnType<typeof setInterval> | null = null;\n\tfunction pauseIfAnotherPlayerStarts(): void {\n\t\tif (!synth.playing) {\n\t\t\tclearInterval(pauseIfAnotherPlayerStartsHandle!);\n\t\t\treturn;\n\t\t}\n\t\n\t\tconst storedPlayerId: string | null = getLocalStorage(\"playerId\");\n\t\tif (storedPlayerId != null && storedPlayerId != id) {\n\t\t\tonTogglePlay();\n\t\t\trenderPlayhead();\n\t\t\tclearInterval(pauseIfAnotherPlayerStartsHandle!);\n\t\t}\n\t}\n\t\n\tfunction animate(): void {\n\t\tif (synth.playing) {\n\t\t\tanimationRequest = requestAnimationFrame(animate);\n\t\t\trenderPlayhead();\n\t\n\t\t\tvolumeUpdate();\n\t\t}\n\t\tif (pauseButtonDisplayed != synth.playing) {\n\t\t\trenderPlayButton();\n\t\t}\n\t\n\t}\n\t\n\tfunction volumeUpdate(): void {\n\t\tif (synth.song == null) {\n\t\t\toutVolumeCap.setAttribute(\"x\", \"5%\");\n\t\t\toutVolumeBar.setAttribute(\"width\", \"0%\");\n\t\t\treturn;\n\t}\n\t\toutVolumeHistoricTimer--;\n\t\tif (outVolumeHistoricTimer <= 0) {\n\t\t\toutVolumeHistoricCap -= 0.03;\n\t\t}\n\t\tif (synth.song.outVolumeCap > outVolumeHistoricCap) {\n\t\t\toutVolumeHistoricCap = synth.song.outVolumeCap;\n\t\t\toutVolumeHistoricTimer = 50;\n\t\t}\n\t\n\t\tanimateVolume(synth.song.outVolumeCap, outVolumeHistoricCap);\n\t\n\t\tif (!synth.playing) {\n\t\t\toutVolumeCap.setAttribute(\"x\", \"5%\");\n\t\t\toutVolumeBar.setAttribute(\"width\", \"0%\");\n\t\t}\n\t}\n\t\n\tfunction animateVolume(useOutVolumeCap: number, historicOutCap: number): void {\n\t\toutVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, useOutVolumeCap * 144));\n\t\toutVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\n\t}\n\t\n\tfunction onTogglePlay(): void {\n\t\tif (synth.song != null) {\n\t\t\tif (animationRequest != null) cancelAnimationFrame(animationRequest);\n\t\t\tanimationRequest = null;\n\t\t\tif (synth.playing) {\n\t\t\t\tsynth.pause();\n\t\t\t\tvolumeUpdate();\n\t\t\t} else {\n\t\t\t\tsynth.play();\n\t\t\t\tsetLocalStorage(\"playerId\", id);\n\t\t\t\tanimate();\n\t\t\t\tclearInterval(pauseIfAnotherPlayerStartsHandle!);\n\t\t\t\tpauseIfAnotherPlayerStartsHandle = setInterval(pauseIfAnotherPlayerStarts, 100);\n\t\t\t}\n\t\t}\n\t\trenderPlayButton();\n\t}\n\t\n\tfunction onToggleLoop(): void {\n\t\tif (synth.loopRepeatCount == -1) {\n\t\t\tsynth.loopRepeatCount = 0;\n\t\t} else {\n\t\t\tsynth.loopRepeatCount = -1;\n\t\t}\n\t\trenderLoopIcon();\n\t}\n\t\n\tfunction onVolumeChange(): void {\n\t\tsetLocalStorage(\"volume\", volumeSlider.value);\n\t\tsetSynthVolume();\n\t}\n\t\n\tfunction onToggleZoom(): void {\n\t\tzoomEnabled = !zoomEnabled;\n\t\trenderZoomIcon();\n\t\trenderTimeline();\n\t}\n\t\n\tfunction onTimelineMouseDown(event: MouseEvent): void {\n\t\tdraggingPlayhead = true;\n\t\tonTimelineMouseMove(event);\n\t}\n\t\n\tfunction onTimelineMouseMove(event: MouseEvent): void {\n\t\tif (!draggingPlayhead) return;\n\t\tevent.preventDefault();\n\t\tonTimelineCursorMove(event.clientX || event.pageX);\n\t}\n\t\n\tfunction onTimelineTouchDown(event: TouchEvent): void {\n\t\tdraggingPlayhead = true;\n\t\tonTimelineTouchMove(event);\n\t}\n\t\n\tfunction onTimelineTouchMove(event: TouchEvent): void {\n\t\tonTimelineCursorMove(event.touches[0].clientX);\n\t}\n\t\n\tfunction onTimelineCursorMove(mouseX: number): void {\n\t\tif (draggingPlayhead && synth.song != null) {\n\t\t\tconst boundingRect: ClientRect = visualizationContainer.getBoundingClientRect();\n\t\t\tsynth.playhead = synth.song.barCount * (mouseX - boundingRect.left) / (boundingRect.right - boundingRect.left);\n\t\t\tsynth.computeLatestModValues();\n\t\t\trenderPlayhead();\n\t\t}\n\t}\n\t\n\tfunction onTimelineCursorUp(): void {\n\t\tdraggingPlayhead = false;\n\t}\n\t\n\tfunction setSynthVolume(): void {\n\t\tconst volume: number = +volumeSlider.value;\n\t\tsynth.volume = Math.min(1.0, Math.pow(volume / 50.0, 0.5)) * Math.pow(2.0, (volume - 75.0) / 25.0);\n\t}\n\t\n\tfunction renderPlayhead(): void {\n\t\t\n\t\tif (synth.song != null) {\n\t\t\tlet pos: number = synth.playhead / synth.song.barCount;\n\t\t\tplayhead.style.left = (timelineWidth * pos) + \"px\";\n\t\t\t\t\n\t\t\tconst boundingRect: ClientRect = visualizationContainer.getBoundingClientRect();\n\t\t\tvisualizationContainer.scrollLeft = pos * (timelineWidth - boundingRect.width);\n\n\t\t\tif (notesFlashWhenPlayed) {\n\t\t\t\tconst playheadBar: number = Math.floor(synth.playhead);\n\t\t\t\tconst modPlayhead: number = synth.playhead - playheadBar;\n\t\t\t\tconst partsPerBar: number = synth.song.beatsPerBar * Config.partsPerBeat;\n\t\t\t\tconst noteFlashElementsForThisBar: SVGPathElement[] = noteFlashElementsPerBar[playheadBar];\n\t\n\t\t\t\tif (noteFlashElementsForThisBar != null && playheadBar !== currentNoteFlashBar) {\n\t\t\t\t\tfor (var i = currentNoteFlashElements.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tvar element: SVGPathElement = currentNoteFlashElements[i];\n\t\t\t\t\t\tconst outsideOfCurrentBar = Number(element.getAttribute(\"note-bar\")) !== playheadBar;\n\t\t\t\t\t\tconst isInvisible: boolean = element.style.opacity === \"0\";\n\t\t\t\t\t\tif (outsideOfCurrentBar && isInvisible) {\n\t\t\t\t\t\t\tremoveFromUnorderedArray(currentNoteFlashElements, i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (var i = 0; i < noteFlashElementsForThisBar.length; i++) {\n\t\t\t\t\t\tvar element: SVGPathElement = noteFlashElementsForThisBar[i];\n\t\t\t\t\t\tcurrentNoteFlashElements.push(element);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (currentNoteFlashElements != null) {\n\t\t\t\t\tfor (var i = 0; i < currentNoteFlashElements.length; i++) {\n\t\t\t\t\t\tvar element: SVGPathElement = currentNoteFlashElements[i];\n\t\t\t\t\t\tconst noteStart: number = Number(element.getAttribute(\"note-start\")) / partsPerBar;\n\t\t\t\t\t\tconst noteEnd: number = Number(element.getAttribute(\"note-end\")) / partsPerBar;\n\t\t\t\t\t\tconst noteBar: number = Number(element.getAttribute(\"note-bar\"));\n\t\t\t\t\t\tif ((modPlayhead >= noteStart) && (noteBar == playheadBar)) {\n\t\t\t\t\t\t\tconst dist: number = noteEnd - noteStart;\n\t\t\t\t\t\t\telement.style.opacity = String((1 - (((modPlayhead - noteStart) - (dist / 2)) / (dist / 2))));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telement.style.opacity = \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcurrentNoteFlashBar = playheadBar;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction renderTimeline(): void {\n\t\ttimeline.innerHTML = \"\";\n\t\tif (synth.song == null) return;\n\t\t\t\n\t\tconst boundingRect: ClientRect = visualizationContainer.getBoundingClientRect();\n\t\t\t\n\t\tlet timelineHeight: number;\n\t\tlet windowOctaves: number;\n\t\tlet windowPitchCount: number;\n\t\t\t\n\t\tif (zoomEnabled) {\n\t\t\ttimelineHeight = boundingRect.height;\n\t\t\twindowOctaves = Math.max(1, Math.min(Config.pitchOctaves, Math.round(timelineHeight / (12 * 2))));\n\t\t\twindowPitchCount = windowOctaves * 12 + 1;\n\t\t\tconst semitoneHeight: number = (timelineHeight - 1) / windowPitchCount;\n\t\t\tconst targetBeatWidth: number = Math.max(8, semitoneHeight * 4);\n\t\t\ttimelineWidth = Math.max(boundingRect.width, targetBeatWidth * synth.song.barCount * synth.song.beatsPerBar);\n\t\t} else {\n\t\t\ttimelineWidth = boundingRect.width;\n\t\t\tconst targetSemitoneHeight: number = Math.max(1, timelineWidth / (synth.song.barCount * synth.song.beatsPerBar) / 6.0);\n\t\t\ttimelineHeight = Math.min(boundingRect.height, targetSemitoneHeight * (Config.maxPitch + 1) + 1);\n\t\t\twindowOctaves = Math.max(3, Math.min(Config.pitchOctaves, Math.round(timelineHeight / (12 * targetSemitoneHeight))));\n\t\t\twindowPitchCount = windowOctaves * 12 + 1;\n\t\t}\n\t\t\t\n\t\ttimelineContainer.style.width = timelineWidth + \"px\";\n\t\ttimelineContainer.style.height = timelineHeight + \"px\";\n\t\ttimeline.style.width = timelineWidth + \"px\";\n\t\ttimeline.style.height = timelineHeight + \"px\";\n\t\t\t\n\t\tconst barWidth: number = timelineWidth / synth.song.barCount;\n\t\tconst partWidth: number = barWidth / (synth.song.beatsPerBar * Config.partsPerBeat);\n\t\n\t\t\tconst wavePitchHeight: number = (timelineHeight-1) / windowPitchCount;\n\t\t\tconst drumPitchHeight: number =  (timelineHeight-1) / Config.drumCount;\n\t\t\t\n\t\tfor (let bar: number = 0; bar < synth.song.barCount + 1; bar++) {\n\t\t\tconst color: string = (bar == synth.song.loopStart || bar == synth.song.loopStart + synth.song.loopLength) ? ColorConfig.loopAccent : ColorConfig.uiWidgetBackground;\n\t\t\t\ttimeline.appendChild(rect({x: bar * barWidth - 1, y: 0, width: 2, height: timelineHeight, fill: color}));\n\t\t}\n\t\t\t\n\t\tfor (let octave: number = 0; octave <= windowOctaves; octave++) {\n\t\t\t\ttimeline.appendChild(rect({x: 0, y: octave * 12 * wavePitchHeight, width: timelineWidth, height: wavePitchHeight + 1, fill: ColorConfig.tonic, opacity: 0.75}));\n\t\t}\n\t\t\n\t\t\t// note flash colors\n\t\tlet noteFlashColor: string = \"#ffffff\";\n\t\tlet noteFlashColorSecondary: string = \"#ffffff77\";\n\t\tif (notesFlashWhenPlayed) {\n\t\t\tnoteFlashColor = ColorConfig.getComputed(\"--note-flash\") !== \"\" ? \"var(--note-flash)\" : \"#ffffff\";\n\t\t\tnoteFlashColorSecondary = ColorConfig.getComputed(\"--note-flash-secondary\") !== \"\" ? \"var(--note-flash-secondary)\" : \"#ffffff77\";\n\t\t}\n\n\t\tif (notesFlashWhenPlayed) {\n\t\t\tnoteFlashElementsPerBar = [];\n\t\t\tfor (let bar: number = 0; bar < synth.song.barCount; bar++) {\n\t\t\t\tnoteFlashElementsPerBar.push([]);\n\t\t\t}\n\t\t\tcurrentNoteFlashBar = -1;\n\t\t}\n\n\t\tfor (let channel: number = synth.song.channels.length - 1 - synth.song.modChannelCount; channel >= 0; channel--) {\n\t\n\t\t\tconst isNoise: boolean = synth.song.getChannelIsNoise(channel);\n\t\t\tconst pitchHeight: number = isNoise ? drumPitchHeight : wavePitchHeight;\n\t\t\t\t\n\t\t\tconst configuredOctaveScroll: number = synth.song.channels[channel].octave;\n\t\t\tconst newOctaveScroll: number = Math.max(0, Math.min(Config.pitchOctaves - windowOctaves, Math.ceil(configuredOctaveScroll - windowOctaves * 0.5)));\n\t\t\t\t\n\t\t\tconst offsetY: number = newOctaveScroll * pitchHeight * 12 + timelineHeight - pitchHeight * 0.5 - 0.5;\n\t\t\t\t\n\t\t\tfor (let bar: number = 0; bar < synth.song.barCount; bar++) {\n\t\t\t\tconst pattern: Pattern | null = synth.song.getPattern(channel, bar);\n\t\t\t\tif (pattern == null) continue;\n\t\t\t\tconst offsetX: number = bar * barWidth;\n\t\t\t\t\t\n\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\n\t\t\t\t\tconst note: Note = pattern.notes[i];\n\t\t\t\t\t\t\n\t\t\t\t\tfor (const pitch of note.pitches) {\n\t\t\t\t\t\tconst d: string = drawNote(pitch, note.start, note.pins, (pitchHeight + 1) / 2, offsetX, offsetY, partWidth, pitchHeight);\n\t\t\t\t\t\t\tconst noteElement: SVGPathElement = path({d: d, fill: ColorConfig.getChannelColor(synth.song, channel).primaryChannel});\n\t\t\t\t\t\tif (isNoise) noteElement.style.opacity = String(0.6);\n\t\t\t\t\t\ttimeline.appendChild(noteElement);\n\n\t\t\t\t\t\t\tif (notesFlashWhenPlayed) {\n\t\t\t\t\t\t\tconst dflash: string = drawNote(pitch, note.start, note.pins, (pitchHeight + 1) / 2, offsetX, offsetY, partWidth, pitchHeight);\n\t\t\t\t\t\t\t//const noteFlashColorSecondary = ColorConfig.getComputed(\"--note-flash-secondary\") !== \"\" ? \"var(--note-flash-secondary)\" : \"#ffffff77\";\n\t\t\t\t\t\t\t//const noteFlashColor = ColorConfig.getComputed(\"--note-flash\") !== \"\" ? \"var(--note-flash)\" : \"#ffffff77\";\n\t\t\t\t\t\t\tconst noteFlashElement: SVGPathElement = path({d: dflash, fill: (isNoise ? noteFlashColorSecondary : noteFlashColor)});\n\t\t\t\t\t\t\tnoteFlashElement.style.opacity = \"0\";\n\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-start', String(note.start));\n\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-end', String(\n\t\t\t\t\t\t\t\tnote.end\n\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-bar', String(bar));\n\t\t\t\t\t\t\ttimeline.appendChild(noteFlashElement);\n\t\t\t\t\t\t\tconst noteFlashElementsForThisBar: SVGPathElement[] = noteFlashElementsPerBar[bar];\n\t\t\t\t\t\t\tnoteFlashElementsForThisBar.push(noteFlashElement);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\n\t\trenderPlayhead();\n\t}\n\t\n\tfunction drawNote(pitch: number, start: number, pins: NotePin[], radius: number, offsetX: number, offsetY: number, partWidth: number, pitchHeight: number): string {\n\t\tlet d: string = `M ${offsetX + partWidth * (start + pins[0].time)} ${offsetY - pitch * pitchHeight + radius * (pins[0].size / Config.noteSizeMax)} `; \n\t\tfor (let i: number = 0; i < pins.length; i++) {\n\t\t\tconst pin: NotePin = pins[i];\n\t\t\t\tconst x:   number = offsetX + partWidth * (start + pin.time);\n\t\t\tconst y: number = offsetY - pitchHeight * (pitch + pin.interval);\n\t\t\tconst expression: number = pin.size / Config.noteSizeMax;\n\t\t\td += `L ${x} ${y - radius * expression} `;\n\t\t}\n\t\tfor (let i: number = pins.length - 1; i >= 0; i--) {\n\t\t\tconst pin: NotePin = pins[i];\n\t\t\t\tconst x:   number = offsetX + partWidth * (start + pin.time);\n\t\t\tconst y: number = offsetY - pitchHeight * (pitch + pin.interval);\n\t\t\tconst expression: number = pin.size / Config.noteSizeMax;\n\t\t\td += `L ${x} ${y + radius * expression} `;\n\t\t}\n\t\treturn d;\n\t}\n\t\n\tfunction renderPlayButton(): void {\n\t\tif (synth.playing) {\n\t\t\tplayButton.classList.remove(\"playButton\");\n\t\t\tplayButton.classList.add(\"pauseButton\");\n\t\t\tplayButton.title = \"Pause (Space)\";\n\t\t\tplayButton.textContent = \"Pause\";\n\t\t} else {\n\t\t\tplayButton.classList.remove(\"pauseButton\");\n\t\t\tplayButton.classList.add(\"playButton\");\n\t\t\tplayButton.title = \"Play (Space)\";\n\t\t\tplayButton.textContent = \"Play\";\n\t\t}\n\t\tpauseButtonDisplayed = synth.playing;\n\t}\n\t\n\tfunction renderLoopIcon(): void {\n\t\tloopIcon.setAttribute(\"fill\", (synth.loopRepeatCount == -1) ? ColorConfig.linkAccent : ColorConfig.uiWidgetBackground);\n\t}\n\t\n\tfunction renderZoomIcon(): void {\n\t\tzoomIcon.style.color = zoomEnabled ? ColorConfig.linkAccent : ColorConfig.uiWidgetBackground;\n\t}\n\t\n\tfunction onKeyPressed(event: KeyboardEvent): void {\n\t\tswitch (event.keyCode) {\n\t\t\tcase 70: // first bar\n\t\t\t\tsynth.playhead = 0;\n\t\t\t\tsynth.computeLatestModValues();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 32: // space\n\t\t\t\tonTogglePlay();\n\t\t\t\tsynth.computeLatestModValues();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 219: // left brace\n\t\t\t\tsynth.goToPrevBar();\n\t\t\t\tsynth.computeLatestModValues();\n\t\t\t\trenderPlayhead();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 221: // right brace\n\t\t\t\tsynth.goToNextBar();\n\t\t\t\tsynth.computeLatestModValues();\n\t\t\t\trenderPlayhead();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfunction onCopyClicked(): void {\n\t\t// Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\n\t\tlet nav: any;\n\t\tnav = navigator;\n\t\n\t\tif (nav.clipboard && nav.clipboard.writeText) {\n\t\t\tnav.clipboard.writeText(location.href).catch(() => {\n\t\t\t\twindow.prompt(\"Copy to clipboard:\", location.href);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst textField: HTMLTextAreaElement = document.createElement(\"textarea\");\n\t\ttextField.textContent = location.href;\n\t\tdocument.body.appendChild(textField);\n\t\ttextField.select();\n\t\tconst succeeded: boolean = document.execCommand(\"copy\");\n\t\ttextField.remove();\n\t\tif (!succeeded) window.prompt(\"Copy this:\", location.href);\n\t}\n\t\n\tfunction onShareClicked(): void {\n\t\t(<any>navigator).share({ url: location.href });\n\t}\n\t\n\t\tif ( top !== self ) {\n\t\t// In an iframe.\n\t\tcopyLink.style.display = \"none\";\n\t\tshareLink.style.display = \"none\";\n\t} else {\n\t\t// Fullscreen.\n\t\tfullscreenLink.style.display = \"none\";\n\t\tif (!(\"share\" in navigator)) shareLink.style.display = \"none\";\n\t}\n\t\n\tif (getLocalStorage(\"volume\") != null) {\n\t\tvolumeSlider.value = getLocalStorage(\"volume\")!;\n\t}\n\tsetSynthVolume();\n\t\n\twindow.addEventListener(\"resize\", onWindowResize);\n\twindow.addEventListener(\"keydown\", onKeyPressed);\n\t\n\ttimeline.addEventListener(\"mousedown\", onTimelineMouseDown);\n\twindow.addEventListener(\"mousemove\", onTimelineMouseMove);\n\twindow.addEventListener(\"mouseup\", onTimelineCursorUp);\n\ttimeline.addEventListener(\"touchstart\", onTimelineTouchDown);\n\ttimeline.addEventListener(\"touchmove\", onTimelineTouchMove);\n\ttimeline.addEventListener(\"touchend\", onTimelineCursorUp);\n\ttimeline.addEventListener(\"touchcancel\", onTimelineCursorUp);\n\t\n\tplayButton.addEventListener(\"click\", onTogglePlay);\n\tloopButton.addEventListener(\"click\", onToggleLoop);\n\tvolumeSlider.addEventListener(\"input\", onVolumeChange);\n\tzoomButton.addEventListener(\"click\", onToggleZoom);\n\tcopyLink.addEventListener(\"click\", onCopyClicked);\n\tshareLink.addEventListener(\"click\", onShareClicked);\n\twindow.addEventListener(\"hashchange\", hashUpdatedExternally);\n\t\n\thashUpdatedExternally();\n\trenderLoopIcon();\n\trenderZoomIcon();\n\trenderPlayButton();\n\t\n\t// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\n\t\texport {Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Synth};","import { ColorConfig } from \"../editor/ColorConfig\";\nimport { events } from \"./Events\";\n\nexport class oscilascopeCanvas {\n    public _EventUpdateCanvas:Function;\n\n    constructor(public readonly canvas: HTMLCanvasElement, readonly scale: number = 1) {\n        this._EventUpdateCanvas = function(directlinkL: Float32Array, directlinkR ?: Float32Array): void {\n            if(directlinkR) {\n                var ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-L\") !== \"\" ? ColorConfig.getComputed(\"--oscilloscope-line-L\") : ColorConfig.getComputed(\"--primary-text\");\n                for (let i: number = directlinkL.length - 1; i >= directlinkL.length - 1 - (canvas.width/scale); i--) {\n                    let x = i - (directlinkL.length - 1) + (canvas.width/scale);\n                    let yl = (directlinkL[i] * (canvas.height/scale / 2) + (canvas.height/scale / 2));\n\n                    ctx.fillRect((x - 1)*scale, (yl - 1)*scale, 1*scale, 1.5*scale);\n                    if (x == 0) break;\n                }\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-R\") !== \"\" ? ColorConfig.getComputed(\"--oscilloscope-line-R\") : ColorConfig.getComputed(\"--text-selection\"); //less ctx style calls = less expensive??? also avoiding uncached colors\n                for (let i: number = directlinkR.length - 1; i >= directlinkR.length - 1 - (canvas.width/scale); i--) {\n                    let x = i - (directlinkR.length - 1) + (canvas.width/scale);\n                    let yr = (directlinkR[i] * (canvas.height/scale / 2) + (canvas.height/scale / 2));\n                    \n                    ctx.fillRect((x - 1)*scale, (yr - 1)*scale, 1*scale, 1.5*scale);\n                    if (x == 0) break;\n                }\n            }\n        };\n        events.listen(\"oscillascopeUpdate\", this._EventUpdateCanvas);\n    }\n\n    \n}\n"],"mappings":"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EAAuB,EAAGA,EAAeiO,EAAqB,SAAEvnD,OAAQs5C,IAAgB,CAC7F,MAAMuN,EAAqBU,EAAqB,SAAEjO,GAClD,GAA8B,UAA1BuN,EAAoB,MAIpBlnD,MAAM6b,QAAQqrC,EAA2B,aAAI,CAC7C,MAAMY,EAA2BZ,EAA2B,YAC5D,IAAK,IAAIn/C,EAAY,EAAGA,EAAI+/C,EAAkBznD,OAAQ0H,IAAK,CACvD,MAAMgoC,EAAwB+X,EAAkB//C,GAChD,GAAiC,SAA7BgoC,EAAuB,KAGvB,SAEJ,GAAgC,MAA5BA,EAAuB,KAGvB,SAEJ,MAAMgY,EAAmBhY,EAAuB,KAE1CiY,EAAkB,CACpB,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAGEC,EAAqB,CACvB,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAGEC,EAAyB,CAC3B,OACA,QACA,SACA,MACA,YACA,UACA,YACA,eACA,mBACA,QACA,cACA,UACA,QACA,kBACA,QACA,gBACA,iBACA,aACA,mBACA,kBACA,OACA,gBACA,eACA,gBACA,cACA,YACA,YACA,cACA,UACA,YACA,UACA,YACA,eAEAF,EAAMG,SAASJ,GACfF,GAA0B,EACnBI,EAASE,SAASJ,IACzBF,GAA0B,EAG1B9X,EAAuB,KAAIiY,EAAMC,EAAShW,WAAU79B,GAAKA,IAAM2zC,MACxDG,EAAaC,SAASJ,KACZ,YAAbA,GAAuC,UAAbA,IAO1BF,GAA0B,EAG1B9X,EAAuB,KAAIiY,EAAME,EAAajW,WAAU79B,GAAKA,IAAM2zC,MAG9E,CACJ,CACJ,CAEDF,GACA/oD,EAAO+B,4BAA6B,EAEpC82C,GAAK2H,IAELh+C,EAAmB,GACnBwuB,EAAawtB,cAAgB,CAAC,kBAII,MAA9BxtB,EAAawtB,eAAyBxtB,EAAawtB,cAAcj9C,OAAS,IAG1EvB,EAAO+B,4BAA6B,EACpC82C,GAAK+F,IAGhB,CAGD,GADAlgD,KAAKu8C,MAAQ,EACchwB,MAAvB69B,EAAkB,MAAgB,CAClC,MAAMQ,EAAoC,CACtC,YAAa,qBACzB,YAAa,qBACb,kBAAmB,qBACnB,kBAAmB,qBACPC,OAAU,WAERC,EAA2Dv+B,MAAtCq+B,EAAcR,EAAkB,OAAmBQ,EAAcR,EAAkB,OAAKA,EAAkB,MAC/H7N,EAAgBj7C,EAAO0O,OAAOykC,WAAU8H,GAASA,EAAMr4C,MAAQ4mD,IAErE,IADc,GAAVvO,IAAav8C,KAAKu8C,MAAQA,GAC1Bv8C,KAAKu8C,OAASj7C,EAAO0O,OAAmB,WAAU,OAAExL,OACnB+nB,MAA7B69B,EAAwB,YACxB,IAAK,IAAI7/C,KAAK6/C,EAAwB,YAAEj6C,OACpCnQ,KAAKq6C,YAAY9vC,GAAK6/C,EAAwB,YAAE7/C,EAI/D,CAED,GAAyBgiB,MAArB69B,EAAgB,IAChB,GAAkC,iBAAtBA,EAAiB,IACzBpqD,KAAKmT,KAAQi3C,EAAgB,IAAI,OAAU,GAAK9oD,EAAO6O,KAAKtN,YACzD,GAAkC,iBAAtBunD,EAAiB,IAAe,CAC/C,MAAMj3C,EAAci3C,EAAgB,IAGpC,GAAY,OAARj3C,EACAnT,KAAKmT,IAAM,EACXnT,KAAK2jC,OAAS,OACX,GAAY,sBAARxwB,EACPnT,KAAKmT,IAAM,EACXnT,KAAK2jC,QAAU,OACZ,GAAY,OAARxwB,EACPnT,KAAKmT,IAAM,EACXnT,KAAK2jC,QAAU,OACZ,GAAY,eAARxwB,EACPnT,KAAKmT,IAAM,EACXnT,KAAK2jC,QAAU,MACZ,CACH,MAAMonB,EAAiB53C,EAAIm1C,OAAO,GAAG0C,cAC/BC,EAAiB93C,EAAIm1C,OAAO,GAAGlG,cAGrC,IAAI59C,EAF4C,CAAE0mD,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGtsB,EAAK,EAAGusB,EAAK,IAE7DR,GAC1C,MAAMr1C,EAF8C,CAAE,IAAK,EAAG,IAAK,EAAG8nB,GAAM,EAAG,KAAM,GAEpCytB,GACpC1+B,MAAT/nB,IACc+nB,MAAV7W,IAAqBlR,GAASkR,GAC9BlR,EAAQ,IAAGA,GAAS,IACxBA,GAAgB,GAChBxE,KAAKmT,IAAM3O,EAElB,CACJ,CAG+B+nB,MAAhC69B,EAA2B,iBAC3BpqD,KAAKs7C,MAAQxZ,GAAMxgC,EAAOiP,SAAUjP,EAAOkP,SAAW,EAAkC,EAA/B45C,EAA2B,iBAGzD79B,MAA3B69B,EAAsB,YACtBpqD,KAAK2jC,OAAS7B,GAAMxgC,EAAOmP,UAAWnP,EAAOoP,UAAY,EAA6B,EAA1B05C,EAAsB,YAGtF,IAAIlX,EAA6B,EACL3mB,MAAxB69B,EAAmB,SACnBlX,EAAqBpR,GAAM,EAAG,GAA2B,EAAvBsoB,EAAmB,SAGxB79B,MAA7B69B,EAAwB,cACxBpqD,KAAKsoC,YAAcz9B,KAAKiM,IAAIxV,EAAO+P,eAAgBxG,KAAKuC,IAAI9L,EAAOgQ,eAA4C,EAA5B84C,EAAwB,eAG/G,IAAIniB,EAA+B,EACD1b,MAA9B69B,EAAyB,eACzBniB,EAAqD,EAA7BmiB,EAAyB,cAAU,EAC3DpqD,KAAKynC,OAASnmC,EAAOyQ,QAAQ0iC,WAAUhN,GAAUA,EAAOz1B,cAAgBi2B,KACpD,GAAhBjoC,KAAKynC,SACLznC,KAAKynC,OAAS,IAMUlb,MAA5B69B,EAAuB,WACvBpqD,KAAK66C,WAAahwC,KAAKiM,IAAI,EAAKjM,KAAKuC,IAAI,EAAKg9C,EAAuB,YAAK,IAE1EpqD,KAAK66C,WAAa,EAGctuB,MAAhC69B,EAA2B,eAC3BpqD,KAAK06C,eAAiB7vC,KAAKiM,IAAI,EAAKjM,KAAKuC,IAAI,EAAKg9C,EAA2B,gBAAK,IAGlFpqD,KAAK06C,eAAiB,EAGgBnuB,MAAtC69B,EAAiC,qBACjCpqD,KAAKy6C,qBAAuB5vC,KAAKiM,IAAI,EAAKjM,KAAKuC,IAAI,IAAKg9C,EAAiC,sBAAK,IAG9FpqD,KAAKy6C,qBAAuB,EAGDluB,MAA3B69B,EAAsB,UACtBpqD,KAAKw6C,UAAY3vC,KAAKiM,IAAI,IAAQjM,KAAKuC,IAAI,IAASg9C,EAAsB,WAAK,IAG/EpqD,KAAKw6C,UAAY,IAGWjuB,MAA5B69B,EAAuB,WACvBpqD,KAAKu6C,WAAa1vC,KAAKiM,IAAI,EAAKjM,KAAKuC,IAAI,GAAMg9C,EAAuB,YAAK,IAG3EpqD,KAAKu6C,WAAa,EAGUhuB,MAA5B69B,EAAuB,WACvBpqD,KAAK46C,WAAa/vC,KAAKiM,IAAI,EAAKjM,KAAKuC,IAAI,GAAMg9C,EAAuB,YAAK,IAG3EpqD,KAAK46C,WAAa,EAGgBruB,MAAlC69B,EAA6B,iBAC7BpqD,KAAK26C,iBAAmB9vC,KAAKiM,IAAI,EAAKjM,KAAKuC,IAAI,MAAOg9C,EAA6B,kBAAK,IAGxFpqD,KAAK26C,iBAAmB,EAG5B,IAAI6Q,EAAyB,EACzBC,EAAsB,EACtBC,EAAkB,EACtB,GAA8Bn/B,MAA1B69B,EAAqB,SACrB,IAAK,MAAMV,KAAiBU,EAAqB,SACzCV,EAA2B,cAAG8B,EAAiB3gD,KAAKiM,IAAI00C,EAAsD,EAAtC9B,EAA2B,YAAE7mD,SACrG6mD,EAAwB,WAAG+B,EAAc5gD,KAAKiM,IAAI20C,EAAgD,EAAnC/B,EAAwB,SAAE7mD,SACzF6mD,EAAwB,WAAGgC,EAAU7gD,KAAKiM,IAAI40C,EAA4C,EAAnChC,EAAwB,SAAE7mD,SAIrD0pB,MAApC69B,EAA+B,mBAC/BpqD,KAAKi8C,qBAAuBmO,EAA+B,mBAE3DpqD,KAAKi8C,oBAAqB,EAEU1vB,MAApC69B,EAA+B,mBAC/BpqD,KAAK+nC,qBAAuBqiB,EAA+B,mBAE3DpqD,KAAK+nC,mBAAsByjB,EAAiB,EAEhDxrD,KAAK28C,mBAAqB9xC,KAAKuC,IAAIq+C,EAAanqD,EAAOkQ,aACvDxR,KAAK08C,SAAW7xC,KAAKuC,IAAIs+C,EAASpqD,EAAOkQ,aAEV+a,MAA3B69B,EAAsB,YACtBpqD,KAAKw8C,UAAY1a,GAAM,EAAG9hC,KAAK08C,SAAoC,EAA1B0N,EAAsB,YAErC79B,MAA1B69B,EAAqB,WACrBpqD,KAAKy8C,WAAa3a,GAAM,EAAG9hC,KAAK08C,SAAW18C,KAAKw8C,UAAY,EAA4B,EAAzB4N,EAAqB,WAGxF,MAAMuB,EAA8B,GAC9BC,EAA8B,GAC9BC,EAA4B,GAClC,GAA8Bt/B,MAA1B69B,EAAqB,SACrB,IAAK,IAAIjO,EAAuB,EAAGA,EAAeiO,EAAqB,SAAEvnD,OAAQs5C,IAAgB,CAC7F,IAAIuN,EAAqBU,EAAqB,SAAEjO,GAEhD,MAAM/6B,EAAmB,IAAI24B,GAE7B,IAAI7R,GAA0B,EAC1BlB,GAAwB,EA6B5B,GA5B6Bza,MAAzBm9B,EAAoB,MACpBxhB,EAA2C,QAAzBwhB,EAAoB,KACtC1iB,EAAyC,OAAzB0iB,EAAoB,MAGpCxhB,EAAkBiU,GAAgB,EAElCjU,EACA0jB,EAAiBnhD,KAAK2W,GACf4lB,EACP6kB,EAAephD,KAAK2W,GAGpBuqC,EAAiBlhD,KAAK2W,GAGcmL,MAApCm9B,EAA+B,kBAC/BtoC,EAAQuiB,OAAS7B,GAAM,EAAGxgC,EAAO2Y,aAAuD,GAAL,EAAnCyvC,EAA+B,kBAC3ExhB,IAAgB9mB,EAAQuiB,OAAS,IAGZpX,MAAzBm9B,EAAoB,KACpBtoC,EAAQld,KAAOwlD,EAAoB,KAGnCtoC,EAAQld,KAAO,GAGf1B,MAAM6b,QAAQqrC,EAA2B,aAAI,CAC7C,MAAMY,EAA2BZ,EAA2B,YAC5D,IAAK,IAAIn/C,EAAY,EAAGA,EAAI+/C,EAAkBznD,UACtC0H,GAAKvK,KAAKg8C,+BADoCzxC,IAAK,CAEvD,MAAM+oB,EAAyB,IAAI+b,GAAWnH,EAAgBlB,GAC9D5lB,EAAQulB,YAAYp8B,GAAK+oB,EACzBA,EAAW0U,eAAesiB,EAAkB//C,GAAI29B,EAAgBlB,GAAc,GAAO,EAAOkM,EAC/F,CAEJ,CAED,IAAK,IAAI3oC,EAAY,EAAGA,EAAIvK,KAAK28C,mBAAoBpyC,IAAK,CACtD,MAAMsyC,EAAmB,IAAIpW,GAG7B,IAAIqB,EAFJ1mB,EAAQ44B,SAASzvC,GAAKsyC,EAGlB6M,EAAwB,WAAG5hB,EAAgB4hB,EAAwB,SAAEn/C,IACpDgiB,MAAjBub,GAEJ+U,EAAQ7U,eAAeF,EAAe9nC,KAAMohB,EAAS6mB,EAAsBC,EAAgBlB,EAC9F,CACD5lB,EAAQ44B,SAASn3C,OAAS7C,KAAK28C,mBAE/B,IAAK,IAAIpyC,EAAY,EAAGA,EAAIvK,KAAK08C,SAAUnyC,IACvC6W,EAAQ64B,KAAK1vC,GAAmCgiB,MAA7Bm9B,EAAwB,SAAkB7+C,KAAKuC,IAAIpN,KAAK28C,mBAAoB+M,EAAwB,SAAEn/C,KAAO,GAAK,EAEzI6W,EAAQ64B,KAAKp3C,OAAS7C,KAAK08C,QAC9B,CAGDiP,EAAiB9oD,OAASvB,EAAOmY,uBAAsBkyC,EAAiB9oD,OAASvB,EAAOmY,sBACxFmyC,EAAiB/oD,OAASvB,EAAOqY,uBAAsBiyC,EAAiB/oD,OAASvB,EAAOqY,sBACxFkyC,EAAehpD,OAASvB,EAAOuY,qBAAoBgyC,EAAehpD,OAASvB,EAAOuY,oBACtF7Z,KAAKonB,kBAAoBukC,EAAiB9oD,OAC1C7C,KAAK6oB,kBAAoB+iC,EAAiB/oD,OAC1C7C,KAAK+7C,gBAAkB8P,EAAehpD,OACtC7C,KAAKs6C,SAASz3C,OAAS,EACvBL,MAAMm9C,UAAUl1C,KAAK00C,MAAMn/C,KAAKs6C,SAAUqR,GAC1CnpD,MAAMm9C,UAAUl1C,KAAK00C,MAAMn/C,KAAKs6C,SAAUsR,GAC1CppD,MAAMm9C,UAAUl1C,KAAK00C,MAAMn/C,KAAKs6C,SAAUuR,GAEtCvqD,EAAO+B,6BACP4jD,OAAOC,SAAS7d,KAAOrpC,KAAK+8C,iBAE5BoK,YAAW,KAAQD,SAASE,QAAQ,GAAK,I,CAI1C,UAAA0E,CAAW3P,EAAsBW,GACpC,GAAIA,EAAM,GAAKA,GAAO98C,KAAK08C,SAAU,OAAO,KAC5C,MAAMoK,EAAuB9mD,KAAKs6C,SAAS6B,GAAclC,KAAK6C,GAC9D,OAAoB,GAAhBgK,EAA0B,KACvB9mD,KAAKs6C,SAAS6B,GAAcnC,SAAS8M,EAAe,E,CAGxD,iBAAAiF,GACH,OAAO/rD,KAAKs7C,K,CAGT,oBAAOwC,CAAckO,GACxB,OAAO,GAAKnhD,KAAKqB,MAAMrB,KAAK2S,KAAKwuC,EAAW,GAAK,E,CAG9C,sBAAApH,GACH5kD,KAAK26C,iBAAmB,EACxB36C,KAAK46C,WAAa,EAClB56C,KAAKw6C,UAAY,IACjBx6C,KAAKu6C,WAAa,EAClBv6C,KAAK06C,eAAiB,EACtB16C,KAAKy6C,qBAAuB,EAC5Bz6C,KAAK66C,WAAa,C,EAtxHEV,GAAO0P,EAAW,WAClB1P,GAAqByG,EAAW,EAChCzG,GAAqBwG,EAAW,EAChCxG,GAAqB2G,EAAW,EAChC3G,GAAqB0G,EAAW,EAChC1G,GAAqB6G,EAAW,EAChC7G,GAAqB4G,EAAW,EAChC5G,GAAsB8G,EAAW,EACjC9G,GAAsB+C,EAAW,EAGjC/C,GAAQ8C,EAAG,IA+wHvC,MAAMgP,GA2BF,WAAAlsD,GA1BOC,KAASksD,UAAwB,KAajClsD,KAAQmsD,SAAW,EACnBnsD,KAAaosD,cAAW,EACxBpsD,KAAeqsD,gBAAW,EAC7BrsD,KAAoBssD,qBAAW,EAC/BtsD,KAAeusD,gBAAW,EAC1BvsD,KAAoBwsD,qBAAW,EAC/BxsD,KAAeysD,gBAAW,EAC1BzsD,KAAoB0sD,qBAAW,EAC/B1sD,KAAe2sD,gBAAW,EAC1B3sD,KAAoB4sD,qBAAW,EAC/B5sD,KAAe6sD,gBAAW,EAC1B7sD,KAAoB8sD,qBAAW,EAG/B9sD,KAAK8mC,O,CAGF,KAAAA,GACH9mC,KAAK+sD,YAAc,EACnB/sD,KAAKgtD,cAAgB,EACrBhtD,KAAKitD,iBAAmB,EACxBjtD,KAAKktD,oBAAsB,EACjCltD,KAAKmtD,yBAA2B,EAChCntD,KAAKotD,wBAA0B,EAC/BptD,KAAKqtD,wBAA0B,EACzBrtD,KAAKstD,sBAAwB,EAC7BttD,KAAKutD,iBAAmB,EACxBvtD,KAAKwtD,iBAAmB,C,CAGrB,MAAAC,CAAOxW,EAAcyW,EAAkCC,EAAYC,EAAqBC,EAA+BC,EAA0BC,EAAwBC,GAC5K,MAAMC,EAAwB,EAAMpjD,KAAK8C,GAAKrM,EAAO2Z,iCAAmCg8B,EAAMiX,iBAExFX,EAA0BvtD,KAAKutD,gBAE/BY,EAA0BR,EAAKS,YAAYR,GAC3CS,EAA0BV,EAAKW,iBAAiBV,GAChDW,EAAwBJ,EAAkBtjD,KAAKoB,IAAIoiD,EAAiBR,GAEpEW,EAA0C,EAAV3jD,KAAK8C,GAAWwgD,EAChDM,EAAwC,EAAV5jD,KAAK8C,GAAW4gD,EAE9CG,EAAsD,EAAxBF,EAC9BG,EAAkD,EAAtBF,EAE5BG,EAA8B/jD,KAAKuC,IAAIvC,KAAK8C,GAAI6gD,EAAwBltD,EAAO6Z,+BAAiCtQ,KAAKoB,IAAIgiD,EAAgBO,EAAuBltD,EAAO4Z,kCACvK2zC,EAA4BhkD,KAAKuC,IAAIvC,KAAK8C,GAAI8gD,EAAsBntD,EAAO6Z,+BAAiCtQ,KAAKoB,IAAIgiD,EAAgBQ,EAAqBntD,EAAO4Z,kCACjK4zC,EAAuB,EAAMjkD,KAAK8C,GAAKrM,EAAO8Z,oBAAsB67B,EAAMiX,iBAChFa,GAA2BlkD,KAAKoB,IAAI,IAAO6hD,GAAoB,GAAO,GACtEkB,GAA2BnkD,KAAKoB,IAAI,IAAO8hD,GAAoB,GAAO,GACtEkB,EAA8B,GAAXjB,EAAsC,IAAO,EAChEkB,EAA8B,KAC9BC,EAAgC,EAAMlY,EAAMiX,iBAAmB,KAG/DkB,EAAyBvkD,KAAKoB,IAAI,GAAK8iD,EAAkBlkD,KAAKoB,IAAI6iD,GAAgBN,EAAwBU,GAAuB,EAAM,EAAMD,GAAaC,GAC1JG,EAAyBxkD,KAAKoB,IAAI,GAAK+iD,EAAkBnkD,KAAKoB,IAAI6iD,GAAgBL,EAAwBS,GAAuB,EAAM,EAAMD,GAAaC,GAEpJI,EAA+BzkD,KAAKoB,IAAImjD,EAAgB,MACxDG,EAA6B1kD,KAAKoB,IAAIojD,EAAc,MAE1D5lB,GAAM+lB,4BAA4BnxB,gCAAgCuwB,GAClE3X,EAAMwY,sBAAsB9vB,QAAQ8J,GAAM+lB,4BAA6Bd,GACvE,MAAMgB,EAAwBjmB,GAAM+lB,4BAA4BhyB,EAAE,GAC5DmyB,GAAkC1Y,EAAMwY,sBAAsBhvB,QAAUiuB,EAE9EjlB,GAAMmmB,0BAA0BvxB,gCAAgCwwB,GAChE5X,EAAMwY,sBAAsB9vB,QAAQ8J,GAAMmmB,0BAA2BjB,GACrE,MAAMkB,EAAsBpmB,GAAMmmB,0BAA0BpyB,EAAE,GACxDsyB,GAAgC7Y,EAAMwY,sBAAsBhvB,QAAUkuB,EAU5EoB,EAA8D,GAAX/B,EAAmC,EAAoC,EAChI,GAAkB,GAAd+B,EAAqD,CACxD,MAAMC,EAAyBnlD,KAAKoB,IAAImjD,EAAgB9tD,EAAOia,iBACzD00C,EAAyBplD,KAAKoB,IAAIojD,EAAgB/tD,EAAOia,iBAC/DkuB,GAAM+lB,4BAA4B1wB,kBAAkBgwB,EAAckB,EAAgB,IAClFvmB,GAAMmmB,0BAA0B9wB,kBAAkBgwB,EAAcmB,EAAc,GAC9E,KAAM,CACN,MAAMC,EAAyBrlD,KAAKoB,IAAuD,GAAnD8jD,EAAsD,EAAM,EAAK,KACnGI,EAA4CtlD,KAAKoB,IAAIkjD,EAAwBA,EAAwBX,EAAwB,IAAM,KAAQvX,EAAMiX,iBAAkB,GAAMe,GAAYE,EAAwBtkD,KAAKoB,IAAI8iD,EAAiB,IACvOqB,EAA4CvlD,KAAKoB,IAAIkjD,EAAwBA,EAAwBV,EAAwB,IAAM,KAAQxX,EAAMiX,iBAAkB,GAAMe,GAAYE,EAAwBtkD,KAAKoB,IAAI+iD,EAAiB,IACvOqB,EAA4CF,EAAoCtlD,KAAKoB,IAAI,EAAK,GAAM,MAAQ,EAAMpB,KAAKoB,IAAI,EAAMikD,EAAgB,OACjJI,EAA4CF,EAAoCvlD,KAAKoB,IAAI,EAAK,GAAM,MAAQ,EAAMpB,KAAKoB,IAAI,EAAMikD,EAAgB,OACjJK,EAAmC1lD,KAAKoB,IAAI,GAAMpB,KAAKoB,IAAI,GAAMpB,KAAKoB,IAAIikD,EAAgB,MAC1FM,EAAmC3lD,KAAKoB,IAAI,GAAMpB,KAAKoB,IAAI,GAAMpB,KAAKoB,IAAIikD,EAAgB,MAChGzmB,GAAM+lB,4BAA4BhxB,2BAA2BmD,GAAsB0uB,GAAoCE,GACvH9mB,GAAMmmB,0BAA4BpxB,2BAA2BmD,GAAsB2uB,GAAoCE,EACvH,CAEDvZ,EAAMwY,sBAAsB9vB,QAAQ8J,GAAM+lB,4BAA6Bd,GACvE,MAAM+B,EAA+BhnB,GAAM+lB,4BAA4BjyB,EAAE,GACnEmzB,EAA+BjnB,GAAM+lB,4BAA4BjyB,EAAE,GACnEozB,EAA+BlnB,GAAM+lB,4BAA4BhyB,EAAE,GAAK8xB,EACxEsB,EAA+BnnB,GAAM+lB,4BAA4BhyB,EAAE,GAAK8xB,EACxEuB,EAA+BpnB,GAAM+lB,4BAA4BhyB,EAAE,GAAK8xB,EACxEwB,GAAwC7Z,EAAMwY,sBAAsBhvB,QAAUiuB,EAEpFzX,EAAMwY,sBAAsB9vB,QAAQ8J,GAAMmmB,0BAA2BjB,GACrE,MAAMoC,EAA6BtnB,GAAMmmB,0BAA0BryB,EAAE,GAC/DyzB,EAA6BvnB,GAAMmmB,0BAA0BryB,EAAE,GAC/D0zB,EAA6BxnB,GAAMmmB,0BAA0BpyB,EAAE,GAAK+xB,EACpE2B,EAA6BznB,GAAMmmB,0BAA0BpyB,EAAE,GAAK+xB,EACpE4B,EAA6B1nB,GAAMmmB,0BAA0BpyB,EAAE,GAAK+xB,EACpE6B,GAAsCna,EAAMwY,sBAAsBhvB,QAAUkuB,EAE5E0C,EAA4B,EAAMlD,EAClCmD,EAA0B,EAAM/C,EAChCgD,EAA0B1mD,KAAK2S,KAAoD,EAA/C3S,KAAKiM,IAAIu6C,EAAmBC,IAChEE,EAAsBH,EAAoB1B,EAAyBmB,EACnEW,EAAyBH,EAAkBxB,EAAuBsB,EAExEpxD,KAAKutD,gBAAkBiE,EACvBxxD,KAAK0xD,kBAAoBD,EAAiBD,GAAe3D,EACzD7tD,KAAKmsD,SAAWuD,EAChB1vD,KAAKqsD,gBAAkBoE,EACvBzwD,KAAKusD,gBAAkBmE,EACvB1wD,KAAKysD,gBAAkBkE,EACvB3wD,KAAK2sD,gBAAkBiE,EACvB5wD,KAAK6sD,gBAAkBgE,EACvB7wD,KAAKosD,eAAiByD,EAAcH,GAAiB7B,EACrD7tD,KAAKssD,sBAAwByE,EAAqBN,GAAwB5C,EAC1E7tD,KAAKwsD,sBAAwBwE,EAAqBN,GAAwB7C,EAC1E7tD,KAAK0sD,sBAAwBuE,EAAqBN,GAAwB9C,EAC1E7tD,KAAK4sD,sBAAwBsE,EAAqBN,GAAwB/C,EAC1E7tD,KAAK8sD,sBAAwBqE,EAAqBN,GAAwBhD,EAEpE,MAAM8D,EAAwB9mD,KAAKC,IAAID,KAAK2C,KAAKgkD,EAAcjE,IAAoB,IAE7EqE,GAAoD,GAApB5xD,KAAK+sD,YAAoB4E,EAC/D,GAAsB,MAAlB3xD,KAAKksD,WAAqBlsD,KAAKksD,UAAUrpD,QAAU0uD,EAAiB,CAGpE,MAAMM,EAA8BhnD,KAAK2S,KAAK,EAAIy5B,EAAMiX,iBAAmB7e,GAAW+J,mBAAmB,KACnG0Y,EAA6B,IAAIpnD,aAAa++B,GAAMC,kBAAkB7+B,KAAKiM,IAAI+6C,EAAqBN,KAC1G,IAAKK,GAAyC,MAAlB5xD,KAAKksD,UAAmB,CAGhD,MAAM6F,EAA8B/xD,KAAKksD,UAAUrpD,OAAS,GAAM,EAC5DmvD,EAAgChyD,KAAK+sD,WAAa/sD,KAAKwtD,iBAC7DxtD,KAAK+sD,WAAa/sD,KAAKksD,UAAUrpD,OAAS7C,KAAKwtD,iBAC/C,IAAK,IAAIjjD,EAAY,EAAGA,EAAIvK,KAAKksD,UAAUrpD,OAAQ0H,IAC/CunD,EAAavnD,GAAKvK,KAAKksD,UAAW8F,EAAwBznD,EAAKwnD,EAEtE,CACD/xD,KAAKksD,UAAY4F,CACpB,CACD,MAAM5F,GAA0BlsD,KAAKksD,UAC/B+F,GAA2B/F,GAAUrpD,OAAS,GAAM,EAE1D,GAAI+uD,EAAqB,CAIrB5xD,KAAK+sD,WAAa,EAClB/sD,KAAKgtD,cAAgB,EACrBhtD,KAAKitD,iBAAmB,EACxBjtD,KAAKktD,oBAAsB,EACpCltD,KAAKmtD,yBAA2B,EAChCntD,KAAKotD,wBAA0B,EAC/BptD,KAAKqtD,wBAA0B,EACtBrtD,KAAKstD,sBAAwB,EAG7B,MAAM4E,GAA4BV,EAC5BW,EAAyBtnD,KAAKic,MAAMorC,EAAmBb,EAAoB,GAC3Ee,EAAsBvnD,KAAK2S,KAAK20C,EAAqC,EAApBd,GACvDrxD,KAAKwtD,iBAAmB4E,EACxB,IAAK,IAAI7nD,EAAY4nD,EAAgB5nD,GAAK6nD,EAAa7nD,IACnD2hD,GAAU3hD,EAAI0nD,IAAmB,EAGrC,MAAMI,EAA4B3E,EAAgBrjD,KAC5CioD,EAA4BD,EAAYxvD,OAAS,EACjD0vD,EAA4BD,EAAoBjB,EAEhDmB,EAAuB3nD,KAAKuC,IAAwB,GAApBikD,EAAkD,KAAzBpa,EAAMiX,kBAC/DuE,EAAiC5nD,KAAK2S,KAAK00C,GAC3CQ,EAAwBR,EAAmBb,EAAoBmB,EAC/DG,EAA8BD,EACpC,IAAIE,GAAwBH,EAAyBP,GAAoBK,EACrEM,EAA2B,EAC/B,IAAK,IAAItoD,EAAYkoD,EAAwBloD,GAAKooD,EAAqBpoD,IAAK,CACxE,MAAMuoD,EAAyC,EAAfF,EAC1BpuD,EAAgBsuD,EAAkBR,EACxC,IAAIS,EAA2BV,EAAY7tD,GAC3C,MAAMwuD,EAAqBJ,EAAeE,EAC1CC,IAAqBV,EAAY7tD,EAAQ,GAAKuuD,GAAoBC,EAClE,MAAMC,GAAkBF,EAAmBF,GAAoBN,EAGzDW,EAFiBroD,KAAKuC,IAAI,GAAM7C,EAAI2nD,GAAoBM,GACtC3nD,KAAKuC,IAAI,GAAMslD,EAAgBnoD,GAAKioD,GAEtDW,EAAqBD,EAAeA,GAAgB,EAAM,EAAMA,GACtEhH,GAAU3hD,EAAI0nD,KAAoBgB,EAASE,EAC3CN,EAAmBE,EACnBH,GAAgBL,CACnB,CACJ,C,EAIT,MAAMa,GA+BF,WAAArzD,GA9BOC,KAAgBqzD,iBAAW,EAC3BrzD,KAAcszD,eAAW,EACzBtzD,KAAcuzD,eAAW,EACzBvzD,KAAYwzD,aAAW,EACvBxzD,KAAAyzD,cAAwBnyD,EAAOwU,YAC/B9V,KAAA0zD,YAAsBpyD,EAAOwU,YAC7B9V,KAAA2zD,aAAuBryD,EAAOwU,YAC9B9V,KAAA4zD,aAAuBtyD,EAAOwU,YAC7B9V,KAAA6zD,EAAyBvyD,EAAOwU,YACjC9V,KAAoB8zD,qBAAW,EAC/B9zD,KAAkB+zD,mBAAW,EAC7B/zD,KAAkBg0D,mBAAW,EAC7Bh0D,KAAgBi0D,iBAAW,EAC1Bj0D,KAAAk0D,EAA6B5yD,EAAOwU,YAErC9V,KAAcm0D,gBAAY,EAC1Bn0D,KAAYo0D,cAAY,EACxBp0D,KAAcq0D,gBAAY,EAC1Br0D,KAAYs0D,cAAY,EACxBt0D,KAAmBu0D,oBAAW,EAC9Bv0D,KAAiBw0D,kBAAW,EAC5Bx0D,KAAmBy0D,oBAAW,EAC9Bz0D,KAAiB00D,kBAAW,EAEnB10D,KAAc20D,eAAa,GAC3B30D,KAAY40D,aAAa,GACxB50D,KAAwB60D,EAAa,GAC9C70D,KAAsB80D,GAAW,EAClC90D,KAAoC+0D,qCAAW,EAKlD,IAAK,IAAIxqD,EAAY,EAAGA,EADZ,GACwBA,IAChCvK,KAAK20D,eAAepqD,GAAK,EACzBvK,KAAK40D,aAAarqD,GAAK,EAG3BvK,KAAK8mC,O,CAGF,KAAAA,GACH9mC,KAAKszD,eAAiB,EACtBtzD,KAAKwzD,aAAe,EACpBxzD,KAAK6zD,EAAiBvyD,EAAOwU,YAC7B9V,KAAK+zD,mBAAqB,EAC1B/zD,KAAKi0D,iBAAmB,EACxBj0D,KAAKk0D,EAAqB5yD,EAAOwU,YACjC9V,KAAK80D,GAAyB,C,CAG3B,gBAAAE,CAAiB1hC,EAAwB2hC,EAAqBC,EAAuBC,EAA2BC,EAAwBzH,EAAmB0H,GAC9JD,GAAkBC,EAClB,MAAMr+B,EAAyB1D,EAAWsmB,gBAC9B,MAAR+T,IAAgBA,EAAK2H,aAAgBt+B,EAAWpiB,WAAc+4C,EAAK4H,uBACnEv1D,KAAK+zD,mBAAqB/zD,KAAKszD,eAC/BtzD,KAAKi0D,iBAAmBj0D,KAAKwzD,aAC7BxzD,KAAKk0D,EAAqBl0D,KAAK6zD,EAC/B7zD,KAAKszD,eAAiB,EACtBtzD,KAAKwzD,aAAe,GAEZ,MAAR7F,IACiB,MAAbA,EAAK9mB,KACL7mC,KAAK6zD,EAAiBlG,EAAK9mB,KAAKpB,KAAKkoB,EAAK9mB,KAAKpB,KAAK5iC,OAAS,GAAGy5B,KAEhEt8B,KAAK6zD,EAAiBvyD,EAAOwU,aAGrC,MAAM0/C,EAAsBN,EAAgBG,EACtCI,EAA0BN,EAAoB,EAC9C9B,EAA2BrzD,KAAKszD,eAChCA,EAAyBD,EAAmB+B,EAC5C7B,EAAyBvzD,KAAKwzD,aAC9BA,EAAuBD,EAAiB,EACxCO,EAA+B9zD,KAAK+zD,mBACpCA,EAA6BD,EAAuBsB,EACpDpB,EAA6Bh0D,KAAKi0D,iBAClCA,EAA2BD,EAAqB,EAEhD0B,EAAuB,GAAOp0D,EAAOuQ,aAAevQ,EAAOsQ,cAC3D+jD,EAAwBD,EAAeR,EACvCU,EAAsBF,EAAeF,EAE3C,IAAI/B,EAAwBzzD,KAAK6zD,EAC7BH,EAAsB1zD,KAAK6zD,EAC3BF,EAAuB3zD,KAAKk0D,EAC5BN,EAAuB,EACvBO,GAA0B,EAC1BC,GAAwB,EACxBC,GAA0B,EAC1BC,GAAwB,EACxBC,EAA8B,EAC9BC,EAA4B,EAC5BC,EAA8B,EAC9BC,EAA4B,EAChC,GAAY,MAAR/G,GAA6B,MAAbA,EAAK9mB,OAAiB8mB,EAAKkI,gBAAiB,CAC5D,MAAMrvB,EAAsBmnB,EAAK9mB,KAAKP,eAAe2uB,GAC/Ca,EAAoBnI,EAAK9mB,KAAKpB,KAAKe,EAAc,GACjDuvB,EAAkBpI,EAAK9mB,KAAKpB,KAAKe,GACjCwvB,GAAwBrI,EAAK9mB,KAAKrF,MAAQs0B,EAAS1wB,MAAQ9jC,EAAOuQ,aAClEokD,GAAsBtI,EAAK9mB,KAAKrF,MAAQu0B,EAAO3wB,MAAQ9jC,EAAOuQ,aAC9DqkD,GAAsBf,EAAoBa,IAAiBC,EAAaD,GACxEG,GAAoBV,EAAkBO,IAAiBC,EAAaD,GAI1E,GAHAvC,EAAgBqC,EAASx5B,MAAQy5B,EAAOz5B,KAAOw5B,EAASx5B,MAAQ45B,EAChExC,EAAcoC,EAASx5B,MAAQy5B,EAAOz5B,KAAOw5B,EAASx5B,MAAQ65B,EAE1Dn/B,EAAWniB,OAAQ,CACnB,MAAMuhD,EAAwBzI,EAAK0I,cAAgB/0D,EAAOuQ,aACpDykD,EAAsB3I,EAAK4I,YAAcj1D,EAAOuQ,aAEhD2kD,EAA8C,IADpBF,EAAcF,GAExCthD,EAAqBjK,KAAKuC,IAAIopD,EAAmBx/B,EAAWliB,YAC7C,MAAjB64C,EAAK8I,UAAqB9I,EAAK4H,uBAC3BJ,EAAoBiB,EAAgBthD,IACpCq/C,GAAiB,EACjBI,EAAsB,IAAO,GAAOY,EAAoBiB,GAAiBthD,IAEzE2gD,EAAkBW,EAAgBthD,IAClCs/C,GAAe,EACfI,EAAoB,IAAO,GAAOiB,EAAkBW,GAAiBthD,KAGxD,MAAjB64C,EAAK+I,UAAqB/I,EAAKgJ,qBAC/B/C,EAAejG,EAAK+I,SAASjxB,KAAK,GAAGnJ,KACjCg6B,EAAcnB,EAAoBrgD,IAClCu/C,GAAiB,EACjBI,EAAsB,IAAO,GAAO6B,EAAcnB,GAAqBrgD,IAEvEwhD,EAAcb,EAAkB3gD,IAChCw/C,GAAe,EACfI,EAAoB,IAAO,GAAO4B,EAAcb,GAAmB3gD,IAG9E,CACJ,CAED,IAAIigD,EAA+C,EAC/C6B,GAAwB,EAC5B,IAAK,IAAIjd,EAAwB,EAAGA,GAAiBrmB,EAAWyc,cAAe4J,IAAiB,CAC5F,IAAIH,EACAqd,EACA5+B,EACJ,GAAI0hB,GAAiBrmB,EAAWyc,cAAe,CAC3C,GAAI6mB,EAAoC,MAExCpd,EAAmBl4C,EAAOya,4BAA4BrX,WAAuB,WAC7EmyD,EAAc,EACd5+B,EAAW32B,EAAO4W,UAAUxT,WAAW,YAC1C,KAAM,CACH,IAAI60C,EAAqCjmB,EAAWpb,UAAUyhC,GAC9DH,EAAmBl4C,EAAOya,4BAA4Bw9B,EAAiBvhB,QACvE6+B,EAActd,EAAiB/0C,MAC/ByzB,EAAW32B,EAAO4W,UAAUqhC,EAAiBthB,UACH,GAAtCA,EAAShjB,OAA+B2hD,GAAe,EAC9D,CACD,GAAsF,MAAjCpd,EAAiBx9B,aAAsB,CACxF,MAAMA,EAAuBw9B,EAAiBx9B,aAAe66C,EAC7D,IAAIC,EAAwB1D,GAAiB2D,gBAAgB9+B,EAAUo7B,EAAkBsC,EAAelC,GACxG,GAAIU,EAAgB,CAEhB2C,IADsB1D,GAAiB2D,gBAAgB9+B,EAAU67B,EAAsB6B,EAAehC,GAC5EmD,GAAiBvC,CAC9C,CACD,GAAIF,EAAgB,CAEhByC,IADsB1D,GAAiB2D,gBAAgB9+B,EAAU,EAAK09B,EAAe/B,GAC3DkD,GAAiBrC,CAC9C,CACD,IAAIuC,EAAsBF,EAC1B,GAAmC,GAA/BxjC,EAAWiG,iBAA2B,CAEtC,GADAy9B,EAAc5D,GAAiB2D,gBAAgB9+B,EAAUq7B,EAAgBsC,EAAalC,GAClFU,EAAc,CAEd4C,IADsB5D,GAAiB2D,gBAAgB9+B,EAAU87B,EAAoB6B,EAAajC,GAC1EqD,GAAexC,CAC1C,CACD,GAAIF,EAAc,CAEd0C,IADsB5D,GAAiB2D,gBAAgB9+B,EAAU,EAAK29B,EAAahC,GAC3DoD,GAAetC,CAC1C,CACJ,CAMD,GAJA10D,KAAK20D,eAAe34C,IAAiB86C,EACrC92D,KAAK40D,aAAa54C,IAAiBg7C,EACnCh3D,KAAK60D,EAAyB70D,KAAK80D,MAA4B94C,EAE3Dw9B,EAAiBr9B,SAAU,CAC3B,MAAM86C,EAAuF,MAAjC3jC,EAAW4jC,mBAA8B5jC,EAAW4jC,mBAAqB5jC,EAAWoF,WAC5Iu+B,EAAetqB,kBAAoBkqB,GAA6D,GAA9CI,EAAevqB,cAAcmqB,GAAa5hD,OAC5F8/C,EAAuClqD,KAAKiM,IAAIi+C,EAAsC3B,GAAiB+D,wCAAwCl/B,IAEtJ,CACJ,CACJ,CAEDj4B,KAAKqzD,iBAAmBA,EACxBrzD,KAAKszD,eAAiBA,EACtBtzD,KAAKuzD,eAAiBA,EACtBvzD,KAAKwzD,aAAeA,EACpBxzD,KAAK8zD,qBAAuBA,EAC5B9zD,KAAK+zD,mBAAqBA,EAC1B/zD,KAAKg0D,mBAAqBA,EAC1Bh0D,KAAKi0D,iBAAmBA,EACxBj0D,KAAK2zD,aAAeA,EACpB3zD,KAAK4zD,aAAeA,EACpB5zD,KAAKyzD,cAAgBA,EACrBzzD,KAAK0zD,YAAcA,EACnB1zD,KAAKm0D,eAAiBA,EACtBn0D,KAAKo0D,aAAeA,EACpBp0D,KAAKq0D,eAAiBA,EACtBr0D,KAAKs0D,aAAeA,EACpBt0D,KAAKu0D,oBAAsBA,EAC3Bv0D,KAAKw0D,kBAAoBA,EACzBx0D,KAAKy0D,oBAAsBA,EAC3Bz0D,KAAK00D,kBAAoBA,EACzB10D,KAAK+0D,qCAAuCA,C,CAGzC,cAAAqC,GACH,IAAK,IAAIzd,EAAwB,EAAGA,EAAgB35C,KAAK80D,GAAwBnb,IAAiB,CAC9F,MAAM39B,EAAuBhc,KAAK60D,EAAyBlb,GAC3D35C,KAAK20D,eAAe34C,GAAgB,EACpChc,KAAK40D,aAAa54C,GAAgB,CACrC,CACDhc,KAAK80D,GAAyB,C,CAG3B,sBAAOiC,CAAgB9+B,EAAoBmN,EAAciyB,EAAeC,GAC3E,OAAQr/B,EAAShjB,MACb,KAA0B,EAAE,OAAOw0B,GAAM8tB,qBAAqBD,GAC9D,OAAwB,OAAO,EAC/B,OAAyB,OAAO,GAAO,EAAMlyB,EAAOnN,EAAS9f,OAC7D,OAAyB,OAAO,EAAM,GAAO,EAAMitB,EAAOnN,EAAS9f,OACnE,KAAyB,EAAE,MAAO,GAAyD,GAAnDtN,KAAK+C,IAAY,EAARypD,EAAcxsD,KAAK8C,GAAKsqB,EAAS9f,OAClF,KAA0B,EAAE,MAAO,IAA0D,IAAnDtN,KAAK+C,IAAY,EAARypD,EAAcxsD,KAAK8C,GAAKsqB,EAAS9f,OACpF,OAAyB,OAAOtN,KAAKiM,IAAI,EAAK,EAAa,GAAPsuB,GACpD,OAAyB,MAAMoyB,EAAiB,IAAO3sD,KAAKiB,KAAKmsB,EAAS9f,OAAQ,OAAOitB,EAAOoyB,EAASpyB,EAAOoyB,EAAS,GAAO,GAAOpyB,EAAOoyB,GAAUv/B,EAAS9f,OACjK,OAAyB,OAAOtN,KAAKoB,IAAI,GAAIgsB,EAAS9f,MAAQitB,GAC9D,KAAsB,GAAE,OAAO,IAAQA,EAAQ,IAAOv6B,KAAKiB,KAAKmsB,EAAS9f,QACzE,OACI,IAAIie,EAAO,GAAyC,GAAnCvrB,KAAK+C,IAAIypD,EAAQp/B,EAAS9f,OAG3C,OAFAie,EAAO,GAAO,EAAMgP,GAAQnN,EAAS9f,MAASie,GAAQ,IAAM6B,EAAS9f,SACrEie,EAAOA,EAAO,EAAMA,EAAO,EACpBA,EACX,QAA0B,CACtB,IAAIqhC,EAAO,EAAOryB,GAAQ,GAAKnN,EAAS9f,OAExC,OADAs/C,EAAMA,EAAM,EAAMA,EAAM,EACjBA,CACV,CACD,QAAwB,CACpB,IAAIA,EAAOryB,GAAQ,GAAKnN,EAAS9f,OAEjC,OADAs/C,EAAMA,EAAM,EAAMA,EAAM,EACjBA,CACV,CACD,QAAS,MAAM,IAAIt1D,MAAM,wC,CAK1B,8CAAOg1D,CAAwCl/B,GAKlD,OAAuC,GAAnCA,EAAShjB,KAAmC,KAAO,KAAQgjB,EAAS9f,MACjC,GAAnC8f,EAAShjB,KAAmC,EAAM,IAAOgjB,EAAS9f,MAC/D,C,EAIf,MAAMu/C,GAiFF,WAAA33D,GA/EgBC,KAAAwlC,QAAoBhjC,MAAMlB,EAAO8V,aAAa,GAAGugD,KAAK,GAC/D33D,KAAUqO,WAAW,EACrBrO,KAAS43D,UAAW,EACpB53D,KAAY63D,aAAkB,KAC9B73D,KAAI6mC,KAAgB,KACpB7mC,KAAQy2D,SAAgB,KACxBz2D,KAAQ02D,SAAgB,KACxB12D,KAAkB83D,mBAAW,EAC7B93D,KAAkB+3D,mBAAW,EAC7B/3D,KAAgBg4D,kBAAY,EAC5Bh4D,KAAWs1D,aAAY,EACvBt1D,KAAYi4D,cAAY,EACxBj4D,KAAe61D,iBAAY,EAC3B71D,KAAoBu1D,sBAAY,EAChCv1D,KAAkB22D,oBAAY,EAC9B32D,KAAaq2D,cAAW,EACxBr2D,KAAWu2D,YAAW,EACtBv2D,KAAkBk4D,mBAAW,EAC7Bl4D,KAAoBm4D,qBAAW,EAC/Bn4D,KAAYo4D,aAAW,EACvBp4D,KAAWq4D,YAAW,EACtBr4D,KAAkBs4D,mBAAW,EAC7Bt4D,KAAgBu4D,iBAAW,EAClBv4D,KAAMw4D,OAAa,GACnBx4D,KAAauc,cAAmB,GAChCvc,KAAWouD,YAAa,GAE7BpuD,KAAUy4D,WAAa,GACvBz4D,KAAmB04D,oBAAa,GAChC14D,KAAiB24D,kBAAa,GAC9B34D,KAA2B44D,4BAAa,GAEnC54D,KAAgBsuD,iBAAa,GACtCtuD,KAAUmE,WAAW,EACrBnE,KAAe64D,gBAAW,EACjB74D,KAAmB84D,oBAAa,GAChC94D,KAAwB+4D,yBAAa,GACrC/4D,KAAAg5D,qBAA6Cx2D,MAAMlB,EAAOgW,yBAAyBqgD,KAAK,MACjG33D,KAAWi5D,YAAkB,KAC7Bj5D,KAAek5D,gBAAkB,KACjCl5D,KAAUmL,WAAW,EACrBnL,KAAem5D,gBAAW,EAC1Bn5D,KAAawwC,cAAW,EACxBxwC,KAAgBywC,iBAAW,EAC9BzwC,KAAqBo5D,sBAAW,EAChCp5D,KAAqBq5D,sBAAa,GAClCr5D,KAAa2wC,cAAW,EACxB3wC,KAAkBs5D,mBAAW,EAC7Bt5D,KAAmBu5D,oBAAW,EAC9Bv5D,KAAwBw5D,yBAAW,EACnCx5D,KAAiBy5D,kBAAwB,KACzCz5D,KAAkB05D,oBAAY,EAC9B15D,KAAsB25D,uBAAkB,KAC5B35D,KAAa45D,cAAmB,GAEhC55D,KAAW65D,YAA0B,GAC9C75D,KAAe85D,gBAAW,EAC1B95D,KAAuB+5D,wBAAW,EAClC/5D,KAAuBg6D,wBAAW,EAElCh6D,KAA6Bi6D,8BAAW,EAC/Bj6D,KAAek6D,gBAAa,GACrCl6D,KAAYm6D,aAAW,EACvBn6D,KAAao6D,cAAW,EACxBp6D,KAAkBq6D,mBAAW,EAC7Br6D,KAAkBs6D,mBAAW,EAC7Bt6D,KAAkBu6D,mBAAW,EAC7Bv6D,KAAkBw6D,mBAAW,EAC7Bx6D,KAAgBy6D,iBAAW,EAC3Bz6D,KAAc06D,eAAW,EACzB16D,KAAgB26D,iBAAW,EAC3B36D,KAAiB46D,kBAAW,EAC5B56D,KAAe66D,gBAAW,EAC1B76D,KAAoB86D,qBAAW,EAC/B96D,KAAoB+6D,qBAAW,EAC/B/6D,KAAYg7D,cAAY,EAEfh7D,KAAAi7D,iBAAqC,IAAI7H,GAGrDpzD,KAAK8mC,O,CAGF,KAAAA,GACH9mC,KAAKq4D,YAAc,EACnB,IAAK,IAAI9tD,EAAY,EAAGA,EAAIjJ,EAAOgW,wBAAyB/M,IACxDvK,KAAKw4D,OAAOjuD,GAAK,EAEbvK,KAAKy4D,WAAWluD,GAAK,EACrBvK,KAAK04D,oBAAoBnuD,GAAK,EAC9BvK,KAAK24D,kBAAkBpuD,GAAK,EAC5BvK,KAAK44D,4BAA4BruD,GAAK,EAE1CvK,KAAKuc,cAAchS,GAAKjJ,EAAOib,cAAc,GAC7Cvc,KAAKk6D,gBAAgB3vD,GAAK,EAC1BvK,KAAKg5D,qBAAqBzuD,GAAK,KAEnC,IAAK,IAAIA,EAAY,EAAGA,EAAIvK,KAAK85D,gBAAiBvvD,IAC9CvK,KAAK65D,YAAYtvD,GAAG+2B,cAExBthC,KAAK85D,gBAAkB,EACvB95D,KAAK+5D,wBAA0B,EAC/B/5D,KAAKg6D,wBAA0B,EAC/Bh6D,KAAKm4D,qBAAuB,EAC5Bn4D,KAAK05D,oBAAsB,EAC3B,IAAK,MAAMwB,KAAgBl7D,KAAK45D,cAC5BsB,EAAap0B,QAEjB9mC,KAAKi7D,iBAAiBn0B,QACtB9mC,KAAKi5D,YAAc,KACnBj5D,KAAKk5D,gBAAkB,KACvBl5D,KAAK25D,uBAAyB,KAC9B35D,KAAK63D,aAAe,I,EAI5B,MAAMsD,GAuIF,WAAAp7D,GAtIOC,KAAKo7D,OAAY,EACjBp7D,KAAQq7D,UAAY,EACpBr7D,KAAoBs7D,sBAAY,EAChCt7D,KAAkBu7D,oBAAY,EAC9Bv7D,KAAuBw7D,yBAAY,EACnCx7D,KAAoBy7D,qBAAW,EAC/Bz7D,KAAc07D,eAAW,EAChB17D,KAAA27D,YAA2B,IAAIrgC,GAC/Bt7B,KAAA47D,eAA8B,IAAItgC,GAClCt7B,KAAA67D,cAA6B,IAAIvgC,GACjCt7B,KAAA87D,eAA8B,IAAIxgC,GAE3Ct7B,KAAAiV,KAA2C,EAC3CjV,KAAW+7D,YAAoB,KAC/B/7D,KAAIqK,KAAwB,KAEpBrK,KAA2Bg7B,6BAAG,EAC9Bh7B,KAAiBi7B,kBAAG,EACpBj7B,KAAek7B,gBAAG,EAClBl7B,KAAgBm7B,iBAAG,EACnBn7B,KAAqBo7B,uBAAG,EACxBp7B,KAAmBq7B,oBAAG,EAE9Br7B,KAAoBg8D,qBAAW,EAC/Bh8D,KAAMm3B,OAAkB,KACxBn3B,KAAYkwC,aAAW,EACvBlwC,KAAYmwC,aAAW,EACvBnwC,KAAYowC,aAAW,EACvBpwC,KAAgBqwC,iBAAW,IAC3BrwC,KAAUswC,WAAW,EACrBtwC,KAAKk3B,MAAiB,KACtBl3B,KAAO+O,QAAW,EAElB/O,KAAWi8D,YAAW,EACtBj8D,KAAO+6B,SAAY,EACnB/6B,KAAOk8D,QAAW,EAClBl8D,KAAWm8D,YAAW,EACtBn8D,KAAeo8D,gBAAW,EAC1Bp8D,KAAYq8D,aAAW,EAEvBr8D,KAAcs8D,eAAW,EACzBt8D,KAAmBu8D,oBAAW,EAC9Bv8D,KAASw8D,UAAW,EACpBx8D,KAAcy8D,eAAW,EACzBz8D,KAAc08D,eAAW,EACzB18D,KAAmB28D,oBAAW,EAE9B38D,KAAUm5B,WAAW,EACrBn5B,KAAe48D,gBAAW,EAC1B58D,KAAe68D,gBAAW,EAC1B78D,KAAoB88D,qBAAW,EAC/B98D,KAA0B+8D,2BAAW,EACrC/8D,KAA0Bg9D,2BAAW,EACrCh9D,KAA0Bi9D,2BAAW,EACrCj9D,KAAmBk9D,oBAAW,EAC9Bl9D,KAAoBm9D,qBAAW,EAE/Bn9D,KAAmBo9D,oBAAW,EAC9Bp9D,KAAuBq9D,wBAAW,EAClCr9D,KAAes9D,gBAAW,EAC1Bt9D,KAAoBu9D,qBAAW,EAC/Bv9D,KAAyBw9D,0BAAW,EACpCx9D,KAAey9D,gBAAW,EAC1Bz9D,KAAoB09D,qBAAW,EAC/B19D,KAAmB29D,oBAAW,EAC9B39D,KAAwB49D,yBAAW,EAE1B59D,KAAS69D,UAA0B,GAC5C79D,KAAa89D,cAAW,EACxB99D,KAAqB+9D,sBAAW,EAChC/9D,KAAqBg+D,sBAAW,EAEhCh+D,KAAgBi+D,iBAAwB,KACxCj+D,KAAek+D,gBAAW,EAC1Bl+D,KAAcm+D,eAAW,EACzBn+D,KAAco+D,eAAW,EACzBp+D,KAAmBq+D,oBAAW,EAC9Br+D,KAAmBs+D,oBAAW,EAC9Bt+D,KAAcu+D,eAAW,EACzBv+D,KAAcw+D,eAAW,EACzBx+D,KAAmBy+D,oBAAW,EAC9Bz+D,KAAmB0+D,oBAAW,EAE9B1+D,KAAgB2+D,iBAAwB,KACxC3+D,KAAgB4+D,iBAAwB,KACxC5+D,KAAoB6+D,sBAAY,EAChC7+D,KAAc8+D,eAAW,EACzB9+D,KAAW++D,YAAW,EACtB/+D,KAAeg/D,gBAAW,EAC1Bh/D,KAAoBi/D,qBAAW,EAC/Bj/D,KAAkBk/D,mBAAW,EAC7Bl/D,KAAuBm/D,wBAAW,EAElCn/D,KAAco/D,eAAwB,KACtCp/D,KAAcq/D,eAAwB,KACtCr/D,KAAkBs/D,oBAAY,EAC9Bt/D,KAAYu/D,aAAW,EACvBv/D,KAAoBw/D,qBAAW,EAC/Bx/D,KAAkBy/D,mBAAkB,KACpCz/D,KAAoB0/D,qBAAW,EAC/B1/D,KAAyB2/D,0BAAW,EACpC3/D,KAAQ4/D,SAAW,EACnB5/D,KAAa6/D,cAAW,EACxB7/D,KAAW8/D,YAAW,EACtB9/D,KAAW+/D,YAAW,EACtB//D,KAAWggE,YAAW,EACtBhgE,KAAgBigE,iBAAW,EAC3BjgE,KAAgBkgE,iBAAW,EAC3BlgE,KAAmBmgE,oBAAW,EAC9BngE,KAAmBogE,oBAAW,EAE9BpgE,KAAeqgE,gBAAwB,KACvCrgE,KAAoBsgE,sBAAY,EAChCtgE,KAAcugE,eAAW,EACzBvgE,KAAUwgE,WAAW,EACrBxgE,KAAeygE,gBAAW,EAC1BzgE,KAAa0gE,cAAW,EACxB1gE,KAAa2gE,cAAW,EACxB3gE,KAAa4gE,cAAW,EACxB5gE,KAAkB6gE,mBAAW,EAC7B7gE,KAAkB8gE,mBAAW,EAC7B9gE,KAAkB+gE,mBAAW,EAC7B/gE,KAAkBghE,mBAAW,EAC7BhhE,KAAqBihE,sBAAW,EAChCjhE,KAAqBkhE,sBAAW,EAChClhE,KAAqBmhE,sBAAW,EAChCnhE,KAAqBohE,sBAAW,EAIvBphE,KAAAwxC,aAAkC,IAAI5H,GACtC5pC,KAAAmxC,cAAoC,IAAI5G,GACxCvqC,KAAoBqxC,qBAAwB,GAGxD,IAAK,IAAI9mC,EAAY,EAAGA,EAAIjJ,EAAO0Y,UAAWzP,IAC1CvK,KAAKqxC,qBAAqB9mC,GAAK,IAAIq/B,E,CAKpC,wBAAAy3B,CAAyBpqB,EAAc3jB,EAAwBguC,GAclE,GAbI/xD,EAAsB+jB,EAAWvkB,WACJ,MAAzB/O,KAAKi+D,kBAA4Bj+D,KAAKi+D,iBAAiBp7D,OAASo0C,EAAMsqB,0BACtEvhE,KAAKi+D,iBAAmB,IAAIvzD,aAAausC,EAAMsqB,yBAGnD/xD,EAAqB8jB,EAAWvkB,YACH,MAAzB/O,KAAK2+D,kBAA4B3+D,KAAK2+D,iBAAiB97D,OAASo0C,EAAMuqB,yBACtExhE,KAAK2+D,iBAAmB,IAAIj0D,aAAausC,EAAMuqB,yBAEtB,MAAzBxhE,KAAK4+D,kBAA4B5+D,KAAK4+D,iBAAiB/7D,OAASo0C,EAAMuqB,yBACtExhE,KAAK4+D,iBAAmB,IAAIl0D,aAAausC,EAAMuqB,yBAGnD/xD,EAAmB6jB,EAAWvkB,SAAU,CAExC,MAAM0yD,EAA6B52D,KAAKiM,IAAIxV,EAAOqP,gBAAkB,EAAI2iB,EAAWwd,UAAY,GAE1F4wB,EAA4D,EAD1Bj4B,GAAMC,kBAAkB+3B,EAAqBngE,EAAOsP,mBAAqB0wD,GAGjH,GAA2B,MAAvBthE,KAAKo/D,gBAAiD,MAAvBp/D,KAAKq/D,eACpCr/D,KAAKo/D,eAAiB,IAAI10D,aAAag3D,GACvC1hE,KAAKq/D,eAAiB,IAAI30D,aAAag3D,QACpC,GAAI1hE,KAAKo/D,eAAev8D,OAAS6+D,GAA2B1hE,KAAKq/D,eAAex8D,OAAS6+D,EAAyB,CAIrH,MAAMC,EAA8B,IAAIj3D,aAAag3D,GAC/CE,EAA8B,IAAIl3D,aAAag3D,GAC/CG,EAAkB7hE,KAAKo/D,eAAev8D,OAAS,EAErD,IAAK,IAAI0H,EAAI,EAAGA,EAAIvK,KAAKo/D,eAAev8D,OAAQ0H,IAC5Co3D,EAAcp3D,GAAKvK,KAAKo/D,eAAgBp/D,KAAKu/D,aAAeh1D,EAAKs3D,GACjED,EAAcr3D,GAAKvK,KAAKo/D,eAAgBp/D,KAAKu/D,aAAeh1D,EAAKs3D,GAGrE7hE,KAAKu/D,aAAev/D,KAAKo/D,eAAev8D,OACxC7C,KAAKo/D,eAAiBuC,EACtB3hE,KAAKq/D,eAAiBuC,CACzB,CACJ,CACGlyD,EAAqB4jB,EAAWvkB,UAEJ,MAAxB/O,KAAKqgE,kBACLrgE,KAAKqgE,gBAAkB,IAAI31D,aAAapJ,EAAO6P,uB,CAKpD,UAAA2wD,GACH9hE,KAAKo9D,oBAAsB,EAC3Bp9D,KAAKq9D,wBAA0B,EAC/Br9D,KAAKs9D,gBAAkB,EACvB,IAAK,IAAI/yD,EAAY,EAAGA,EAAIvK,KAAK89D,cAAevzD,IAC5CvK,KAAK69D,UAAUtzD,GAAG+2B,cAWtB,GATAthC,KAAK89D,cAAgB,EACrB99D,KAAK+9D,sBAAwB,EAC7B/9D,KAAKg+D,sBAAwB,EAC7Bh+D,KAAK+8D,2BAA6B,EAClC/8D,KAAKg9D,2BAA6B,EAClCh9D,KAAKi9D,2BAA6B,EAClCj9D,KAAKk9D,oBAAsB,EAC3Bl9D,KAAKm9D,qBAAuB,EAC5Bn9D,KAAKk+D,gBAAkB,EACM,MAAzBl+D,KAAKi+D,iBAA0B,IAAK,IAAI1zD,EAAY,EAAGA,EAAIvK,KAAKi+D,iBAAiBp7D,OAAQ0H,IAAKvK,KAAKi+D,iBAAiB1zD,GAAK,EAC7HvK,KAAKy/D,mBAAqB,KAC1Bz/D,KAAKigE,iBAAmB,EACxBjgE,KAAKkgE,iBAAmB,EACxBlgE,KAAKmgE,oBAAsB,EAC3BngE,KAAKogE,oBAAsB,EAC3BpgE,KAAK6gE,mBAAqB,EAC1B7gE,KAAK8gE,mBAAqB,EAC1B9gE,KAAK+gE,mBAAqB,EAC1B/gE,KAAKghE,mBAAqB,EAC1BhhE,KAAKihE,sBAAwB,EAC7BjhE,KAAKkhE,sBAAwB,EAC7BlhE,KAAKmhE,sBAAwB,EAC7BnhE,KAAKohE,sBAAwB,EAE7BphE,KAAKi8D,YAAc,EACnBj8D,KAAK+6B,SAAU,EAEf/6B,KAAKo7D,OAAQ,EACbp7D,KAAKu7D,oBAAqB,EAC1Bv7D,KAAKw7D,yBAA0B,EAC/Bx7D,KAAKy7D,qBAAuB,EAC5Bz7D,KAAK07D,eAAiB,C,CAGnB,eAAAqG,GAQH,GAPA/hE,KAAK8hE,aAEL9hE,KAAKm8D,YAAc,EACnBn8D,KAAKo8D,gBAAkB,EACvBp8D,KAAKk8D,QAAU,EACfl8D,KAAKq8D,aAAe,EAEhBr8D,KAAK6+D,qBAAsB,CAC3B,IAAK,IAAIt0D,EAAY,EAAGA,EAAIvK,KAAK2+D,iBAAkB97D,OAAQ0H,IAAKvK,KAAK2+D,iBAAkBp0D,GAAK,EAC5F,IAAK,IAAIA,EAAY,EAAGA,EAAIvK,KAAK4+D,iBAAkB/7D,OAAQ0H,IAAKvK,KAAK4+D,iBAAkBr0D,GAAK,CAC/F,CACD,GAAIvK,KAAKs/D,mBAAoB,CACzB,IAAK,IAAI/0D,EAAY,EAAGA,EAAIvK,KAAKo/D,eAAgBv8D,OAAQ0H,IAAKvK,KAAKo/D,eAAgB70D,GAAK,EACxF,IAAK,IAAIA,EAAY,EAAGA,EAAIvK,KAAKq/D,eAAgBx8D,OAAQ0H,IAAKvK,KAAKq/D,eAAgB90D,GAAK,CAC3F,CACD,GAAIvK,KAAKsgE,qBACL,IAAK,IAAI/1D,EAAY,EAAGA,EAAIvK,KAAKqgE,gBAAiBx9D,OAAQ0H,IAAKvK,KAAKqgE,gBAAiB91D,GAAK,EAG9FvK,KAAK++D,YAAc,C,CAGhB,OAAAiD,CAAQ/qB,EAAc3jB,EAAwBguC,EAAwBzT,EAA+BF,EAAmBxR,EAAsBgC,GACjJn+C,KAAKq7D,UAAW,EAEhBr7D,KAAKiV,KAAOqe,EAAWre,KACvBjV,KAAK+7D,YAActyB,GAAMw4B,2BAA2B3uC,GACpDtzB,KAAKm3B,OAAS71B,EAAOiU,QAAQ+d,EAAW6D,QACxCn3B,KAAKk3B,MAAQ5D,EAAWkf,WACxBxyC,KAAKg8D,qBAAuB16D,EAAOkK,WAAW8nB,EAAWgc,WAAWh8B,gBACpEtT,KAAK+O,QAAUukB,EAAWvkB,QAE1B/O,KAAK+6B,QAAUzH,EAAWyH,QAC1B/6B,KAAKi8D,YAAc,EAEnBj8D,KAAKqhE,yBAAyBpqB,EAAO3jB,EAAYguC,GAEjD,MAAMpT,EAA2BjX,EAAMiX,iBACvCluD,KAAKkiE,YAAY5uC,EAAY46B,GAW7B,MAAMiU,EAA0B9yD,EAAyBrP,KAAK+O,SACxDqzD,EAA0B9yD,EAAyBtP,KAAK+O,SACxDszD,EAAuB9yD,EAAsBvP,KAAK+O,SAClDuzD,EAAsB9yD,EAAqBxP,KAAK+O,SAChDwzD,EAAoB9yD,EAAmBzP,KAAK+O,SAC5CyzD,EAAsB9yD,EAAqB1P,KAAK+O,SAEtD,GAAIozD,EAAgB,CAChB,IAAIM,EAA6BnvC,EAAW6F,WACxCupC,EAA2BpvC,EAAW6F,WAGtC8d,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAuB,WAAEF,MAAO23C,EAAcgC,KAClFskB,EAAqBxrB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAuB,WAAEF,MAAO23C,EAAcgC,GAAiB,GACxHukB,EAAmBzrB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAuB,WAAEF,MAAO23C,EAAcgC,GAAiB,IAG1H,MAAM0kB,EAAwBh4D,KAAKuC,IAAI,EAAgEq1D,GAAsBnhE,EAAO+Z,gBAAkB,IAChJynD,EAAsBj4D,KAAKuC,IAAI,EAAgEs1D,GAAoBphE,EAAO+Z,gBAAkB,IAC5I0nD,EAA0Bl4D,KAAKoB,IAAI,EAAM,MAASpB,KAAKoB,IAAI,GAAM42D,GAAyB,GAAO,GAAM,GACvGG,EAAwBn4D,KAAKoB,IAAI,EAAM,MAASpB,KAAKoB,IAAI,GAAM62D,GAAuB,GAAO,GAAM,GACnGG,GAAgC,EAAM,EAAMJ,GAAyBvhE,EAAOuR,qBAC5EqwD,GAA8B,EAAM,EAAMJ,GAAuBxhE,EAAOuR,qBAC9E7S,KAAKm5B,WAAa4pC,EAClB/iE,KAAK48D,iBAAmBoG,EAAgBD,GAAmBlV,EAC3D7tD,KAAK68D,gBAAkBoG,EACvBjjE,KAAK88D,sBAAwBoG,EAAqBD,GAAwBpV,CAC7E,CAED,GAAIuU,EAAgB,CAChB,IAAIe,EAA2B7vC,EAAWud,eACtCuyB,EAAyB9vC,EAAWud,eAGpCoG,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAW,cAAcF,MAAO23C,EAAcgC,KAClFglB,EAAmBlsB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,cAAcF,MAAO23C,EAAcgC,GAAiB,GACtHilB,EAAiBnsB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,cAAcF,MAAO23C,EAAcgC,GAAiB,IAGxH,IAAIklB,EAAmC/vC,EAAW4F,uBAC9CoqC,EAAiChwC,EAAW4F,uBAG5C+d,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAW,aAAaF,MAAO23C,EAAcgC,KACjFklB,EAA2BpsB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,aAAaF,MAAO23C,EAAcgC,GAAiB,GAC7HmlB,EAAyBrsB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,aAAaF,MAAO23C,EAAcgC,GAAiB,IAG/H,MAAM9tC,EAAoB/O,EAAO6O,KAAK8mC,EAAMjwB,KAAM7T,KAAK9C,UAAa/O,EAAOyY,iBAAmBk9B,EAAMjwB,KAAM2c,OACpG4/B,EAAoBl0B,GAAW+J,mBAAmB/oC,EAAY,IAAMxF,KAAKoB,IAAI,GAAM3K,EAAOoa,oBAAsB,EAAIynD,GAAoB7hE,EAAOqa,sBAC/I6nD,EAAkBn0B,GAAW+J,mBAAmB/oC,EAAY,IAAMxF,KAAKoB,IAAI,GAAM3K,EAAOoa,oBAAsB,EAAI0nD,GAAkB9hE,EAAOqa,sBAC3IwyC,EAA0BtjD,KAAKuC,IAAI,EAAKm2D,EAAYrV,GACpDK,EAAwB1jD,KAAKuC,IAAI,EAAKo2D,EAAUtV,GACtDluD,KAAKu9D,qBAAuBpP,EAC5BnuD,KAAKw9D,0BAA4B3yD,KAAKoB,IAAIsiD,EAAgBJ,EAAiB,EAAMN,GAEjF,MAAM4V,EAAqB,EAAMniE,EAAOwR,qBAAuBjI,KAAKoB,IAAI,EAAK,EAAMpB,KAAKoB,IAAI,EAA2E,IAArE3K,EAAOsa,4BAA8B,EAAIynD,KACrIK,EAAmB,EAAMpiE,EAAOwR,qBAAuBjI,KAAKoB,IAAI,EAAK,EAAMpB,KAAKoB,IAAI,EAAyE,IAAnE3K,EAAOsa,4BAA8B,EAAI0nD,KACzItjE,KAAKy9D,gBAAkBgG,EACvBzjE,KAAK09D,qBAAuB7yD,KAAKoB,IAAIy3D,EAAWD,EAAY,EAAM5V,GAElE,MAAM8V,EAAyB,EAAMriE,EAAOwR,qBAAuBjI,KAAKoB,IAAI,IAAK3K,EAAOsa,4BAA8B,EAAIynD,GACpHO,EAAuB,EAAMtiE,EAAOwR,qBAAuBjI,KAAKoB,IAAI,IAAK3K,EAAOsa,4BAA8B,EAAI0nD,GACxHtjE,KAAK29D,oBAAsBgG,EAC3B3jE,KAAK49D,yBAA2B/yD,KAAKoB,IAAI23D,EAAeD,EAAgB,EAAM9V,EACjF,CAED,IAAIyO,EAAyB,EAC7B,GAAIhpC,EAAW8E,aAAc,CAEzB,MAAMyrC,EAAwCvwC,EAAWyD,SACvB,MAA9BzD,EAAWqc,aAAa,KACxBrc,EAAWqc,aAAa,GAAK,IAAIlD,IACrC,MAAMq3B,EAAsCxwC,EAAWqc,aAAa,GAGpE,IAkBIo0B,EAlBAC,EAA0B1wC,EAAWic,kBACrC00B,EAA0B3wC,EAAWkc,mBACrC00B,EAAwB5wC,EAAWic,kBACnC40B,EAAwB7wC,EAAWkc,mBAEnC40B,GAAyB,EAe7B,GAbIntB,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcgC,KACnF6lB,EAAkB/sB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcgC,GAAiB,GACtH+lB,EAAgBjtB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcgC,GAAiB,GACpHimB,GAAgB,GAEhBntB,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAW,gBAAgBF,MAAO23C,EAAcgC,KACpF8lB,EAAkBhtB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,gBAAgBF,MAAO23C,EAAcgC,GAAiB,GACvHgmB,EAAgBltB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,gBAAgBF,MAAO23C,EAAcgC,GAAiB,GACrHimB,GAAgB,GAKhBA,EAAe,CACfP,EAAsB50B,8BAA8B+0B,EAAiBC,GACrEH,EAAoB70B,8BAA8Bi1B,EAAeC,GAEjEJ,EAAaF,EAAsBn3B,cAAc,GACjD,IAAI23B,EAA+BP,EAAoBp3B,cAAc,GAErEq3B,EAAW/3B,eAAevC,GAAM+lB,4BAA6BtB,EAAkB,EAAK,GACpFmW,EAASr4B,eAAevC,GAAMmmB,0BAA2B1B,EAAkB,EAAK,GAE5EluD,KAAK69D,UAAUh7D,OAAS,IAAG7C,KAAK69D,UAAU,GAAK,IAAIl9B,IACvD3gC,KAAK69D,UAAU,GAAGt8B,6BAA6BkI,GAAM+lB,4BAA6B/lB,GAAMmmB,0BAA2B,EAAM/B,EAA4D,GAArCkW,EAAW9uD,KAE9J,MACG4uD,EAAsB50B,8BAA8B+0B,EAAiBC,GAAiB,GAEtFF,EAAaF,EAAsBn3B,cAAc,GAEjDq3B,EAAW/3B,eAAevC,GAAM+lB,4BAA6BtB,EAAkB,EAAK,GAEhFluD,KAAK69D,UAAUh7D,OAAS,IAAG7C,KAAK69D,UAAU,GAAK,IAAIl9B,IACvD3gC,KAAK69D,UAAU,GAAGt8B,6BAA6BkI,GAAM+lB,4BAA6B/lB,GAAM+lB,4BAA6B,EAAM3B,EAA4D,GAArCkW,EAAW9uD,MAIjKqnD,GAAkByH,EAAW73B,4BAE7BlsC,KAAK89D,cAAgB,EACrBxB,EAAiBzxD,KAAKuC,IAAI,EAAKkvD,EAClC,KACI,CACD,MAAMgI,EAAmE,MAA/BhxC,EAAWixC,iBAA4BjxC,EAAWixC,iBAAmBjxC,EAAWyD,SAG1H,IAAK,IAAIxsB,EAAY,EAAGA,EAAI+5D,EAAiB33B,kBAAmBpiC,IAAK,CAKjE,IAAIw5D,EAAiCO,EAAiB53B,cAAcniC,GAChE85D,EAA6D,MAA7B/wC,EAAWkxC,gBAAwE,MAA9ClxC,EAAWkxC,eAAe93B,cAAcniC,GAAc+oB,EAAWkxC,eAAe93B,cAAcniC,GAAK+5D,EAAiB53B,cAAcniC,GAGvMw5D,EAAW9uD,MAAQovD,EAASpvD,OAC5B8uD,EAAaM,GAGjBN,EAAW/3B,eAAevC,GAAM+lB,4BAA6BtB,EAAoE,EAA6B,GAC9JmW,EAASr4B,eAAevC,GAAMmmB,0BAA2B1B,EAAoE,EAA6B,GACtJluD,KAAK69D,UAAUh7D,QAAU0H,IAAGvK,KAAK69D,UAAUtzD,GAAK,IAAIo2B,IACxD3gC,KAAK69D,UAAUtzD,GAAGg3B,6BAA6BkI,GAAM+lB,4BAA6B/lB,GAAMmmB,0BAA2B,EAAM/B,EAA4D,GAArCkW,EAAW9uD,MAC3JqnD,GAAkByH,EAAW73B,2BAEhC,CACDlsC,KAAK89D,cAAgBwG,EAAiB33B,kBACtC2vB,EAAiBzxD,KAAKuC,IAAI,EAAKkvD,EAClC,CAED,MAAMmI,EAA+Bh7B,GAAMi7B,6BAA6BpxC,EAAWyG,QACnF/5B,KAAKw8D,UAAYiI,EACjB,IAAIE,EAAuBF,EAG3B,GAAIxtB,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAW,cAAcF,MAAO23C,EAAcgC,GAAkB,CAEpG,MAAMymB,EAAmB3tB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,cAAcF,MAAO23C,EAAcgC,GAAiB,GACtH0mB,EAAiB5tB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,cAAcF,MAAO23C,EAAcgC,GAAiB,GAC1Hn+C,KAAKw8D,WAAeoI,GAAY,GAAOA,EAAWtjE,EAAOyU,YAAc,IAAMzU,EAAOyU,YAAc,GAAM0zB,GAAMi7B,6BAA6BE,GAC3ID,GAAkBE,GAAU,GAAOA,EAASvjE,EAAOyU,YAAc,IAAMzU,EAAOyU,YAAc,GAAM0zB,GAAMi7B,6BAA6BG,EACxI,CAGG5tB,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,SAC9DxE,KAAKw8D,WAAcvlB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,WAAO+nB,OAAWA,GAAW,GAAU,IACxHo4C,GAAiB1tB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,WAAO+nB,OAAWA,GAAW,GAAS,KAGzHvsB,KAAKy8D,gBAAkBkI,EAAe3kE,KAAKw8D,WAAa3O,EAExD,IAAIiX,EAA8BxI,EAC9ByI,EAA4BzI,EAC5B0I,EAA8B,EAC9BC,EAA4B,EAEhC,GAAI5C,EAAa,CAIb,IAAI6C,EAAsB5xC,EAAW2G,IACjCkrC,EAAoB7xC,EAAW2G,IAE/Bgd,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAgB,IAAEF,MAAO23C,EAAcgC,KAC3E+mB,EAAcjuB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAgB,IAAEF,MAAO23C,EAAcgC,GAAiB,GAC1GgnB,EAAYluB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAgB,IAAEF,MAAO23C,EAAcgC,GAAiB,IAG5G,IAAIinB,EAAmBv6D,KAAKiM,KAAK,EAAKjM,KAAKuC,IAAI,GAAM83D,EAAc5jE,EAAO2U,WAAa3U,EAAO2U,YAC1FovD,EAAiBx6D,KAAKiM,KAAK,EAAKjM,KAAKuC,IAAI,GAAM+3D,EAAY7jE,EAAO2U,WAAa3U,EAAO2U,YAE1F,MAAMqvD,EAAmE,MAA5Cz6D,KAAK+C,KAAK,EAAIw3D,GAAYv6D,KAAK8C,GAAK,KAC3D43D,EAAmE,MAA5C16D,KAAK+C,KAAK,EAAIw3D,GAAYv6D,KAAK8C,GAAK,KAC3D63D,EAA+D,MAA1C36D,KAAK+C,KAAK,EAAIy3D,GAAUx6D,KAAK8C,GAAK,KACvD83D,EAA+D,MAA1C56D,KAAK+C,KAAK,EAAIy3D,GAAUx6D,KAAK8C,GAAK,KACvD+3D,EAA0BxX,EAAmB5sD,EAAO6U,mBAE1D,IAAIwvD,EAA2BryC,EAAWqF,SACtCitC,EAAyBtyC,EAAWqF,SAEpCse,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAW,aAAaF,MAAO23C,EAAcgC,KACjFwnB,EAAmB1uB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,aAAaF,MAAO23C,EAAcgC,GAAiB,GACrHynB,EAAiB3uB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,aAAaF,MAAO23C,EAAcgC,GAAiB,IAGvH,MAAM0nB,EAAqBT,EAAWO,EAAmBD,EAAkB,GACrEI,EAAmBT,EAASO,EAAiBF,EAAkB,GAC/DK,EAAsBl7D,KAAKiM,IAAI,EAAK+uD,GACpCG,EAAsBn7D,KAAKiM,IAAI,GAAM+uD,GACrCI,EAAoBp7D,KAAKiM,IAAI,EAAKgvD,GAClCI,EAAoBr7D,KAAKiM,IAAI,GAAMgvD,GAEzC9lE,KAAKm+D,eAAiBmH,EACtBtlE,KAAKo+D,eAAiBmH,EACtBvlE,KAAKq+D,qBAAuBmH,EAAaF,GAAgBzX,EACzD7tD,KAAKs+D,qBAAuBmH,EAAaF,GAAgB1X,EACzD7tD,KAAKu+D,eAAiBv+D,KAAKk+D,gBAAkB6H,EAAc9uB,EAAMsqB,uBACjEvhE,KAAKw+D,eAAiBx+D,KAAKk+D,gBAAkB8H,EAAc/uB,EAAMsqB,uBACjEvhE,KAAKy+D,qBAAuBwH,EAAYF,GAAelY,EACvD7tD,KAAK0+D,qBAAuBwH,EAAYF,GAAenY,CAC1D,CAED,GAAIyU,EAAY,CAGZ,IAAI6D,EAAyB7yC,EAAWoG,OACpC0sC,EAAuB9yC,EAAWoG,OAElCud,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAmB,OAAEF,MAAO23C,EAAcgC,KAC9EgoB,EAAiBlvB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAmB,OAAEF,MAAO23C,EAAcgC,GAAiB,GAChHioB,EAAenvB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAmB,OAAEF,MAAO23C,EAAcgC,GAAiB,IAGlH,IAAIkoB,EAAsBx7D,KAAKuC,IAAI,EAA+B+4D,GAAkB7kE,EAAO8U,YAAc,IACrGkwD,EAAoBz7D,KAAKuC,IAAI,EAA+Bg5D,GAAgB9kE,EAAO8U,YAAc,IACrGiwD,EAA4B,GAAdA,EAAmD,GAA9Bx7D,KAAKoB,IAAIo6D,EAAa,GACzDC,EAAwB,GAAZA,EAA+C,GAA5Bz7D,KAAKoB,IAAIq6D,EAAW,GACnD,MAAMC,EAA0B,EAAM17D,KAAKiB,KAAK,EAAMu6D,EAAcA,EAAc,GAC5EG,EAAwB,EAAM37D,KAAKiB,KAAK,EAAMw6D,EAAYA,EAAY,GAC5EtmE,KAAKg/D,gBAAkBqH,EACvBrmE,KAAKi/D,sBAAwBqH,EAAYD,GAAexY,EACxD7tD,KAAKk/D,mBAAqBqH,EAC1BvmE,KAAKm/D,yBAA2BqH,EAAwBD,GAA2B1Y,CACtF,CAED,IAAI4Y,EAAc,EACdC,EAAkC,EACtC,GAAInE,EAAU,CAGV,IAAIoE,EAA8BrzC,EAAWiH,YACzCqsC,EAA4BtzC,EAAWiH,YAEvC0c,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAiB,KAAEF,MAAO23C,EAAcgC,KAC5EwoB,EAAsB97D,KAAKiM,IAAK,EAAKmgC,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAiB,KAAEF,MAAO23C,EAAcgC,GAAiB,IAClIyoB,EAAoB/7D,KAAKiM,IAAK,EAAKmgC,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAiB,KAAEF,MAAO23C,EAAcgC,GAAiB,KAEpI,MAAM0oB,EAAqI,GAA7Gh8D,KAAKuC,IAAI,EAAKvC,KAAKoB,IAAmC06D,EAAsBrlE,EAAOuP,iBAAkB,MAC7Hi2D,EAAiI,GAA3Gj8D,KAAKuC,IAAI,EAAKvC,KAAKoB,IAAmC26D,EAAoBtlE,EAAOuP,iBAAkB,MAC/H7Q,KAAK4/D,SAAWiH,EAChB7mE,KAAK6/D,cAAgBh1D,KAAKiM,IAAI,GAAMgwD,EAAcD,GAAiBhZ,GACnE4Y,EAAc57D,KAAKiM,IAAI+vD,EAAeC,GAOtC,IAAIC,EAA4BzzC,EAAWwd,UACvCk2B,EAA0B1zC,EAAWwd,UACrCm2B,GAAuB,EAEvBhwB,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAW,cAAcF,MAAO23C,EAAcgC,KAClF4oB,EAAoB9vB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,cAAcF,MAAO23C,EAAcgC,GAAiB,GACvH6oB,EAAkB/vB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,cAAcF,MAAO23C,EAAcgC,GAAiB,GACrH8oB,GAAc,GAGlB,MAAMC,EAAkCr8D,KAAKkB,OAAOg7D,EAAoB,GAAKzlE,EAAOsP,mBAAqB0wD,GACnG6F,EAAgCt8D,KAAKkB,OAAOi7D,EAAkB,GAAK1lE,EAAOsP,mBAAqB0wD,GACtE,MAA3BthE,KAAKy/D,oBAA+BwH,EAGpCjnE,KAAKw/D,qBAAuB0H,EAF5BlnE,KAAKw/D,qBAAuBx/D,KAAKy/D,mBAKrCz/D,KAAKy/D,mBAAqB0H,EAC1BT,EAAkF,IAAvD1mE,KAAKw/D,qBAAuBx/D,KAAKy/D,oBAA4BvR,EAExFluD,KAAK0/D,qBAAuB,EAC5B1/D,KAAK2/D,0BAA4B,EAAM9R,EAEvC,MAAMiB,EAAuB,EAAMjkD,KAAK8C,GAAKrM,EAAOwP,YAAcmmC,EAAMiX,iBACxEzkB,GAAM+lB,4BAA4BtxB,kBAAkB4wB,EAAcxtD,EAAOyP,eACzE/Q,KAAK8/D,YAAcr2B,GAAM+lB,4BAA4BjyB,EAAE,GACvDv9B,KAAK+/D,YAAct2B,GAAM+lB,4BAA4BhyB,EAAE,GACvDx9B,KAAKggE,YAAcv2B,GAAM+lB,4BAA4BhyB,EAAE,EAC1D,CAED,IAAI4pC,EAAgB,EACpB,GAAI5E,EAAY,CAIZ,IAAI6E,EAAyB/zC,EAAWsF,OACpC0uC,EAAuBh0C,EAAWsF,OAGlCqe,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAmB,OAAEF,MAAO23C,EAAcgC,KAC9EkpB,EAAiBpwB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAmB,OAAEF,MAAO23C,EAAcgC,GAAiB,GAChHmpB,EAAerwB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAmB,OAAEF,MAAO23C,EAAcgC,GAAiB,IAG9GlH,EAAM0rB,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcgC,KACnFkpB,IAAmBpwB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,WAAO+nB,OAAWA,GAAW,GAASjrB,EAAOyb,WAAWrY,WAAW,eAAe0Y,mBAAqB9b,EAAO4P,YAC/Lo2D,IAAiBrwB,EAAM2rB,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,WAAO+nB,OAAWA,GAAW,GAAQjrB,EAAOyb,WAAWrY,WAAW,eAAe0Y,mBAAqB9b,EAAO4P,aAGhM,MAAMq2D,EAAsH,KAAhG18D,KAAKuC,IAAI,EAAKvC,KAAKoB,IAA8Bo7D,EAAiB/lE,EAAO4P,YAAa,OAC5Gs2D,EAAkH,KAA9F38D,KAAKuC,IAAI,EAAKvC,KAAKoB,IAA8Bq7D,EAAehmE,EAAO4P,YAAa,OAE9GlR,KAAKwgE,WAAa+G,EAClBvnE,KAAKygE,iBAAmB+G,EAAYD,GAAe1Z,EACnDuZ,EAAgBv8D,KAAKiM,IAAIywD,EAAaC,GAEtC,MAAM1Y,EAAuB,EAAMjkD,KAAK8C,GAAKrM,EAAO0P,cAAgBimC,EAAMiX,iBAC1EzkB,GAAM+lB,4BAA4BtxB,kBAAkB4wB,EAAcxtD,EAAO2P,iBACzEjR,KAAK0gE,cAAgBj3B,GAAM+lB,4BAA4BjyB,EAAE,GACzDv9B,KAAK2gE,cAAgBl3B,GAAM+lB,4BAA4BhyB,EAAE,GACzDx9B,KAAK4gE,cAAgBn3B,GAAM+lB,4BAA4BhyB,EAAE,EAC5D,CAED,GAAIx9B,KAAKs7D,qBACLt7D,KAAKy7D,qBAAuB,EAC5Bz7D,KAAK07D,eAAiB,EACtB17D,KAAKu7D,oBAAqB,OACvB,GAAKv7D,KAAKu7D,mBA+CV,CAEHuJ,EAAsB,EACtBC,EAAoB,EACpBC,EAAsB,EACtBC,EAAoB,EAEpB,IAAIwC,EAA4B,EAC5BnF,IAAYmF,GAAqBxwB,EAAMuqB,uBACvCe,IAAUkF,GAAqBznE,KAAKo/D,eAAgBv8D,QACpD2/D,IAAYiF,GAAqBnmE,EAAO6P,uBAE5CnR,KAAK07D,gBAAkB7N,EACnB7tD,KAAK07D,gBAAkB+L,IACvBznE,KAAKw7D,yBAA0B,EAEtC,KA/DoC,CAKA,GAA7Bx7D,KAAKy7D,uBAGLqJ,EAAsB,GAFtBC,EAAoB,EAMxB,MAAM2C,EAA+B,EAAM,IACrCC,GAAwB98D,KAAK2C,KAAKk6D,GACxC,IAAIE,EAAwB,EAM5B,GAJItF,IACAsF,GAAiBtmE,EAAOmV,gBAGxB8rD,EAAU,CACV,MAAMsF,EAA+Bh9D,KAAKoB,IAAIw6D,EAAa,EAAMC,GAGjEkB,IAF0B,EAAM/8D,KAAK2C,KAAKq6D,GACFF,CAE3C,CAED,GAAInF,EAAY,CACZ,MAAMsF,EAAsC,EAAhBV,EACtBW,EAAqCzmE,EAAO6P,sBAAwB,EAAO+8C,EAC3E2Z,EAA+Bh9D,KAAKoB,IAAI67D,EAAa,EAAMC,GAGjEH,IAF0B,EAAM/8D,KAAK2C,KAAKq6D,GACAF,CAE7C,CAED,MACMK,EADwB1G,EAAiBpT,EACA0Z,EACzCK,EAA8BjoE,KAAKy7D,qBAAuBuM,EAC5DC,GAAuB,IACvBhD,EAAoB,GAGxBjlE,KAAKy7D,qBAAuBwM,EACxBjoE,KAAKy7D,sBAAwB,IAC7Bz7D,KAAKu7D,oBAAqB,EAEjC,CAkBDv7D,KAAKs8D,eAAiBwI,EACtB9kE,KAAKu8D,qBAAuBwI,EAAoBD,GAAuBjX,EACvE7tD,KAAK08D,eAAiBsI,EACtBhlE,KAAK28D,qBAAuBsI,EAAoBD,GAAuBnX,C,CAGpE,WAAAqU,CAAY5uC,EAAwB46B,GAEvC,GADAluD,KAAKi8D,YAAc,EACA,GAAf3oC,EAAWre,KACXjV,KAAKqK,KAAQrK,KAAY,QAAIsB,EAAOG,aAAa6xB,EAAWjyB,UAAUiB,QAAUhB,EAAOC,UAAU+xB,EAAWjyB,UAAUiB,QAElHtC,KAAKg7B,4BAA8B1H,EAAW0H,4BAC9Ch7B,KAAKi7B,kBAAoB3H,EAAW2H,kBACpCj7B,KAAKk7B,gBAAkB5H,EAAW4H,gBAClCl7B,KAAKm7B,iBAAmB7H,EAAW6H,iBACnCn7B,KAAKo7B,sBAAwB9H,EAAW8H,sBACxCp7B,KAAKq7B,oBAAsB/H,EAAW+H,oBAGvCr7B,KAAKkwC,aAAe5c,EAAW4c,aAClClwC,KAAKmwC,aAAe7c,EAAW6c,aAC/BnwC,KAAKowC,aAAe9c,EAAW8c,aAC/BpwC,KAAKqwC,iBAAmB/c,EAAW+c,iBACnCrwC,KAAKswC,WAAahd,EAAWgd,gBAC1B,GAAmB,GAAfhd,EAAWre,KAClBjV,KAAKqK,KAAQrK,KAAY,QAAIszB,EAAW4E,eAAkB5E,EAAWuH,uBACrE76B,KAAKi8D,YAAc,IACnBj8D,KAAKkwC,aAAe5c,EAAW4c,aAC/BlwC,KAAKmwC,aAAe7c,EAAW6c,aAC/BnwC,KAAKowC,aAAe9c,EAAW8c,aAC/BpwC,KAAKqwC,iBAAmB/c,EAAW+c,iBACnCrwC,KAAKswC,WAAahd,EAAWgd,gBAC1B,GAAmB,GAAfhd,EAAWre,KAClBjV,KAAKqK,KAAOgB,EAAYioB,EAAWgc,UAAWhkC,GAA6BC,QACxE,GAAmB,GAAf+nB,EAAWre,KAClBjV,KAAKqK,KAAOrK,KAAKmxC,cAAcrH,cAAcxW,EAAW6d,cAAe7d,EAAWre,MAClFjV,KAAKkwC,aAAe5c,EAAW4c,aAC/BlwC,KAAKmwC,aAAe7c,EAAW6c,aAC/BnwC,KAAKowC,aAAe9c,EAAW8c,aAC/BpwC,KAAKqwC,iBAAmB/c,EAAW+c,iBACnCrwC,KAAKswC,WAAahd,EAAWgd,gBAC1B,GAAmB,GAAfhd,EAAWre,KAClBjV,KAAKqK,KAAOrK,KAAKmxC,cAAcrH,cAAcxW,EAAW6d,cAAe7d,EAAWre,MAClFjV,KAAKkwC,aAAe5c,EAAW4c,aAC/BlwC,KAAKmwC,aAAe7c,EAAW6c,aAC/BnwC,KAAKowC,aAAe9c,EAAW8c,aAC/BpwC,KAAKqwC,iBAAmB/c,EAAW+c,iBACnCrwC,KAAKswC,WAAahd,EAAWgd,gBAC1B,GAAmB,GAAfhd,EAAWre,KAClBjV,KAAKqK,KAAOrK,KAAKwxC,aAAa1H,cAAcxW,EAAWke,aAAc,QAClE,GAAmB,GAAfle,EAAWre,KAAgC,CAClD,IAAK,IAAI1K,EAAY,EAAGA,EAAIjJ,EAAO0Y,UAAWzP,IAC1CvK,KAAKqxC,qBAAqB9mC,GAAGu/B,cAAcxW,EAAW+d,qBAAqB9mC,GAAI4wD,GAAgB+M,GAA8B39D,IAEjIvK,KAAKqK,KAAO,IACf,MACGrK,KAAKqK,KAAO,I,CAIb,cAAA89D,CAAe7iC,GAClB,GAAa,GAATtlC,KAAKiV,KACL,OAAOjV,KAAKqxC,qBAAqB/L,GAAOj7B,KAExC,MAAM,IAAIlI,MAAM,8C,CAIjB,iCAAOimE,CAA2B5jE,GACrC,OAAO6qC,GAAW+J,mBAAmB93C,EAAOkX,kBAA4B,EAARhU,GAAa,K,CAGzE,SAAO0jE,CAA8B1jE,GACzC,OAAO,GAAKqG,KAAK2C,KAAK2tD,GAAgBiN,2BAA2B5jE,G,EAIzE,MAAM6jE,GAAN,WAAAtoE,GACoBC,KAAW2mC,YAAsB,GAC1C3mC,KAAKk6C,OAAY,EACjBl6C,KAAwBsoE,yBAAkB,I,QAGxC7+B,GAED,aAAA8+B,GACJ,MAAMxlB,EAAuB/iD,KAAKgnB,KAAM80B,kBACxC,IAAK,IAAIvxC,EAAYvK,KAAKs6C,SAASz3C,OAAQ0H,EAAIw4C,EAAcx4C,IACzDvK,KAAKs6C,SAAS/vC,GAAK,IAAI89D,GAE3BroE,KAAKs6C,SAASz3C,OAASkgD,EACvB,IAAK,IAAIx4C,EAAY,EAAGA,EAAIw4C,EAAcx4C,IAAK,CAC3C,MAAM6W,EAAmBphB,KAAKgnB,KAAMszB,SAAS/vC,GACvCi+D,EAA6BxoE,KAAKs6C,SAAS/vC,GACjD,IAAK,IAAI4rB,EAAYqyC,EAAa7hC,YAAY9jC,OAAQszB,EAAI/U,EAAQulB,YAAY9jC,OAAQszB,IAClFqyC,EAAa7hC,YAAYxQ,GAAK,IAAIglC,GAItC,GAFAqN,EAAa7hC,YAAY9jC,OAASue,EAAQulB,YAAY9jC,OAElD2lE,EAAatuB,OAAS94B,EAAQ84B,QAC9BsuB,EAAatuB,MAAQ94B,EAAQ84B,MACzBsuB,EAAatuB,OACb,IAAK,MAAMwT,KAAmB8a,EAAa7hC,YACvC+mB,EAAgBqU,iBAI/B,C,CAGE,cAAA0G,CAAezhD,GAClB,GAAY,MAARA,EACA,IAAK,IAAIm1B,EAAuB,EAAGA,EAAen1B,EAAK80B,kBAAmBK,IACtE,IAAK,IAAIgC,EAA0B,EAAGA,EAAkBn3B,EAAKszB,SAAS6B,GAAcxV,YAAY9jC,OAAQs7C,IAAmB,CACvH,MAAM7qB,EAAyBtM,EAAKszB,SAAS6B,GAAcxV,YAAYwX,GACvE7qB,EAAWixC,iBAAmBjxC,EAAWyD,SACzCzD,EAAWkxC,eAAiB,KAC5BlxC,EAAW4jC,mBAAqB5jC,EAAWoF,WAC3CpF,EAAWo1C,iBAAmB,IACjC,C,CAIN,iBAAAC,CAAkB3hD,GAGrB,GAAY,MAARA,EAAc,CACdhnB,KAAKuoE,gBACL,MAAMjH,EAAyBthE,KAAK4oE,oBACpC,IAAK,IAAIzsB,EAAuB,EAAGA,EAAen1B,EAAK80B,kBAAmBK,IACtE,IAAK,IAAIgC,EAA0B,EAAGA,EAAkBn3B,EAAKszB,SAAS6B,GAAcxV,YAAY9jC,OAAQs7C,IAAmB,CACvH,MAAM7qB,EAAyBtM,EAAKszB,SAAS6B,GAAcxV,YAAYwX,GACjEuP,EAAmC1tD,KAAKs6C,SAAS6B,GAAcxV,YAAYwX,GACjF1U,GAAMw4B,2BAA2B3uC,GACjCo6B,EAAgByO,YAAc,EAC9BzO,EAAgB0O,gBAAkB,EAClC1O,EAAgB2O,aAAe,EAC/B3O,EAAgBwO,QAAU,EAC1BxO,EAAgBwU,YAAY5uC,EAAYtzB,KAAKkuD,kBAC7CR,EAAgB2T,yBAAyBrhE,KAAMszB,EAAYguC,EAC9D,CAGR,CAGD,IAAIuH,EAAa,IAAIn+D,aAAa,GAClC1K,KAAK8oE,eAAgB,EACrB9oE,KAAK+oE,WAAWF,EAAYA,EAAY,GAAG,GAC3C7oE,KAAK8oE,eAAgB,C,CAIlB,sBAAAE,GAEH,GAAiB,MAAbhpE,KAAKgnB,MAAgBhnB,KAAKgnB,KAAK+0B,gBAAkB,EAAG,CAGpD,IAAIktB,EAAoC,GACpCC,EAA2C,GAC/ClpE,KAAKmpE,UAAY,GACjBnpE,KAAKopE,cAAgB,GACrBppE,KAAKqpE,aAAe,GACpBrpE,KAAKspE,iBAAmB,GACxBtpE,KAAKupE,SAAW,GAChB,IAAK,IAAInoD,EAAkB,EAAGA,EAAUphB,KAAKgnB,KAAKI,kBAAoBpnB,KAAKgnB,KAAK6B,kBAAmBzH,IAAW,CAC1G8nD,EAAkB9nD,GAAW,GAC7BphB,KAAKqpE,aAAajoD,GAAW,GAC7BphB,KAAKspE,iBAAiBloD,GAAW,GAEjC,IAAK,IAAIkS,EAAqB,EAAGA,EAAatzB,KAAKgnB,KAAKszB,SAASl5B,GAASulB,YAAY9jC,OAAQywB,IAC1FtzB,KAAKqpE,aAAajoD,GAASkS,GAAc,GACzCtzB,KAAKspE,iBAAiBloD,GAASkS,GAAc,GAC7C41C,EAAkB9nD,GAASkS,GAAc,EAEhD,CAGD,IAAI2hC,EAAsBj1D,KAAKwpE,KAAOloE,EAAOsQ,aAAe5R,KAAKumC,KAGjE,IAAK,IAAI4V,EAAuBn8C,KAAKgnB,KAAKI,kBAAoBpnB,KAAKgnB,KAAK6B,kBAAmBszB,EAAen8C,KAAKgnB,KAAK80B,kBAAmBK,IACnI,IAAMn8C,KAAKgnB,KAAKszB,SAAS6B,GAAmB,MAAG,CAE3C,IAAIU,EAEJ,IAAK,IAAI4sB,EAAqBzpE,KAAK88C,IAAK2sB,GAAc,EAAGA,IAGrD,GAFA5sB,EAAU78C,KAAKgnB,KAAK8kC,WAAW3P,EAAcstB,GAE9B,MAAX5sB,EAAiB,CACjB,IAAI6sB,EAAwB7sB,EAAQlW,YAAY,GAC5CrT,EAAyBtzB,KAAKgnB,KAAKszB,SAAS6B,GAAcxV,YAAY+iC,GACtEC,EAA2B,GAC3BC,EAA4B,GAE5BC,EAAsBJ,GAAczpE,KAAK88C,IACvCmY,EACAj1D,KAAK8pE,eAAeL,GAE1B,IAAK,MAAM5iC,KAAQgW,EAAQnW,MACvB,GAAIG,EAAKrF,OAASqoC,IAAwE,MAAzDF,EAAeroE,EAAO4Y,SAAW,EAAI2sB,EAAKrB,QAAQ,KAAeqB,EAAKpF,IAAMkoC,EAAeroE,EAAO4Y,SAAW,EAAI2sB,EAAKrB,QAAQ,KAK3J,GAJIqB,EAAKrF,OAASqoC,IACdF,EAAeroE,EAAO4Y,SAAW,EAAI2sB,EAAKrB,QAAQ,IAAMqB,EAAKrF,MAC7DooC,EAAgBtoE,EAAO4Y,SAAW,EAAI2sB,EAAKrB,QAAQ,IAAMqB,EAAKpB,KAAK,GAAGnJ,MAEtEuK,EAAKpF,KAAOooC,EACZF,EAAeroE,EAAO4Y,SAAW,EAAI2sB,EAAKrB,QAAQ,IAAMqB,EAAKpF,IAC7DmoC,EAAgBtoE,EAAO4Y,SAAW,EAAI2sB,EAAKrB,QAAQ,IAAMqB,EAAKpB,KAAKoB,EAAKpB,KAAK5iC,OAAS,GAAGy5B,SAExF,CACDqtC,EAAeroE,EAAO4Y,SAAW,EAAI2sB,EAAKrB,QAAQ,IAAMqkC,EAExD,IAAK,IAAIE,EAAS,EAAGA,EAASljC,EAAKpB,KAAK5iC,OAAQknE,IAC5C,GAAIljC,EAAKpB,KAAKskC,GAAQ3kC,KAAOyB,EAAKrF,MAAQqoC,EAAY,CAClD,MAAMG,EAA2BnjC,EAAKpB,KAAKskC,GAAQ3kC,KAAOyB,EAAKpB,KAAKskC,EAAS,GAAG3kC,KAC1E6kC,EAA0BJ,EAAahjC,EAAKrF,MAAQqF,EAAKpB,KAAKskC,EAAS,GAAG3kC,KAC1E8kC,EAAsBrjC,EAAKpB,KAAKskC,GAAQztC,KAAOuK,EAAKpB,KAAKskC,EAAS,GAAGztC,KAE3EstC,EAAgBtoE,EAAO4Y,SAAW,EAAI2sB,EAAKrB,QAAQ,IAAM36B,KAAKkB,MAAM86B,EAAKpB,KAAKskC,EAAS,GAAGztC,KAAO4tC,EAAcD,EAAkBD,GACjID,EAASljC,EAAKpB,KAAK5iC,MACtB,CAER,CAKT,IAAK,IAAIqkC,EAAc,EAAGA,EAAM5lC,EAAO4Y,SAAUgtB,IAC7C,GAA2B,MAAvByiC,EAAeziC,GACf,GAAI5lC,EAAOyb,WAAWuW,EAAWvW,WAAWmqB,IAAM/pB,SACI,MAA9C8rD,EAAe31C,EAAWvW,WAAWmqB,KAAiBuiC,EAAanoE,EAAOsQ,aAAe5R,KAAKgnB,KAAKshB,YAAcqhC,EAAeziC,GAAQ+hC,EAAe31C,EAAWvW,WAAWmqB,OAC7KlnC,KAAKmqE,YAAYP,EAAgB1iC,GAAM0iC,EAAgB1iC,GAAM5T,EAAW5R,YAAYwlB,GAAM5T,EAAWge,eAAepK,GAAM5T,EAAWvW,WAAWmqB,IAChJ+hC,EAAe31C,EAAWvW,WAAWmqB,IAAQuiC,EAAanoE,EAAOsQ,aAAe5R,KAAKgnB,KAAKshB,YAAcqhC,EAAeziC,QAG1H,CAED,IAAIkjC,EAA4B,GAEhC,GAAI92C,EAAWge,eAAepK,IAAQlnC,KAAKgnB,KAAKszB,SAAShnB,EAAW5R,YAAYwlB,IAAMP,YAAY9jC,OAC9F,IAAK,IAAI0H,EAAY,EAAGA,EAAIvK,KAAKgnB,KAAKszB,SAAShnB,EAAW5R,YAAYwlB,IAAMP,YAAY9jC,OAAQ0H,IAC5F6/D,EAAgB3/D,KAAKF,QAIxB,GAAI+oB,EAAWge,eAAepK,GAAOlnC,KAAKgnB,KAAKszB,SAAShnB,EAAW5R,YAAYwlB,IAAMP,YAAY9jC,OAAQ,CAC1G,MAAMwnE,EAA6BrqE,KAAKgnB,KAAK8kC,WAAWx4B,EAAW5R,YAAYwlB,GAAMuiC,GACnE,MAAdY,IACAD,EAAkBC,EAAW1jC,YACpC,MACGyjC,EAAgB3/D,KAAK6oB,EAAWge,eAAepK,IAEnD,IAAK,IAAIiX,EAA0B,EAAGA,EAAkBisB,EAAgBvnE,OAAQs7C,IAAmB,CAG/F,MAAMmsB,EAAyBh3C,EAAWvW,WAAWmqB,IAAQ5lC,EAAOyb,WAAWrY,WAAW,aAAaF,MACjG+lE,EAA2Bj3C,EAAWvW,WAAWmqB,IAAQ5lC,EAAOyb,WAAWrY,WAAW,eAAeF,MAC3G,IAAIgmE,EAA0Bl3C,EAAWvW,WAAWmqB,GAQpD,GAPIojC,EACAE,EAAkBlpE,EAAOyb,WAAWla,QAA2C,EAAjCywB,EAAW+T,eAAeH,IACjEqjC,IAEPC,EAAkBlpE,EAAOyb,WAAWla,OAAS,EAAK,EAAIvB,EAAO2S,iBAAqD,EAAjCqf,EAAW+T,eAAeH,KAGN,MAArGgiC,EAAkB51C,EAAW5R,YAAYwlB,IAAMkjC,EAAgBjsB,IAAkBqsB,IAC9Ef,EAAanoE,EAAOsQ,aAAe5R,KAAKgnB,KAAKshB,YAAcqhC,EAAeziC,GAAOgiC,EAAkB51C,EAAW5R,YAAYwlB,IAAMkjC,EAAgBjsB,IAAkBqsB,GAAmB,CAExL,GAAIF,EAAe,CACf,IAAIG,EAA4BzqE,KAAKgnB,KAAKszB,SAAShnB,EAAW5R,YAAYwlB,IAAMP,YAAYyjC,EAAgBjsB,IAC5G,GAAsC,GAAlC7qB,EAAW+T,eAAeH,GAC1BujC,EAAclG,iBAAmBkG,EAAc96B,aAAai6B,EAAgB1iC,QACzE,CACH,IAAK,IAAI38B,EAAY,EAAGA,EAAIjJ,EAAO6S,iBAAkB5J,IACX,MAAlCkgE,EAAclG,kBAA4BkG,EAAclG,kBAAoBkG,EAAc96B,aAAaplC,KACvGkgE,EAAclG,iBAAmB,IAAI93B,GACrCg+B,EAAclG,iBAAiBv8B,eAAeyiC,EAAc96B,aAAaplC,GAAIw8B,gBAC7Ex8B,EAAIjJ,EAAO6S,kBAGmB,MAAlCs2D,EAAclG,kBAA4B15D,KAAKic,OAAOwM,EAAW+T,eAAeH,GAAO,GAAK,GAAKujC,EAAclG,iBAAiB53B,oBAC5HrZ,EAAW+T,eAAeH,GAAO,EACjCujC,EAAclG,iBAAiB73B,cAAc7hC,KAAKic,OAAOwM,EAAW+T,eAAeH,GAAO,GAAK,IAAI+D,KAAO2+B,EAAgB1iC,GAE1HujC,EAAclG,iBAAiB73B,cAAc7hC,KAAKic,OAAOwM,EAAW+T,eAAeH,GAAO,GAAK,IAAIgE,KAAO0+B,EAAgB1iC,GAErI,CACDujC,EAAcjG,eAAiBiG,EAAclG,gBAChD,MAAM,GAAIgG,EAAiB,CACxB,IAAIE,EAA4BzqE,KAAKgnB,KAAKszB,SAAShnB,EAAW5R,YAAYwlB,IAAMP,YAAYyjC,EAAgBjsB,IAC5G,GAAsC,GAAlC7qB,EAAW+T,eAAeH,GAC1BujC,EAAcvT,mBAAqBuT,EAAc76B,eAAeg6B,EAAgB1iC,QAC7E,CACH,IAAK,IAAI38B,EAAY,EAAGA,EAAIjJ,EAAO6S,iBAAkB5J,IACT,MAApCkgE,EAAcvT,oBAA8BuT,EAAcvT,oBAAsBuT,EAAc76B,eAAerlC,KAC7GkgE,EAAcvT,mBAAqB,IAAIzqB,GACvCg+B,EAAcvT,mBAAmBlvB,eAAeyiC,EAAc76B,eAAerlC,GAAIw8B,gBACjFx8B,EAAIjJ,EAAO6S,kBAGqB,MAApCs2D,EAAcvT,oBAA8BrsD,KAAKic,OAAOwM,EAAW+T,eAAeH,GAAO,GAAK,GAAKujC,EAAcvT,mBAAmBvqB,oBAChIrZ,EAAW+T,eAAeH,GAAO,EACjCujC,EAAcvT,mBAAmBxqB,cAAc7hC,KAAKic,OAAOwM,EAAW+T,eAAeH,GAAO,GAAK,IAAI+D,KAAO2+B,EAAgB1iC,GAE5HujC,EAAcvT,mBAAmBxqB,cAAc7hC,KAAKic,OAAOwM,EAAW+T,eAAeH,GAAO,GAAK,IAAIgE,KAAO0+B,EAAgB1iC,GAEvI,CACDujC,EAAc/B,iBAAmB+B,EAAcvT,kBAClD,MACIl3D,KAAKmqE,YAAYP,EAAgB1iC,GAAM0iC,EAAgB1iC,GAAM5T,EAAW5R,YAAYwlB,GAAMkjC,EAAgBjsB,GAAkBqsB,GAEjItB,EAAkB51C,EAAW5R,YAAYwlB,IAAMkjC,EAAgBjsB,IAAkBqsB,GAAmBf,EAAanoE,EAAOsQ,aAAe5R,KAAKgnB,KAAKshB,YAAcqhC,EAAeziC,EACjL,CACJ,CACJ,CAGZ,CAER,CAER,C,CAME,0BAAAwjC,CAA2Bp3C,GAC9B,GAAiB,MAAbtzB,KAAKgnB,KAET,IAAK,IAAIkgB,EAAc,EAAGA,EAAM5lC,EAAO4Y,SAAUgtB,IAAO,CAGpD,GAFA5T,EAAWie,kBAAkBrK,IAAO,GAEA,GAAhC5T,EAAW5R,YAAYwlB,GAAY,CACD,GAA9B5T,EAAWvW,WAAWmqB,KACtB5T,EAAWie,kBAAkBrK,IAAO,GACxC,QACH,CACD,MAAM9lB,EAA0BphB,KAAKgnB,KAAKszB,SAAShnB,EAAW5R,YAAYwlB,IAC1E,GAAe,MAAX9lB,EAAiB,SACrB,IAAIupD,EAAkC,GAElCA,EADAr3C,EAAWge,eAAepK,IAAQ9lB,EAAQulB,YAAY9jC,OAClCue,EAAQulB,YAER,CAACvlB,EAAQulB,YAAYrT,EAAWge,eAAepK,KAEvE,IAAK,IAAI38B,EAAY,EAAGA,EAAIogE,EAAkB9nE,OAAQ0H,IAAK,CACvD,MAAMkgE,EAAmCE,EAAkBpgE,GAC3D,GAAqB,MAAjBkgE,EAAuB,SAC3B,MAAMG,EAActpE,EAAOyb,WAAWuW,EAAWvW,WAAWmqB,IAAMhjC,KAEwB,IAAnF5C,EAAOyb,WAAWuW,EAAWvW,WAAWmqB,IAAM7pB,oBAA2CotD,EAAc17D,QAAW,GAAKzN,EAAOyb,WAAWuW,EAAWvW,WAAWmqB,IAAM7pB,mBAEjJ,GAAlBotD,EAAcx1D,MAAuE,IAA1Cw1D,EAAcx1D,OAAyC,eAAP21D,GAA+B,eAAPA,GAA+B,eAAPA,GAA+B,eAAPA,GAA+B,eAAPA,IACnJ,IAA1CH,EAAcx1D,OAAwC,eAAP21D,GAA+B,eAAPA,IACnD,GAAlBH,EAAcx1D,MAAgD,GAAlBw1D,EAAcx1D,OAA4C,eAAP21D,GAA+B,kBAAPA,IACrG,GAAlBH,EAAcx1D,OAA4C,YAAP21D,GAA4B,UAAPA,GAA0B,aAAPA,KAE3FH,EAAcj4B,WAAWv7B,cAAuB,aAAP2zD,GAA6B,aAAPA,IAEhEH,EAAcryC,cAAuB,aAAPwyC,IAC7BH,EAAcryC,eAAwB,eAAPwyC,GAA+B,gBAAPA,IACjD,aAAPA,GAAsB//D,KAAKic,OAAOwM,EAAW+T,eAAeH,GAAO,GAAK,GAAKujC,EAAcxxB,6BAA4B,IAEvHwxB,EAAclyC,gBAAyB,eAAPqyC,IAC/BH,EAAclyC,iBAA0B,iBAAPqyC,GAAiC,kBAAPA,IACrD,eAAPA,GAAwB//D,KAAKic,OAAOwM,EAAW+T,eAAeH,GAAO,GAAK,GAAKujC,EAAcxxB,6BAA4B,KAE7H3lB,EAAWie,kBAAkBrK,IAAO,EACpC38B,EAAIogE,EAAkB9nE,OAE7B,CAEJ,C,CAGG,6BAAOgoE,CAAuBp9D,GAClC,OAAQ5C,KAAKoB,IAAI,GAAMwB,EAAY,IAAQ,GAAO,E,CA8EtD,WAAWq9D,GACP,OAAO9qE,KAAK8oE,a,CAGhB,aAAWiC,GACP,OAAO/qE,KAAKgrE,W,CAGhB,YAAWj7C,GACP,OAAO/vB,KAAKirE,gB,CAGhB,YAAWl7C,CAASnhB,GAChB,GAAiB,MAAb5O,KAAKgnB,KAAc,CACnBhnB,KAAKirE,iBAAmBpgE,KAAKiM,IAAI,EAAGjM,KAAKuC,IAAIpN,KAAKgnB,KAAK01B,SAAU9tC,IACjE,IAAIs8D,EAAoBlrE,KAAKirE,iBAC7BjrE,KAAK88C,IAAMjyC,KAAKic,MAAMokD,GACtBA,EAAYlrE,KAAKgnB,KAAKshB,aAAe4iC,EAAYlrE,KAAK88C,KACtD98C,KAAKwpE,KAAO3+D,KAAKic,MAAMokD,GACvBA,EAAY5pE,EAAOsQ,cAAgBs5D,EAAYlrE,KAAKwpE,MACpDxpE,KAAKumC,KAAO17B,KAAKic,MAAMokD,GACvBA,EAAY5pE,EAAOuQ,cAAgBq5D,EAAYlrE,KAAKumC,MACpDvmC,KAAKwnC,KAAO38B,KAAKic,MAAMokD,GACvBlrE,KAAKmrE,oBAAsB,EAC3BnrE,KAAKorE,iBAAkB,EACvBprE,KAAKqrE,QAAU,IAClB,C,CAGE,gBAAAC,GACH,GAAiB,MAAbtrE,KAAKgnB,KAAc,MAAM,IAAI7kB,MACjC,OAAOnC,KAAK4oE,oBAAsBtnE,EAAOuQ,aAAevQ,EAAOsQ,aAAe5R,KAAKgnB,KAAKshB,W,CAGrF,eAAAijC,GACH,OAAQvrE,KAAKwpE,KAAOloE,EAAOsQ,aAAe5R,KAAKumC,MAAQjlC,EAAOuQ,aAAe7R,KAAKwnC,I,CAE/E,cAAAgkC,GACH,OAAQxrE,KAAKwpE,KAAOloE,EAAOsQ,aAAe5R,KAAKumC,I,CAG3C,cAAAujC,CAAehtB,GACnB,GAAiB,MAAb98C,KAAKgnB,KAAc,OAAO,EAC9B,IAAI6iD,EAAqBvoE,EAAOsQ,aAAe5R,KAAKgnB,KAAKshB,YACzD,IAAK,IAAIlnB,EAAkBphB,KAAKgnB,KAAKI,kBAAoBpnB,KAAKgnB,KAAK6B,kBAAmBzH,EAAUphB,KAAKgnB,KAAK80B,kBAAmB16B,IAAW,CACpI,IAAIy7B,EAA0B78C,KAAKgnB,KAAK8kC,WAAW1qC,EAAS07B,GAC5D,GAAe,MAAXD,EAAiB,CACjB,IAAIvpB,EAAyBtzB,KAAKgnB,KAAKszB,SAASl5B,GAASulB,YAAYkW,EAAQlW,YAAY,IACzF,IAAK,IAAIO,EAAc,EAAGA,EAAM5lC,EAAO4Y,SAAUgtB,IAC7C,GAAI5T,EAAWvW,WAAWmqB,IAAQ5lC,EAAOyb,WAAWrY,WAAW,YAAYF,MACvE,IAAK,MAAMqiC,KAAQgW,EAAQnW,MACnBG,EAAKrB,QAAQ,IAAOlkC,EAAO4Y,SAAW,EAAIgtB,GAEtC2iC,EAAahjC,EAAKrF,QAClBqoC,EAAahjC,EAAKrF,MAKzC,CACJ,CACD,OAAOqoC,C,CAIJ,eAAA4B,CAAgBviB,EAAsBE,EAAsBsiB,GAC/D,GAAiB,MAAb1rE,KAAKgnB,KACL,OAAQ,EAGZ,IAAI2kD,EAAmBziB,EAAc,EAAIlpD,KAAKgnB,KAAKw1B,UAC/CovB,EAAiBxiB,EAAcppD,KAAKgnB,KAAK01B,SAAY18C,KAAKgnB,KAAKw1B,UAAYx8C,KAAKgnB,KAAKy1B,WACrFovB,GAAwB,EACxBC,GAA0B,EAC1BC,EAAoB/rE,KAAKgnB,KAAKs0B,MAGlC,IAAK,IAAIl6B,EAAkBphB,KAAKgnB,KAAK80B,kBAAoB,EAAG16B,GAAWphB,KAAKgnB,KAAKI,kBAAoBpnB,KAAKgnB,KAAK6B,kBAAmBzH,IAC9H,IAAK,IAAI07B,EAAc6uB,EAAU7uB,EAAM8uB,EAAQ9uB,IAAO,CAClD,IAAID,EAA0B78C,KAAKgnB,KAAK8kC,WAAW1qC,EAAS07B,GAC5D,GAAe,MAAXD,EAAiB,CACjB,IAAIvpB,EAAyBtzB,KAAKgnB,KAAKszB,SAASl5B,GAASulB,YAAYkW,EAAQlW,YAAY,IACzF,IAAK,IAAIO,EAAc,EAAGA,EAAM5lC,EAAO4Y,SAAUgtB,IACzC5T,EAAWvW,WAAWmqB,IAAQ5lC,EAAOyb,WAAWrY,WAAkB,MAAEF,QACpEqnE,GAAe,GAEfv4C,EAAWvW,WAAWmqB,IAAQ5lC,EAAOyb,WAAWrY,WAAW,YAAYF,QACvEsnE,GAAiB,EAG5B,CACJ,CAIL,GAAIH,EAAW,EAAG,CACd,IAAIK,EAAgC,KAChCC,EAA2B,EAE/B,IAAK,IAAInvB,EAAc6uB,EAAW,EAAG7uB,GAAO,EAAGA,IAAO,CAClD,IAAK,IAAI17B,EAAkBphB,KAAKgnB,KAAK80B,kBAAoB,EAAG16B,GAAWphB,KAAKgnB,KAAKI,kBAAoBpnB,KAAKgnB,KAAK6B,kBAAmBzH,IAAW,CACzI,IAAIy7B,EAAU78C,KAAKgnB,KAAK8kC,WAAW1qC,EAAS07B,GAE5C,GAAe,MAAXD,EAAiB,CACjB,IAAI6sB,EAAwB7sB,EAAQlW,YAAY,GAC5CrT,EAAyBtzB,KAAKgnB,KAAKszB,SAASl5B,GAASulB,YAAY+iC,GAEjEG,EAAqB7pE,KAAK8pE,eAAehtB,GAE7C,IAAK,MAAMjW,KAAQgW,EAAQnW,MACvB,GAAIpT,EAAWvW,WAAWzb,EAAO4Y,SAAW,EAAI2sB,EAAKrB,QAAQ,KAAOlkC,EAAOyb,WAAWrY,WAAkB,MAAEF,OAClGqiC,EAAKrF,MAAQqoC,IAAiC,MAAlBmC,GAA0BnlC,EAAKpF,IAAMuqC,GACjE,GAAInlC,EAAKpF,KAAOooC,EACZmC,EAAiBnlC,EAAKpF,IACtBwqC,EAAmBplC,EAAKpB,KAAKoB,EAAKpB,KAAK5iC,OAAS,GAAGy5B,SAElD,CACD0vC,EAAiBnC,EAEjB,IAAK,IAAIE,EAAS,EAAGA,EAASljC,EAAKpB,KAAK5iC,OAAQknE,IAC5C,GAAIljC,EAAKpB,KAAKskC,GAAQ3kC,KAAOyB,EAAKrF,MAAQqoC,EAAY,CAClD,MAAMG,EAA2BnjC,EAAKpB,KAAKskC,GAAQ3kC,KAAOyB,EAAKpB,KAAKskC,EAAS,GAAG3kC,KAC1E6kC,EAA0BJ,EAAahjC,EAAKrF,MAAQqF,EAAKpB,KAAKskC,EAAS,GAAG3kC,KAC1E8kC,EAAsBrjC,EAAKpB,KAAKskC,GAAQztC,KAAOuK,EAAKpB,KAAKskC,EAAS,GAAGztC,KAE3E2vC,EAAmBphE,KAAKkB,MAAM86B,EAAKpB,KAAKskC,EAAS,GAAGztC,KAAO4tC,EAAcD,EAAkBD,GAC3FD,EAASljC,EAAKpB,KAAK5iC,MACtB,CAER,CAIhB,CACJ,CAGqB,MAAlBmpE,IACAD,EAAYE,EAAmB3qE,EAAOyb,WAAWrY,WAAkB,MAAE0Y,kBACrE0/B,GAAO,EAEd,CACJ,CAED,GAAI+uB,GAAgBC,EAAgB,CAEhC,IAAIhvB,EAAc6uB,EACdO,GAAiB,EACjB/rE,EAAuB,EAE3B,MAAQ+rE,GAAO,CAEX,IAAIrC,EAAqBvoE,EAAOsQ,aAAe5R,KAAKgnB,KAAKshB,YACrD2sB,EAAsB,EAO1B,GALI6W,IACAjC,EAAa7pE,KAAK8pE,eAAehtB,IAIjC+uB,EAAc,CACd,IAAIM,GAAoB,EACxB,IAAK,IAAI/qD,EAAkBphB,KAAKgnB,KAAK80B,kBAAoB,EAAG16B,GAAWphB,KAAKgnB,KAAKI,kBAAoBpnB,KAAKgnB,KAAK6B,kBAAmBzH,IAC9H,GAAgB,GAAZ+qD,EAAmB,CACnB,IAAItvB,EAA0B78C,KAAKgnB,KAAK8kC,WAAW1qC,EAAS07B,GAC5D,GAAe,MAAXD,EAAiB,CACjB,IAAIvpB,EAAyBtzB,KAAKgnB,KAAKszB,SAASl5B,GAASulB,YAAYkW,EAAQlW,YAAY,IACzF,IAAK,IAAIO,EAAc,EAAGA,EAAM5lC,EAAO4Y,SAAUgtB,IAC7C,GAAgB,GAAZilC,GAAqB74C,EAAWvW,WAAWmqB,IAAQ5lC,EAAOyb,WAAWrY,WAAkB,MAAEF,OACtFq4C,EAAQnW,MAAM0lC,MAAK34C,GAAKA,EAAE+R,QAAQ,IAAOlkC,EAAO4Y,SAAW,EAAIgtB,IAAO,CAEzEilC,GAAW,EAEXtvB,EAAQnW,MAAM2lC,MAAK,SAAU9uC,EAAGC,GAAK,OAAQD,EAAEiE,OAAShE,EAAEgE,MAASjE,EAAEiI,QAAQ,GAAKhI,EAAEgI,QAAQ,GAAKjI,EAAEiE,MAAQhE,EAAEgE,KAAM,IACnH,IAAK,MAAMqF,KAAQgW,EAAQnW,MACvB,GAAIG,EAAKrB,QAAQ,IAAOlkC,EAAO4Y,SAAW,EAAIgtB,IAE1C/mC,GAAiB0K,KAAKuC,IAAIy8D,EAAa5U,EAAapuB,EAAKrF,MAAQyzB,GAAgB3zD,EAAOuQ,aAAe7R,KAAKssE,6BAA6BP,GAErIllC,EAAKrF,MAAQqoC,GACb,IAAK,IAAIE,EAAiB,EAAGA,EAASljC,EAAKpB,KAAK5iC,OAAQknE,IAAU,CAE9D,GAAIljC,EAAKpB,KAAKskC,EAAS,GAAG3kC,KAAOyB,EAAKrF,OAASqoC,EAAY,CACvD,MAAM0C,EAAqBjrE,EAAOuQ,aAAehH,KAAKuC,IAAIy8D,GAAchjC,EAAKrF,MAAQqF,EAAKpB,KAAKskC,EAAS,GAAG3kC,MAAOyB,EAAKpB,KAAKskC,GAAQ3kC,KAAOyB,EAAKpB,KAAKskC,EAAS,GAAG3kC,MAC3JonC,EAAuB3lC,EAAKpB,KAAKskC,EAAS,GAAGztC,KAAOh7B,EAAOyb,WAAWrY,WAAkB,MAAE0Y,kBAChG,IAAIqvD,EAAuB5lC,EAAKpB,KAAKskC,GAAQztC,KAAOh7B,EAAOyb,WAAWrY,WAAkB,MAAE0Y,kBACtFypB,EAAKpB,KAAKskC,GAAQ3kC,KAAOyB,EAAKrF,MAAQqoC,IAEtC4C,EAAe5lC,EAAKpB,KAAKskC,EAAS,GAAGztC,MAAQuK,EAAKpB,KAAKskC,GAAQztC,KAAOuK,EAAKpB,KAAKskC,EAAS,GAAGztC,OAASutC,GAAchjC,EAAKrF,MAAQqF,EAAKpB,KAAKskC,EAAS,GAAG3kC,QAAUyB,EAAKpB,KAAKskC,GAAQ3kC,KAAOyB,EAAKpB,KAAKskC,EAAS,GAAG3kC,MAAQ9jC,EAAOyb,WAAWrY,WAAkB,MAAE0Y,mBAEjQ,IAAIsvD,EAAoBprE,EAAOsQ,aAAetQ,EAAOuQ,aAAe,GAiBhE1R,GAfAssE,GAAgBD,GAeExsE,KAAKkuD,iBAAmBqe,GAAc1hE,KAAKT,IAAIsiE,EAAYD,EAAeF,GAAc1hE,KAAKT,IAAIsiE,EAAYF,EAAeD,KAAgBG,GAAaF,EAAeC,IAM1KF,EAAavsE,KAAKssE,6BAA6BG,GAGnEV,EAAYU,CACf,CACDxX,EAAcpqD,KAAKuC,IAAIy5B,EAAKrF,MAAQqF,EAAKpB,KAAKskC,GAAQ3kC,KAAMykC,EAC/D,CAIhB,CAER,CACJ,CAER,CAGD1pE,IAAiB0pE,EAAa5U,GAAe3zD,EAAOuQ,aAAe7R,KAAKssE,6BAA6BP,GAErGjvB,IACY,GAAR4uB,GAAa5uB,GAAO98C,KAAKgnB,KAAKw1B,UAAYx8C,KAAKgnB,KAAKy1B,aACpDK,EAAM98C,KAAKgnB,KAAKw1B,UACZkvB,EAAO,GAAGA,KAEd5uB,GAAO8uB,IACPM,GAAQ,EAGf,CAED,OAAOrhE,KAAK2S,KAAKrd,EACpB,CAGG,OAAOH,KAAKsrE,mBAAqBtrE,KAAK2sE,aAAazjB,EAAaE,EAAasiB,E,CAI9E,YAAAiB,CAAazjB,EAAsBE,EAAsBwjB,EAAuB5sE,KAAK6sE,iBACxF,GAAiB,MAAb7sE,KAAKgnB,KAAc,MAAM,IAAI7kB,MACjC,IAAI83C,EAAej6C,KAAKgnB,KAAKy1B,YAAcmwB,EAAe,GAG1D,OAFI1jB,IAAajP,GAAQj6C,KAAKgnB,KAAKw1B,WAC/B4M,IAAanP,GAAQj6C,KAAKgnB,KAAK01B,UAAY18C,KAAKgnB,KAAKw1B,UAAYx8C,KAAKgnB,KAAKy1B,aACxExC,C,CAGX,WAAAl6C,CAAYinB,EAA6B,MA/UlChnB,KAAgBkuD,iBAAW,MAO3BluD,KAAIgnB,KAAgB,KACpBhnB,KAAkB8sE,oBAAY,EAC9B9sE,KAAyB+sE,2BAAY,EACrC/sE,KAAiBgtE,kBAAW,EAC5BhtE,KAAqBitE,sBAAW,EAChCjtE,KAAgBktE,kBAAY,EAC5BltE,KAAoBmtE,sBAAY,EAChCntE,KAAgBotE,iBAAa,GAC7BptE,KAAoBqtE,qBAAa,GACjCrtE,KAAgBstE,iBAAW,EAC3BttE,KAAoButE,qBAAW,EAC/BvtE,KAAoBwtE,qBAAa,GACjCxtE,KAAwBytE,yBAAa,GACrCztE,KAAe6sE,iBAAY,EAC3B7sE,KAAM+5B,OAAW,EACjB/5B,KAAoB0tE,qBAAW,EAC/B1tE,KAAU2tE,YAAY,EACtB3tE,KAAe4tE,iBAAY,EAC3B5tE,KAAgB6tE,kBAAY,EAC5B7tE,KAAa8tE,eAAY,EACzB9tE,KAAQupE,SAAc,GACrBvpE,KAAU+tE,YAAY,EACtB/tE,KAAgBirE,iBAAW,EAC3BjrE,KAAG88C,IAAW,EACd98C,KAAOqrE,QAAkB,KACzBrrE,KAAOguE,QAAkB,KACzBhuE,KAAIwpE,KAAW,EACfxpE,KAAIumC,KAAW,EACfvmC,KAAIwnC,KAAW,EAChBxnC,KAAeorE,iBAAY,EAC3BprE,KAAaiuE,eAAY,EACzBjuE,KAAmBmrE,oBAAW,EAC7BnrE,KAASmpE,UAAsB,GAC/BnpE,KAAYqpE,aAA0B,GACtCrpE,KAAaopE,cAAsB,GACnCppE,KAAgBspE,iBAA0B,GAC1CtpE,KAAa8oE,eAAY,EACzB9oE,KAAWgrE,aAAY,EACvBhrE,KAAgBkuE,iBAAW,EAC3BluE,KAAqCmuE,uCAAY,EAIjDnuE,KAAAouE,wBAA8C,IAAIpjC,GACnDhrC,KAAAyvD,sBAA2C,IAAIlwB,GAC/Cv/B,KAAOquE,SAAY,EAOTruE,KAAQs6C,SAAmB,GAC3Bt6C,KAAAsuE,SAAwB,IAAIhzC,GAC5Bt7B,KAAAuuE,sBAA4C/rE,MAAMlB,EAAO8V,cAAcugD,KAAK,MAErF33D,KAAgBwuE,kBAAY,EAC5BxuE,KAAyByuE,2BAAY,EACrCzuE,KAAkB0uE,mBAAW,EAC7B1uE,KAAsB2uE,uBAAW,EACjC3uE,KAAe4uE,gBAAW,EAC1B5uE,KAAK6uE,MAAW,EAEhB7uE,KAA8B8uE,+BAAwB,KAEtD9uE,KAAQ+uE,SAAe,KACvB/uE,KAAUgvE,WAAe,KAyjBzBhvE,KAAAivE,qBAAwBC,IAC5B,MAAMC,EAAeD,EAAqBC,aACpCC,EAA4BD,EAAazsE,eAAe,GACxD2sE,EAA4BF,EAAazsE,eAAe,GAM9D,IAJI1C,KAAKmuE,uCAA4D,GAAlBiB,EAAY,IAA+B,GAAlBC,EAAY,IAAqD,GAAxCD,EAAYD,EAAatsE,OAAS,IAAqD,GAAxCwsE,EAAYF,EAAatsE,OAAS,KAElL7C,KAAKmuE,uCAAwC,IAE5CnuE,KAAKmuE,sCAAuC,CAE7C,MAAMtrE,EAAiBssE,EAAatsE,OACpC,IAAK,IAAI0H,EAAY,EAAGA,EAAI1H,EAAQ0H,IAChC6kE,EAAY7kE,GAAK,EACjB8kE,EAAY9kE,GAAK,CAExB,EAEIvK,KAAK8oE,eAAiBwG,YAAYC,OAASvvE,KAAKkuE,iBACjDluE,KAAKwvE,mBAELxvE,KAAK+oE,WAAWqG,EAAaC,EAAaF,EAAatsE,OAAQ7C,KAAK8oE,eAEhE9oE,KAAK2tE,aACD3tE,KAAK0tE,sBAAwB,GAC7BnxC,GAAOG,MAAM,qBAAsB0yC,EAAaC,GAChDrvE,KAAK0tE,qBAAuB,GAE5B1tE,KAAK0tE,wBAGhB,EAjVD1tE,KAAKyvE,0BACO,MAARzoD,GAAchnB,KAAK0vE,QAAQ1oD,E,CAG5B,OAAA0oD,CAAQ1oD,GACU,iBAAjB,EACAhnB,KAAKgnB,KAAO,IAAImzB,GAAKnzB,GACdA,aAAgBmzB,KACvBn6C,KAAKgnB,KAAOA,GAEhBhnB,KAAKqrE,QAAU,I,CAGX,uBAAAoE,GACJzvE,KAAKuhE,uBAAyB93B,GAAMC,kBAAkB1pC,KAAKkuD,iBAAmB5sD,EAAO6U,oBACrFnW,KAAK2vE,uBAAyB3vE,KAAKuhE,uBAAyB,EAC5DvhE,KAAKwhE,sBAAwB/3B,GAAMC,kBAAkB1pC,KAAKkuD,iBAAmB5sD,EAAOmV,gBACpFzW,KAAK4vE,sBAAwB5vE,KAAKwhE,sBAAwB,C,CAGtD,aAAAqO,GACJ,MAAMC,EAAqB9vE,KAAK+sE,0BAA6B/sE,KAAK8sE,mBAAqB,KAAO,KAAS9sE,KAAK8sE,mBAAqB,IAAM,KACvI,GAAqB,MAAjB9sE,KAAK+uE,UAAuC,MAAnB/uE,KAAKgvE,YAAsBhvE,KAAKgvE,WAAWc,YAAcA,EAAY,CACvE,MAAnB9vE,KAAKgvE,YAAoBhvE,KAAKwvE,kBAClC,MAAMO,EAAsB/vE,KAAK+sE,0BAA6B/sE,KAAK8sE,mBAAqB,WAAa,WAAe9sE,KAAK8sE,mBAAqB,cAAgB,WAC9J9sE,KAAK+uE,SAAW/uE,KAAK+uE,UAAY,IAAK9nB,OAAO/lD,cAAgB+lD,OAAO+oB,oBAAoB,CAAED,YAAaA,IACvG/vE,KAAKkuD,iBAAmBluD,KAAK+uE,SAAS5tE,WACtCnB,KAAKgvE,WAAahvE,KAAK+uE,SAASkB,sBAAwBjwE,KAAK+uE,SAASkB,sBAAsBH,EAAY,EAAG,GAAK9vE,KAAK+uE,SAASmB,qBAAqBJ,EAAY,EAAG,GAClK9vE,KAAKgvE,WAAWmB,eAAiBnwE,KAAKivE,qBACtCjvE,KAAKgvE,WAAWoB,iBAAmB,WACnCpwE,KAAKgvE,WAAWqB,sBAAwB,WACxCrwE,KAAKgvE,WAAWsB,QAAQtwE,KAAK+uE,SAASwB,aAEtCvwE,KAAKyvE,yBACR,CACDzvE,KAAK+uE,SAASyB,Q,CAGV,eAAAhB,GACiB,MAAjBxvE,KAAK+uE,UAAuC,MAAnB/uE,KAAKgvE,aAC9BhvE,KAAKgvE,WAAWyB,WAAWzwE,KAAK+uE,SAASwB,aACzCvwE,KAAKgvE,WAAa,KACdhvE,KAAK+uE,SAAShsE,OAAO/C,KAAK+uE,SAAShsE,QACvC/C,KAAK+uE,SAAW,K,CAIjB,iBAAA2B,GACH1wE,KAAK6vE,gBACL7vE,KAAKkuE,iBAAmBoB,YAAYC,MAAQ,G,CAGzC,IAAAoB,GACC3wE,KAAK8oE,gBACT9oE,KAAKyoE,eAAezoE,KAAKgnB,MACzBhnB,KAAKgpE,yBACLhpE,KAAK6vE,gBACL7vE,KAAK2oE,kBAAkB3oE,KAAKgnB,MAC5BhnB,KAAK8oE,eAAgB,E,CAGlB,KAAA8H,GACH,GAAK5wE,KAAK8oE,gBACV9oE,KAAK8oE,eAAgB,EACrB9oE,KAAKgrE,aAAc,EACnBhrE,KAAKmpE,UAAY,GACjBnpE,KAAKopE,cAAgB,GACrBppE,KAAKupE,SAAW,GACC,MAAbvpE,KAAKgnB,MAAc,CACnBhnB,KAAKgnB,KAAK8zB,YAAc,EACxB96C,KAAKgnB,KAAK+zB,aAAe,EACzB,IAAK,IAAIoB,EAAuB,EAAGA,EAAen8C,KAAKgnB,KAAKI,kBAAoBpnB,KAAKgnB,KAAK6B,kBAAmBszB,IACzGn8C,KAAKqpE,aAAaltB,GAAgB,GAClCn8C,KAAKspE,iBAAiBntB,GAAgB,EAE7C,C,CAGE,cAAA00B,GACH7wE,KAAK8sE,oBAAqB,EAC1B9sE,KAAKgrE,aAAc,EACnBhrE,KAAK2wE,M,CAGF,YAAAG,GAGH,GAFA9wE,KAAK6uE,MAAQ,EACb7uE,KAAK+wE,eACY,MAAb/wE,KAAKgnB,KACL,IAAK,MAAMwhD,KAAgBxoE,KAAKs6C,SAC5B,IAAK,MAAMoT,KAAmB8a,EAAa7hC,YACvC+mB,EAAgBqU,iB,CAMzB,WAAAoI,CAAY6G,EAAqBC,EAAmB90B,EAAsBgC,EAAyB+yB,GACtG,IAAInvC,EAAcivC,EAAc1vE,EAAOyb,WAAWm0D,GAAS9zD,kBACvD+zD,EAAkBF,EAAY3vE,EAAOyb,WAAWm0D,GAAS9zD,kBAwB7D,MAtBiD,gBAA7C9b,EAAOyb,WAAWm0D,GAASzzD,iBAC3BskB,EAAM,GAAKA,EACXovC,EAAU,GAAKA,GAE8B,gBAA7C7vE,EAAOyb,WAAWm0D,GAASzzD,iBAC3BskB,EAAM,GAAKA,EACXovC,EAAU,GAAKA,GAEf7vE,EAAOyb,WAAWm0D,GAAS/zD,QACI,MAA3Bnd,KAAKmpE,UAAU+H,IAAoBlxE,KAAKmpE,UAAU+H,IAAYnvC,GAAO/hC,KAAKopE,cAAc8H,IAAYC,IACpGnxE,KAAKmpE,UAAU+H,GAAWnvC,EAC1B/hC,KAAKopE,cAAc8H,GAAWC,GAG+B,MAA7DnxE,KAAKqpE,aAAaltB,GAAcgC,GAAiB+yB,IAC9ClxE,KAAKqpE,aAAaltB,GAAcgC,GAAiB+yB,IAAYnvC,GAC7D/hC,KAAKspE,iBAAiBntB,GAAcgC,GAAiB+yB,IAAYC,IACpEnxE,KAAKqpE,aAAaltB,GAAcgC,GAAiB+yB,GAAWnvC,EAC5D/hC,KAAKspE,iBAAiBntB,GAAcgC,GAAiB+yB,GAAWC,GAIjEpvC,C,CAGJ,WAAA6gC,CAAYsO,EAAiB9vD,EAAyBkS,EAA4B69C,GAErF,GADyB7vE,EAAOyb,WAAWm0D,GAAS/zD,SAEhD,GAA+B,MAA3Bnd,KAAKmpE,UAAU+H,IAAmD,MAA/BlxE,KAAKopE,cAAc8H,GACtD,OAAOC,EAAUnxE,KAAKopE,cAAc8H,GAAYlxE,KAAKmpE,UAAU+H,QAEhE,GAAe3kD,MAAXnL,GAAsCmL,MAAd+G,GACwB,MAAnDtzB,KAAKqpE,aAAajoD,GAASkS,GAAY49C,IAA2E,MAAvDlxE,KAAKspE,iBAAiBloD,GAASkS,GAAY49C,GACtG,OAAOC,EAAUnxE,KAAKspE,iBAAiBloD,GAASkS,GAAY49C,GAAYlxE,KAAKqpE,aAAajoD,GAASkS,GAAY49C,GAGvH,OAAQ,C,CAIL,cAAAE,CAAehwD,EAAiBkS,GACnC,IAAK,IAAI49C,EAAkB,EAAGA,EAAU5vE,EAAOyb,WAAWla,OAAQquE,IAC9D,GAAuB3kD,MAAlBvsB,KAAKmpE,WAAqD,MAA3BnpE,KAAKmpE,UAAU+H,IACtB3kD,MAArBvsB,KAAKqpE,cAA2D98C,MAA9BvsB,KAAKqpE,aAAajoD,IAAmEmL,MAA1CvsB,KAAKqpE,aAAajoD,GAASkS,IAA+E,MAAnDtzB,KAAKqpE,aAAajoD,GAASkS,GAAY49C,GAC/K,OAAO,EAGf,OAAO,C,CAGJ,QAAAG,CAASH,EAAiB9vD,EAAkBkS,GAC/C,GAAItzB,KAAK2iE,YAAYuO,IAAwB3kD,MAAXnL,GAAsCmL,MAAd+G,GAA2BtzB,KAAK2iE,YAAYuO,EAAS9vD,EAASkS,GAAc,CAClItzB,KAAKmpE,UAAU+H,GAAW,KAC1BlxE,KAAKopE,cAAc8H,GAAW,KAC9B,IAAK,IAAI3mE,EAAY,EAAGA,EAAIvK,KAAKupE,SAAS1mE,OAAQ0H,IAC/BgiB,MAAXnL,GAAsCmL,MAAd+G,EACpBtzB,KAAKupE,SAASh/D,GAAG4xC,cAAgB/6B,GAAWphB,KAAKupE,SAASh/D,GAAG4zC,iBAAmB7qB,GAActzB,KAAKupE,SAASh/D,GAAG2mE,SAAWA,GAC1HlxE,KAAKupE,SAASnsC,OAAO7yB,EAAG,GAExBvK,KAAKupE,SAASh/D,GAAG2mE,SAAWA,GAC5BlxE,KAAKupE,SAASnsC,OAAO7yB,EAAG,GAGrBgiB,MAAXnL,GAAsCmL,MAAd+G,IACxBtzB,KAAKqpE,aAAajoD,GAASkS,GAAY49C,GAAW,KAClDlxE,KAAKspE,iBAAiBloD,GAASkS,GAAY49C,GAAW,KAE7D,C,CAGE,iBAAAI,CAAkBp4B,EAAwBq4B,EAAoB7H,GACjE,MAAMp2C,EAAyBtzB,KAAKgnB,KAAMszB,SAASi3B,GAAY5qC,YAAY+iC,GAE3E,GAAIxwB,EAAe,CACf,GAAI5lB,EAAWiF,eACX,OAAO,EACX,GAAmC,MAA/BjF,EAAWo1C,iBACX,OAAO,CACd,KACI,CACD,GAAIp1C,EAAW8E,aACX,OAAO,EACX,GAAiC,MAA7B9E,EAAWkxC,eACX,OAAO,CACd,CACD,OAAO,C,CAGJ,WAAA7B,CAAYuO,EAAiB9vD,EAAkBkS,GAElD,OADyBhyB,EAAOyb,WAAWm0D,GAAS/zD,QAEtBoP,MAAlBvsB,KAAKmpE,WAAqD,MAA3BnpE,KAAKmpE,UAAU+H,GACpC3kD,MAAXnL,GAAsCmL,MAAd+G,GAAgD/G,MAArBvsB,KAAKqpE,cAA2D,MAA9BrpE,KAAKqpE,aAAajoD,IAA8D,MAA1CphB,KAAKqpE,aAAajoD,GAASkS,IAClG,MAAnDtzB,KAAKqpE,aAAajoD,GAASkS,GAAY49C,E,CAMhD,aAAAM,CAAcR,EAAqB70B,EAAsBgC,EAAyB+yB,GACrF,IAAIO,GAAiB,EACrB,IAAK,IAAIlnE,EAAY,EAAGA,EAAIvK,KAAKupE,SAAS1mE,OAAQ0H,IAC1CvK,KAAKupE,SAASh/D,GAAG4xC,cAAgBA,GAAgBn8C,KAAKupE,SAASh/D,GAAG4zC,iBAAmBA,GAAmBn+C,KAAKupE,SAASh/D,GAAG2mE,SAAWA,IACpIlxE,KAAKupE,SAASh/D,GAAGwvB,OAASi3C,EAC1BhxE,KAAKupE,SAASh/D,GAAGmnE,QAAU,GAC3BD,GAAQ,GAIXA,GACDzxE,KAAKupE,SAAS9+D,KAAK,CAAEsvB,OAAQi3C,EAAa70B,aAAcA,EAAcgC,gBAAiBA,EAAiB+yB,QAASA,EAASQ,QAAS,I,CAGpI,WAAAC,GACH3xE,KAAK88C,IAAM,EACX98C,KAAK8wE,eACL9wE,KAAK4xE,W,CAGF,OAAAC,CAAQ/0B,GACX98C,KAAK88C,IAAMA,EACX98C,KAAK8wE,eACL9wE,KAAKirE,iBAAmBjrE,KAAK88C,G,CAG1B,SAAA80B,GACH5xE,KAAKirE,iBAAmBjrE,KAAK88C,IAC7B98C,KAAKwpE,KAAO,EACZxpE,KAAKumC,KAAO,EACZvmC,KAAKwnC,KAAO,EACZxnC,KAAKmrE,oBAAsB,C,CAGxB,YAAA2G,GACH,GAAK9xE,KAAKgnB,OACNhnB,KAAK88C,IAAM98C,KAAKgnB,KAAKw1B,WAAax8C,KAAK88C,KAAO98C,KAAKgnB,KAAKw1B,UAAYx8C,KAAKgnB,KAAKy1B,YAAY,CAC1F,MAAMs1B,EAAiB/xE,KAAK88C,IAC5B98C,KAAK88C,IAAM98C,KAAKgnB,KAAKw1B,UACrBx8C,KAAKirE,kBAAoBjrE,KAAK88C,IAAMi1B,EAEhC/xE,KAAK8qE,SACL9qE,KAAKgpE,wBACZ,C,CAGE,WAAAgJ,GACH,IAAKhyE,KAAKgnB,KAAM,OAChBhnB,KAAKqrE,QAAUrrE,KAAK88C,IACpB,MAAMi1B,EAAiB/xE,KAAK88C,IAC5B98C,KAAK88C,MACD98C,KAAK88C,KAAO98C,KAAKgnB,KAAK01B,WACtB18C,KAAK88C,IAAM,GAEf98C,KAAKirE,kBAAoBjrE,KAAK88C,IAAMi1B,EAEhC/xE,KAAK8qE,SACL9qE,KAAKgpE,wB,CAGN,WAAAiJ,GACH,IAAKjyE,KAAKgnB,KAAM,OAChBhnB,KAAKqrE,QAAU,KACf,MAAM0G,EAAiB/xE,KAAK88C,IAC5B98C,KAAK88C,OACD98C,KAAK88C,IAAM,GAAK98C,KAAK88C,KAAO98C,KAAKgnB,KAAK01B,YACtC18C,KAAK88C,IAAM98C,KAAKgnB,KAAK01B,SAAW,GAEpC18C,KAAKirE,kBAAoBjrE,KAAK88C,IAAMi1B,EAEhC/xE,KAAK8qE,SACL9qE,KAAKgpE,wB,CAGL,UAAAkJ,GACJ,IAAIlE,EAAkBhuE,KAAK88C,IAAM,EAWjC,OAVI98C,KAAKgrE,YACDgD,GAAWhuE,KAAKgnB,KAAM01B,WACtBsxB,EAAUhuE,KAAKgnB,KAAM01B,SAAW,GAE7B18C,KAAK88C,KAAO98C,KAAKquE,SAAYruE,KAAK8tE,cAGZ,GAAxB9tE,KAAK6sE,iBAAwBmB,GAAWhuE,KAAKgnB,KAAMw1B,UAAYx8C,KAAKgnB,KAAMy1B,aAC/EuxB,EAAUhuE,KAAKgnB,KAAMw1B,WAHrBwxB,EAAUhuE,KAAK88C,IAKZkxB,C,CAGJ,OAAAmE,GACH,IAAKnyE,KAAKgnB,KAAM,OAChB,MAAMs6C,EAAyBthE,KAAK4oE,oBACpC5oE,KAAK88C,MACL98C,KAAKwpE,KAAO,EACZxpE,KAAKumC,KAAO,EACZvmC,KAAKwnC,KAAO,EACZxnC,KAAKmrE,oBAAsB7J,EAC3BthE,KAAKorE,iBAAkB,EAGK,GAAxBprE,KAAK6sE,iBAAwB7sE,KAAK88C,KAAO98C,KAAKgnB,KAAKw1B,UAAYx8C,KAAKgnB,KAAKy1B,aACzEz8C,KAAK88C,IAAM98C,KAAKgnB,KAAKw1B,UACjBx8C,KAAK6sE,gBAAkB,GAAG7sE,KAAK6sE,kB,CAuCpC,UAAA9D,CAAWqG,EAA2BC,EAA2B+C,EAA4BC,GAAoB,GACpH,GAAiB,MAAbryE,KAAKgnB,KAAc,CACnB,IAAK,IAAIzc,EAAY,EAAGA,EAAI6nE,EAAoB7nE,IAC5C6kE,EAAY7kE,GAAK,EACjB8kE,EAAY9kE,GAAK,EAGrB,YADAvK,KAAKwvE,iBAER,CAED,MAAMxoD,EAAahnB,KAAKgnB,KACxBhnB,KAAKgnB,KAAK8zB,YAAc,EACxB96C,KAAKgnB,KAAK+zB,aAAe,EAEzB,IAAIumB,EAAyBthE,KAAK4oE,oBAC9BsD,GAAiB,GAGjBlsE,KAAKmrE,qBAAuB,GAAKnrE,KAAKmrE,oBAAsB7J,KAC5DthE,KAAKmrE,oBAAsB7J,EAC3BthE,KAAKorE,iBAAkB,GAEvBiH,IACIryE,KAAKwpE,MAAQxiD,EAAKshB,cAClBtoC,KAAKwpE,KAAO,EACZxpE,KAAKumC,KAAO,EACZvmC,KAAKwnC,KAAO,EACZxnC,KAAKmrE,oBAAsB7J,EAC3BthE,KAAKorE,iBAAkB,EAEvBprE,KAAKqrE,QAAUrrE,KAAK88C,IACpB98C,KAAK88C,IAAM98C,KAAKkyE,aACZlyE,KAAK88C,KAAO98C,KAAKqrE,SAAWrrE,KAAK6sE,gBAAkB,GAAG7sE,KAAK6sE,mBAG/D7sE,KAAK88C,KAAO91B,EAAK01B,WACjB18C,KAAK88C,IAAM,GACkB,GAAzB98C,KAAK6sE,kBACLX,GAAQ,EACRlsE,KAAK4wE,WAOjB5wE,KAAKuoE,iBAEsC,MAAvCvoE,KAAK8uE,gCAA0C9uE,KAAK8uE,+BAA+BjsE,OAASuvE,KAC5FpyE,KAAK8uE,+BAAiC,IAAIpkE,aAAa0nE,IAI3D,MAAMr4C,GAAkB/5B,KAAK+5B,OACvBwgB,EAAqB,EAAM1vC,KAAKoB,IAAI,GAAKjM,KAAKgnB,KAAKuzB,WAAav6C,KAAKkuD,kBACrE1T,EAAoB,EAAM3vC,KAAKoB,IAAI,GAAKjM,KAAKgnB,KAAKwzB,UAAYx6C,KAAKkuD,kBACzE,IAAI2gB,GAAiB7uE,KAAK6uE,MACtByD,EAAc,GACdC,GAA2B,EAG3BC,EAAsB,EAC1B,KAAOA,EAAcJ,IAAuBlG,GAAO,CAE/ClsE,KAAKguE,QAAUhuE,KAAKkyE,aAChBlyE,KAAKguE,SAAWhnD,EAAK01B,WAAU18C,KAAKguE,QAAU,MAElD,MAAMyE,EAA8BL,EAAqBI,EACnDE,EAA4B7nE,KAAK2S,KAAKxd,KAAKmrE,qBAC3CwH,EAAoB9nE,KAAKuC,IAAIslE,EAAmBD,GAChDG,EAAiBJ,EAAcG,EAGrC,GAAI3yE,KAAK8oE,eAAiB9oE,KAAK8tE,cAAe,CAI1C,IAAK,IAAI3xB,EAAuBn1B,EAAKI,kBAAoBJ,EAAK6B,kBAAmBszB,EAAen1B,EAAK80B,kBAAmBK,IAAgB,CACpI,MAAM/6B,EAAmB4F,EAAKszB,SAAS6B,GACjCqsB,EAA6BxoE,KAAKs6C,SAAS6B,GAEjDn8C,KAAK6yE,4BAA4B7rD,EAAMm1B,EAAcmlB,EAAgB+Q,GACrE,IAAK,IAAIl0B,EAA0B,EAAGA,EAAkB/8B,EAAQulB,YAAY9jC,OAAQs7C,IAAmB,CACnG,MAAMuP,EAAmC8a,EAAa7hC,YAAYwX,GAClE,IAAK,IAAI5zC,EAAY,EAAGA,EAAImjD,EAAgBkO,eAAez/B,QAAS5xB,IAAK,CACrE,MAAMojD,EAAaD,EAAgBkO,eAAez0C,IAAI5c,GAEhD+oB,EADmBtM,EAAKszB,SAAS6B,GACAxV,YAAYgnB,EAAKxP,iBACxD,IAAIjX,EAAc5lC,EAAO4Y,SAAW,EAAIyzC,EAAKnoB,QAAQ,IAEhDlS,EAAWvW,WAAWmqB,IAAQ5lC,EAAOyb,WAAWrY,WAAW,eAAeF,OACxE8uB,EAAWvW,WAAWmqB,IAAQ5lC,EAAOyb,WAAWrY,WAAW,aAAaF,QACtC,MAAlC8uB,EAAW+T,eAAeH,IAAgB5T,EAAW+T,eAAeH,GAAO,GAGlFlnC,KAAK8yE,YAAY9rD,EAAMm1B,EAAcmlB,EAAgBkR,EAAaG,EAAWhlB,GAAM,GAAO,EAC7F,CACJ,CACJ,CAID,IAAK,IAAIxR,EAAuBn1B,EAAKI,kBAAoBJ,EAAK6B,kBAAmBszB,EAAen1B,EAAK80B,kBAAmBK,IAAgB,CACpI,MAAM/6B,EAAmB4F,EAAKszB,SAAS6B,GACjCqsB,EAA6BxoE,KAAKs6C,SAAS6B,GAEjD,IAAK,IAAIgC,EAA0B,EAAGA,EAAkB/8B,EAAQulB,YAAY9jC,OAAQs7C,IAAmB,CACnG,MAAMuP,EAAmC8a,EAAa7hC,YAAYwX,GAClE,IAAK,IAAI5zC,EAAY,EAAGA,EAAImjD,EAAgBkO,eAAez/B,QAAS5xB,IAAK,CACrE,MAAMojD,EAAaD,EAAgBkO,eAAez0C,IAAI5c,GAEhD+oB,EADmBtM,EAAKszB,SAAS6B,GACAxV,YAAYgnB,EAAKxP,iBACxD,IAAIjX,EAAc5lC,EAAO4Y,SAAW,EAAIyzC,EAAKnoB,QAAQ,IAEhDlS,EAAWvW,WAAWmqB,IAAQ5lC,EAAOyb,WAAWrY,WAAW,eAAeF,OACxE8uB,EAAWvW,WAAWmqB,IAAQ5lC,EAAOyb,WAAWrY,WAAW,aAAaF,QACtC,MAAlC8uB,EAAW+T,eAAeH,IAAgB5T,EAAW+T,eAAeH,GAAO,GAE9ElnC,KAAK8yE,YAAY9rD,EAAMm1B,EAAcmlB,EAAgBkR,EAAaG,EAAWhlB,GAAM,GAAO,EAGjG,CACJ,CACJ,CACJ,CAGD,GAAI3tD,KAAK+tE,WAAT,CAGI,IAAIgF,EAAaT,EAAY3nB,SAAS3qD,KAAK88C,KAC3C,GAAIi2B,GAAcP,GAAeD,EAC7B,QAC4B,GAA5BA,IACAA,EAA0BC,GAEzBO,GACDT,EAAY7nE,KAAKzK,KAAK88C,KAE1B98C,KAAK+tE,YAAa,EAClB/tE,KAAKmyE,SAGR,KAhBD,CAkBA,IAAK,IAAIh2B,EAAuB,EAAGA,EAAen1B,EAAKI,kBAAoBJ,EAAK6B,kBAAmBszB,IAAgB,CAC/G,MAAM/6B,EAAmB4F,EAAKszB,SAAS6B,GACjCqsB,EAA6BxoE,KAAKs6C,SAAS6B,GAE7Cn8C,KAAKorE,kBACLprE,KAAK6yE,4BAA4B7rD,EAAMm1B,EAAcmlB,EAAgB+Q,IAAaryE,KAAK6tE,kBACvF7tE,KAAKgzE,wBAAwBhsD,EAAMm1B,EAAcmlB,IAErD,IAAK,IAAInjB,EAA0B,EAAGA,EAAkB/8B,EAAQulB,YAAY9jC,OAAQs7C,IAAmB,CACnG,MAAM7qB,EAAyBlS,EAAQulB,YAAYwX,GAC7CuP,EAAmC8a,EAAa7hC,YAAYwX,GAElE,GAAIn+C,KAAKorE,gBAAiB,CACtB,IAAI6H,EAAsCvlB,EAAgBiO,YAAYx/B,QAAUuxB,EAAgBoO,eAAe3/B,QAE/G,IAAK,IAAI5xB,EAAY,EAAGA,EAAImjD,EAAgBmO,cAAc1/B,QAAS5xB,IAAK,CACpE,MAAMojD,EAAaD,EAAgBmO,cAAc10C,IAAI5c,GACrD,GAAIojD,EAAKuK,oBAAsBrtD,KAAKC,IAAIwoB,EAAWwmB,mBAAoB,CACnE95C,KAAKkzE,iBAAiBxlB,EAAiBnjD,GACvCA,IACA,QACH,CACD,MAAM4oE,EAA8BF,GAA+B3xE,EAAO8Y,uBAC1Epa,KAAKozE,YAAYpsD,EAAMm1B,EAAcmlB,EAAgB3T,GAAM,EAAMwlB,GACjEF,GACH,CAEGvlB,EAAgB0N,QACX1N,EAAgB2N,UACjB3N,EAAgBsU,QAAQhiE,KAAMszB,EAAYguC,EAAgBz2D,KAAK2S,KAAK8jD,GAAiB,KAAMnlB,EAAcgC,GAG7GuP,EAAgB2N,UAAW,EAGlC,CAED,IAAK,IAAI9wD,EAAY,EAAGA,EAAImjD,EAAgBiO,YAAYx/B,QAAS5xB,IAAK,CAClE,MAAMojD,EAAaD,EAAgBiO,YAAYx0C,IAAI5c,GACnDvK,KAAKqzE,SAASl3B,EAAcq2B,EAAaG,EAAWhlB,EACvD,CAED,IAAK,IAAIpjD,EAAY,EAAGA,EAAImjD,EAAgBoO,eAAe3/B,QAAS5xB,IAAK,CACrE,MAAMojD,EAAaD,EAAgBoO,eAAe30C,IAAI5c,GACtDvK,KAAKqzE,SAASl3B,EAAcq2B,EAAaG,EAAWhlB,EACvD,CAED,IAAK,IAAIpjD,EAAY,EAAGA,EAAImjD,EAAgBmO,cAAc1/B,QAAS5xB,IAAK,CACpE,MAAMojD,EAAaD,EAAgBmO,cAAc10C,IAAI5c,GACrDvK,KAAKqzE,SAASl3B,EAAcq2B,EAAaG,EAAWhlB,EACvD,CAEGD,EAAgB0N,OAChB3xB,GAAM6pC,aAAatzE,KAAMovE,EAAaC,EAAamD,EAAaG,EAAWjlB,GAK/E,MAAMyd,EAA8BnrE,KAAKmrE,oBACnCoI,EAAqB,EAAM,EAAwBjS,EACnDkS,EAAmB,GAAOrI,EAAsBwH,GAAarR,EAC7DmS,GAAwBzzE,KAAKwpE,KAAOloE,EAAOsQ,aAAe5R,KAAKumC,MAAQjlC,EAAOuQ,aAAe7R,KAAKwnC,KAClGksC,EAA4B,EAAiBpyE,EAAOuQ,aACpD8hE,GAA2BF,EAAe,GAAKnyE,EAAOuQ,aACtD+hE,EAAwBF,GAAqBC,EAAkBD,GAAqBH,EACpFM,EAAsBH,GAAqBC,EAAkBD,GAAqBF,EACxF,IAAIM,EAA0BxgD,EAAW+G,aAEzCqzB,EAAgByO,YAAczO,EAAgB0O,gBAE1Cp8D,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,iBAAiBF,MAAO23C,EAAcgC,KACpF21B,EAAkB9zE,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,iBAAiBF,MAAO23C,EAAcgC,IAGnF,GAAnB21B,GACApmB,EAAgByO,YAAc,EAC9BzO,EAAgB0O,gBAAkB,GAGlC1O,EAAgB0O,iBAAqC,GAAlB0X,GAAyBD,EAAcD,EAEjF,CACJ,CAED,GAAI5zE,KAAK4tE,iBAAmB5tE,KAAK6tE,iBAC7B,GAAiB,GAAb7tE,KAAKumC,KAAW,CAChB,IAAKvmC,KAAKwuE,iBAAkB,CACxB,MAAMuF,EAAoB/sD,EAAKshB,YAAc,GAAMthB,EAAKshB,YAAc,GAAK,GAAMtoC,KAAKwpE,MAAQxiD,EAAKshB,YAAc,EAC3G0rC,EAAgC,GAAbh0E,KAAKwpE,KAAa,EAAIuK,EAAU,EAAI,EACvDvoC,EAA2B,GAAbxrC,KAAKwpE,KAAa,KAAOuK,EAAU,KAAO,IACxDtmE,EAAkC,GAAbzN,KAAKwpE,KAAa,IAAOuK,EAAU,IAAO,IAC/DE,EAA2Bj0E,KAAKkuD,iBAAmB1iB,EACnD3L,EAAqC,EAAVh1B,KAAK8C,GAAWsmE,EACjDj0E,KAAKyuE,0BAA4B5jE,KAAKic,MAAMmtD,EAAmBD,GAC/Dh0E,KAAK4uE,gBAAkB,EAAM/jE,KAAK+C,IAAIiyB,GACtC7/B,KAAK0uE,mBAAqBjhE,EAAY5C,KAAKgD,IAAIgyB,GAC/C7/B,KAAK2uE,uBAAyB,EAE9B3uE,KAAKwuE,kBAAmB,CAC3B,CACD,GAAIxuE,KAAKyuE,0BAA4B,EAAG,CACpC,MAAMh6C,EAAoB5pB,KAAKuC,IAAIwlE,EAAQJ,EAAcxyE,KAAKyuE,2BAC9DzuE,KAAKyuE,2BAA6Bh6C,EAAY+9C,EAC9C,IAAK,IAAIjoE,EAAYioE,EAAajoE,EAAIkqB,EAAWlqB,IAAK,CAClD6kE,EAAY7kE,IAAMvK,KAAK0uE,mBACvBW,EAAY9kE,IAAMvK,KAAK0uE,mBACvB,MAAMwF,EAAwBl0E,KAAK4uE,gBAAkB5uE,KAAK0uE,mBAAqB1uE,KAAK2uE,uBACpF3uE,KAAK2uE,uBAAyB3uE,KAAK0uE,mBACnC1uE,KAAK0uE,mBAAqBwF,CAC7B,CACJ,CACJ,MACGl0E,KAAKwuE,kBAAmB,EAKhC,IAAK,IAAIjkE,EAAYioE,EAAajoE,EAAIqoE,EAAQroE,IAAK,CAE/C,MAAM4pE,EAAU/E,EAAY7kE,GAAKyc,EAAK6zB,WAAa7zB,EAAK6zB,WAClDu5B,EAAU/E,EAAY9kE,GAAKyc,EAAK6zB,WAAa7zB,EAAK6zB,WAClDw5B,EAAeF,EAAU,GAAOA,EAAUA,EAC1CG,EAAeF,EAAU,GAAOA,EAAUA,EAC1CtpE,EAAcupE,EAAOC,EAAOD,EAAOC,EACzCt0E,KAAKgnB,KAAK8zB,YAAe96C,KAAKgnB,KAAK8zB,YAAchwC,EAAM9K,KAAKgnB,KAAK8zB,YAAchwC,EAE/E,MAAMypE,IAAwBzpE,EAAMkc,EAAKyzB,yBAA4B3vC,EAAMkc,EAAK0zB,gBAE1E85B,IACe,GAAdD,KAA8D,IAAvCzpE,EAAM,EAAIkc,EAAKyzB,sBAA8B,KAAQzzB,EAAK2zB,iBAAmB,MAAQ,EAAI3zB,EAAK2zB,mBACnG,OAAF,GAAd45B,MACc,GAAdA,IAAqB,OAASzpE,EAAM,EAAIkc,EAAK0zB,gBAAkB1zB,EAAK4zB,YAAc,EAAI5zB,EAAK0zB,kBAEpGm0B,IAAW2F,EAAc3F,IAAUA,EAAQ2F,EAAch6B,EAAYD,GACrE,MAAMk6B,EAAgB16C,GAAU80C,GAAS,EAAY,KAARA,EAAuB,GAARA,EAAc,KAC1EO,EAAY7kE,GAAK4pE,EAAUM,EAC3BpF,EAAY9kE,GAAK6pE,EAAUK,EAE3Bz0E,KAAKgnB,KAAK+zB,aAAgB/6C,KAAKgnB,KAAK+zB,aAAejwC,EAAM2pE,EAAgBz0E,KAAKgnB,KAAK+zB,aAAejwC,EAAM2pE,CAC3G,CAMD,GAJAjC,GAAeG,EAEf3yE,KAAKorE,iBAAkB,EACvBprE,KAAKmrE,qBAAuBwH,EACxB3yE,KAAKmrE,qBAAuB,EAAG,CAC/BnrE,KAAKorE,iBAAkB,EAIvB,IAAK,MAAM5C,KAAgBxoE,KAAKs6C,SAC5B,IAAK,MAAMoT,KAAmB8a,EAAa7hC,YAAa,CACpD,IAAK,IAAIp8B,EAAY,EAAGA,EAAImjD,EAAgBmO,cAAc1/B,QAAS5xB,IAAK,CACpE,MAAMojD,EAAaD,EAAgBmO,cAAc10C,IAAI5c,GACjDojD,EAAKsK,cACLj4D,KAAKkzE,iBAAiBxlB,EAAiBnjD,GACvCA,KAEAojD,EAAKuK,oBAEZ,CACGxK,EAAgB8N,yBAChB9N,EAAgBoU,aAEpBpU,EAAgB4N,sBAAuB,CAC1C,CAGL,IAAK,IAAIl6C,EAAkB,EAAGA,EAAUphB,KAAKgnB,KAAKI,kBAAoBpnB,KAAKgnB,KAAK6B,kBAAmBzH,IAC/F,IAAK,IAAIsoD,EAAwB,EAAGA,EAAgB1pE,KAAKgnB,KAAKszB,SAASl5B,GAASulB,YAAY9jC,OAAQ6mE,IAAiB,CACjH,IAAIp2C,EAAyBtzB,KAAKgnB,KAAKszB,SAASl5B,GAASulB,YAAY+iC,GACjEhc,EAAmC1tD,KAAKs6C,SAASl5B,GAASulB,YAAY+iC,GAGtEgL,EAA2BphD,EAAWoH,cACtC16B,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,aAAaF,MAAO4c,EAASsoD,IAC3EgL,EAAmB7pE,KAAKiM,IAAI,EAAGjM,KAAKuC,IAAI9L,EAAOgU,cAAczS,OAAO,EAAG7C,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,aAAaF,MAAO4c,EAASsoD,GAAe,KAC7JjoD,OAAOkzD,UAAUD,GACjBhnB,EAAgBwO,SAAW56D,EAAOgU,cAAco/D,GAGhDhnB,EAAgBwO,UAAY,EAAKwY,EAAmB,GAAMpzE,EAAOgU,cAAczK,KAAKic,MAAM4tD,IAAsBA,EAAmB,EAAKpzE,EAAOgU,cAAczK,KAAK2S,KAAKk3D,KAI3KhnB,EAAgBwO,SAAW56D,EAAOgU,cAAco/D,GAIpD,IAAIE,EAA2BthD,EAAWgG,cACtCt5B,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,kBAAkBF,MAAO4c,EAASsoD,IAChFkL,EAAmB/pE,KAAKiM,IAAI,EAAGjM,KAAKuC,IAAI9L,EAAOgU,cAAczS,OAAO,EAAG7C,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,kBAAkBF,MAAO4c,EAASsoD,GAAe,KAClKjoD,OAAOkzD,UAAUC,GACjBlnB,EAAgB2O,cAAgB/6D,EAAOgU,cAAcs/D,GAGrDlnB,EAAgB2O,eAAiB,EAAKuY,EAAmB,GAAMtzE,EAAOgU,cAAczK,KAAKic,MAAM8tD,IAAsBA,EAAmB,EAAKtzE,EAAOgU,cAAczK,KAAK2S,KAAKo3D,KAIhLlnB,EAAgB2O,cAAgB/6D,EAAOgU,cAAcs/D,EAE5D,CAIL,IAAK,IAAIxzD,EAAkB,EAAGA,EAAUphB,KAAKgnB,KAAKI,kBAAoBpnB,KAAKgnB,KAAK6B,kBAAmBzH,IAC/F,IAAK,IAAIsoD,EAAwB,EAAGA,EAAgB1pE,KAAKgnB,KAAKszB,SAASl5B,GAASulB,YAAY9jC,OAAQ6mE,IAAiB,CACjH,IAAIp2C,EAAyBtzB,KAAKgnB,KAAKszB,SAASl5B,GAASulB,YAAY+iC,GACpC,MAA7Bp2C,EAAWkxC,eACXlxC,EAAWixC,iBAAmBjxC,EAAWkxC,eAEzClxC,EAAWixC,iBAAmBjxC,EAAWyD,SAEV,MAA/BzD,EAAWo1C,iBACXp1C,EAAW4jC,mBAAqB5jC,EAAWo1C,iBAE3Cp1C,EAAW4jC,mBAAqB5jC,EAAWoF,UAElD,CAKL,GAFA14B,KAAKwnC,OACLxnC,KAAKmrE,qBAAuB7J,EACxBthE,KAAKwnC,MAAQlmC,EAAOuQ,aAAc,CAClC7R,KAAKwnC,KAAO,EACZxnC,KAAKumC,OACLvmC,KAAKgtE,oBACLhtE,KAAKitE,wBAEL,IAAK,IAAI1iE,EAAY,EAAGA,EAAIvK,KAAKupE,SAAS1mE,OAAQ0H,IAC9CvK,KAAKupE,SAASh/D,GAAGmnE,UACb1xE,KAAKupE,SAASh/D,GAAGmnE,SAAW,GAC5B1xE,KAAKupE,SAASnsC,OAAO7yB,EAAG,GAI5BvK,KAAKumC,MAAQjlC,EAAOsQ,eACpB5R,KAAKumC,KAAO,EAER8rC,IACAryE,KAAKwpE,OACDxpE,KAAKwpE,MAAQxiD,EAAKshB,cAElBtoC,KAAKwpE,KAAO,EAERxpE,KAAK6tE,iBACL7tE,KAAK6tE,kBAAmB,GAExB7tE,KAAKqrE,QAAUrrE,KAAK88C,IACpB98C,KAAK88C,IAAM98C,KAAKkyE,aACZlyE,KAAK88C,KAAO98C,KAAKqrE,SAAWrrE,KAAK6sE,gBAAkB,GAAG7sE,KAAK6sE,kBAE3D7sE,KAAK88C,KAAO91B,EAAK01B,WACjB18C,KAAK88C,IAAM,GACkB,GAAzB98C,KAAK6sE,kBACLX,GAAQ,EACRlsE,KAAK8wE,eACL9wE,KAAK4wE,aAOhC,CACJ,CAGD,IAAK,IAAIM,EAAkB,EAAGA,EAAU5vE,EAAOyb,WAAWla,OAAQquE,IACpC,MAAtBlxE,KAAKopE,eAAwD,MAA/BppE,KAAKopE,cAAc8H,KACjDlxE,KAAKmpE,UAAU+H,GAAWlxE,KAAKopE,cAAc8H,IAIjDlxE,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAkB,MAAEF,SACvD88D,EAAiBthE,KAAK4oE,oBACtB5oE,KAAKmrE,oBAAsBtgE,KAAKuC,IAAIpN,KAAKmrE,oBAAqB7J,IAKlE,IAAK,IAAInlB,EAAuB,EAAGA,EAAen8C,KAAKgnB,KAAKI,kBAAoBpnB,KAAKgnB,KAAK6B,kBAAmBszB,IACzG,IAAK,IAAIgC,EAAkB,EAAGA,EAAkBn+C,KAAKs6C,SAAS6B,GAAcxV,YAAY9jC,OAAQs7C,IAAmB,CAC/G,MAAMuP,EAAmC1tD,KAAKs6C,SAAS6B,GAAcxV,YAAYwX,GAC3E7qB,EAAyBtzB,KAAKgnB,KAAKszB,SAAS6B,GAAcxV,YAAYwX,GAC5EuP,EAAgB0O,gBAAmB1O,EAAgB0O,iBAAmB96D,EAAO6T,aAAame,EAAWgH,aAAajlB,QAAU/T,EAAOuQ,aAAeyvD,EAAiBthE,KAAKkuD,mBACxKR,EAAgBwO,QAAWxO,EAAgBwO,SAAW,KAAO56D,EAAOwQ,kBACpE47C,EAAgB2O,aAAgB3O,EAAgB2O,cAAgB/6D,EAAOsQ,aAAetQ,EAAOuQ,aAAe7R,KAAKgnB,KAAKshB,YACzH,CAGL,IAAK,IAAI4oC,EAAkB,EAAGA,EAAU5vE,EAAOyb,WAAWla,OAAQquE,IAC9D,IAAK,IAAI9vD,EAAkB,EAAGA,EAAUphB,KAAKgnB,KAAKI,kBAAoBpnB,KAAKgnB,KAAK6B,kBAAmBzH,IAC/F,IAAK,IAAIkS,EAAqB,EAAGA,EAAatzB,KAAKgnB,KAAKg1B,8BAA+B1oB,IACtD,MAAzBtzB,KAAKspE,kBAA8D,MAAlCtpE,KAAKspE,iBAAiBloD,IAAkE,MAA9CphB,KAAKspE,iBAAiBloD,GAASkS,IAA8E,MAAvDtzB,KAAKspE,iBAAiBloD,GAASkS,GAAY49C,KAC5KlxE,KAAKqpE,aAAajoD,GAASkS,GAAY49C,GAAWlxE,KAAKspE,iBAAiBloD,GAASkS,GAAY49C,GA1S5G,CA+SJ,GAGIzvD,OAAOozD,SAAShG,IAAUhkE,KAAKC,IAAI+jE,GAAShtC,MAASgtC,EAAQ,GAClE7uE,KAAK6uE,MAAQA,EAETwD,IAAaryE,KAAK6tE,mBAClB7tE,KAAKirE,oBAAsBjrE,KAAKwnC,KAAO,EAAMxnC,KAAKmrE,oBAAsB7J,GAAkB,EAAMthE,KAAKumC,MAAQjlC,EAAOsQ,aAAe5R,KAAKwpE,MAAQxiD,EAAKshB,YAActoC,KAAK88C,I,CAoBxK,QAAAg4B,CAASnnB,GACb3tD,KAAKsuE,SAASxyC,SAAS6xB,E,CAGnB,OAAAonB,GACJ,GAAI/0E,KAAKsuE,SAASnyC,QAAU,EAAG,CAC3B,MAAMwxB,EAAa3tD,KAAKsuE,SAAStyC,UAEjC,OADA2xB,EAAKqK,kBAAmB,EACjBrK,CACV,CACD,OAAO,IAAI+J,E,CAGP,WAAAsd,CAAYtnB,EAAkCC,GAClDD,EAAgBmO,cAAcjgC,UAAU+xB,GACxCA,EAAK2H,aAAc,EACnB3H,EAAKkI,iBAAkB,C,CAGnB,gBAAAqd,CAAiBxlB,EAAkCunB,GACvDj1E,KAAK80E,SAASpnB,EAAgBmO,cAAc10C,IAAI8tD,IAChDvnB,EAAgBmO,cAAcz/B,OAAO64C,E,CAGlC,YAAAlE,GACH,IAAK,MAAMvI,KAAgBxoE,KAAKs6C,SAC5B,IAAK,MAAMoT,KAAmB8a,EAAa7hC,YAAa,CACpD,KAAO+mB,EAAgBiO,YAAYx/B,QAAU,GAAGn8B,KAAK80E,SAASpnB,EAAgBiO,YAAY3/B,WAC1F,KAAO0xB,EAAgBkO,eAAez/B,QAAU,GAAGn8B,KAAK80E,SAASpnB,EAAgBkO,eAAe5/B,WAChG,KAAO0xB,EAAgBmO,cAAc1/B,QAAU,GAAGn8B,KAAK80E,SAASpnB,EAAgBmO,cAAc7/B,WAC9F,KAAO0xB,EAAgBoO,eAAe3/B,QAAU,GAAGn8B,KAAK80E,SAASpnB,EAAgBoO,eAAe9/B,UACnG,C,CAID,uBAAAg3C,CAAwBhsD,EAAYm1B,EAAsBmlB,GAC9D,MAAMlgD,EAAmB4F,EAAKszB,SAAS6B,GACjCqsB,EAA6BxoE,KAAKs6C,SAAS6B,GAC3C3W,EAAoBxlC,KAAKotE,iBACzB8H,EAAwBl1E,KAAKqtE,qBAEnC,IAAK,IAAIlvB,EAA0B,EAAGA,EAAkB/8B,EAAQulB,YAAY9jC,OAAQs7C,IAAmB,CACnG,MAAMuP,EAAmC8a,EAAa7hC,YAAYwX,GAC5Dg3B,EAAwBznB,EAAgBoO,eAC9C,IAAIsZ,EAAoB,EACxB,GAAIp1E,KAAKgtE,kBAAoB,GAAM7wB,GAAgBn8C,KAAKstE,kBAAqB9nC,EAAQ3iC,OAAS,IAA4D,GAAvD7C,KAAKwtE,qBAAqBrwC,QAAQghB,GAAwB,CACzJ,MAAM7qB,EAAyBlS,EAAQulB,YAAYwX,GAEnD,GAAI7qB,EAAWkf,WAAWr7B,WAAY,CAClC,IAAIw2C,EACAwnB,EAASh5C,SAAWi5C,GACpBznB,EAAO3tD,KAAK+0E,UACZI,EAASr5C,SAAS6xB,KACVr6B,EAAWsmB,gBAAgBjlC,YAAc3U,KAAKktE,kBACtDltE,KAAKg1E,YAAYtnB,EAAiBynB,EAAShuD,IAAIiuD,IAC/CznB,EAAO3tD,KAAK+0E,UACZI,EAASpxE,IAAIqxE,EAAWznB,IAExBA,EAAOwnB,EAAShuD,IAAIiuD,GAExBA,IAEA,IAAK,IAAI7qE,EAAY,EAAGA,EAAIi7B,EAAQ3iC,OAAQ0H,IACxCojD,EAAKnoB,QAAQj7B,GAAKi7B,EAAQj7B,GAE9BojD,EAAKt/C,WAAam3B,EAAQ3iC,OAC1B8qD,EAAKiK,UAAY,EACjBjK,EAAKxP,gBAAkBA,EACvBwP,EAAK9mB,KAAO8mB,EAAK8I,SAAW9I,EAAK+I,SAAW,KAC5C/I,EAAK2H,YAAct1D,KAAKktE,iBACxBvf,EAAK4H,sBAAuB,EAC5B5H,EAAKgJ,oBAAqB,EAC1B32D,KAAKozE,YAAYpsD,EAAMm1B,EAAcmlB,EAAgB3T,GAAM,GAAO,EACrE,KAAM,CAGH3tD,KAAKq1E,oCAAoCF,EAAU3vC,GAEnD,IAAK,IAAIj7B,EAAY,EAAGA,EAAIi7B,EAAQ3iC,OAAQ0H,IAAK,CAG7C,IAAIojD,EACyC,MAAzC3tD,KAAKuuE,sBAAsB6G,IAC3BznB,EAAO3tD,KAAKuuE,sBAAsB6G,GAClCp1E,KAAKuuE,sBAAsB6G,GAAa,KACjB,GAAnBznB,EAAKt/C,YAAmBs/C,EAAKnoB,QAAQ,IAAMA,EAAQj7B,KACnDvK,KAAKg1E,YAAYtnB,EAAiBC,GAClCA,EAAO3tD,KAAK+0E,WAEhBI,EAASr5C,SAAS6xB,KAElBA,EAAO3tD,KAAK+0E,UACZI,EAASr5C,SAAS6xB,IAEtBynB,IAEAznB,EAAKnoB,QAAQ,GAAKA,EAAQj7B,GAC1BojD,EAAKt/C,WAAa,EAClBs/C,EAAKiK,UAAYpyB,EAAQ3iC,OACzB8qD,EAAKxP,gBAAkBA,EACvBwP,EAAK9mB,KAAO8mB,EAAK8I,SAAW9I,EAAK+I,SAAW,KAC5C/I,EAAK2H,YAAct1D,KAAKktE,iBACxBvf,EAAK4H,sBAAuB,EAC5B5H,EAAKgJ,oBAAqB,EAC1B32D,KAAKozE,YAAYpsD,EAAMm1B,EAAcmlB,EAAgB3T,GAAM,GAAO,EACrE,CACJ,CACJ,CAED,GAAI3tD,KAAKitE,sBAAwB,GAAM9wB,GAAgBn8C,KAAKutE,sBAAyB2H,EAAYryE,OAAS,IAAgE,GAA3D7C,KAAKytE,yBAAyBtwC,QAAQghB,GAAwB,CACzK,MAAM7qB,EAAyBlS,EAAQulB,YAAYwX,GAEnD,GAAI7qB,EAAWkf,WAAWr7B,WAAY,CAClC,IAAIw2C,EACAwnB,EAASh5C,SAAWi5C,GACpBznB,EAAO3tD,KAAK+0E,UACZI,EAASr5C,SAAS6xB,KACVr6B,EAAWsmB,gBAAgBjlC,YAAc3U,KAAKktE,kBACtDltE,KAAKg1E,YAAYtnB,EAAiBynB,EAAShuD,IAAIiuD,IAC/CznB,EAAO3tD,KAAK+0E,UACZI,EAASpxE,IAAIqxE,EAAWznB,IAExBA,EAAOwnB,EAAShuD,IAAIiuD,GAExBA,IAEA,IAAK,IAAI7qE,EAAY,EAAGA,EAAI2qE,EAAYryE,OAAQ0H,IAC5CojD,EAAKnoB,QAAQj7B,GAAK2qE,EAAY3qE,GAElCojD,EAAKt/C,WAAa6mE,EAAYryE,OAC9B8qD,EAAKiK,UAAY,EACjBjK,EAAKxP,gBAAkBA,EACvBwP,EAAK9mB,KAAO8mB,EAAK8I,SAAW9I,EAAK+I,SAAW,KAC5C/I,EAAK2H,YAAct1D,KAAKmtE,qBACxBxf,EAAK4H,sBAAuB,EAC5B5H,EAAKgJ,oBAAqB,EAC1B32D,KAAKozE,YAAYpsD,EAAMm1B,EAAcmlB,EAAgB3T,GAAM,GAAO,EACrE,KAAM,CAGH3tD,KAAKq1E,oCAAoCF,EAAUD,GAEnD,IAAK,IAAI3qE,EAAY,EAAGA,EAAI2qE,EAAYryE,OAAQ0H,IAAK,CAGjD,IAAIojD,EACyC,MAAzC3tD,KAAKuuE,sBAAsB6G,IAC3BznB,EAAO3tD,KAAKuuE,sBAAsB6G,GAClCp1E,KAAKuuE,sBAAsB6G,GAAa,KACjB,GAAnBznB,EAAKt/C,YAAmBs/C,EAAKnoB,QAAQ,IAAM0vC,EAAY3qE,KACvDvK,KAAKg1E,YAAYtnB,EAAiBC,GAClCA,EAAO3tD,KAAK+0E,WAEhBI,EAASr5C,SAAS6xB,KAElBA,EAAO3tD,KAAK+0E,UACZI,EAASr5C,SAAS6xB,IAEtBynB,IAEAznB,EAAKnoB,QAAQ,GAAK0vC,EAAY3qE,GAC9BojD,EAAKt/C,WAAa,EAClBs/C,EAAKiK,UAAYsd,EAAYryE,OAC7B8qD,EAAKxP,gBAAkBA,EACvBwP,EAAK9mB,KAAO8mB,EAAK8I,SAAW9I,EAAK+I,SAAW,KAC5C/I,EAAK2H,YAAct1D,KAAKmtE,qBACxBxf,EAAK4H,sBAAuB,EAC5B5H,EAAKgJ,oBAAqB,EAC1B32D,KAAKozE,YAAYpsD,EAAMm1B,EAAcmlB,EAAgB3T,GAAM,GAAO,EACrE,CACJ,CACJ,CAED,KAAOwnB,EAASh5C,QAAUi5C,GACtBp1E,KAAKg1E,YAAYtnB,EAAiBynB,EAASn5C,WAG/Ch8B,KAAKs1E,2BAA2BF,EAAW1nB,EAC9C,CAED1tD,KAAKktE,kBAAmB,EACxBltE,KAAKmtE,sBAAuB,C,CAKxB,gDAAAoI,CAAiDvuD,EAAY5F,EAAkBy7B,EAAkB24B,EAAuBr3B,EAAyBnnB,EAAwBE,EAAc2P,EAAY4uC,EAAiBC,GACxN,GAAI1uD,EAAK+gB,qBAA4E,GAAtDytC,EAAa7uC,YAAYxJ,QAAQghB,GAAwB,CAGpF,GAAItB,EAAQlW,YAAY9jC,OAAS,GAAK2yE,EAAa7uC,YAAY9jC,OAAS,EAGpE,OAAO,KAIX,MAAM8yE,EAA8Bv0D,EAAQulB,YAAY6uC,EAAa7uC,YAAY,IAEjF,GAAI+uC,EAEA,OAAOC,EAAgBnjC,WAI3B,MAAMojC,EAA8BD,EAAgB/7B,gBACpD,OAAI5iB,EAAWjiB,yBAA2B6gE,EAAgB7gE,yBAA2B6gE,EAAgB/gE,QAAUmiB,EAAWniB,OAC/G8gE,EAAgBnjC,WAEhB,IAEd,CAEG,OAAQkjC,GAAiB1+C,EAAWjiB,wBAA2BmiB,EAAQ,I,CAIxE,uCAAO2+C,CAAiCC,EAAiBC,GAC5D,GAAID,EAAUtwC,QAAQ3iC,QAAUkzE,EAAWvwC,QAAQ3iC,OAAQ,OAAO,EAClE,MAAMmzE,EAA4BF,EAAUrwC,KAAKqwC,EAAUrwC,KAAK5iC,OAAS,GAAGm2B,SAC5E,IAAK,MAAMsM,KAASwwC,EAAUtwC,QAC1B,IAA8D,GAA1DuwC,EAAWvwC,QAAQrI,QAAQmI,EAAQ0wC,GAA0B,OAAO,EAE5E,OAAO,C,CAGH,mCAAAX,CAAoCF,EAAuBc,GAO/D,IAAK,IAAI1rE,EAAY,EAAGA,EAAI4qE,EAASh5C,QAAS5xB,IAAK,CAC/C,MAAMojD,EAAawnB,EAAShuD,IAAI5c,GAC1B+6B,EAAgBqoB,EAAKnoB,QAAQ,GAAKmoB,EAAKyK,aAC7C,IAAK,IAAIjiC,EAAY,EAAGA,EAAI8/C,EAAYpzE,OAAQszB,IAC5C,GAAI8/C,EAAY9/C,IAAMmP,EAAO,CACzBtlC,KAAKuuE,sBAAsBp4C,GAAKw3B,EAChCwnB,EAAS/4C,OAAO7xB,GAChBA,IACA,KACH,CAER,CAGD,KAAO4qE,EAASh5C,QAAU,GAAG,CACzB,MAAMwxB,EAAawnB,EAASp5C,WAC5B,IAAK,IAAI5F,EAAY,EAAGA,EAAIn2B,KAAKuuE,sBAAsB1rE,OAAQszB,IAC3D,GAAqC,MAAjCn2B,KAAKuuE,sBAAsBp4C,GAAY,CACvCn2B,KAAKuuE,sBAAsBp4C,GAAKw3B,EAChC,KACH,CAER,C,CAGG,2BAAAklB,CAA4B7rD,EAAYm1B,EAAsBmlB,EAAwB+Q,GAC1F,MAAMjxD,EAAmB4F,EAAKszB,SAAS6B,GACjCqsB,EAA6BxoE,KAAKs6C,SAAS6B,GAC3CU,EAA0B71B,EAAK8kC,WAAW3P,EAAcn8C,KAAK88C,KAC7DmY,EAAsBj1D,KAAKwrE,iBAC3B0K,EAAsBl2E,KAAKwnC,KAAOlmC,EAAOuQ,aAAeojD,EAE9D,GAAIod,GAAYrrD,EAAKq1B,gBAAgBF,GAAe,CAIhD,IAAIzV,EAAyB,GACzByvC,EAA6B,GAC7BC,EAA6B,GAC7BC,EAAoB/0E,EAAO4Y,SAC/B,KAAOm8D,KACH3vC,EAAMj8B,KAAK,MACX0rE,EAAU1rE,KAAK,MACf2rE,EAAU3rE,KAAK,MAGnB,GAAe,MAAXoyC,IAAoBz7B,EAAQ84B,MAC5B,IAAK,IAAI3vC,EAAY,EAAGA,EAAIsyC,EAAQnW,MAAM7jC,OAAQ0H,IAC1CsyC,EAAQnW,MAAMn8B,GAAGk3B,KAAOwzB,GAEsB,MAA1CkhB,EAAUt5B,EAAQnW,MAAMn8B,GAAGi7B,QAAQ,KAAeqX,EAAQnW,MAAMn8B,GAAGk3B,IAAO00C,EAAUt5B,EAAQnW,MAAMn8B,GAAGi7B,QAAQ,IAAahE,SAC1H20C,EAAUt5B,EAAQnW,MAAMn8B,GAAGi7B,QAAQ,IAAMqX,EAAQnW,MAAMn8B,IAGtDsyC,EAAQnW,MAAMn8B,GAAGi3B,OAASyzB,GAAepY,EAAQnW,MAAMn8B,GAAGk3B,IAAMwzB,EACrEvuB,EAAMmW,EAAQnW,MAAMn8B,GAAGi7B,QAAQ,IAAMqX,EAAQnW,MAAMn8B,GAE9CsyC,EAAQnW,MAAMn8B,GAAGi3B,MAAQyzB,IAEgB,MAA1CmhB,EAAUv5B,EAAQnW,MAAMn8B,GAAGi7B,QAAQ,KAAeqX,EAAQnW,MAAMn8B,GAAGi3B,MAAS40C,EAAUv5B,EAAQnW,MAAMn8B,GAAGi7B,QAAQ,IAAahE,SAC5H40C,EAAUv5B,EAAQnW,MAAMn8B,GAAGi7B,QAAQ,IAAMqX,EAAQnW,MAAMn8B,IAMvE,IAAI+rE,EAAuB,EAC3B,MAAMC,EAA8BvvD,EAAK+gB,oBAAkC,MAAX8U,EAAoBA,EAASlW,YAAY,GAAK,EACxG+mB,EAAmC8a,EAAa7hC,YAAY4vC,GAC5DpB,EAAwBznB,EAAgBkO,eAC9C,IAAK,IAAI10B,EAAc,EAAGA,EAAM5lC,EAAO4Y,SAAUgtB,IAAO,CAOpD,GANkB,MAAdR,EAAMQ,KACgB,MAAlBivC,EAAUjvC,IAAiBivC,EAAUjvC,GAAczF,KAAQiF,EAAMQ,GAAc1F,QAAO20C,EAAUjvC,GAAO,MACrF,MAAlBkvC,EAAUlvC,IAAiBkvC,EAAUlvC,GAAc1F,OAAUkF,EAAMQ,GAAczF,MAAK20C,EAAUlvC,GAAO,OAIlE,MAAzCshC,EAAaF,0BAAoCE,EAAaF,0BAA4BiO,GAAsB/N,EAAaF,yBAA2BE,EAAa7hC,YAAY9jC,OAAQ,CACzL,MAAM2zE,EAAyChO,EAAa7hC,YAAY6hC,EAAaF,0BAC/EmO,EAAuCjO,EAAa7hC,YAAY4vC,GACtE,KAAOC,EAAsB5a,eAAez/B,QAAU,GAClDs6C,EAAoB7a,eAAehgC,UAAU46C,EAAsB5a,eAAe5/B,UAEzF,CAGD,GAFAwsC,EAAaF,yBAA2BiO,EAEtB,MAAd7vC,EAAMQ,GAAc,CACpB,IAAIwvC,EAAyCP,EAAUjvC,GACnDyvC,EAAyCP,EAAUlvC,GAEnDquB,GAAgC,EAChCoB,GAA8B,EAClC,MAAMrB,EAAwBh0D,EAAOuQ,aAAe60B,EAAMQ,GAAM1F,OAAS00C,GAAgBl2E,KAAKorE,gBAC9F,IAAIzd,EACJ,GAAIwnB,EAASh5C,SAAWm6C,EACpB3oB,EAAO3tD,KAAK+0E,UACZI,EAASr5C,SAAS6xB,QACf,GAAI2H,GAA6C,MAA7BohB,EAAoC,CAC3D,MAAME,EAAgBzB,EAAShuD,IAAImvD,GAC/BM,EAAQ3e,aACRj4D,KAAK80E,SAAS8B,GAEd52E,KAAKg1E,YAAYtnB,EAAiBkpB,GAEtCjpB,EAAO3tD,KAAK+0E,UACZI,EAASpxE,IAAIuyE,EAAc3oB,EAC9B,MACGA,EAAOwnB,EAAShuD,IAAImvD,GAExBA,IAEA,IAAK,IAAI/rE,EAAY,EAAGA,EAAIm8B,EAAMQ,GAAM1B,QAAQ3iC,OAAQ0H,IACpDojD,EAAKnoB,QAAQj7B,GAAKm8B,EAAMQ,GAAM1B,QAAQj7B,GAE1CojD,EAAKt/C,WAAaq4B,EAAMQ,GAAM1B,QAAQ3iC,OACtC8qD,EAAKiK,UAAY,EACjBjK,EAAKxP,gBAAkBo4B,EACvB5oB,EAAK9mB,KAAOH,EAAMQ,GAClBymB,EAAK0I,cAAgB3vB,EAAMQ,GAAM1F,MACjCmsB,EAAK4I,YAAc7vB,EAAMQ,GAAMzF,IAC/BksB,EAAK8I,SAAWigB,EAChB/oB,EAAK+I,SAAWigB,EAChBhpB,EAAKmK,mBAAqB,EAC1BnK,EAAKoK,mBAAqB,EAC1BpK,EAAK2H,YAAcA,EACnB3H,EAAKkI,iBAAkB,EACvBlI,EAAK4H,qBAAuBA,EAC5B5H,EAAKgJ,mBAAqBA,CAC7B,CACJ,CAED,KAAOwe,EAASh5C,QAAUm6C,GAAc,CACpC,MAAM3oB,EAAawnB,EAASn5C,UACtB5a,EAAmB4F,EAAKszB,SAAS6B,GACvC,GAAIwR,EAAKxP,gBAAkB/8B,EAAQulB,YAAY9jC,SAAW8qD,EAAKsK,aAAc,CACzE,MAAMvK,EAAmC1tD,KAAKs6C,SAAS6B,GAAcxV,YAAYgnB,EAAKxP,iBACtFn+C,KAAKg1E,YAAYtnB,EAAiBC,EACrC,MACG3tD,KAAK80E,SAASnnB,EAErB,CAEJ,MACI,IAAK3mC,EAAKq1B,gBAAgBF,GAAe,CAE1C,IAAItV,EAAoB,KACpB4vB,EAAwB,KACxBC,EAAwB,KAE5B,GAAI2b,GAAuB,MAAXx1B,IAAoBz7B,EAAQ84B,SAAWl6C,KAAKgrE,aAAehrE,KAAKstE,kBAAoBnxB,GAAe,CAC/G,IAAK,IAAI5xC,EAAY,EAAGA,EAAIsyC,EAAQnW,MAAM7jC,OAAQ0H,IAC9C,GAAIsyC,EAAQnW,MAAMn8B,GAAGk3B,KAAOwzB,EACxBwB,EAAW5Z,EAAQnW,MAAMn8B,QACtB,GAAIsyC,EAAQnW,MAAMn8B,GAAGi3B,OAASyzB,GAAepY,EAAQnW,MAAMn8B,GAAGk3B,IAAMwzB,EACvEpuB,EAAOgW,EAAQnW,MAAMn8B,QAClB,GAAIsyC,EAAQnW,MAAMn8B,GAAGi3B,MAAQyzB,EAAa,CAC7CyB,EAAW7Z,EAAQnW,MAAMn8B,GACzB,KACH,CAGO,MAARs8B,IACgB,MAAZ4vB,GAAoBA,EAASh1B,KAAOoF,EAAKrF,QAAOi1B,EAAW,MAC/C,MAAZC,GAAoBA,EAASl1B,OAASqF,EAAKpF,MAAKi1B,EAAW,MAEtE,CAGD,GAAe,MAAX7Z,KAAqB71B,EAAKi1B,oBAAoD,GAA9B76B,EAAQulB,YAAY9jC,QAAgBmkB,EAAK+gB,oBAAoD,GAA9B8U,EAAQlW,YAAY9jC,QAAe,CAClJ,MAAM0zE,EAA6BvvD,EAAK+gB,mBAAqB8U,EAAQlW,YAAY,GAAK,EACtF,GAA6C,MAAzC6hC,EAAaF,0BAAoCE,EAAaF,0BAA4BiO,GAAsB/N,EAAaF,yBAA2BE,EAAa7hC,YAAY9jC,OAAQ,CACzL,MAAM2zE,EAAyChO,EAAa7hC,YAAY6hC,EAAaF,0BAC/EmO,EAAuCjO,EAAa7hC,YAAY4vC,GACtE,KAAOC,EAAsB7a,YAAYx/B,QAAU,GAC/Cs6C,EAAoB9a,YAAY//B,UAAU46C,EAAsB7a,YAAY3/B,UAEnF,CACDwsC,EAAaF,yBAA2BiO,CAC3C,MACG/N,EAAaF,yBAA2B,KAG5C,IAAK,IAAInqB,EAA0B,EAAGA,EAAkB/8B,EAAQulB,YAAY9jC,OAAQs7C,IAAmB,CACnG,MAAMuP,EAAmC8a,EAAa7hC,YAAYwX,GAC5Dg3B,EAAwBznB,EAAgBiO,YAC9C,IAAIyZ,EAAoB,EACxB,GAAa,MAARvuC,KAAmB7f,EAAK+gB,qBAAyE,GAAlD8U,EAASlW,YAAYxJ,QAAQghB,IAA0B,CACvG,MAAM7qB,EAAyBlS,EAAQulB,YAAYwX,GACnD,IAAIu4B,EAAyCjgB,EACzCkgB,EAAyCjgB,EAE7C,MAAMmgB,EAAsBv1E,EAAOsQ,aAAeoV,EAAKshB,YACjDtR,EAAyB1D,EAAWsmB,gBACpC1iB,EAAe5D,EAAWkf,WAChC,IAAI+iB,GAAgC,EAChCoB,GAA8B,EAC9BmgB,EAA0B,EAC1BC,EAA0B,EAC9B,GAAkB,GAAdlwC,EAAKrF,MAAY,CAEjB,IAAIw1C,EAA+C,MAAhBh3E,KAAKqrE,QAAmB,KAAOrkD,EAAK8kC,WAAW3P,EAAcn8C,KAAKqrE,SACrG,GAAmB,MAAf2L,EAAqB,CACrB,MAAMC,EAAyBD,EAAYtwC,MAAM7jC,QAAU,EAAK,KAAOm0E,EAAYtwC,MAAMswC,EAAYtwC,MAAM7jC,OAAS,GACpH,GAAgB,MAAZo0E,GAAoBA,EAASx1C,KAAOo1C,EAAa,CACjD,MAAMK,EAAwCrwC,EAAKnB,sBAAwB+D,GAAMosC,iCAAiCoB,EAAUpwC,GACtHswC,EAA4Cn3E,KAAKu1E,iDAAiDvuD,EAAM5F,EAASy7B,EAAUm6B,EAAa74B,EAAiBnnB,EAAYE,EAAO2P,EAAMowC,EAAUC,GAC/J,MAA/BC,IACAT,EAA4BO,EAC5BH,EAAkBK,EAA4BhgE,WAAa,EAAIu/D,EAA0BlxC,QAAQ3iC,OACjG0yD,EAAuB2hB,EAE9B,CACJ,CACJ,MAAuC,MAA7BR,IACPI,EAAkB5/C,EAAM/f,WAAa,EAAIu/D,EAA0BlxC,QAAQ3iC,QAE/E,GAAIgkC,EAAKpF,KAAOo1C,EAAa,CAGzB,IAAIO,EAA+C,MAAhBp3E,KAAKguE,QAAmB,KAAOhnD,EAAK8kC,WAAW3P,EAAcn8C,KAAKguE,SACrG,GAAmB,MAAfoJ,EAAqB,CACrB,MAAMtB,EAA0BsB,EAAY1wC,MAAM7jC,QAAU,EAAK,KAAOu0E,EAAY1wC,MAAM,GAC1F,GAAiB,MAAbovC,GAAwC,GAAnBA,EAAUt0C,MAAY,CAC3C,MAAM61C,EAA4CvB,EAAUpwC,sBAAwB+D,GAAMosC,iCAAiChvC,EAAMivC,GAC3HqB,EAA4Cn3E,KAAKu1E,iDAAiDvuD,EAAM5F,EAASy7B,EAAUu6B,EAAaj5B,EAAiBnnB,EAAYE,EAAO2P,EAAMivC,EAAWuB,GAChK,MAA/BF,IACAR,EAA4Bb,EAC5BiB,EAAkBI,EAA4BhgE,WAAa,EAAIw/D,EAA0BnxC,QAAQ3iC,OACjG8zD,EAAqB0gB,EAE5B,CACJ,CACJ,MAAuC,MAA7BV,IACPI,EAAkB7/C,EAAM/f,WAAa,EAAIw/D,EAA0BnxC,QAAQ3iC,QAG/E,GAAIq0B,EAAM/f,WAAY,CAClB,MAAMm+C,EAAwBh0D,EAAOuQ,aAAeg1B,EAAKrF,OAAS00C,EAClE,IAAIvoB,EACJ,GAAIwnB,EAASh5C,SAAWi5C,EACpBznB,EAAO3tD,KAAK+0E,UACZI,EAASr5C,SAAS6xB,QACf,IAAI2H,IAAmBt+B,EAAWriB,YAAc2e,EAAW4G,qBAAyBq7B,IAAsD,MAA7BmhB,EAUhH/oB,EAAOwnB,EAAShuD,IAAIiuD,OAVgI,CACpJ,MAAMwB,EAAgBzB,EAAShuD,IAAIiuD,GAC/BwB,EAAQ3e,aACRj4D,KAAK80E,SAAS8B,GAEd52E,KAAKg1E,YAAYtnB,EAAiBkpB,GAEtCjpB,EAAO3tD,KAAK+0E,UACZI,EAASpxE,IAAIqxE,EAAWznB,EAC3B,CAGDynB,IAEA,IAAK,IAAI7qE,EAAY,EAAGA,EAAIs8B,EAAKrB,QAAQ3iC,OAAQ0H,IAC7CojD,EAAKnoB,QAAQj7B,GAAKs8B,EAAKrB,QAAQj7B,GAEnCojD,EAAKt/C,WAAaw4B,EAAKrB,QAAQ3iC,OAC/B8qD,EAAKiK,UAAY,EACjBjK,EAAKxP,gBAAkBA,EACvBwP,EAAK9mB,KAAOA,EACZ8mB,EAAK0I,cAAgBxvB,EAAKrF,MAC1BmsB,EAAK4I,YAAc1vB,EAAKpF,IACxBksB,EAAK8I,SAAWigB,EAChB/oB,EAAK+I,SAAWigB,EAChBhpB,EAAKmK,mBAAqB,EAC1BnK,EAAKoK,mBAAqB,EAC1BpK,EAAK2H,YAAcA,EACnB3H,EAAKkI,iBAAkB,EACvBlI,EAAK4H,qBAAuBA,EAC5B5H,EAAKgJ,mBAAqBA,EAC1B32D,KAAKozE,YAAYpsD,EAAMm1B,EAAcmlB,EAAgB3T,GAAM,GAAO,EACrE,KAAM,CACH,MAAM32B,EAAyB1D,EAAWsmB,iBAEpC5iB,EAAWriB,aAAeqiB,EAAWniB,QAA8B,GAApBqiB,EAAMhgB,YAAoBq+C,IAA0Bj0D,EAAOuQ,aAAeg1B,EAAKrF,OAAS00C,GAA6C,MAA7BQ,GACzJ12E,KAAKq1E,oCAAoCF,EAAUtuC,EAAKrB,SAG5D,IAAI8xC,EAA2B,EAC/B,IAAK,IAAI/sE,EAAY,EAAGA,EAAIs8B,EAAKrB,QAAQ3iC,OAAQ0H,IAAK,CAElD,IAAIgtE,EAAoCT,EAAkBvsE,EAAKmsE,EAA4B,KACvFc,EAAwB3wC,EACxB4wC,EAAoCV,EAAkBxsE,EAAKosE,EAA4B,KACvFtgB,EAAwBmhB,EAAgBh2C,MAAQ81C,EAChDzhB,GAA2B,EAM/B,GAAIQ,EAAgBpB,EAAa,CAC7B,KAAIkgB,EAASh5C,QAAU5xB,IAAMysB,EAAWriB,YAAc4gD,IAAgD,MAAvBgiB,GAS3E,MAPAE,EAAsBD,EACtBA,EAAkBD,EAClBA,EAAsB,KACtBlhB,EAAgBmhB,EAAgBh2C,MAAQ81C,EACxCzhB,GAAkB,CAKzB,CAED,IAAIU,EAAsBihB,EAAgB/1C,KACrCzK,EAAWriB,YAAc4gD,IAAgD,MAAvBkiB,IACnDlhB,EAAc1rD,KAAKuC,IAAI9L,EAAOsQ,aAAe5R,KAAKgnB,KAAMshB,YAAaiuB,EAAc+gB,KAEjFtgD,EAAWpiB,WAAc2gD,IAAgD,MAAvBgiB,IACpDD,GAAoBpgD,EAAMhgB,YAG9B,MAAMo+C,EAAwBh0D,EAAOuQ,aAAewkD,GAAiB6f,EACrE,IAAIvoB,EACJ,GAA6C,MAAzC3tD,KAAKuuE,sBAAsB6G,GAC3BznB,EAAO3tD,KAAKuuE,sBAAsB6G,GAClCp1E,KAAKuuE,sBAAsB6G,GAAa,KACxCD,EAASr5C,SAAS6xB,QACf,GAAIwnB,EAASh5C,SAAWi5C,EAC3BznB,EAAO3tD,KAAK+0E,UACZI,EAASr5C,SAAS6xB,QACf,IAAI2H,IAAkBt+B,EAAWriB,YAAe4gD,IAAgD,MAAvBgiB,EAU5E5pB,EAAOwnB,EAAShuD,IAAIiuD,OAVsF,CAC1G,MAAMwB,EAAgBzB,EAAShuD,IAAIiuD,GAC/BwB,EAAQ3e,aACRj4D,KAAK80E,SAAS8B,GAEd52E,KAAKg1E,YAAYtnB,EAAiBkpB,GAEtCjpB,EAAO3tD,KAAK+0E,UACZI,EAASpxE,IAAIqxE,EAAWznB,EAC3B,CAGDynB,IAEAznB,EAAKnoB,QAAQ,GAAKgyC,EAAgBhyC,QAAQj7B,GAC1CojD,EAAKt/C,WAAa,EAClBs/C,EAAKiK,UAAY4f,EAAgBhyC,QAAQ3iC,OACzC8qD,EAAKxP,gBAAkBA,EACvBwP,EAAK9mB,KAAO2wC,EACZ7pB,EAAK0I,cAAgBA,EACrB1I,EAAK4I,YAAcA,EACnB5I,EAAK8I,SAAW8gB,EAChB5pB,EAAK+I,SAAW+gB,EAChB9pB,EAAKmK,mBAAqBvtD,EAC1BojD,EAAKoK,mBAAqBxtD,EAC1BojD,EAAK2H,YAAcA,EACnB3H,EAAKkI,gBAAkBA,EACvBlI,EAAK4H,qBAAuBA,GAA+C,MAAvBgiB,EACpD5pB,EAAKgJ,mBAAqBA,GAA6C,MAAvB8gB,EAChDz3E,KAAKozE,YAAYpsD,EAAMm1B,EAAcmlB,EAAgB3T,GAAM,GAAO,EACrE,CACJ,CACJ,CAED,KAAOwnB,EAASh5C,QAAUi5C,GAAW,CACjC,MAAMznB,EAAawnB,EAASn5C,UACtB5a,EAAmB4F,EAAKszB,SAAS6B,GACvC,GAAIwR,EAAKxP,gBAAkB/8B,EAAQulB,YAAY9jC,SAAW8qD,EAAKsK,aAAc,CACzE,MAAMvK,EAAmC8a,EAAa7hC,YAAYgnB,EAAKxP,iBACvEn+C,KAAKg1E,YAAYtnB,EAAiBC,EACrC,MACG3tD,KAAK80E,SAASnnB,EAErB,CAED3tD,KAAKs1E,2BAA2BF,EAAW1nB,EAC9C,CACJ,C,CAGG,0BAAA4nB,CAA2BF,EAAmB1nB,GAClD,IAAK,IAAInjD,EAAY6qE,EAAW7qE,EAAIvK,KAAKuuE,sBAAsB1rE,OAAQ0H,IAAK,CACxE,MAAMqsE,EAAuB52E,KAAKuuE,sBAAsBhkE,GACzC,MAAXqsE,IACIA,EAAQ3e,aACRj4D,KAAK80E,SAAS8B,GAEd52E,KAAKg1E,YAAYtnB,EAAiBkpB,GAEtC52E,KAAKuuE,sBAAsBhkE,GAAK,KAEvC,C,CAIG,QAAA8oE,CAASl3B,EAAsBq2B,EAAqBG,EAAmBhlB,GAC3E,MACMD,EAD6B1tD,KAAKs6C,SAAS6B,GACKxV,YAAYgnB,EAAKxP,iBAEpC,MAA/BuP,EAAgBqO,aAAqBrO,EAAgBqO,YAAa/7D,KAAMwyE,EAAaG,EAAWhlB,EAAMD,GAC1GC,EAAKsN,iBAAiB7D,gB,CAIlB,WAAA0b,CAAY9rD,EAAYm1B,EAAsBmlB,EAAwBkR,EAAqB3kB,EAA+BF,EAAY+pB,EAAmBvE,GAC7J,MACM7/C,EADmBtM,EAAKszB,SAAS6B,GACAxV,YAAYgnB,EAAKxP,iBAExD,GAAiB,MAAbwP,EAAK9mB,KAAc,CACnB,MAAM4sC,EAAuBzzE,KAAKurE,kBAC5BmI,EAA4B,EAAiBpyE,EAAOuQ,aACpD8hE,GAA2BF,EAAe,GAAKnyE,EAAOuQ,aACtDs5D,EAA8BnrE,KAAKmrE,oBAGnCyI,EAAwBF,GAAqBC,EAAkBD,IAF1C,EAAM,EAAwBpS,GAGnDuS,EAAsBH,GAAqBC,EAAkBD,IAF1C,GAAOvI,EAAsBtd,GAAyByT,GAGzEpM,EAAwB5zD,EAAOuQ,aAAe+hE,EAC9Cpe,EAAsBl0D,EAAOuQ,aAAegiE,EAC5CrtC,EAAsBmnB,EAAK9mB,KAAKP,eAAetmC,KAAKwrE,kBACpD1V,EAAoBnI,EAAK9mB,KAAKpB,KAAKe,EAAc,GACjDuvB,EAAkBpI,EAAK9mB,KAAKpB,KAAKe,GACjCwvB,GAAwBrI,EAAK9mB,KAAKrF,MAAQs0B,EAAS1wB,MAAQ9jC,EAAOuQ,aAClEokD,GAAsBtI,EAAK9mB,KAAKrF,MAAQu0B,EAAO3wB,MAAQ9jC,EAAOuQ,aAC9DqkD,GAAsBhB,EAAgBc,IAAiBC,EAAaD,GACpEG,GAAoBX,EAAcQ,IAAiBC,EAAaD,GACtErI,EAAKxpD,WAAa2xD,EAASx5B,MAAQy5B,EAAOz5B,KAAOw5B,EAASx5B,MAAQ45B,EAClEvI,EAAKkL,gBAAmB/C,EAASx5B,MAAQy5B,EAAOz5B,KAAOw5B,EAASx5B,MAAQ65B,EAAYxI,EAAKxpD,WAEzFslC,GAAMkuC,SAAS33E,KAAMwyE,EAAa3kB,EAAuBF,EAAMr6B,EAClE,C,CAGG,6BAAOskD,CAAuBhgB,GAClC,OAAO,GAAyB,KAAjBA,EAAY,GAAY,E,CAGnC,WAAAwb,CAAYpsD,EAAYm1B,EAAsBmlB,EAAwB3T,EAAY+pB,EAAmBvE,GACzG,MAAMtlB,EAAgChjD,KAAK2S,KAAK8jD,GAC1ClgD,EAAmB4F,EAAKszB,SAAS6B,GACjCqsB,EAA6BxoE,KAAKs6C,SAAS6B,GAC3C7oB,EAAyBlS,EAAQulB,YAAYgnB,EAAKxP,iBAClDuP,EAAmC8a,EAAa7hC,YAAYgnB,EAAKxP,iBACvEuP,EAAgB0N,OAAQ,EACxB1N,EAAgB4N,sBAAuB,EAClC5N,EAAgB2N,UACjB3N,EAAgBsU,QAAQhiE,KAAMszB,EAAYguC,EAAgBzT,EAAuBF,EAAMxR,EAAcwR,EAAKxP,iBAE9G,MAAMnnB,EAAyB1D,EAAWsmB,gBACpC1iB,EAAe5D,EAAWkf,WAC1BqlC,EAA0B3gD,EAAM/f,WAAa,EAAMsyB,GAAMmuC,uBAAuBjqB,EAAKiK,WACrF1vB,EAA0BlhB,EAAKo1B,kBAAkBD,GACjD27B,EAAwB5vC,EAAiB5mC,EAAOwY,cAAgB,EAChEi+D,EAAyBz2E,EAAOuQ,aAAeyvD,EAAiBthE,KAAKkuD,iBACrE8pB,EAAqB,EAAMh4E,KAAKkuD,iBAChC+pB,EAAuB,EAAM32E,EAAOsQ,aACpC6hE,EAAuBzzE,KAAKurE,kBAC5BqI,EAAwB,EAAiBtyE,EAAOuQ,aAChDgiE,GAAuBJ,EAAe,GAAOnyE,EAAOuQ,aACpDojD,EAAsBj1D,KAAKwrE,iBAEjC,IAAI0M,EAA8B,EAClCvqB,EAAKsM,8BAAgC,EAOrC,IAAIke,EAA4BhF,EAC5BiF,EAAwB,EACxBC,EAAsB,EACtBC,EAA8B,EAC9BC,EAA4B,EAC5BC,EAA+BX,EAC/BY,EAA6BZ,EAE7Ba,EAAmC,GACnCroE,EAAoB/O,EAAO6O,KAAK6W,EAAK7T,KAAK9C,UAAa/O,EAAOyY,iBAAmBiN,EAAK2c,OACtFg1C,EAAyB,EACzBC,EAAuB,GAC3B,GAAmB,GAAftlD,EAAWre,KACX0jE,EAAiBr3E,EAAOiR,uBACpB21B,IACA73B,EAAY/O,EAAOkX,kBACnBmgE,GAAkB,GAEtBD,EAA2Bp3E,EAAOkX,kBAClCogE,EAAe,QACZ,GAAmB,GAAftlD,EAAWre,KAClB5E,EAAY/O,EAAOkX,kBACnBmgE,EAAiBr3E,EAAOkR,sBACxBkmE,EAA2BroE,OACxB,GAAmB,GAAfijB,EAAWre,KAElB5E,EAAY63B,EAAiB5mC,EAAOkK,WAAW8nB,EAAWgc,WAAWj/B,UAAYA,EAAY/O,EAAOkK,WAAW8nB,EAAWgc,WAAWj/B,UAAY,GAEjJsoE,EAAiBr3E,EAAOgR,oBACxBomE,EAA2BroE,EAC3BuoE,EAAet3E,EAAOkK,WAAW8nB,EAAWgc,WAAW/7B,OAAS,GAAO,QACpE,GAAmB,GAAf+f,EAAWre,MAA4C,IAAfqe,EAAWre,KAC1D0jE,EAAiBr3E,EAAO+Q,sBACrB,GAAmB,GAAfihB,EAAWre,KACd0jE,EAAiBr3E,EAAO8Q,mBAChC9Q,EAAOC,UAAU+xB,EAAWjyB,UAAUynD,gBACrCxnD,EAAOC,UAAU+xB,EAAWjyB,UAAUgD,aACzCgM,GAA0I,GAArHxF,KAAK2C,KAAKlM,EAAOC,UAAU+xB,EAAWjyB,UAAUiB,QAAQO,OAAOvB,EAAOC,UAAU+xB,EAAWjyB,UAAUF,YAA7G,QAAoI,GAAKG,EAAOC,UAAU+xB,EAAWjyB,UAAU0nD,SAI5L14C,IAA2I,GAArHxF,KAAK2C,KAAKlM,EAAOC,UAAU+xB,EAAWjyB,UAAUiB,QAAQO,OAAOvB,EAAOC,UAAU+xB,EAAWjyB,UAAUF,YAA7G,QAAoI,GAAKG,EAAOC,UAAU+xB,EAAWjyB,UAAU0nD,SAI1LznD,EAAOC,UAAU+xB,EAAWjyB,UAAU+C,YAAc9C,EAAOC,UAAU+xB,EAAWjyB,UAAUgD,aAC7FgM,EAAYA,EAAY,GAAK/O,EAAOC,UAAU+xB,EAAWjyB,UAAUiD,kBAE3DhD,EAAOC,UAAU+xB,EAAWjyB,UAAU+C,WAAa9C,EAAOC,UAAU+xB,EAAWjyB,UAAUgD,eAClGgM,GAAa,GAAK/O,EAAOC,UAAU+xB,EAAWjyB,UAAUiD,wBAG1C,GAAmB,GAAfgvB,EAAWre,KACtB0jE,EAAiBr3E,EAAO8Q,wBACrB,GAAmB,GAAfkhB,EAAWre,KAClB0jE,EAAiBr3E,EAAOmR,6BACrB,GAAmB,GAAf6gB,EAAWre,KAClB0jE,EAAiBr3E,EAAOoR,uBACrB,GAAmB,GAAf4gB,EAAWre,KAC3B0jE,EAAiBr3E,EAAOqR,4BACZ,GAAmB,GAAf2gB,EAAWre,KAClB0jE,EAAiBr3E,EAAOsR,+BACrB,IAAmB,IAAf0gB,EAAWre,KAMlB,MAAM,IAAI9S,MAAM,2CALhBw2E,EAAiB,EACjBD,EAA2B,EAC3BE,EAAe,EACfvoE,EAAY,CAGf,CAED,IAAKs9C,EAAK2H,cAAgBt+B,EAAWriB,aAAeg5C,EAAK4H,sBAAyB5H,EAAKqK,oBACnFrK,EAAK7mB,QAE2B,GAAfxT,EAAWre,MAA+Bqe,EAAW0H,6BAA6B,CAC/F,MAAM69C,EAAiBv3E,EAAOK,gBAAgB2xB,EAAWjyB,UAAUiB,QAAQO,OAAS,EAC9Ei2E,EAAcxlD,EAAW+H,oBAAsBw9C,EAK/CE,EAAa,iBACnB,IAAK,IAAIxuE,EAAI,EAAGA,EAAIjJ,EAAOgW,wBAAyB/M,IAChDojD,EAAK6K,OAAOjuD,GAAK+oB,EAAW8H,sBAAwBvwB,KAAKiM,IAAI,EAAGjM,KAAKuC,IAAI2rE,EAAYD,IAAgBjuE,KAAKiM,IAAI,EAAGgiE,GACjHnrB,EAAK8K,WAAWluD,GAAK+oB,EAAW8H,uBAAyB,EAAI,EAC7DuyB,EAAK+K,oBAAoBnuD,GAAK,EAC9BojD,EAAKgL,kBAAkBpuD,GAAK,EAC5BojD,EAAKiL,4BAA4BruD,GAAK,CAG7C,CAGLojD,EAAKqK,kBAAmB,EAExB,IAAK,IAAIztD,EAAY,EAAGA,EAAIjJ,EAAOgW,wBAAyB/M,IACxDojD,EAAKS,YAAY7jD,GAAK,EACtBojD,EAAKW,iBAAiB/jD,GAAK,EAC3BojD,EAAKmL,oBAAoBvuD,GAAK,EAC9BojD,EAAKoL,yBAAyBxuD,GAAK,EAEvCojD,EAAKxpD,WAAa,EAClBwpD,EAAKkL,gBAAkB,EACvB,IAAK,IAAItuD,EAAY,EAAGA,GAA4C,IAAvC+oB,EAAWre,KAA+B,EAAI3T,EAAO+V,eAAgB9M,IAC9FojD,EAAKpxC,cAAchS,GAAKk/B,GAAMuvC,gBAAgB1lD,EAAWwE,UAAUvtB,GAAGowB,SAAUrH,EAAWwE,UAAUvtB,GAAGY,YAG5G,GAAIusE,EAAU,CACV,MAAMuB,EAAkCtrB,EAAKuK,mBACvCghB,EAAgCvrB,EAAKuK,mBAAqB,EAChEkgB,EAAgBC,EAAc1qB,EAAKyK,aACnC,MAAM7jD,EAAuB1J,KAAKC,IAAIwoB,EAAWwmB,mBACjDw+B,EAAsB7uC,GAAM8tB,sBAAsB,EAAM0hB,EAA0B1kE,GAAgBjT,EAAOwU,aACzGyiE,EAAoB9uC,GAAM8tB,sBAAsB,EAAM2hB,EAAwB3kE,GAAgBjT,EAAOwU,aAEjGq9D,IACAoF,EAAoB,GAGpB5qB,EAAKuK,mBAAqB,GAAK3jD,IAAc4jE,GAAmB,EACvE,MAAM,GAAiB,MAAbxqB,EAAK9mB,KACZyxC,EAAsBC,EAAoB,EAC1C5qB,EAAKyK,aAAe,EACpBzK,EAAKuK,mBAAqB,EAC1BvK,EAAKwK,sBAAwBtK,MAC1B,CACH,MAAMhnB,EAAa8mB,EAAK9mB,KAClB6vB,EAAwB/I,EAAK+I,SAE7BL,EAAwB1I,EAAK0I,cAC7BE,EAAsB5I,EAAK4I,YAG3B/vB,EAAsBK,EAAKP,eAAe2uB,GAC1Ca,EAAoBjvB,EAAKpB,KAAKe,EAAc,GAC5CuvB,EAAkBlvB,EAAKpB,KAAKe,GAC5B4vB,EAAwBC,EAAgB/0D,EAAOuQ,aAC/CykD,EAAsBC,EAAcj1D,EAAOuQ,aAC3CsnE,GAAoBtyC,EAAKrF,MAAQs0B,EAAS1wB,MAAQ9jC,EAAOuQ,aACzDunE,GAAkBvyC,EAAKrF,MAAQu0B,EAAO3wB,MAAQ9jC,EAAOuQ,aAE3D87C,EAAKuK,mBAAqB,EAE1B,MAAMhD,EAAwBD,EAAc3zD,EAAOuQ,aAAe7R,KAAKwnC,KACjEguB,EAAsBN,EAAgB,EACtCmkB,EAAmCnkB,EAAgBkB,EACnDkjB,EAAiC9jB,EAAcY,EAC/CmjB,EAAwB1uE,KAAKuC,IAAI,GAAM8nD,EAAgBikB,IAAaC,EAASD,IAC7EK,EAAsB3uE,KAAKuC,IAAI,GAAMooD,EAAc2jB,IAAaC,EAASD,IAO/E,GANAb,EAAsB,EACtBC,EAAoB,EACpBH,EAAgBtiB,EAAS98B,UAAY+8B,EAAO/8B,SAAW88B,EAAS98B,UAAYugD,EAC5ElB,EAAcviB,EAAS98B,UAAY+8B,EAAO/8B,SAAW88B,EAAS98B,UAAYwgD,EAC1E7rB,EAAKyK,aAAeigB,GAEdrhD,EAAWriB,aAAeg5C,EAAKgJ,oBAAmC,MAAZD,EAAkB,CAC1E,MAAMniD,GAAwB+e,EAAWwmB,kBACzC,GAAIvlC,EAAe,EAAK,CAEpB,MAAMklE,EAA0BnjB,EAAcF,EAC9CkiB,GAAuBztE,KAAKuC,IAAI,GAAMqsE,EAAkBJ,GAA4B9kE,GACpFgkE,GAAqB1tE,KAAKuC,IAAI,GAAMqsE,EAAkBH,GAA0B/kE,GAC5EihD,GAAeY,EAAgBqjB,IAAiBtB,GAAmB,EAC1E,CACJ,CAEJ,CAEDxqB,EAAKsK,aAAekgB,EAEpB,IACIpU,EACAM,EAFAqV,EAAgCpmD,EAAWoF,WAI/C,GAAIpF,EAAWiF,eAAgB,CAE3B,MAAMohD,EAA0CrmD,EAAWoF,WACvB,MAAhCpF,EAAWsc,eAAe,KAC1Btc,EAAWsc,eAAe,GAAK,IAAInD,IACvC,MAAMmtC,EAAwCtmD,EAAWsc,eAAe,GAGxE,IAAIo0B,EAA0B1wC,EAAWmc,oBACrCw0B,EAA0B3wC,EAAWoc,qBACrCw0B,EAAwB5wC,EAAWmc,oBACnC00B,EAAwB7wC,EAAWoc,qBACnC00B,GAAyB,EAEzBpkE,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,iBAAiBF,MAAO23C,EAAcwR,EAAKxP,mBACzF6lB,EAAkBhkE,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,iBAAiBF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAC5H+lB,EAAgBlkE,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,iBAAiBF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAC1HimB,GAAgB,GAEhBpkE,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,kBAAkBF,MAAO23C,EAAcwR,EAAKxP,mBAC1F8lB,EAAkBjkE,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,kBAAkBF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAC7HgmB,EAAgBnkE,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,kBAAkBF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAC3HimB,GAAgB,GAGpBuV,EAAwB1qC,8BAA8B+0B,EAAiBC,GAAkBG,GACzFwV,EAAsB3qC,8BAA8Bi1B,EAAeC,GAAgBC,GAEnFL,EAAa4V,EAAwBjtC,cAAc,GACnD23B,EAAWuV,EAAsBltC,cAAc,GAG/CpZ,EAAWoF,WAAaihD,EACxBrmD,EAAW4jC,mBAAqByiB,CACnC,CAGD,MAAM1e,EAAqCtN,EAAKsN,iBAChD,IAAI2Z,EAA2BtzE,EAAOgU,cAAcge,EAAWgG,eAC3Dt5B,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,kBAAkBF,MAAO23C,EAAcwR,EAAKxP,mBAC1Fy2B,EAAmB/pE,KAAKiM,IAAI,EAAGjM,KAAKuC,IAAI9L,EAAOgU,cAAczS,OAAS,EAAG7C,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,kBAAkBF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,KAEhLy2B,EADAnzD,OAAOkzD,UAAUC,GACEtzE,EAAOgU,cAAcs/D,IAGpB,EAAKA,EAAmB,GAAMtzE,EAAOgU,cAAczK,KAAKic,MAAM8tD,IAAsBA,EAAmB,EAAKtzE,EAAOgU,cAAczK,KAAK2S,KAAKo3D,KAGvK3Z,EAAiBjG,iBAAiB1hC,EAAY2hC,EAAavH,EAAgB2O,aAAc/6D,EAAOuQ,aAAe+hE,EAAetS,EAAiBthE,KAAKkuD,iBAAkBP,EAAMinB,GAC5K,MAAMjgB,EAA2BhH,EAAKsN,iBAAiBtG,eACjDC,EAAyBjH,EAAKsN,iBAAiBrG,aAGrD,GAFAthC,EAAWoF,WAAaghD,EAEP,MAAb/rB,EAAK9mB,MAAgB7P,EAAWniB,OAAQ,CAExC,MAAM4hD,EAAwB9I,EAAK8I,SAC7BC,EAAwB/I,EAAK+I,SACnC,GAAgB,MAAZD,EAAkB,CAClB,MAAMojB,EAAuBpjB,EAASjxB,QAAQmoB,EAAKmK,oBAAsBrB,EAAShxB,KAAKgxB,EAAShxB,KAAK5iC,OAAS,GAAGm2B,SAAW20B,EAAKnoB,QAAQ,GAGzI,GAFIy1B,EAAiB9G,iBAAgBikB,GAAiByB,EAAe5e,EAAiB1G,qBAClF0G,EAAiB7G,eAAcikB,GAAewB,EAAe5e,EAAiBzG,oBAC7Et9B,EAAM/f,WAAY,CACnB,MAAM2iE,EAAwBrjB,EAASjxB,QAAQ3iC,OAAS8qD,EAAKiK,UACzDqD,EAAiB9G,iBAAgBqkB,EAAuB/uC,GAAMmuC,uBAAuBjqB,EAAKiK,UAAYkiB,EAAgB7e,EAAiB1G,sBACvI0G,EAAiB7G,eAAcqkB,EAAqBhvC,GAAMmuC,uBAAuBjqB,EAAKiK,UAAYkiB,EAAgB7e,EAAiBzG,mBAC1I,CACJ,CACD,GAAgB,MAAZkC,EAAkB,CAClB,MAAMmjB,EAAuBnjB,EAASlxB,QAAQmoB,EAAKoK,qBAAuBpK,EAAKnoB,QAAQ,GAAKmoB,EAAK9mB,KAAKpB,KAAKkoB,EAAK9mB,KAAKpB,KAAK5iC,OAAS,GAAGm2B,UAGtI,GAFIiiC,EAAiB5G,iBAAgB+jB,GAAiByB,EAAe5e,EAAiBxG,qBAClFwG,EAAiB3G,eAAc+jB,GAAewB,EAAe5e,EAAiBvG,oBAC7Ex9B,EAAM/f,WAAY,CACnB,MAAM2iE,EAAwBpjB,EAASlxB,QAAQ3iC,OAAS8qD,EAAKiK,UACzDqD,EAAiB5G,iBAAgBmkB,EAAuB/uC,GAAMmuC,uBAAuBjqB,EAAKiK,UAAYkiB,EAAgB7e,EAAiBxG,sBACvIwG,EAAiB3G,eAAcmkB,EAAqBhvC,GAAMmuC,uBAAuBjqB,EAAKiK,UAAYkiB,EAAgB7e,EAAiBvG,mBAC1I,CACJ,CACJ,CAED,GAAIzlD,EAAyBqkB,EAAWvkB,SAAU,CAC9C,IAAIihC,EAAqB1uC,EAAO+Y,wBAAwBiZ,EAAW0c,YAAc8nC,EAC7EiC,EAAgC,EAChCC,EAA8B,EAC9Bh6E,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,mBACvFnO,EAAa1uC,EAAO+Y,wBAAwB/Y,EAAO+Y,wBAAwBxX,OAAS,GACpFk3E,EAAyB/5E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAW78C,EAAuB,iBACnK04E,EAAuBh6E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAU78C,EAAuB,kBAIpK82E,GAAiBpoC,EAFa2kB,EAAc,IAEEolB,EAC9C1B,GAAeroC,EAFa4kB,EAAY,IAEEolB,CAC7C,CACD,GAAI9qE,EAAqBokB,EAAWvkB,UAAY/O,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAkB,CACrJ,MAAM2Y,EAAwBnC,EAAc,IACtCqC,EAAsBpC,EAAY,IACxC,IAAIqlB,EAAyB3mD,EAAW2c,OACpCiqC,EAAuB5mD,EAAW2c,OAClCjwC,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAmB,OAAEF,MAAO23C,EAAcwR,EAAKxP,mBAClF87B,EAAiBj6E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAmB,OAAEF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAS78C,EAAOmZ,aACpIy/D,EAAel6E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAmB,OAAEF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAQ78C,EAAOmZ,cAEjIza,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,mBACvF87B,GAAkB,EAAIj6E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAC9H+7B,GAAgB,EAAIl6E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,IAEhIi6B,GAAiB3uC,GAAMgJ,cAAcwnC,GAAkBnjB,EAAgBx1D,EAAOyY,iBAAgB,KAC9Fs+D,GAAe5uC,GAAMgJ,cAAcynC,GAAgBljB,EAAc11D,EAAOyY,iBAAgB,IAC3F,CAED,GAAI5K,EAAsBmkB,EAAWvkB,SAAU,CAC3C,IAAImG,EACAilE,EACAC,EA+BAC,EACJ,GA9BI/mD,EAAWgE,SAAWh2B,EAAO0T,SAASnS,QACtCqS,EAAuC,EAA1Boe,EAAW8G,aAEpB9G,EAAW8G,cAAgB94B,EAAOyb,WAAWrY,WAAW,iBAAiBuY,YACzE/H,EAAauM,OAAO64D,mBACxBH,EAAwB7mD,EAAW6G,aACnCigD,EAAsBD,IAEtBjlE,EAAa5T,EAAO0T,SAASse,EAAWgE,SAASpiB,WACjDilE,EAAwB74E,EAAO0T,SAASse,EAAWgE,SAAS7pB,UAC5D2sE,EAAsBD,GAGtBn6E,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,iBAAiBF,MAAO23C,EAAcwR,EAAKxP,mBACzFjpC,EAAgI,EAAnHlV,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,iBAAiBF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GACnHjpC,GAAwE,EAA1D5T,EAAOyb,WAAWrY,WAAW,iBAAiBuY,YAC5D/H,EAAauM,OAAO64D,oBAIxBt6E,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,iBAAiBF,MAAO23C,EAAcwR,EAAKxP,mBACzFg8B,EAAwBn6E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,iBAAiBF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAS,GAC3Ii8B,EAAsBp6E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,iBAAiBF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAQ,IAQpH,MAApBwP,EAAKsL,YACLohB,EAAe1sB,EAAKsL,gBACjB,CAIH,GADAohB,EAAeF,EAFe1wC,GAAM8wC,gBAAgBjnD,EAAYykD,EAAiBrqB,EAAgByO,aACvDxH,EAAc,IAEpDz/C,EAAa,EAAK,CAClB,MAAMslE,EAAiCtlE,EAAa+lD,EAAiB1H,eACrE8mB,GAAgBxvE,KAAKiM,IAAI,EAAKjM,KAAKuC,IAAI,EAAK,EAAMotE,EAAyB,GAC9E,CACJ,CAED,IAAIC,EAAwBhxC,GAAM8wC,gBAAgBjnD,EAAYykD,EAAiBrqB,EAAgB0O,iBAC/F,MAAMse,EAAkC9lB,EAAY,IACpD,GAAmB,IAAfthC,EAAWre,KAA4B,CACvC,IAAI0lE,EAAqBP,EAAsBK,EAAgBC,EAC/D,GAAIxlE,EAAa,EAAK,CAClB,MAAM0lE,EAA+B1lE,EAAa+lD,EAAiBzH,aACnEmnB,GAAc9vE,KAAKiM,IAAI,EAAKjM,KAAKuC,IAAI,EAAK,EAAMwtE,EAAuB,GAC1E,CAEDjtB,EAAKsL,YAAc0hB,EAEnBvC,GAAiBiC,EACjBhC,GAAesC,CAClB,CACJ,CAED,IAAM3jD,EAAWriB,aAAeg5C,EAAK4H,sBAA0C,MAAjB5H,EAAK8I,SAAkB,CAEjF,MAAMx/B,EAAwB3D,EAAWumB,mBACrC5iB,EAAgB,IAChBqhD,GAAuBztE,KAAKuC,IAAI,EAAK6tD,EAAiB5H,iBAAmBp8B,GACzEshD,GAAqB1tE,KAAKuC,IAAI,EAAK6tD,EAAiB3H,eAAiBr8B,GAE5E,CAG4C,GAAzC3D,EAAWre,MAAuD,MAArB04C,EAAKkK,eAIlDlK,EAAKkK,aAAelK,EAAKnoB,QAAQ,GAChB,MAAbmoB,EAAK9mB,OAAc8mB,EAAKkK,cAAgBlK,EAAK9mB,KAAKlB,oBACtDgoB,EAAKkK,aAAehtD,KAAKiM,IAAI,EAAGjM,KAAKuC,IAAI9L,EAAO0Y,UAAY,EAAG2zC,EAAKkK,gBAGxE,IAAIgjB,EAA+B5f,EAAiBlG,qCACpD,GAAK3lD,EAAyBkkB,EAAWvkB,SAElC,CAEH,MAAM+rE,EAAoCnmB,EAAc,GAClDomB,EAAkCnmB,EAAY,GAGpD,GAAIthC,EAAWiF,eAAgB,CAC3B,MAAMyiD,EAAgCrmB,EAAc,IAC9CsmB,EAA8BrmB,EAAY,IAC1CsmB,EAAgCvmB,EAAc,IAC9CwmB,EAA8BvmB,EAAY,IAEhDmP,EAAY/3B,eAAevC,GAAM+lB,4BAA6BxvD,KAAKkuD,iBAAkB4sB,EAA4BE,EAAuBE,GACxI7W,EAAUr4B,eAAevC,GAAMmmB,0BAA2B5vD,KAAKkuD,iBAAkB6sB,EAA0BE,EAAqBE,GAE5HxtB,EAAKkM,YAAYh3D,OAAS,IAAG8qD,EAAKkM,YAAY,GAAK,IAAIl5B,IAC3DgtB,EAAKkM,YAAY,GAAGt4B,6BAA6BkI,GAAM+lB,4BAA6B/lB,GAAMmmB,0BAA2B,EAAM/B,EAA6D,GAAtCkW,EAAY9uD,MAC9J4lE,GAAwB9W,EAAY73B,4BAEpCyhB,EAAKmM,gBAAkB,CAC1B,KACI,CACD,MAAMshB,EAAuE,MAAjC9nD,EAAW4jC,mBAA8B5jC,EAAW4jC,mBAAqB5jC,EAAWoF,WAEhI,IAAK,IAAInuB,EAAY,EAAGA,EAAI6wE,EAAmBzuC,kBAAmBpiC,IAAK,CACnE,MAAMywE,EAAgCrmB,EAAe,GAAuCpqD,GACtF0wE,EAA8BrmB,EAAa,GAAuCrqD,GAClF2wE,EAAgCvmB,EAAe,GAAuCpqD,GACtF4wE,EAA8BvmB,EAAa,GAAuCrqD,GACxF,IAAIw5D,EAAiCqX,EAAmB1uC,cAAcniC,GACtE,MAAM85D,EAA+D,MAA/B/wC,EAAWo1C,kBAA4E,MAAhDp1C,EAAWo1C,iBAAiBh8B,cAAcniC,GAAc+oB,EAAWo1C,iBAAiBh8B,cAAcniC,GAAK6wE,EAAmB1uC,cAAcniC,GAGjNw5D,EAAW9uD,MAAQovD,EAASpvD,OAC5B8uD,EAAaM,GAGjBN,EAAW/3B,eAAevC,GAAM+lB,4BAA6BxvD,KAAKkuD,iBAAkB4sB,EAA4BE,EAAuBE,GACvI7W,EAASr4B,eAAevC,GAAMmmB,0BAA2B5vD,KAAKkuD,iBAAkB6sB,EAA0BE,EAAqBE,GAC3HxtB,EAAKkM,YAAYh3D,QAAU0H,IAAGojD,EAAKkM,YAAYtvD,GAAK,IAAIo2B,IAC5DgtB,EAAKkM,YAAYtvD,GAAGg3B,6BAA6BkI,GAAM+lB,4BAA6B/lB,GAAMmmB,0BAA2B,EAAM/B,EAA4D,GAArCkW,EAAW9uD,MAC7J4lE,GAAwB9W,EAAW73B,2BACtC,CACDyhB,EAAKmM,gBAAkBshB,EAAmBzuC,iBAC7C,CACJ,MA9CGghB,EAAKmM,gBAAkB,EAgD3B,GAAmB,GAAfxmC,EAAWre,KAAgC,CAC3C,MAAMomE,EAAkC/nD,EAAWsf,mBAAmB+a,EAAKkK,cAI3EgjB,GAAwBznB,GAAiB+D,wCAAwCkkB,GAGjF,IAAIC,EAAqCloB,GAAiB2D,gBAAgBskB,EAAuBpgB,EAAiB5H,iBAAkB4kB,EAAerE,EAAe3Y,EAAiBxH,eAGnL,GAAIwH,EAAiB9G,eAAgB,CAEjCmnB,IADsBloB,GAAiB2D,gBAAgBskB,EAAuBpgB,EAAiBnH,qBAAsBmkB,EAAerE,EAAe3Y,EAAiBtH,cAC7H2nB,GAA8BrgB,EAAiB1G,mBACzF,CACD,GAAI0G,EAAiB5G,eAAgB,CAEjCinB,IADsBloB,GAAiB2D,gBAAgBskB,EAAuB,EAAKpD,EAAerE,EAAe3Y,EAAiBrH,cAC3F0nB,GAA8BrgB,EAAiBxG,mBACzF,CAED,IAAI8mB,EAAmCD,EAEvC,GAAoC,GAA/BhoD,EAAWiG,iBAA4B,CAGxC,GAFAgiD,EAA2BnoB,GAAiB2D,gBAAgBskB,EAAuBpgB,EAAiB3H,eAAgB2kB,EAAepE,EAAa5Y,EAAiBvH,aAE7JuH,EAAiB7G,aAAc,CAE/BmnB,IADsBnoB,GAAiB2D,gBAAgBskB,EAAuBpgB,EAAiBlH,mBAAoBkkB,EAAepE,EAAa5Y,EAAiBtH,cAC3H4nB,GAA4BtgB,EAAiBzG,iBACrF,CACD,GAAIyG,EAAiB3G,aAAc,CAE/BinB,IADsBnoB,GAAiB2D,gBAAgBskB,EAAuB,EAAKpD,EAAepE,EAAa5Y,EAAiBrH,cAC3F2nB,GAA4BtgB,EAAiBvG,iBACrF,CACJ,CAED,MAAM/qB,EAA4B3pC,KAAKouE,wBACvCzkC,EAAM10B,KAAI,EACV00B,EAAMuB,KAAOF,GAAmBe,qCAAqC,IACrEpC,EAAMsB,KAAOD,GAAmBS,6BAA6B,KAE7D9B,EAAMqC,eAAevC,GAAM+lB,4BAA6BxvD,KAAKkuD,iBAAkBotB,GAA8B,EAAMA,GAA6B,GAChJ3xC,EAAMqC,eAAevC,GAAMmmB,0BAA2B5vD,KAAKkuD,iBAAkBqtB,GAA4B,EAAMA,GAA2B,GACtI5tB,EAAKkM,YAAYh3D,QAAU8qD,EAAKmM,kBAAiBnM,EAAKkM,YAAYlM,EAAKmM,iBAAmB,IAAIn5B,IAClGgtB,EAAKkM,YAAYlM,EAAKmM,iBAAiBv4B,6BAA6BkI,GAAM+lB,4BAA6B/lB,GAAMmmB,0BAA2B,EAAM/B,GAAuB,GACrKF,EAAKmM,iBACR,CAID,GAFA+gB,EAAuBhwE,KAAKuC,IAAI,EAAKytE,GAElB,GAAfvnD,EAAWre,MAA4C,IAAfqe,EAAWre,KAA8B,CAGjF,IAAIumE,EAA8B,EAC9BC,EAAiC,EAEjCC,EAA2B,EAC/B,MAAMzkE,EAAuBigB,EAAMjgB,YACnC,GAAI02C,EAAKt/C,WAAa,GAAK4I,EAAa,CACpC,MAAM1I,EAAmB1D,KAAKic,MAAM4mC,EAAgBwO,QAAU56D,EAAOwQ,kBACrE4pE,EAAmB/tB,EAAKnoB,QAAQp3B,EAAsBu/C,EAAKt/C,WAAYilB,EAAWmH,eAAgBlsB,IAAao/C,EAAKnoB,QAAQ,EAC/H,CAGD,MAAMhuB,EAA+D,IAAvC8b,EAAWre,KAA+Bqe,EAAW2d,gBAAgBz5B,aAAelW,EAAOiW,WAAW+b,EAAWqE,WAAWngB,aAC1J,IAAK,IAAIjN,EAAY,EAAGA,GAA4C,IAAvC+oB,EAAWre,KAA8B,EAAI3T,EAAO+V,eAAgB9M,IAAK,CAElG,MAAMoxE,EAAyE,IAAvCroD,EAAWre,KAA+Bqe,EAAW2d,gBAAgBx5B,kBAAkBlN,GAAG,EAAEjJ,EAAOiW,WAAW+b,EAAWqE,WAAWlgB,kBAAkBlN,GAAK,EAC7L+6B,EAAgBqoB,EAAKnoB,QAAQvuB,EAAc,EAAM1M,EAAIojD,EAAKt/C,WAAc9D,EAAMoxE,EAAyBhuB,EAAKt/C,WAAcstE,EAAyB,GACnJ1vC,EAAW3qC,EAAOwW,oBAAoBwb,EAAWwE,UAAUvtB,GAAGwtB,WAAWhgB,KACzEihB,EAAW13B,EAAOsW,wBAAwB+jE,GAA0BD,EACpEE,EAAqBvrE,GAAai1B,EAAQ8yC,GAAiBN,EAAgB9+C,EAC3E6iD,EAAmBxrE,GAAai1B,EAAQ+yC,GAAeP,EAAgB9+C,EACvE8iD,EAAwBzsC,GAAW+J,mBAAmBwiC,GACtDG,EAAsB1sC,GAAW+J,mBAAmByiC,GACpD7jE,EAAmB1W,EAAOwW,oBAAoBwb,EAAWwE,UAAUvtB,GAAGwtB,WAAW/f,SACjFgkE,EAA0B/vC,EAAW6vC,EAAgB9jE,EACrDikE,EAAwBhwC,EAAW8vC,EAAc/jE,EAGjDkkE,EAA4BvnB,EAAe,EAA0CpqD,GACrF4xE,EAA0BvnB,EAAa,EAA0CrqD,GACvF,IAAIg5D,EACAC,EACqB,GAArB0Y,GAA+C,GAAnBC,GAC5B5Y,EAAY14D,KAAKoB,IAAI,EAAKpB,KAAK2C,KAAKwuE,EAAkBF,GAAiBI,GAAqBJ,EAC5FtY,EAAU34D,KAAKoB,IAAI,EAAKpB,KAAK2C,KAAKyuE,EAAgBF,GAAeI,GAAmBJ,IAEpFxY,EAAYyY,EACZxY,EAAUyY,GAEdtuB,EAAKS,YAAY7jD,GAAKg5D,EAAYyU,EAClCrqB,EAAKW,iBAAiB/jD,GAAKM,KAAKoB,IAAIu3D,EAAUD,EAAW,EAAM1V,GAE/D,IAAIuuB,EAAyB9oD,EAAWwE,UAAUvtB,GAAGkD,UACjD4uE,EAAuB/oD,EAAWwE,UAAUvtB,GAAGkD,UAC/ClD,EAAI,EACAvK,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAQ+F,EAAG4xC,EAAcwR,EAAKxP,mBAC3Fi+B,GAAkBp8E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAQ+F,EAAG4xC,EAAcwR,EAAKxP,iBAAiB,GAAS,GACvIk+B,GAAgBr8E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAQ+F,EAAG4xC,EAAcwR,EAAKxP,iBAAiB,GAAQ,IAGpIn+C,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAQ+F,EAAE,EAAG4xC,EAAcwR,EAAKxP,mBAC7Fi+B,GAAkBp8E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAQ+F,EAAE,EAAG4xC,EAAcwR,EAAKxP,iBAAiB,GAAS,GACzIk+B,GAAgBr8E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAQ+F,EAAE,EAAG4xC,EAAcwR,EAAKxP,iBAAiB,GAAQ,IAI9I,MAAMm+B,EAA8B7yC,GAAMohC,uBAAuBuR,GAC3DG,EAA4B9yC,GAAMohC,uBAAuBwR,GAI/D,IAAIG,EAH+BF,EAAsBh7E,EAAOwW,oBAAoBwb,EAAWwE,UAAUvtB,GAAGwtB,WAAW9f,cAInHwkE,EAH6BF,EAAoBj7E,EAAOwW,oBAAoBwb,EAAWwE,UAAUvtB,GAAGwtB,WAAW9f,cAMnH,GAAI1N,EAAIiN,EAAc,CAElB,IAAIklE,EAEAA,EADgC,MAAhC/uB,EAAKqL,qBAAqBzuD,GACHojD,EAAKqL,qBAAqBzuD,GAE1BM,KAAKoB,IAAI,IAAO2vE,EAAalD,GAA4BE,GAEpF,MAAM+D,EAA6B9xE,KAAKoB,IAAI,IAAO4vE,EAAWnD,GAA4BE,GAC1FjrB,EAAKqL,qBAAqBzuD,GAAKoyE,EAC/BH,GAAmBE,EACnBD,GAAiBE,EAEjBlB,GAA0Bc,CAC7B,MAEGC,GAA2C,IAAxBl7E,EAAO0M,eAC1ByuE,GAAyC,IAAxBn7E,EAAO0M,eAExBwtE,GAAuB,EAAM3wE,KAAKuC,IAAI,EAAKkmB,EAAWwE,UAAUvtB,GAAGkD,UAAY,IAWnF,GARA+uE,GAAmB7nB,EAAe,GAA0CpqD,GAC5EkyE,GAAiB7nB,EAAa,GAA0CrqD,GAOpEvK,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAkB,CAEzG,MAAMymB,EAAmB5kE,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAC3H0mB,EAAiB7kE,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAC/Hq+B,GAAqB5X,GAAY,GAAOA,EAAWtjE,EAAOyU,YAAc,IAAMzU,EAAOyU,YAAc,GAAM0zB,GAAMi7B,6BAA6BE,GAC5I6X,GAAmB5X,GAAU,GAAOA,EAASvjE,EAAOyU,YAAc,IAAMzU,EAAOyU,YAAc,GAAM0zB,GAAMi7B,6BAA6BG,EACzI,CAEDlX,EAAKmL,oBAAoBvuD,GAAKiyE,EAC9B7uB,EAAKoL,yBAAyBxuD,IAAMkyE,EAAgBD,GAAmB3uB,CAE1E,CAED2tB,IAAwB3wE,KAAKoB,IAAI,EAAM,EAAM,IAAMqnB,EAAWuE,kBAAoB,IAAS,GAAO,EAClG2jD,GAAuB,EAAM3wE,KAAKuC,IAAI,EAAKvC,KAAKiM,IAAI,EAAK2kE,EAAyB,GAAK,GACvFD,EAAsB,EAA4B,EAAtBA,EAC5B,MAAMgB,EAA0B7D,EAAiB6C,EAAsBX,EAAuBvC,EAAsBE,EAAuB7jB,EAAc,GACnJ8nB,EAAwB9D,EAAiB6C,EAAsBX,EAAuBtC,EAAoBE,EAAqB7jB,EAAY,GACjJjH,EAAKxpD,WAAaq4E,EAClB7uB,EAAKkL,iBAAmB4jB,EAAgBD,GAAmB3uB,EAG3D,IAAI+uB,EAAoCtpD,EAAWuE,kBAC/CglD,EAAkCvpD,EAAWuE,kBAC7C73B,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,mBACvFy+B,GAA6B58E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAS,GAC9I0+B,GAA2B78E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAQ,IAG/I,IAAI2+B,EAAyD,GAAxBx7E,EAAO0M,eAAuB4uE,EAA4B,GAC/F,MAAMG,EAAuD,GAAxBz7E,EAAO0M,eAAuB6uE,EAA0B,GAE7F,IAAIG,EAAwBF,EAAyBnoB,EAAc,IAC/DsoB,EAAsBF,EAAuBnoB,EAAY,IAC7DjH,EAAKwM,aAAe6iB,EACpBrvB,EAAKyM,eAAiB6iB,EAAcD,GAAiBnvB,CAGxD,KAAM,CACH,MAAMqvB,EAAuBryE,KAAKoB,IAAI,GAAMosE,EAAcD,GAAiBN,EAAgB,IAC9FqF,EAA8BtyE,KAAKoB,IAAIixE,EAAc,EAAMrvB,GAGxD,IAAIvoB,EAAgBqoB,EAAKnoB,QAAQ,GACjC,GAAImoB,EAAKt/C,WAAa,IAAM6oB,EAAMjgB,aAAeigB,EAAMlgB,gBAAiB,CACpE,MAAMzI,EAAmB1D,KAAKic,MAAM4mC,EAAgBwO,QAAU56D,EAAOwQ,kBACrE,GAAIolB,EAAMlgB,eAAgB,CACtB,MAAMomE,EAAyBzvB,EAAKnoB,QAAQ,EAAIp3B,EAAsBu/C,EAAKt/C,WAAa,EAAGilB,EAAWmH,eAAgBlsB,IAAao/C,EAAKnoB,QAAQ,GAChJ0yC,EAAsBrtE,KAAKoB,IAAI,EAAKmxE,EAAiB,IACrDzvB,EAAKsM,8BAAgCpvD,KAAKoB,IAAI,GAAMmxE,EAAiBxE,EACxE,MACGtzC,EAAQqoB,EAAKnoB,QAAQp3B,EAAsBu/C,EAAKt/C,WAAYilB,EAAWmH,eAAgBlsB,GAE9F,CAED,MAAMqwC,EAAqBvuC,GAAai1B,EAAQ8yC,GAAiBN,EAC3DuF,EAAmBhtE,GAAai1B,EAAQ+yC,GAAeP,EAC7D,IAAI4E,EAGAA,EADgC,MAAhC/uB,EAAKqL,qBAAqB,GACHrL,EAAKqL,qBAAqB,GAE1BnuD,KAAKoB,IAAI,IAAO2yC,EAAa85B,GAA4BE,GAEpF,MAAM+D,EAA6B9xE,KAAKoB,IAAI,IAAOoxE,EAAW3E,GAA4BE,GAC1FjrB,EAAKqL,qBAAqB,GAAK2jB,EAC/B,IAAIW,EAAiC3E,EAAiBkC,EAQtD,GANmB,GAAfvnD,EAAWre,OACXqoE,GAA0Bh8E,EAAOkK,WAAW8nB,EAAWgc,WAAWnrC,YAEnD,GAAfmvB,EAAWre,OACXqoE,GAA0Bh8E,EAAOC,UAAU+xB,EAAWjyB,UAAU8C,YAEjD,GAAfmvB,EAAWre,KAA4B,CACvC,MAAMsoE,EAAyBryE,EAAmBooB,EAAWnoB,YAG7D,IAAIqyE,EAA6BD,EAC7BE,EAA2BF,EAC3Bv9E,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,mBACvFq/B,EAAsBx9E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,IAAoC,EAAzB78C,EAAO8J,iBAChJqyE,EAAoBz9E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,IAAmC,EAAzB78C,EAAO8J,kBAGjJ,MAAMsyE,EAA0BF,EAAqB7oB,EAAc,GAC7DgpB,EAAwBF,EAAmB7oB,EAAY,GAC7DjH,EAAKxiD,WAAauyE,EAClB/vB,EAAKwL,iBAAmBwkB,EAAgBD,GAAmB7vB,EAG3D,IAAI+vB,EAAgCtqD,EAAWkd,cAC3CxwC,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,kBAAkBF,MAAO23C,EAAcwR,EAAKxP,mBAC1Fy/B,EAAwB59E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,kBAAkBF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,IAGvI,MAAM0/B,EAA6BD,EAAwBjpB,EAAc,IACzEhH,EAAKnd,cAAgBqtC,EAErBlwB,EAAKxiD,YAAewiD,EAAkB,cAAI,GAC7C,CACD,GAAmB,GAAfr6B,EAAWre,KAAqC,CAEhD,IAAI6oE,EAA0BxqD,EAAWwF,cACrCilD,EAAwBzqD,EAAWwF,cACnC94B,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAoB,QAAEF,MAAO23C,EAAcwR,EAAKxP,mBACnF2/B,EAAkB99E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAoB,QAAEF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GACtH4/B,EAAgB/9E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAoB,QAAEF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,IAGxHwP,EAAK2K,mBAAqBwlB,EAC1BnwB,EAAK4K,iBAAmBwlB,EAGxBT,GAA0BzyE,KAAKoB,IAAI,EAAK,IAAO,EAAM6xE,GAAmBx8E,EAAOga,mBAAqB,IAEvG,CAED,MAAM0iE,EAAoB3uC,GAAW+J,mBAAmBwF,GACxD,GAAmB,GAAftrB,EAAWre,MAA8C,GAAfqe,EAAWre,MAAoF,GAA3Cqe,EAAWre,MAAmD,GAAfqe,EAAWre,KAAqC,CAG7L,MAAMi7B,EAAuB5c,EAAW4c,aAClCC,EAAuB7c,EAAW6c,aAClCC,EAAuB9c,EAAW8c,aAKxCktC,GAJiChqD,EAAW+c,kBAGS,GAAf/c,EAAWre,KAAuC,EAAIi7B,EAAe,GAE3G,MAAM+tC,EAAsBtpB,EAAc,GACpCupB,EAAoBtpB,EAAY,GAChCupB,EAAuBtzE,KAAKoB,IAAI,GAAMmkC,EAAeD,GAAgB8tC,EAAsB,IAC3FG,EAAqBvzE,KAAKoB,IAAI,GAAMmkC,EAAeD,GAAgB+tC,EAAoB,IACvFG,EAAuBxzE,KAAKoB,IAAI,GAAMmkC,EAAeD,GAAgB8tC,EAAsB,IAAQ/F,EACnGoG,EAAqBzzE,KAAKoB,IAAI,GAAMmkC,EAAcD,GAAgB+tC,EAAoB,IAAQhG,EACpGvqB,EAAKS,YAAY,GAAK4vB,EAAYhG,EAAamG,EAC/CxwB,EAAKS,YAAY,GAAK4vB,EAAYhG,EAAaqG,EAC/C1wB,EAAKW,iBAAiB,GAAK6uB,EAAsBtyE,KAAKoB,IAAImyE,EAAaD,EAAc,EAAMtwB,GAC3FF,EAAKW,iBAAiB,GAAK6uB,EAAsBtyE,KAAKoB,IAAIqyE,EAAaD,EAAc,EAAMxwB,EAC9F,MACGF,EAAKS,YAAY,GAAK4vB,EAAYhG,EAClCrqB,EAAKW,iBAAiB,GAAK6uB,EAKxC,IAAIoB,EAAkC,EAClCC,EAAgC,EACpC,GAAmB,GAAflrD,EAAWre,KAAiC,CAC/C,MAAMwpE,EAAiC,EAAM5zE,KAAKiB,KAAKxK,EAAO8X,oBAGlD,IAAIslE,EAA2BprD,EAAWmd,iBAAmBnvC,EAAO+X,oBAChEslE,EAAyBrrD,EAAWmd,iBAAmBnvC,EAAO+X,oBAC9DrZ,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAqB,SAAEF,MAAO23C,EAAcwR,EAAKxP,mBACpFugC,EAAoB1+E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAqB,SAAEF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAU78C,EAAO+X,oBAC1IslE,EAAkB3+E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAqB,SAAEF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAS78C,EAAO+X,qBAGvJ,MAAMulE,EAA8B,EAAM/zE,KAAKoB,IAAIpB,KAAKiM,IAAI,EAAK,EAAM4nE,EAAmB/pB,EAAc,KAA0C,IAC5IkqB,EAA8B,EAAMh0E,KAAKoB,IAAIpB,KAAKiM,IAAI,EAAK,EAAM6nE,EAAiB/pB,EAAY,KAA4C,IAC1IkqB,EAAmCj0E,KAAKoB,IAAI,EAAKpB,KAAK2C,KAAKixE,GAA0BG,GACrFG,EAAmCl0E,KAAKoB,IAAI,EAAKpB,KAAK2C,KAAKixE,GAA0BI,GAErFG,EAAwBn0E,KAAKiB,MAAM,EAAMjB,KAAKoB,IAAI6yE,EAA0B,GAAO,IAAQx9E,EAAO8X,mBAAqB,IACvH6lE,EAAwBp0E,KAAKiB,MAAM,EAAMjB,KAAKoB,IAAI8yE,EAAwB,GAAO,IAAQz9E,EAAO8X,mBAAqB,IAC3Hu0C,EAAKld,iBAAmBuuC,EACxBrxB,EAAKyL,uBAAyB6lB,EAAcD,GAAiBnxB,EAE7D,MAAMqxB,GAA2D,GAA5BvxB,EAAK+L,mBAC1C,GAAIwlB,EAAoB,CAWvB,IAAIC,EAAsB,EAC1B,IAAK,IAAI50E,EAAY,EAAGA,EAAIjJ,EAAO8X,mBAAoB7O,IACtDojD,EAAK6K,OAAOjuD,GAAK40E,EACjBA,IAAgBt0E,KAAKT,IAAIS,KAAKe,UAG/B,MACMmzB,EADuB,GAAOz9B,EAAO8X,mBAAqB,GAAO4lE,EAKvE,IAAI/rB,EAAiB,EACrB,IAAK,IAAI1oD,EAAY,EAAGA,EAAIjJ,EAAO8X,mBAAoB7O,IAAK,CAC3D,MAAMkD,EAA0B,GAALlD,EAAU,EAAMy0E,EACrCI,EAA0BzxB,EAAK6K,OAAOjuD,GAAK40E,EACjDxxB,EAAK6K,OAAOjuD,GAAK60E,EACjBnsB,IAAWmsB,EAAkB,IAAO3xE,CACpC,CAQD,IAAI4xE,EAA4B,EAC5BC,EAAmB,EACvB,IAAK,IAAI/0E,EAAYjJ,EAAO8X,mBAAqB,EAAG7O,GAAK,EAAGA,IAAK,CAChE,MAAMg1E,EAAmB,EAAM5xB,EAAK6K,OAAOjuD,GACrCi1E,EAAqBD,EAAWD,EACtC,GAAIrsB,EAAS,EAAK,CACjB,MAAMwsB,GAAkCxsB,EAASl0B,EACjD,GAAI0gD,EAAyBD,EAAY,CACxCH,EAAoBC,EAAWG,EAC/B,KACA,CACD,CAEDxsB,GAAUusB,EAAazgD,GADS,GAALx0B,EAAU,EAAMy0E,GAE3CM,EAAWC,CACX,CACD,IAAK,IAAIh1E,EAAY,EAAGA,EAAIjJ,EAAO8X,mBAAoB7O,IACtDojD,EAAK6K,OAAOjuD,IAAM80E,EAMnB,IAAK,IAAI90E,EAAY,EAAGA,EAAIjJ,EAAO8X,mBAAqB,EAAG7O,IAAK,CAC/D,MAAMm1E,EAAuBn1E,EAAIM,KAAKic,MAAMjc,KAAKe,UAAYtK,EAAO8X,mBAAqB7O,IACnF6rB,EAAeu3B,EAAK6K,OAAOjuD,GACjCojD,EAAK6K,OAAOjuD,GAAKojD,EAAK6K,OAAOknB,GAC7B/xB,EAAK6K,OAAOknB,GAAgBtpD,CAC5B,CACD,CAED,MAAMupD,EAA2BrsD,EAAWod,eAAiBpvC,EAAOgY,kBAEpE,IAAIsmE,EAAyBD,EACzBE,EAAyBF,EACb3/E,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAmB,OAAEF,MAAO23C,EAAcwR,EAAKxP,mBAClFyhC,EAAkB5/E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAmB,OAAEF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAU78C,EAAOgY,kBACtIumE,EAAgB7/E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAmB,OAAEF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAS78C,EAAOgY,mBAGnJ,MAGMwmE,EAAsE,IAH1CF,EAAiBjrB,EAAc,IAC/BkrB,EAAejrB,EAAY,KAGvDmrB,EAAuBl1E,KAAKoB,IAAI,EAAMpB,KAAKiB,KAAKjB,KAAKiM,IAAI,EAAK,EAAMgpE,IAAuB,MACjG,IAAK,IAAIv1E,EAAI,EAAGA,EAAIjJ,EAAO8X,mBAAoB7O,IAAK,CAEnD,MAAMmL,EAAuB,GAALnL,EAAU,EAAMM,KAAKoB,MAAO1B,EAAI,GAAM,GAAK,GAAM,OAAc,EAAJA,GAAS,KAAOjJ,EAAO8X,oBAAsB,GAAI,MAAkB,GAAL,EAAJ7O,GAAa,GAC1JojD,EAAK0L,sBAAsB9uD,GAAKM,KAAKoB,IAAI,EAAK8zE,EAAerqE,EAAS,GACtE,CAED,MAAMsqE,EAAoB1sD,EAAWqd,cAAgBrvC,EAAOiY,iBAE5D,IAAI0mE,EAAwBD,EAAYrrB,EAAc,IAClDurB,EAAwBF,EAAYprB,EAAY,IACpC50D,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,aAAaF,MAAO23C,EAAcwR,EAAKxP,mBACrF8hC,EAAiBjgF,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,aAAaF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAU78C,EAAOiY,iBACxI2mE,EAAelgF,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,aAAaF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAAS78C,EAAOiY,kBAGrJ,MAAM4mE,EAAqBF,EAAgBtrB,EAAc,IACnDyrB,EAAqBF,EAActrB,EAAY,IACrDjH,EAAKhd,cAAgBwvC,EACrBxyB,EAAK2L,oBAAsB8mB,EAAWD,GAActyB,EAGxC,IAAI+vB,EAAgCtqD,EAAWkd,cAC3CxwC,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,kBAAkBF,MAAO23C,EAAcwR,EAAKxP,mBAC1Fy/B,EAAwB59E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,kBAAkBF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,IAGvI,MAAM0/B,EAA6BD,EAAwBjpB,EAAc,IAEzEhH,EAAKnd,cAAgBqtC,EAErB,MAAMN,EAAyBryE,EAAmBooB,EAAWnoB,YAG7D,IAAIqyE,EAA6BD,EAC7BE,EAA2BF,EAC3Bv9E,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,mBACvFq/B,EAAsBx9E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,IAAoC,EAAzB78C,EAAO8J,iBAChJqyE,EAAoBz9E,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,IAAmC,EAAzB78C,EAAO8J,kBAGjJ,IAAIsyE,EAA0BF,EAAqB7oB,EAAc,GAC7DgpB,EAAwBF,EAAmB7oB,EAAY,GAC3D8oB,GAAmBG,EAAqB,IACxCF,GAAiBE,EAAqB,IAClD,MAAM1vB,EAA0D,MAA/BR,EAAKgM,uBAAkChM,EAAKgM,uBAAyBqkB,EAAYhG,EAC5GzpB,EAAwByvB,EAAYhG,EAAakF,EACvDvvB,EAAKgM,uBAAyBpL,EAC9B,MAAM8xB,EAAmB3C,EAAkBvvB,EACrCsD,EAAiBksB,EAAgBpvB,EACvCZ,EAAK4L,oBAAsB8mB,EAC3B1yB,EAAK6L,0BAA4B/H,EAAiB4uB,GAAoBxyB,EACtE,MAAM0D,EAA0B1mD,KAAK2S,KAAK3S,KAAKiM,IAAIupE,EAAkB5uB,IAAmB,EAExF,GAA8B,MAA1B9D,EAAK8L,mBAA6B9L,EAAK8L,kBAAkB52D,QAAU0uD,EAAiB,CAGvF,MAAMM,EAA8BhnD,KAAK2S,KAAK,GAAMxd,KAAKkuD,iBAAmB7e,GAAW+J,mBAAmB,KACpG0Y,EAA6B,IAAIpnD,aAAa++B,GAAMC,kBAAkB7+B,KAAKiM,IAAI+6C,EAAqBN,KAC1G,IAAK2tB,GAAgD,MAA1BvxB,EAAK8L,kBAA2B,CAG1D,MAAM1H,EAA8BpE,EAAK8L,kBAAkB52D,OAAS,GAAM,EACpEmvD,EAAgCrE,EAAK+L,mBAC3C,IAAK,IAAInvD,EAAY,EAAGA,EAAIojD,EAAK8L,kBAAkB52D,OAAQ0H,IAC1DunD,EAAavnD,GAAKojD,EAAK8L,kBAAmBzH,EAAwBznD,EAAKwnD,EAExE,CACDpE,EAAK8L,kBAAoB3H,EACzBnE,EAAK+L,mBAAqB/L,EAAK8L,kBAAkB52D,MACjD,MAAUq8E,IACVvxB,EAAK8L,kBAAkB9B,KAAK,GAC5BhK,EAAK+L,mBAAqB/L,EAAK8L,kBAAkB52D,QAGlD,MAAMy9E,EAA+Bh/E,EAAOoR,kBAAoBpR,EAAOqR,uBACvE4rE,IAA4B,GAAO+B,EAAuB,GAAOH,GAAct1E,KAAKiB,KAAK,GAAOxK,EAAO8X,mBAAqB,GAAO4lE,EAAgBA,GACnJR,IAA0B,GAAO8B,EAAuB,GAAOF,GAAYv1E,KAAKiB,KAAK,GAAOxK,EAAO8X,mBAAqB,GAAO6lE,EAAcA,EAC7I,CAED,IAAIzC,EAA0Bc,EAAyBhF,EAAsBE,EAAuBkE,EAAuB/nB,EAA+C,GAAG4pB,EACzK9B,EAA0Ba,EAAyB/E,EAAsBE,EAAuBkE,EAAuB/nB,EAA+C,GAAG4pB,EAGpK,GAAIx+E,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAkB,CAEzG,MAAMymB,EAAmB5kE,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAC3H0mB,EAAiB7kE,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO23C,EAAcwR,EAAKxP,iBAAiB,GAC/Hq+B,GAAqB5X,GAAY,GAAOA,EAAWtjE,EAAOyU,YAAc,IAAMzU,EAAOyU,YAAc,GAAM0zB,GAAMi7B,6BAA6BE,GAC5I6X,GAAmB5X,GAAU,GAAOA,EAASvjE,EAAOyU,YAAc,IAAMzU,EAAOyU,YAAc,GAAM0zB,GAAMi7B,6BAA6BG,EACzI,CAMD,GAJAlX,EAAKxpD,WAAaq4E,EAClB7uB,EAAKkL,iBAAmB4jB,EAAgBD,GAAmB3uB,EAGxC,GAAfv6B,EAAWre,KAAqC,CAChD,IAAI64C,EACJ,GAA4B,MAAxBH,EAAKuL,gBACLpL,EAAmBH,EAAKuL,oBACrB,CACH,MAAMqnB,EAA+B5yB,EAAKsN,iBAAiBtG,eAAc,GACzE7G,EAAmB,EAAMjjD,KAAKuC,IAAI,EAAKmzE,EAAuB5yB,EAAK2K,oBAAsBh3D,EAAOga,mBAAqB,GACxH,CACD,MAAMklE,EAA6B7yB,EAAKsN,iBAAiBrG,aAAY,GACrE,IAAI7G,EAAyB,EAAMljD,KAAKuC,IAAI,EAAKozE,EAAqB7yB,EAAK4K,kBAAoBj3D,EAAOga,mBAAqB,IAC3HqyC,EAAKuL,gBAAkBnL,EAGvB,MAAM7d,EAAuB5c,EAAW4c,aACxC,IAAK,IAAI3lC,EAAYojD,EAAKiM,cAAc/2D,OAAQ0H,EAAI2lC,EAAc3lC,IAC9DojD,EAAKiM,cAAcrvD,GAAK,IAAI0hD,GAGhC,GAAI0B,EAAK2H,cAAgBt+B,EAAWpiB,YAAc+4C,EAAK4H,qBACnD,IAAK,MAAM2F,KAAgBvN,EAAKiM,cAE5BsB,EAAanO,YAAc,EAInC,IAAK,IAAIxiD,EAAY,EAAGA,EAAI2lC,EAAc3lC,IACtCojD,EAAKiM,cAAcrvD,GAAGkjD,OAAOztD,KAAM0tD,EAAiBC,EAAMpjD,EAAGsjD,EAAuBC,EAAkBC,EAAgBz6B,EAAWsd,kBAExI,CACJ,C,CAGE,sBAAO2pC,CAAgBjnD,EAAwBmtD,GAClD,IAAIpkE,EAAiB,EACrB,IAAK,MAAMqkE,KAAwBp/E,EAAO6T,aAAame,EAAWgH,aAAallB,eAC3EiH,GAAUxR,KAAKgD,IAAc,EAAVhD,KAAK8C,GAAW8yE,EAAiBC,GAExD,OAAOrkE,C,CAIJ,iCAAO4lD,CAA2B3uC,GACrC,GAAmB,GAAfA,EAAWre,KAA2B,CACtC,MAAM0rE,EAAsBrtD,EAAWqE,UAAY,IAAMrE,EAAWsE,aACpE,GAA+CrL,MAA3Ckd,GAAMm3C,qBAAqBD,GAA2B,CACtD,MAAME,EAAwB,GAE9B,IAAK,MAAMC,KAAQr3C,GAAMs3C,iBACrB,IAA2C,GAAvCD,EAAK3jD,QAAQ,sBAA6B,CAC1C,MAAM6jD,EAAoB,GAC1B,IAAK,IAAI7qD,EAAY,EAAGA,EAAI70B,EAAOiW,WAAW+b,EAAWqE,WAAWngB,aAAc2e,IAC9E6qD,EAAQv2E,KAAK,WAAa0rB,EAAI,UAElC0qD,EAAYp2E,KAAKq2E,EAAKhgE,QAAQ,sBAAuBkgE,EAAQliE,KAAK,QACrE,MAAM,IAA4D,GAAxDgiE,EAAK3jD,QAAQ,uCACpB,IAAK,IAAIhH,EAAY70B,EAAO+V,cAAgB,EAAG8e,GAAK,EAAGA,IACnD,IAAK,MAAM8qD,KAAgBx3C,GAAMy3C,uBAC7B,IAAuD,GAAnDD,EAAa9jD,QAAQ,0BAAiC,CACtD,IAAIpgB,EAAa,GACjB,IAAK,MAAMokE,KAAmB7/E,EAAOiW,WAAW+b,EAAWqE,WAAWjgB,YAAYye,GAC9EpZ,GAAc,eAAiBokE,EAAkB,GAAK,SAG1D,MAAMC,EAAyC9/E,EAAO8W,UAAUkb,EAAWsE,cAAcvf,QAAQ8d,GACjG,GAAIirD,EAAgBv+E,OAAS,EAAG,CAC5Bka,GAAc,sBACd,MAAM3E,EAAsB,GAC5B,IAAK,MAAM+oE,KAAmBC,EAC1BhpE,EAAU3N,KAAK,YAAc02E,EAAkB,GAAK,UAExDpkE,GAAc3E,EAAU0G,KAAK,OAAS,GACzC,CACD+hE,EAAYp2E,KAAKw2E,EAAangE,QAAQ,MAAOqV,EAAI,IAAIrV,QAAQ,yBAA0B/D,GAC1F,MACG8jE,EAAYp2E,KAAKw2E,EAAangE,QAAQ,MAAOqV,EAAI,UAI1D,IAA0B,GAAtB2qD,EAAK3jD,QAAQ,KACpB,IAAK,IAAIhH,EAAY,EAAGA,EAAI70B,EAAO+V,cAAe8e,IAC9C0qD,EAAYp2E,KAAKq2E,EAAKhgE,QAAQ,MAAOqV,EAAI,UAG7C0qD,EAAYp2E,KAAKq2E,GAMzB,MAAMO,EAAyB,4EAA8ER,EAAY/hE,KAAK,MAAQ,IAElJ2qB,GAAMm3C,qBAAqBD,GAAe,IAAIW,SAAS,SAAU,QAASD,EAAhC,CAAgD//E,EAAQmoC,GAEzF,CACD,OAAOA,GAAMm3C,qBAAqBD,EACrC,CAAM,GAAmB,GAAfrtD,EAAWre,KAEd,OAAIqe,EAAW0H,4BACJyO,GAAM83C,kBAGd93C,GAAM+3C,UACV,GAAmB,GAAfluD,EAAWre,KAClB,OAAOw0B,GAAM+3C,UACV,GAAmB,GAAfluD,EAAWre,KAClB,OAAOw0B,GAAMg4C,eACV,GAAmB,GAAfnuD,EAAWre,KAClB,OAAOw0B,GAAMi4C,gBACV,GAAmB,GAAfpuD,EAAWre,KAC3B,OAAOw0B,GAAMk4C,cACD,GAAmB,GAAfruD,EAAWre,KAClB,OAAOw0B,GAAMm4C,kBACV,GAAmB,GAAftuD,EAAWre,KAClB,OAAOw0B,GAAMo4C,WACV,GAAmB,GAAfvuD,EAAWre,KAClB,OAAOw0B,GAAMq4C,cACV,GAAmB,GAAfxuD,EAAWre,KAClB,OAAOw0B,GAAMs4C,aACV,GAAmB,IAAfzuD,EAAWre,KAClB,OAAOw0B,GAAMkuC,SACV,GAAmB,IAAfrkD,EAAWre,KAA8B,CAChD,MAAM0rE,EAAsBrtD,EAAW2d,gBAAgB/sC,KAAO,IAAMovB,EAAW4d,mBAAmBhtC,KAClG,GAAgDqoB,MAA5Ckd,GAAMu4C,sBAAsBrB,GAA2B,CACvD,MAAME,EAAwB,GAE9B,IAAK,MAAMC,KAAQr3C,GAAMs3C,iBACrB,IAA2C,GAAvCD,EAAK3jD,QAAQ,sBAA6B,CAC1C,MAAM6jD,EAAoB,GAC1B,IAAK,IAAI7qD,EAAY,EAAGA,EAAI7C,EAAW2d,gBAAgBz5B,aAAc2e,IACjE6qD,EAAQv2E,KAAK,WAAa0rB,EAAI,UAElC0qD,EAAYp2E,KAAKq2E,EAAKhgE,QAAQ,sBAAuBkgE,EAAQliE,KAAK,QACrE,MAAM,IAA4D,GAAxDgiE,EAAK3jD,QAAQ,uCACpB,IAAK,IAAIhH,EAAY70B,EAAO+V,cAAc,EAAI,EAAG8e,GAAK,EAAGA,IACrD,IAAK,MAAM8qD,KAAgBx3C,GAAMy3C,uBAC7B,IAAuD,GAAnDD,EAAa9jD,QAAQ,0BAAiC,CACtD,IAAIpgB,EAAa,GACjB,IAAK,MAAMokE,KAAmB7tD,EAAW2d,gBAAgBv5B,YAAYye,GACjEpZ,GAAc,eAAiBokE,EAAkB,GAAK,SAG1D,MAAMC,EAAyC9tD,EAAW4d,mBAAmB74B,QAAQ8d,GACrF,GAAIirD,EAAgBv+E,OAAS,EAAG,CAC5Bka,GAAc,sBACd,MAAM3E,EAAsB,GAC5B,IAAK,MAAM+oE,KAAmBC,EAC1BhpE,EAAU3N,KAAK,YAAc02E,EAAkB,GAAK,UAExDpkE,GAAc3E,EAAU0G,KAAK,OAAS,GACzC,CACD+hE,EAAYp2E,KAAKw2E,EAAangE,QAAQ,MAAOqV,EAAI,IAAIrV,QAAQ,yBAA0B/D,GAC1F,MACG8jE,EAAYp2E,KAAKw2E,EAAangE,QAAQ,MAAOqV,EAAI,UAI1D,IAA0B,GAAtB2qD,EAAK3jD,QAAQ,KACpB,IAAK,IAAIhH,EAAI,EAAGA,EAAI70B,EAAO+V,cAAc,EAAG8e,IACxC0qD,EAAYp2E,KAAKq2E,EAAKhgE,QAAQ,MAAOqV,EAAI,UAG7C0qD,EAAYp2E,KAAKq2E,GAMzB,MAAMmB,EAA0B,4EAA8EpB,EAAY/hE,KAAK,MAAQ,IAEnJ2qB,GAAMu4C,sBAAsBrB,GAAe,IAAIW,SAAS,SAAU,QAASW,EAAhC,CAAiD3gF,EAAQmoC,GAC3F,CACD,OAAOA,GAAMu4C,sBAAsBrB,EACtC,CACG,MAAM,IAAIx+E,MAAM,iCAAmCmxB,EAAWre,K,CAIlE,WAAOitE,CAAKtrE,EAAW4mB,GACnB,OAAQ5mB,EAAI4mB,EAAIA,GAAKA,C,CAEzB,wBAAO+jD,CAAkBtqC,EAAcu7B,EAAqB3kB,EAA+BF,EAAYD,GAMnG,MAAM3yB,EAAoB1rB,EAAyBq+C,EAAgB3+C,UAAY2+C,EAAgB3yB,QAEzFonD,EAAqBlrC,EAAM63B,+BAC3BzkE,EAAqBqjD,EAAgBrjD,KACrC4xD,EAAsBvO,EAAgBuO,YACtCrvD,EAAsBmuB,GAAmC,GAAxB2yB,EAAgBz4C,KAAa5K,EAAKxH,OAASwH,EAAKxH,OAAS,EAChG,IAAIq4B,EAA0BrwB,KAAKiM,IAAI,EAAGjM,KAAKuC,IAAIR,EAAY8gD,EAAgBxyB,kBAC3ED,EAA4BpwB,KAAKiM,IAAI,EAAGjM,KAAKuC,IAAI8tB,EAAkB,EAAGwyB,EAAgBzyB,oBAOtFmnD,EAA6BlnD,EAAkBD,EACxDmnD,EAAqB,IACZnnD,EAAoB,EACpBC,EAAkBtuB,EAClBw1E,EAAqBx1E,GAEzB,MAAMuuB,EAA2BuyB,EAAgBvyB,iBAC3CC,EAAiCsyB,EAAgBtyB,sBACjDkV,EAAqBqd,EAAKsM,8BAAgCvM,EAAgBpd,WAC5C,GAAhCod,EAAgBxd,cAAsBwd,EAAgBx2B,MAAOlgB,iBAC7D22C,EAAK6K,OAAO,GAAK7K,EAAK6K,OAAO,IACjC,IAAI6pB,EAAsB10B,EAAKS,YAAY,GAAKxhD,EAC5C01E,EAAsB30B,EAAKS,YAAY,GAAKxhD,EAC5C21E,EAAqB50B,EAAK8K,WAAW,GACrC+pB,EAAqB70B,EAAK8K,WAAW,GACrCgqB,EAA8B90B,EAAK+K,oBAAoB,GACvDgqB,EAA8B/0B,EAAK+K,oBAAoB,GAClC,IAArBv9B,GAA+C,IAArBA,GAA+C,IAArBA,IAK/CC,GAIDmnD,GAAc,EACdC,GAAc,IAJdD,EAAa,EACbC,EAAa,IAMI,IAArBrnD,GAA+C,IAArBA,IAK1BsnD,EAAsB,EACtBC,EAAsB,GAE1B,IAAIC,EAAoBh1B,EAAKiL,4BAA4B,GACrDgqB,EAAoBj1B,EAAKiL,4BAA4B,GACzD,MAAMiqB,EAAuC,IACvCC,GAA4Bn1B,EAAKW,iBAAiB,GAClDy0B,GAA4Bp1B,EAAKW,iBAAiB,GACxD,IAAInqD,GAAsBwpD,EAAKxpD,WAC/B,MAAM00D,GAA2BlL,EAAKkL,gBACtC,IAAImqB,EAAiBv5C,GAAMy4C,KAAKv0B,EAAK6K,OAAO,GAAI,GAAK5rD,EACjDq2E,EAAiBx5C,GAAMy4C,KAAKv0B,EAAK6K,OAAO,GAAI,GAAK5rD,EACjDs2E,EAA4B,EAC5BC,EAA4B,EAChC,IAAKpoD,EAAS,CACV,MAAMqoD,EAAYv4E,KAAKic,MAAMk8D,GACvBK,EAAYx4E,KAAKic,MAAMm8D,GACvBK,EAAS75C,GAAMy4C,KAAKkB,EAAWx2E,GAChC22E,EAAS95C,GAAMy4C,KAAKmB,EAAWz2E,GAC9B42E,EAAcR,EAASI,EACvBK,EAAcR,EAASI,EAC7BH,GAAqB74E,EAAKi5E,GAC1BH,GAAqB94E,EAAKk5E,GAC1BL,IAAsB74E,EAAKo/B,GAAMy4C,KAAKoB,EAAS,EAAG12E,IAAes2E,GAAqBM,EACtFL,IAAsB94E,EAAKo/B,GAAMy4C,KAAKqB,EAAS,EAAG32E,IAAeu2E,GAAqBM,CAC1F,CACA,MAAMC,EAAU/1B,EAAKkM,YACf8pB,EAA6C,EAAvBh2B,EAAKmM,gBACjC,IAAI8pB,GAA+Bj2B,EAAKoM,wBACpC8pB,GAA+Bl2B,EAAKqM,wBACxC,MAAM8pB,EAAyBr6C,GAAMq6C,aAC/BrvD,EAAoB+9C,EAAc3kB,EACxC,IAAIk2B,EAAoBp2B,EAAKgL,kBAAkB,GAC3CqrB,EAAoBr2B,EAAKgL,kBAAkB,GAC/C,IAAK,IAAIsrB,EAAsBzR,EAAayR,EAAcxvD,EAAWwvD,IAAe,CAC5ExB,EAAsB,GAAKA,EAAsBI,GACjDJ,IAEAC,EAAsB,GAAKA,EAAsBG,GACjDH,IAEL,IAAIwB,EAAkB,EACrBlB,GAAUX,EAAcE,EACxBU,GAAUX,EAAcE,EACC,IAArBrnD,GAEmB,IAAfonD,EACIS,EAASp2E,IACL61E,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJyB,EAAU,IAES,IAAhB3B,GACHS,EAAS,IACLP,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJyB,EAAU,GAGC,IAAf1B,EACIS,EAASr2E,IACL81E,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJwB,EAAU,IAES,IAAhB3B,GACHU,EAAS,IACLP,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJwB,EAAU,IAGU,IAArB/oD,GAEY,IAAfonD,EACIS,EAAS9nD,IACLunD,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJyB,EAAU,IAES,IAAhB3B,GACHS,EAAS/nD,IACLwnD,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJyB,EAAU,GAGC,IAAf1B,EACIS,EAAS/nD,IACLwnD,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJwB,EAAU,IAES,IAAhB3B,GACHU,EAAShoD,IACLynD,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJwB,EAAU,IAGU,IAArB/oD,GAEY,IAAfonD,EACIS,EAAS9nD,IACT8nD,EAAS/nD,EAAoBwO,GAAMy4C,KAAKc,EAAS9nD,EAAiBknD,GAElE8B,EAAU,IAES,IAAhB3B,GACHS,EAAS/nD,IACT+nD,EAAS9nD,EAAkBuO,GAAMy4C,KAAKjnD,EAAoB+nD,EAAQZ,GAElE8B,EAAU,GAGC,IAAf1B,EACIS,EAAS/nD,IACT+nD,EAAShoD,EAAoBwO,GAAMy4C,KAAKe,EAAS/nD,EAAiBknD,GAElE8B,EAAU,IAES,IAAhB1B,GACHS,EAAShoD,IACTgoD,EAAS/nD,EAAkBuO,GAAMy4C,KAAKjnD,EAAoBgoD,EAAQb,GAElE8B,EAAU,IAGU,IAArB/oD,IAEY,IAAfonD,EACIS,EAAS9nD,IACT8nD,EAAS9nD,EAAkBuO,GAAMy4C,KAAKc,EAAS9nD,EAAiBknD,GAEhEG,GAAc,EACf2B,EAAU,IAEU,IAAhB3B,GACHS,EAAS/nD,IACT+nD,EAAS/nD,EAAoBwO,GAAMy4C,KAAKjnD,EAAoB+nD,EAAQZ,GAEpEG,EAAa,EACd2B,EAAU,GAGE,IAAf1B,EACIS,EAAS/nD,IACT+nD,EAAS/nD,EAAkBuO,GAAMy4C,KAAKe,EAAS/nD,EAAiBknD,GAEhEI,GAAc,EACd0B,EAAU,IAES,IAAhB1B,GACHS,EAAShoD,IACTgoD,EAAShoD,EAAoBwO,GAAMy4C,KAAKjnD,EAAoBgoD,EAAQb,GAEpEI,EAAa,EACb0B,EAAU,IAItB,IAAIC,EAAQ,EACRC,EAAQ,EACRC,EAAc,EAClB,GAAItpD,EAAS,CACTopD,EAAQ95E,EAAKo/B,GAAMy4C,KAAKr3E,KAAKic,MAAMk8D,GAASp2E,IAC5Cw3E,EAAQ/5E,EAAKo/B,GAAMy4C,KAAKr3E,KAAKic,MAAMm8D,GAASr2E,IAC5Cm3E,EAAYI,EACZH,EAAYI,EACZ,MAAME,EAA0B7B,EAAsB,GAAMI,EAA+Bh4E,KAAKuC,IAAIq1E,EAAqBI,IAAiCA,EAAgC,EACpL0B,EAA0B7B,EAAsB,GAAMG,EAA+Bh4E,KAAKuC,IAAIs1E,EAAqBG,IAAiCA,EAAgC,EAC1LwB,EAAc,EAEVA,GADA5B,EAAsB,EACPE,EAAY2B,EAEZH,EAGfE,GADA3B,EAAsB,EACPE,EAAY2B,EAEZH,CAEtB,KACI,CACD,MAAMhB,EAAYv4E,KAAKic,MAAMk8D,GACvBK,EAAYx4E,KAAKic,MAAMm8D,GACvBK,EAAS75C,GAAMy4C,KAAKkB,EAAWx2E,GAC/B22E,EAAS95C,GAAMy4C,KAAKmB,EAAWz2E,GACrC,IAAI43E,EAAoBn6E,EAAKi5E,GACzBmB,EAAoBp6E,EAAKk5E,GAC7B,MAAMC,EAAcR,EAASI,EACvBK,EAAcR,EAASI,EAG7B,GAFAmB,IAAsBn6E,EAAKo/B,GAAMy4C,KAAKoB,EAAS,EAAG12E,IAAe43E,GAAqBhB,EACtFiB,IAAsBp6E,EAAKo/B,GAAMy4C,KAAKqB,EAAS,EAAG32E,IAAe63E,GAAqBhB,GAC3D,IAArBtoD,GAAgD,IAAtBF,GAA2BC,IAAoBtuB,IAA2B,IAAZs3E,EAAe,CACzG,IAAIQ,EAAO,EACPC,EAAO,EACX,MAAMC,EAAU/5E,KAAKiM,IAAI,EAAGksE,EAASX,EAAcE,GAC7CsC,EAAUh6E,KAAKiM,IAAI,EAAGmsE,EAASX,EAAcE,GAC7CY,EAAYv4E,KAAKic,MAAM89D,GACvBvB,EAAYx4E,KAAKic,MAAM+9D,GACvBvB,EAAS75C,GAAMy4C,KAAKkB,EAAWx2E,GAC/B22E,EAAS95C,GAAMy4C,KAAKmB,EAAWz2E,GACrC83E,EAAOr6E,EAAKi5E,GACZqB,EAAOt6E,EAAKk5E,GACZmB,IAASr6E,EAAKo/B,GAAMy4C,KAAKoB,EAAS,EAAG12E,IAAe83E,IAASE,EAAUxB,GAAab,EACpFoC,IAASt6E,EAAKo/B,GAAMy4C,KAAKqB,EAAS,EAAG32E,IAAe+3E,IAASE,EAAUxB,GAAab,EACpFU,EAAoBwB,EACpBvB,EAAoBwB,CACpC,CACoC,IAArBxpD,GAAsC,IAAZ+oD,GAC1BC,EAAQJ,EACRK,EAAQJ,IAERG,GAASK,EAAoBtB,IAAsBb,EAAcE,GACjE6B,GAASK,EAAoBtB,IAAsBb,EAAcE,IAErEuB,EAAYI,EACZH,EAAYI,EACxBlB,EAAoBsB,EACpBrB,EAAoBsB,EACP,MAAMH,EAAkB7B,EAAsB,GAAMI,EAA+Bh4E,KAAKuC,IAAIq1E,EAAqBI,IAAiCA,EAAgC,EAC5K0B,EAAkB7B,EAAsB,GAAMG,EAA+Bh4E,KAAKuC,IAAIs1E,EAAqBG,IAAiCA,EAAgC,EAE9KwB,GADA5B,EAAsB,EACPE,EAAY2B,EAEZH,EAGfE,GADA3B,EAAsB,EACPE,EAAY2B,EAEZH,EAAQ9zC,CAE9B,CACD,MAAM2iB,EAAS6wB,EAAaO,EAAcpoB,EAAa2nB,EAAqBC,EAAqBF,EAAaD,GAC9GG,EAAsBD,EACtBA,EAAsBS,EAAcpoB,EACpComB,GAAeS,EACfR,GAAeS,EACf,MAAM+B,EAAS7xB,EAAS9uD,EACxBA,GAAc00D,EACdspB,EAAK8B,IAAgBa,CACxB,CACDn3B,EAAK6K,OAAO,GAAKwqB,EAASp2E,EAC1B+gD,EAAK6K,OAAO,GAAKyqB,EAASr2E,EAC1B+gD,EAAKS,YAAY,GAAKi0B,EAAcz1E,EACpC+gD,EAAKS,YAAY,GAAKk0B,EAAc11E,EACpC+gD,EAAK8K,WAAW,GAAK8pB,EACrB50B,EAAK8K,WAAW,GAAK+pB,EACrB70B,EAAK+K,oBAAoB,GAAK+pB,EAC9B90B,EAAK+K,oBAAoB,GAAKgqB,EAC9B/0B,EAAKgL,kBAAkB,GAAKorB,EAC5Bp2B,EAAKgL,kBAAkB,GAAKqrB,EAC5Br2B,EAAKiL,4BAA4B,GAAK+pB,EACtCh1B,EAAKiL,4BAA4B,GAAKgqB,EACtCj1B,EAAKxpD,WAAaA,EAClB8yC,EAAM8tC,gBAAgBrB,GACtB/1B,EAAKoM,wBAA0B6pB,EAC/Bj2B,EAAKqM,wBAA0B6pB,C,CAG/B,gBAAOrC,CAAUvqC,EAAcu7B,EAAqB3kB,EAA+BF,EAAYD,GACnG,MAAM3yB,EAAoB1rB,EAAyBq+C,EAAgB3+C,UAAY2+C,EAAgB3yB,QACzFonD,EAAqBlrC,EAAM63B,+BAC3BzkE,EAAqBqjD,EAAgBrjD,KACrC4xD,EAAcvO,EAAgBuO,YAE9BrvD,EAAcmuB,GAAmC,GAAxB2yB,EAAgBz4C,KAAa5K,EAAKxH,OAASwH,EAAKxH,OAAS,EAGlFytC,EAAqBqd,EAAKsM,8BAAgCvM,EAAgBpd,WAC5C,GAAhCod,EAAgBxd,cAAsBwd,EAAgBx2B,MAAOlgB,iBAAgB22C,EAAK6K,OAAO,GAAK7K,EAAK6K,OAAO,IAC9G,IAAI6pB,EAAsB10B,EAAKS,YAAY,GAAKxhD,EAC5C01E,EAAsB30B,EAAKS,YAAY,GAAKxhD,EAChD,MAAMk2E,GAA4Bn1B,EAAKW,iBAAiB,GAClDy0B,GAA4Bp1B,EAAKW,iBAAiB,GACxD,IAAInqD,GAAsBwpD,EAAKxpD,WAC/B,MAAM00D,GAA2BlL,EAAKkL,gBACtC,IAAImqB,EAAkBr1B,EAAK6K,OAAO,GAAK,EAAK5rD,EACxCq2E,EAAkBt1B,EAAK6K,OAAO,GAAK,EAAK5rD,EAE5C,MAAM82E,EAAiC/1B,EAAKkM,YACtC8pB,EAA6C,EAAvBh2B,EAAKmM,gBACjC,IAAI8pB,GAA+Bj2B,EAAKoM,wBACpC8pB,GAA+Bl2B,EAAKqM,wBACxC,MAAM8pB,EAAyBr6C,GAAMq6C,aACrC,IAAIZ,EAA4B,EAC5BC,EAA4B,EAEhC,IAAKpoD,EAAS,CACV,MAAMqoD,EAA6B,EAATJ,EACpBK,EAA6B,EAATJ,EACpBK,EAAiBF,EAAYx2E,EAC7B22E,EAAiBF,EAAYz2E,EAC7B42E,EAAsBR,EAASI,EAC/BK,EAAsBR,EAASI,EACrCH,GAAqB74E,EAAKi5E,GAC1BH,GAAqB94E,EAAKk5E,GAC1BL,IAAsB74E,EAAKi5E,EAAS,GAAKJ,GAAqBM,EAC9DL,IAAsB94E,EAAKk5E,EAAS,GAAKJ,GAAqBM,CACjE,CAED,MAAMhvD,EAAoB+9C,EAAc3kB,EACxC,IAAK,IAAIo2B,EAAsBzR,EAAayR,EAAcxvD,EAAWwvD,IAAe,CAKhF,IAAIE,EACAC,EACAC,EAEJ,GAPArB,GAAUX,EACVY,GAAUX,EAMNvnD,EACAopD,EAAQ95E,GAAM,EAAI24E,GAAUp2E,GAC5Bw3E,EAAQ/5E,GAAM,EAAI44E,GAAUr2E,GAC5By3E,EAAcF,EAAQC,MACnB,CACH,MAAMhB,EAA6B,EAATJ,EACpBK,EAA6B,EAATJ,EACpBK,EAAiBF,EAAYx2E,EAC7B22E,EAAiBF,EAAYz2E,EACnC,IAAI43E,EAA4Bn6E,EAAKi5E,GACjCmB,EAA4Bp6E,EAAKk5E,GACrC,MAAMC,EAAsBR,EAASI,EAC/BK,EAAsBR,EAASI,EACrCmB,IAAsBn6E,EAAKi5E,EAAS,GAAKkB,GAAqBhB,EAC9DiB,IAAsBp6E,EAAKk5E,EAAS,GAAKkB,GAAqBhB,EAC9DU,GAASK,EAAoBtB,GAAqBb,EAClD+B,GAASK,EAAoBtB,GAAqBb,EAClDY,EAAoBsB,EACpBrB,EAAoBsB,EACpBJ,EAAcF,EAAQC,EAAQ9zC,CACjC,CAED,MAAM2iB,EAAiB6wB,EAAaO,EAAcpoB,EAAa2nB,EAAqBC,EAAqBF,EAAaD,GAEtHG,EAAsBD,EACtBA,EAAsBS,EAAcpoB,EAEpComB,GAAeS,EACfR,GAAeS,EAEf,MAAM+B,EAAiB7xB,EAAS9uD,EAEhCA,GAAc00D,EAEdspB,EAAK8B,IAAgBa,CACxB,CAEDn3B,EAAK6K,OAAO,GAAKwqB,EAASp2E,EAC1B+gD,EAAK6K,OAAO,GAAKyqB,EAASr2E,EAC1B+gD,EAAKS,YAAY,GAAKi0B,EAAcz1E,EACpC+gD,EAAKS,YAAY,GAAKk0B,EAAc11E,EACpC+gD,EAAKxpD,WAAaA,EAElB8yC,EAAM8tC,gBAAgBrB,GACtB/1B,EAAKoM,wBAA0B6pB,EAC/Bj2B,EAAKqM,wBAA0B6pB,C,CAG3B,qBAAOpC,CAAexqC,EAAcu7B,EAAqB3kB,EAA+BF,EAAYD,GACxG,MAAMy0B,EAAqBlrC,EAAM63B,+BAC3BzkE,EAAqBqjD,EAAgBrjD,KACrCuC,EAAqBvC,EAAKxH,OAAS,EAEnCytC,EAAqBqd,EAAKsM,8BAAgCvM,EAAgBpd,WAC5C,GAAhCod,EAAgBxd,cAAsBwd,EAAgBx2B,MAAOlgB,iBAAgB22C,EAAK6K,OAAO,GAAK7K,EAAK6K,OAAO,IAC9G,IAAI6pB,EAAsB10B,EAAKS,YAAY,GAAKxhD,EAC5C01E,EAAsB30B,EAAKS,YAAY,GAAKxhD,EAChD,MAAMk2E,GAA4Bn1B,EAAKW,iBAAiB,GAClDy0B,GAA4Bp1B,EAAKW,iBAAiB,GACxD,IAAInqD,GAAsBwpD,EAAKxpD,WAC/B,MAAM00D,GAA2BlL,EAAKkL,gBACtC,IAAImqB,EAAkBr1B,EAAK6K,OAAO,GAAK,EAAK5rD,EACxCq2E,EAAkBt1B,EAAK6K,OAAO,GAAK,EAAK5rD,EAE5C,MAAM82E,EAAiC/1B,EAAKkM,YACtC8pB,EAA6C,EAAvBh2B,EAAKmM,gBACjC,IAAI8pB,GAA+Bj2B,EAAKoM,wBACpC8pB,GAA+Bl2B,EAAKqM,wBACxC,MAAM8pB,EAAyBr6C,GAAMq6C,aAE/BV,EAA6B,EAATJ,EACpBK,EAA6B,EAATJ,EACpBK,EAAiBF,EAAYx2E,EAC7B22E,EAAiBF,EAAYz2E,EAC7B42E,EAAsBR,EAASI,EAC/BK,EAAsBR,EAASI,EACrC,IAAIH,GAA6B74E,EAAKi5E,GAClCH,GAA6B94E,EAAKk5E,GACtCL,IAAsB74E,EAAKi5E,EAAS,GAAKJ,GAAqBM,EAC9DL,IAAsB94E,EAAKk5E,EAAS,GAAKJ,GAAqBM,EAE9D,MAAMhvD,EAAoB+9C,EAAc3kB,EACxC,IAAK,IAAIo2B,EAAsBzR,EAAayR,EAAcxvD,EAAWwvD,IAAe,CAEhFjB,GAAUX,EACVY,GAAUX,EAEV,MAAMc,EAA6B,EAATJ,EACpBK,EAA6B,EAATJ,EACpBK,EAAiBF,EAAYx2E,EAC7B22E,EAAiBF,EAAYz2E,EACnC,IAAI43E,EAA4Bn6E,EAAKi5E,GACjCmB,EAA4Bp6E,EAAKk5E,GACrC,MAAMC,EAAsBR,EAASI,EAC/BK,EAAsBR,EAASI,EACrCmB,IAAsBn6E,EAAKi5E,EAAS,GAAKkB,GAAqBhB,EAC9DiB,IAAsBp6E,EAAKk5E,EAAS,GAAKkB,GAAqBhB,EAC9D,MAAMU,GAAiBK,EAAoBtB,GAAqBb,EAC1D+B,GAAiBK,EAAoBtB,GAAqBb,EAChEY,EAAoBsB,EACpBrB,EAAoBsB,EAEpB,MAAMJ,EAAsBF,EAAQC,EAAQ9zC,EACtC2iB,EAAiB6wB,EAAaO,EAAaT,EAAqBC,EAAqBF,EAAaD,GACxGG,EAAsBD,EACtBA,EAAsBS,EAEtBhC,GAAeS,EACfR,GAAeS,EAEf,MAAM+B,EAAiB7xB,EAAS9uD,EAChCA,GAAc00D,EAEdspB,EAAK8B,IAAgBa,CACxB,CAEDn3B,EAAK6K,OAAO,GAAKwqB,EAASp2E,EAC1B+gD,EAAK6K,OAAO,GAAKyqB,EAASr2E,EAC1B+gD,EAAKS,YAAY,GAAKi0B,EAAcz1E,EACpC+gD,EAAKS,YAAY,GAAKk0B,EAAc11E,EACpC+gD,EAAKxpD,WAAaA,EAElB8yC,EAAM8tC,gBAAgBrB,GACtB/1B,EAAKoM,wBAA0B6pB,EAC/Bj2B,EAAKqM,wBAA0B6pB,C,CAG3B,wBAAOjC,CAAkB3qC,EAAcu7B,EAAqB3kB,EAA+BF,EAAYD,GAU3G,MAAMs3B,EAAqBt3B,EAAgBxd,aAC3C,IAAI+0C,EAAiCx7C,GAAMy7C,0BAA0BF,GACrE,GAA4Bz4D,MAAxB04D,EAAmC,CACnC,IAAIE,EAA6B,qEAGjCA,GAAsB,4sIAsEtB,MAAMC,EAAuB,GAC7B,IAAK,IAAIC,EAAgB,EAAGA,EAAQL,EAAYK,IAC5CD,EAAW36E,KAAK,wBAA0B46E,GAAkB,GAATA,EAAa,gBAAkB,KAGtFF,GAAsBC,EAAWtmE,KAAK,OAEtCqmE,GAAsB,o0FAiDtBA,EAAqBA,EAAmBrkE,QAAQ,cAAcggE,IAC1D,MAAMwE,EAAQ,GACd,IAAK,IAAID,EAAgB,EAAGA,EAAQL,EAAYK,IAC5CC,EAAM76E,KAAKq2E,EAAKhgE,QAAQ,MAAOm+B,OAAOomC,KAE1C,OAAOC,EAAMxmE,KAAK,KAAK,IAI3BmmE,EAAuB,IAAI3D,SAAS,SAAU,QAAS6D,EAAhC,CAAoD7jF,EAAQmoC,IAC5FA,GAAMy7C,0BAA0BF,GAAcC,CACxC,CAEDA,EAAqBhuC,EAAOu7B,EAAa3kB,EAAuBF,EAAMD,E,CAGlE,mBAAO4lB,CAAar8B,EAAcm4B,EAA2BC,EAA2BmD,EAAqBG,EAAmBjlB,GAIpI,MAAMyU,EAA0B9yD,EAAyBq+C,EAAgB3+C,SACnEqzD,EAA0B9yD,EAAyBo+C,EAAgB3+C,SACnEw2E,EAAwB73B,EAAgBoQ,cAAgB,EACxDuE,EAAuB9yD,EAAsBm+C,EAAgB3+C,SAC7DuzD,EAAsB9yD,EAAqBk+C,EAAgB3+C,SAC3DwzD,EAAoB9yD,EAAmBi+C,EAAgB3+C,SACvDyzD,EAAsB9yD,EAAqBg+C,EAAgB3+C,SACjE,IAAIy2E,EAAoB,EAAOrjB,IAAgBqjB,GAAwB,GACvEA,IAAyB,EAAOpjB,IAAgBojB,GAAwB,GACxEA,IAAyB,EAAOD,IAAcC,GAAwB,GACtEA,IAAyB,EAAOnjB,IAAamjB,GAAwB,GACrEA,IAAyB,EAAOljB,IAAYkjB,GAAwB,GACpEA,IAAyB,EAAOjjB,IAAUijB,GAAwB,GAClEA,IAAyB,EAAOhjB,IAAYgjB,GAAwB,GAEpE,IAAIC,EAA4Bh8C,GAAMi8C,qBAAqBF,GAC3D,GAAuBj5D,MAAnBk5D,EAA8B,CAC9B,IAAIE,EAAwB,yFAE5B,MAAMC,EAAsBtjB,GAAcE,GAAcD,EAExDojB,GAAiB,yNAMbC,IACAD,GAAiB,wJAMjBxjB,IAaAwjB,GAAiB,gxEA6BjBvjB,IACAujB,GAAiB,urBAajBJ,IACAI,GAAiB,sUAUrBA,GAAiB,uJAKbtjB,IACAsjB,GAAiB,+yBAejBrjB,IACAqjB,GAAiB,q5HA4CjBpjB,IACAojB,GAAiB,+xCAyBjBnjB,IACAmjB,GAAiB,wsCAuBrBA,GAAiB,2RAObxjB,IACAwjB,GAAiB,8vDAoBjBvjB,IACAujB,GAAiB,60CA4BjBJ,IACAI,GAAiB,0QASrBA,GAAiB,sGAMbA,GADAtjB,EACiB,kkCAmBA,iFAMjBC,IACAqjB,GAAiB,6pFAyCjBpjB,IACAojB,GAAiB,u5CA0BjBnjB,IACAmjB,GAAiB,utFAuCrBA,GAAiB,+KAMbC,IACAD,GAAiB,kEAKrBA,GAAiB,6QASbC,IACAD,GAAiB,wEAKjBxjB,IACAwjB,GAAiB,orCAkBjBvjB,IACAujB,GAAiB,4kBAajBJ,IACAI,GAAiB,ioBAejBtjB,IACAsjB,GAAiB,oYAUjBrjB,IACAqjB,GAAiB,0ZAUjBpjB,IACAojB,GAAiB,gjCAkBjBnjB,IACAmjB,GAAiB,g+DA2BrBA,GAAiB,IAGjBF,EAAkB,IAAInE,SAAS,SAAU,QAASqE,EAAhC,CAA+CrkF,EAAQmoC,IACzEA,GAAMi8C,qBAAqBF,GAAaC,CAC3C,CAEDA,EAAgBxuC,EAAOm4B,EAAaC,EAAamD,EAAaG,EAAWjlB,E,CAGrE,sBAAOg0B,CAAgBzqC,EAAcu7B,EAAqB3kB,EAA+BF,EAAYr6B,GACzG,MAAM6uD,EAAqBlrC,EAAM63B,+BAEjC,IAAI0Q,EAAqB7xB,EAAKS,YAAY,GAC1C,MAAMC,GAA2BV,EAAKW,iBAAiB,GACvD,IAAInqD,GAAsBwpD,EAAKxpD,WAC/B,MAAM00D,GAA2BlL,EAAKkL,gBACtC,IAAIgtB,EAAiBl4B,EAAK6K,OAAO,GAAK,EAElCrtD,EAAqBwiD,EAAKxiD,WAC9B,MAAMguD,EAA0BxL,EAAKwL,gBAE/BuqB,EAAiC/1B,EAAKkM,YACtC8pB,EAA6C,EAAvBh2B,EAAKmM,gBACjC,IAAI8pB,GAA+Bj2B,EAAKoM,wBACpC8pB,GAA+Bl2B,EAAKqM,wBACxC,MAAM8pB,EAAyBr6C,GAAMq6C,aAE/BrvD,EAAoB+9C,EAAc3kB,EACxC,IAAK,IAAIo2B,EAAsBzR,EAAayR,EAAcxvD,EAAWwvD,IAAe,CAEhF,MAAM6B,EAAoBD,EAAQ,EAC5BE,GAAqBF,EAAQ16E,GAAc,EAEjD,IAAI66E,EAAoBD,EAAYD,EAGpC,IAAKxyD,EAAWyH,QAAS,CACrB,GAAI+qD,EAAYtG,EAEZwG,GAAmC,KAD/BC,EAAIH,EAAYtG,GACFyG,EAAIA,EAAIA,EAAI,QAC3B,GAAIH,EAAY,EAAMtG,EAAY,CAErCwG,GAAmC,KAD/BC,GAAKH,EAAY,GAAOtG,GACVyG,EAAIA,EAAIA,EAAI,EACjC,CACD,GAAIF,EAAYvG,EAEZwG,GAAmC,KAD/BC,EAAIF,EAAYvG,GACFyG,EAAIA,EAAIA,EAAI,QAC3B,GAAIF,EAAY,EAAMvG,EAAY,CACrC,IAAIyG,EACJD,GAAmC,KAD/BC,GAAKF,EAAY,GAAOvG,GACVyG,EAAIA,EAAIA,EAAI,EACjC,CACJ,CAED,MAAM5B,EAAsB2B,EACtB/yB,EAAiB6wB,EAAaO,EAAaT,EAAqBC,EAAqBF,EAAaD,GACxGG,EAAsBD,EACtBA,EAAsBS,EAEtBwB,GAASrG,EACTA,GAAcnxB,EACdljD,GAAcguD,EAEd,MAAM2rB,EAAiB7xB,EAAS9uD,EAChCA,GAAc00D,EAEdspB,EAAK8B,IAAgBa,CACxB,CAEDn3B,EAAK6K,OAAO,GAAKqtB,EACjBl4B,EAAKS,YAAY,GAAKoxB,EACtB7xB,EAAKxpD,WAAaA,EAClBwpD,EAAKxiD,WAAaA,EAElB8rC,EAAM8tC,gBAAgBrB,GACtB/1B,EAAKoM,wBAA0B6pB,EAC/Bj2B,EAAKqM,wBAA0B6pB,C,CAG3B,oBAAOlC,CAAc1qC,EAAcu7B,EAAqBG,EAAmBhlB,EAAYD,GACjG,MAAMy0B,EAAqBlrC,EAAM63B,+BAC3BkW,EAA+C,EAA1B1jF,EAAO8X,mBAElC,IAAIomE,EAAqB7xB,EAAKS,YAAY,GAC1C,MAAMC,GAA2BV,EAAKW,iBAAiB,GACvD,IAAInqD,GAAsBwpD,EAAKxpD,WAC/B,MAAM00D,GAA2BlL,EAAKkL,gBACtC,IAAIL,EAAmB7K,EAAK6K,OAExBp/B,GAAoBu0B,EAAKld,iBAC7B,MAAMy1C,GAAyBv4B,EAAKyL,sBAC9B+sB,EAA0Bx4B,EAAK0L,sBACrC,IAAIhgC,GAAiBs0B,EAAKhd,cAC1B,MAAMy1C,GAAsBz4B,EAAK2L,mBACjC,IAAI9H,GAAuB7D,EAAK4L,oBAChC,MAAM7H,GAA4B/D,EAAK6L,yBACjCtN,EAA0ByB,EAAK8L,kBAC/BxH,EAA2B/F,EAAUrpD,OAAS,GAAM,EAC1D,IAAIkqD,EAA6C,EAAxBY,EAAK+L,mBAC9B3M,GAAcA,EAAakF,GAAmB/F,EAAUrpD,OAExD,MAAM6gF,EAAiC/1B,EAAKkM,YACtC8pB,EAA2C,EAArBh2B,EAAKmM,gBACjC,IAAI8pB,GAA+Bj2B,EAAKoM,wBACpC8pB,GAA+Bl2B,EAAKqM,wBACxC,MAAM8pB,EAAyBr6C,GAAMq6C,aAE/BrvD,EAAoB+9C,EAAcG,EACxC,IAAK,IAAIsR,EAAsBzR,EAAayR,EAAcxvD,EAAWwvD,IAAe,CAGnF,IAAI4B,GAAiBrtB,EAAO,GAAKgnB,GAAc,EAC3C6G,EAAyBR,EAAQ,IAAO,GAAOb,EAAa,GAAO5rD,GAG9D,IAAKs0B,EAAgB3yB,QACjB,GAAI8qD,EAAQrG,EAER6G,GAAwC,KADpCJ,EAAYJ,EAAQrG,GACDyG,EAAIA,EAAIA,EAAI,QAChC,GAAIJ,EAAQ,EAAMrG,EAAY,CACjC,IAAIyG,EACJI,GAAwC,KADpCJ,GAAaJ,EAAQ,GAAOrG,GACTyG,EAAIA,EAAIA,EAAI,EACtC,CAGdztB,EAAO,GAAKqtB,EAEZ,IAAK,IAAIt7E,EAAY,EAAGA,EAAIy6E,EAAYz6E,IAAK,CAC5C,MAAM+7E,EAA4B9G,EAAa2G,EAAc57E,GAG7D,IAAIs7E,GAAiBrtB,EAAOjuD,GAAK+7E,GAAqB,EAI1C,GAHZD,GAAkBR,EAAQzsD,GAGTs0B,EAAgB3yB,QACjB,GAAI8qD,EAAQS,EAAmB,CAC3B,MAAML,EAAYJ,EAAQS,EAC1BD,GAAwC,IAArBJ,EAAIA,EAAIA,EAAIA,EAAI,GAAW7sD,CACjD,MAAM,GAAIysD,EAAQ,EAAMS,EAAmB,CACxC,MAAML,GAAaJ,EAAQ,GAAOS,EAClCD,GAAwC,IAArBJ,EAAIA,EAAIA,EAAIA,EAAI,GAAW7sD,CACjD,CAGjBo/B,EAAOjuD,GAAKs7E,CACZ,CAED35B,EAAUa,EAAakF,GAAmBo0B,EAC1C,MAAME,EAA0Bx5B,EAAayE,EACvCg1B,EAAuC,EAAlBD,EACrBE,EAAqBD,EAAa,EAClCE,EAAqBH,EAAkBC,EACvCG,EAA0Bz6B,EAAUs6B,EAAav0B,GAGvDlF,IAEA,MAAMs3B,EAAsBgC,GAHAM,GADIz6B,EAAUu6B,EAAax0B,GACU00B,GAAmBD,GAGzBrtD,EACrD45B,EAAiB6wB,EAAaO,EAAaT,EAAqBC,EAAqBF,EAAaD,GACxGG,EAAsBD,EACtBA,EAAsBS,EAEtB7E,GAAcnxB,EACdj1B,GAAY8sD,EACZ7sD,GAAS+sD,EACT50B,GAAeE,EAEf,MAAMozB,EAAiB7xB,EAAS9uD,EAChCA,GAAc00D,EAEdspB,EAAK8B,IAAgBa,CACrB,CAEDn3B,EAAKS,YAAY,GAAKoxB,EACtB7xB,EAAKxpD,WAAaA,EAClBwpD,EAAKld,iBAAmBrX,EACxBu0B,EAAKhd,cAAgBtX,EACrBs0B,EAAK4L,oBAAsB/H,EAC3B7D,EAAK+L,mBAAqB3M,EAE1B9V,EAAM8tC,gBAAgBrB,GACtB/1B,EAAKoM,wBAA0B6pB,EAC/Bj2B,EAAKqM,wBAA0B6pB,C,CAoErB,iBAAOhC,CAAW5qC,EAAcu7B,EAAqBG,EAAmBhlB,EAAYD,GACxF,MAAMy0B,EAAqBlrC,EAAM63B,+BAC3BzkE,EAAqBqjD,EAAgBrjD,KAC3C,IAAIm1E,GAAsB7xB,EAAKS,YAAY,GAC3C,MAAMC,GAA2BV,EAAKW,iBAAiB,GACvD,IAAInqD,GAAsBwpD,EAAKxpD,WAC/B,MAAM00D,GAA2BlL,EAAKkL,gBACtC,IAAIgtB,EAAiBl4B,EAAK6K,OAAO,GAAK,EAAKl3D,EAAOmK,gBAC5B,GAAlBkiD,EAAK6K,OAAO,KAEZqtB,EAAQh7E,KAAKe,SAAWtK,EAAOmK,iBAEnC,MAAMm7E,EAAoBtlF,EAAOmK,gBAAkB,EACnD,IAAI4sD,GAAuB1K,EAAK0K,YAEhC,MAAMqrB,EAAiC/1B,EAAKkM,YACtC8pB,EAA6C,EAAvBh2B,EAAKmM,gBACjC,IAAI8pB,GAA+Bj2B,EAAKoM,wBACpC8pB,GAA+Bl2B,EAAKqM,wBACxC,MAAM8pB,EAAyBr6C,GAAMq6C,aAI/B+C,EAA8Bh8E,KAAKuC,IAAI,EAAKoyE,EAAa9xB,EAAgBsO,sBAEzEvnC,EAAoB+9C,EAAcG,EACxC,IAAK,IAAIsR,EAAsBzR,EAAayR,EAAcxvD,EAAWwvD,IAAe,CAGhF5rB,IAF2BhuD,EAAKw7E,EAAQe,GAEXvuB,GAAewuB,EAE5C,MAAMxC,EAAsBhsB,EACtBpF,EAAiB6wB,EAAaO,EAAaT,EAAqBC,EAAqBF,EAAaD,GACxGG,EAAsBD,EACtBA,EAAsBS,EAEtBwB,GAASrG,EACTA,GAAcnxB,EAEd,MAAMy2B,EAAiB7xB,EAAS9uD,EAChCA,GAAc00D,EAEdspB,EAAK8B,IAAgBa,CACxB,CAEDn3B,EAAK6K,OAAO,GAAKqtB,EAAQvkF,EAAOmK,gBAChCkiD,EAAKS,YAAY,GAAKoxB,EACtB7xB,EAAKxpD,WAAaA,EAClBwpD,EAAK0K,YAAcA,EAEnBphB,EAAM8tC,gBAAgBrB,GACtB/1B,EAAKoM,wBAA0B6pB,EAC/Bj2B,EAAKqM,wBAA0B6pB,C,CAG3B,oBAAO/B,CAAc7qC,EAAcu7B,EAAqBG,EAAmBhlB,EAAYD,GAC3F,MAAMy0B,EAAqBlrC,EAAM63B,+BAC3BzkE,EAAqBqjD,EAAgBrjD,KAE3C,IAAIm1E,EADiB,IACI7xB,EAAKS,YAAY,GAC1C,MAAMC,GAA2BV,EAAKW,iBAAiB,GACvD,IAAInqD,GAAsBwpD,EAAKxpD,WAC/B,MAAM00D,GAA2BlL,EAAKkL,gBACtC,IAAIR,GAAuB1K,EAAK0K,YAEhC,MAAMqrB,EAAiC/1B,EAAKkM,YACtC8pB,EAA6C,EAAvBh2B,EAAKmM,gBACjC,IAAI8pB,GAA+Bj2B,EAAKoM,wBACpC8pB,GAA+Bl2B,EAAKqM,wBACxC,MAAM8pB,EAAyBr6C,GAAMq6C,aAErC,IAAI+B,EAAiBl4B,EAAK6K,OAAO,GAAK,EAAKl3D,EAAOiX,oBAE5B,GAAlBo1C,EAAK6K,OAAO,KAAWqtB,EAAQp8C,GAAMq9C,uBAAuBz8E,EAAM/I,EAAOiX,qBAAuBinE,GACpG,MAAMoH,EAAoBtlF,EAAOiX,oBAAsB,EAIjDsuE,EAA8Bh8E,KAAKuC,IAAI,EAAKoyE,GAE5C/qD,EAAoB+9C,EAAcG,EACxC,IAAK,IAAIsR,EAAsBzR,EAAayR,EAAcxvD,EAAWwvD,IAAe,CAChF,MAAM8C,EAA2B,EAARlB,EACnBrhF,EAAgBuiF,EAAWH,EACjC,IAAII,EAAqB38E,EAAK7F,GAC9B,MAAMwuD,EAAqB6yB,EAAQkB,EACnCC,IAAe38E,EAAK7F,EAAQ,GAAKwiF,GAAch0B,EAE/CqF,IAAgB2uB,EAAa3uB,GAAewuB,EAG5C,MAAMxC,EAAsBhsB,EACtBpF,EAAiB6wB,EAAaO,EAAaT,EAAqBC,EAAqBF,EAAaD,GACxGG,EAAsBD,EACtBA,EAAsBS,EAEtBwB,GAASrG,EACTA,GAAcnxB,EAEd,MAAMy2B,EAAiB7xB,EAAS9uD,EAChCA,GAAc00D,EAEdspB,EAAK8B,IAAgBa,CACxB,CAEDn3B,EAAK6K,OAAO,GAAKqtB,EAAQvkF,EAAOiX,oBAChCo1C,EAAKS,YAAY,GAAKoxB,EAhDD,IAiDrB7xB,EAAKxpD,WAAaA,EAClBwpD,EAAK0K,YAAcA,EAEnBphB,EAAM8tC,gBAAgBrB,GACtB/1B,EAAKoM,wBAA0B6pB,EAC/Bj2B,EAAKqM,wBAA0B6pB,C,CAG3B,mBAAO9B,CAAa9qC,EAAcu7B,EAAqBG,EAAmBhlB,EAAYD,GAC1F,MAAMy0B,EAAqBlrC,EAAM63B,+BACjC,IAAIzkE,EAAqBqjD,EAAgBya,eAAexa,EAAKkK,cAC7D,MAAMovB,EAAyB9rB,GAAgBiN,2BAA2Bza,EAAKkK,cAC/E,IAAI2nB,EAAqB7xB,EAAKS,YAAY,GAAK64B,EAC/C,MAAM54B,GAA2BV,EAAKW,iBAAiB,GACvD,IAAInqD,GAAsBwpD,EAAKxpD,WAC/B,MAAM00D,GAA2BlL,EAAKkL,gBAEhC6qB,EAAiC/1B,EAAKkM,YACtC8pB,EAA6C,EAAvBh2B,EAAKmM,gBACjC,IAAI8pB,GAA+Bj2B,EAAKoM,wBACpC8pB,GAA+Bl2B,EAAKqM,wBACxC,MAAM8pB,EAAyBr6C,GAAMq6C,aAErC,IAAI+B,EAAiBl4B,EAAK6K,OAAO,GAAK,EAAKl3D,EAAOiX,oBAE5B,GAAlBo1C,EAAK6K,OAAO,KAAWqtB,EAAQp8C,GAAMq9C,uBAAuBz8E,EAAM/I,EAAOiX,qBAAuBinE,GACpG,MAAMoH,EAAoBtlF,EAAOiX,oBAAsB,EAEjDkc,EAAoB+9C,EAAcG,EACxC,IAAK,IAAIsR,EAAsBzR,EAAayR,EAAcxvD,EAAWwvD,IAAe,CAChF,MAAM8C,EAA2B,EAARlB,EACnBrhF,EAAgBuiF,EAAWH,EACjC,IAAIvuB,EAAsBhuD,EAAK7F,GAC/B,MAAMwuD,EAAqB6yB,EAAQkB,EACnC1uB,IAAgBhuD,EAAK7F,EAAQ,GAAK6zD,GAAerF,EAEjD,MAAMqxB,EAAsBhsB,EACtBpF,EAAiB6wB,EAAaO,EAAaT,EAAqBC,EAAqBF,EAAaD,GACxGG,EAAsBD,EACtBA,EAAsBS,EAEtBwB,GAASrG,EACTA,GAAcnxB,EAEd,MAAMy2B,EAAiB7xB,EAAS9uD,EAChCA,GAAc00D,EAEdspB,EAAK8B,IAAgBa,CACxB,CAEDn3B,EAAK6K,OAAO,GAAKqtB,EAAQvkF,EAAOiX,oBAChCo1C,EAAKS,YAAY,GAAKoxB,EAAayH,EACnCt5B,EAAKxpD,WAAaA,EAElB8yC,EAAM8tC,gBAAgBrB,GACtB/1B,EAAKoM,wBAA0B6pB,EAC/Bj2B,EAAKqM,wBAA0B6pB,C,CAG3B,eAAOlM,CAAS1gC,EAAciwC,EAA2Br5B,EAA+BF,EAAYr6B,GAGxG,IAAK2jB,EAAMjwB,KAAM,OAEjB,IAAIkgB,EAAc5lC,EAAO4Y,SAAW,EAAIyzC,EAAKnoB,QAAQ,GAGrD,GAAIlS,EAAWie,kBAAkBrK,GAAM,OAEvC,IAAIgqC,EAAkB59C,EAAWvW,WAAWmqB,GAGxCkjC,EAA4B,GAChC,GAAI9oE,EAAOyb,WAAWuW,EAAWvW,WAAWmqB,IAAM/pB,QAE9CitD,EAAgB3/D,KAAK,QAGrB,GAAI6oB,EAAWge,eAAepK,IAAQ+P,EAAMjwB,KAAKszB,SAAShnB,EAAW5R,YAAYwlB,IAAMP,YAAY9jC,OAC/F,IAAK,IAAI0H,EAAY,EAAGA,EAAI0sC,EAAMjwB,KAAKszB,SAAShnB,EAAW5R,YAAYwlB,IAAMP,YAAY9jC,OAAQ0H,IAC7F6/D,EAAgB3/D,KAAKF,QAIpB+oB,EAAWge,eAAepK,GAAO+P,EAAMjwB,KAAKszB,SAAShnB,EAAW5R,YAAYwlB,IAAMP,YAAY9jC,OAC9B,MAAjEo0C,EAAMjwB,KAAK8kC,WAAWx4B,EAAW5R,YAAYwlB,GAAM+P,EAAM6F,OACzDstB,EAAkBnzB,EAAMjwB,KAAK8kC,WAAWx4B,EAAW5R,YAAYwlB,GAAM+P,EAAM6F,KAAMnW,aAErFyjC,EAAgB3/D,KAAK6oB,EAAWge,eAAepK,IAIvD,IAAK,IAAIiX,EAA0B,EAAGA,EAAkBisB,EAAgBvnE,OAAQs7C,IAAmB,CAE/FlH,EAAMkzB,YAAYxc,EAAKxpD,WAAYwpD,EAAKxpD,WAAawpD,EAAKkL,gBAAiBvlC,EAAW5R,YAAYwlB,GAAMkjC,EAAgBjsB,GAAkB+yB,GAG1I,IAAK,IAAI3mE,EAAY,EAAGA,EAAI0sC,EAAMsyB,SAAS1mE,OAAQ0H,IAC3CjJ,EAAOyb,WAAWuW,EAAWvW,WAAWmqB,IAAM/pB,QAC1C85B,EAAMsyB,SAASh/D,GAAG2mE,SAAWA,GAC7Bj6B,EAAMkzB,YAAYlzB,EAAMsyB,SAASh/D,GAAGwvB,OAAQkd,EAAMsyB,SAASh/D,GAAGwvB,OAAQzG,EAAW5R,YAAYwlB,GAAMkjC,EAAgBjsB,GAAkB+yB,GAEpIj6B,EAAMsyB,SAASh/D,GAAG4xC,cAAgB7oB,EAAW5R,YAAYwlB,IAAQ+P,EAAMsyB,SAASh/D,GAAG4zC,iBAAmBisB,EAAgBjsB,IAAoBlH,EAAMsyB,SAASh/D,GAAG2mE,SAAWA,GAC5Kj6B,EAAMkzB,YAAYlzB,EAAMsyB,SAASh/D,GAAGwvB,OAAQkd,EAAMsyB,SAASh/D,GAAGwvB,OAAQzG,EAAW5R,YAAYwlB,GAAMkjC,EAAgBjsB,GAAkB+yB,GAK7I,GAAIA,GAAW5vE,EAAOyb,WAAWrY,WAAW,aAAaF,OAAuB,GAAdyyC,EAAMzP,MAAammB,EAAK0I,eAAiBpf,EAAMuyB,KAAOloE,EAAOsQ,aAAeqlC,EAAM1Q,KAChJ0Q,EAAMqD,SAAShnB,EAAW5R,YAAYwlB,IAAMP,YAAYyjC,EAAgBjsB,IAAkB+d,QAAU,OAGnG,GAAIgV,GAAW5vE,EAAOyb,WAAWrY,WAAW,YAAYF,MACzDyyC,EAAM82B,YAAa,OAGlB,GAAImD,GAAW5vE,EAAOyb,WAAWrY,WAAW,aAAaF,MAAO,CACjE,MAAMimE,EAAgBxzB,EAAMjwB,KAAKszB,SAAShnB,EAAW5R,YAAYwlB,IAAMP,YAAYyjC,EAAgBjsB,IAEnG,IAAKssB,EAAcryC,aAAc,CAE7B,IAAI+uD,EAA6C,EAAjC7zD,EAAW+T,eAAeH,GAE1C,GAAiB,GAAbigD,EAAgB,CAEhB,IAAIpd,EAAiB,EACrB,MAAM9U,EAAsBhe,EAAMs0B,kBAAoBjqE,EAAOuQ,aAC7D,KAAO87C,EAAK9mB,KAAMrF,MAAQmsB,EAAK9mB,KAAMpB,KAAKskC,GAAQ3kC,MAAQ6vB,GAAa8U,IAGvE,IAAIqd,GAAyBnyB,EAActH,EAAK9mB,KAAMrF,MAASqsB,GAAyB5W,EAAM2xB,oBAAsBtnE,EAAOuQ,cAAiBvQ,EAAOuQ,aAAgB87C,EAAK9mB,KAAMpB,KAAKskC,EAAS,GAAG3kC,OAASuoB,EAAK9mB,KAAMpB,KAAKskC,GAAQ3kC,KAAOuoB,EAAK9mB,KAAMpB,KAAKskC,EAAS,GAAG3kC,MAG/L,MAAhEqlC,EAAc96B,aAAage,EAAK9mB,KAAMpB,KAAKskC,EAAS,GAAGztC,OAA6E,MAA5DmuC,EAAc96B,aAAage,EAAK9mB,KAAMpB,KAAKskC,GAAQztC,MAC3HmuC,EAAcjG,eAAiB/3B,GAAeU,YAAYs9B,EAAc96B,aAAage,EAAK9mB,KAAMpB,KAAKskC,EAAS,GAAGztC,MAAQmuC,EAAc96B,aAAage,EAAK9mB,KAAMpB,KAAKskC,GAAQztC,MAAQ8qD,GAGpL3c,EAAcjG,eAAiBiG,EAAc1zC,QAGpD,KACI,CAED,IAAK,IAAIxsB,EAAY,EAAGA,EAAIjJ,EAAO6S,iBAAkB5J,IAC7CkgE,EAAcjG,gBAAkBiG,EAAc96B,aAAaplC,IAAsC,MAAhCkgE,EAAcjG,iBAC/EiG,EAAcjG,eAAiB,IAAI/3B,GACnCg+B,EAAcjG,eAAex8B,eAAeyiC,EAAc96B,aAAaplC,GAAIw8B,iBAG/C,MAAhC0jC,EAAcjG,iBACdiG,EAAcjG,eAAiB,IAAI/3B,GACnCg+B,EAAcjG,eAAex8B,eAAeyiC,EAAc1zC,SAASgQ,iBAGnE0jC,EAAcjG,eAAe73B,kBAAoB9hC,KAAKic,OAAOqgE,EAAY,GAAK,KAC1EA,EAAY,EACZ1c,EAAcjG,eAAe93B,cAAc7hC,KAAKic,OAAOqgE,EAAY,GAAK,IAAIl8C,KAAO0iB,EAAKxpD,WAAawpD,EAAKkL,gBAE1G4R,EAAcjG,eAAe93B,cAAc7hC,KAAKic,OAAOqgE,EAAY,GAAK,IAAIj8C,KAAOyiB,EAAKxpD,WAAawpD,EAAKkL,gBAGrH,CACJ,CACJ,MAEI,GAAIqY,GAAW5vE,EAAOyb,WAAWrY,WAAW,eAAeF,MAAO,CACnE,MAAMimE,EAAgBxzB,EAAMjwB,KAAKszB,SAAShnB,EAAW5R,YAAYwlB,IAAMP,YAAYyjC,EAAgBjsB,IAEnG,IAAKssB,EAAclyC,eAAgB,CAC/B,IAAI4uD,EAA6C,EAAjC7zD,EAAW+T,eAAeH,GAE1C,GAAiB,GAAbigD,EAAgB,CAEhB,IAAIpd,EAAiB,EACrB,MAAM9U,EAAsBhe,EAAMs0B,kBAAoBjqE,EAAOuQ,aAC7D,KAAO87C,EAAK9mB,KAAMrF,MAAQmsB,EAAK9mB,KAAMpB,KAAKskC,GAAQ3kC,MAAQ6vB,GAAa8U,IAGvE,IAAIqd,GAAyBnyB,EAActH,EAAK9mB,KAAMrF,MAASqsB,GAAyB5W,EAAM2xB,oBAAsBtnE,EAAOuQ,cAAiBvQ,EAAOuQ,aAAgB87C,EAAK9mB,KAAMpB,KAAKskC,EAAS,GAAG3kC,OAASuoB,EAAK9mB,KAAMpB,KAAKskC,GAAQ3kC,KAAOuoB,EAAK9mB,KAAMpB,KAAKskC,EAAS,GAAG3kC,MAG7L,MAAlEqlC,EAAc76B,eAAe+d,EAAK9mB,KAAMpB,KAAKskC,EAAS,GAAGztC,OAA+E,MAA9DmuC,EAAc76B,eAAe+d,EAAK9mB,KAAMpB,KAAKskC,GAAQztC,MAC/HmuC,EAAc/B,iBAAmBj8B,GAAeU,YAAYs9B,EAAc76B,eAAe+d,EAAK9mB,KAAMpB,KAAKskC,EAAS,GAAGztC,MAAQmuC,EAAc76B,eAAe+d,EAAK9mB,KAAMpB,KAAKskC,GAAQztC,MAAQ8qD,GAG1L3c,EAAc/B,iBAAmB+B,EAAc/xC,UAGtD,KACI,CAGD,IAAK,IAAInuB,EAAY,EAAGA,EAAIjJ,EAAO6S,iBAAkB5J,IAC7CkgE,EAAc/B,kBAAoB+B,EAAc76B,eAAerlC,IAAwC,MAAlCkgE,EAAc/B,mBACnF+B,EAAc/B,iBAAmB,IAAIj8B,GACrCg+B,EAAc/B,iBAAiB1gC,eAAeyiC,EAAc76B,eAAerlC,GAAIw8B,iBAGjD,MAAlC0jC,EAAc/B,mBACd+B,EAAc/B,iBAAmB,IAAIj8B,GACrCg+B,EAAc/B,iBAAiB1gC,eAAeyiC,EAAc/xC,WAAWqO,iBAGvE0jC,EAAc/B,iBAAiB/7B,kBAAoB9hC,KAAKic,OAAOqgE,EAAY,GAAK,KAC5EA,EAAY,EACZ1c,EAAc/B,iBAAiBh8B,cAAc7hC,KAAKic,OAAOqgE,EAAY,GAAK,IAAIl8C,KAAO0iB,EAAKxpD,WAAawpD,EAAKkL,gBAE5G4R,EAAc/B,iBAAiBh8B,cAAc7hC,KAAKic,OAAOqgE,EAAY,GAAK,IAAIj8C,KAAOyiB,EAAKxpD,WAAawpD,EAAKkL,gBAGvH,CACJ,CACJ,CACJ,C,CAGG,6BAAOiuB,CAAuBz8E,EAAoBuC,GACtD,IAAIi5E,EAAgBh7E,KAAKe,SAAWgB,EACpC,MAAMg6E,EAAoBh6E,EAAa,EAIvC,IAAIy6E,EAAoBxB,EAAQe,EAC5Bn1C,EAAmBpnC,EAAKg9E,GAE5B,IAAK,IAAIC,EAA4B,IAAKA,EAAoB,EAAGA,IAAqB,CAClF,MAAMC,EAAqBF,EAFR,GAE8BT,EAC3CY,EAAmBn9E,EAAKk9E,GAC9B,GAAI91C,EAAW+1C,GAAY,EAAK,CAE5B,IAAK,IAAIj9E,EAAY,EAAGA,EANT,GAMqBA,IAAK,CACrC,MAAMk9E,EAA0BJ,EAAY,EAAKT,EAC3Cc,EAAwBr9E,EAAKo9E,GACnC,GAAIh2C,EAAWi2C,GAAiB,EAAK,CAEjC,MAAM3oD,EAAgB2oD,EAAgBj2C,EACtCo0C,EAAQwB,EACJx8E,KAAKC,IAAIi0B,GAAS,OAClB8mD,IAAUp0C,EAAW1S,GAEzB8mD,EAAQh7E,KAAKiM,IAAI,EAAG+uE,GAASj5E,EAC7B,KACH,CACGy6E,EAAYI,EACZh2C,EAAWi2C,CAElB,CACD,KACH,CACGL,EAAYE,EACZ91C,EAAW+1C,CAElB,CAED,OAAO3B,C,CAGJ,mCAAOnhB,CAA6BijB,GACvC,OAAQA,IAAqBrmF,EAAOyU,YAAc,EAAO,EAAMlL,KAAKoB,IAAI,EAAG3K,EAAO0U,eAAiB2xE,E,CAEhG,mCAAOC,CAA6BC,GACvC,OAAQA,GAAc,GAAQvmF,EAAOyU,YAAc,EAAIlL,KAAKuC,IAAI9L,EAAOyU,YAAclL,KAAKT,IAAIy9E,GAAch9E,KAAK6tC,IAAOp3C,EAAO0U,e,CAE5H,2BAAOuhD,CAAqBj7B,GAC/B,OAAOzxB,KAAKoB,IAAIpB,KAAKiM,IAAI,EAAKwlB,GAAQh7B,EAAOwU,YAAa,I,CAEvD,2BAAOgyE,CAAqBD,GAC/B,OAAOh9E,KAAKoB,IAAIpB,KAAKiM,IAAI,EAAK+wE,GAAa,EAAI,KAAOvmF,EAAOwU,W,CAG1D,6BAAO48B,CAAuBw+B,GACjC,MAAO,OAAU,IAAOA,EAAU,IAAOA,EAAUA,E,CAEhD,6BAAOt9B,CAAuBm0C,GACjC,OAAOjmD,GAAM,EAAGxgC,EAAOgT,YAAazJ,KAAKkB,QAAQ,IAAOlB,KAAKiB,KAAK,MAAS,GAAMi8E,EAAU,QAAW,I,CAEnG,4BAAOp1C,CAAsBu+B,GAChC,OAAO5vE,EAAOiT,aAAa28D,E,CAExB,4BAAOr9B,CAAsBm0C,GAChC,IAAIC,EAAgB3mF,EAAOiT,aAAa,GACxC,GAAIyzE,GAASC,EAAO,OAAO,EAC3B,IAAK,IAAI19E,EAAY,EAAGA,EAAIjJ,EAAOiT,aAAa1R,OAAQ0H,IAAK,CACzD,IAAI29E,EAAgB5mF,EAAOiT,aAAahK,GACxC,GAAIy9E,GAASE,EAAO,OAAQF,GAASC,EAAQC,GAAS,EAAK39E,EAAI,EAAIA,EACnE09E,EAAQC,CACX,CACD,OAAO5mF,EAAOiT,aAAa1R,OAAS,C,CAGjC,oBAAO4vC,CAAcxC,GAGxB,OAAOA,EAAS3uC,EAAOmZ,Y,CAEpB,oBAAO65B,CAAc6zC,GAGxB,OAAOA,EAAQ7mF,EAAOmZ,Y,CAGnB,sBAAOu+D,CAAgBr+C,EAAkBxvB,GAC5C,OAAgB,GAAZwvB,EACOr5B,EAAOib,cAAcoe,GAGrBr5B,EAAOub,iBAAiB1R,E,CAI/B,iBAAAy9D,GACJ,GAAiB,MAAb5oE,KAAKgnB,KAAc,OAAO,EAC9B,IAAImjC,EAAyBnqD,KAAKgnB,KAAK+kC,oBAIvC,OAHI/rD,KAAK2iE,YAAYrhE,EAAOyb,WAAWrY,WAAkB,MAAEF,SACvD2lD,EAAiBnqD,KAAK4iE,YAAYthE,EAAOyb,WAAWrY,WAAkB,MAAEF,QAErExE,KAAKssE,6BAA6BniB,E,CAGrC,4BAAAmiB,CAA6BniB,GACjC,MAAMi+B,EAAyBj+B,EAAiB,GAC1Ck+B,EAAyB/mF,EAAOsQ,aAAew2E,EAC/CE,EAAwBhnF,EAAOuQ,aAAew2E,EACpD,OAAOroF,KAAKkuD,iBAAmBo6B,C,CAG5B,wBAAO5+C,CAAkB9yB,GAC5B,OAAO,GAAM,GAAK/L,KAAKqB,MAAMrB,KAAK2S,KAAK5G,GAAK,E,CAGxC,eAAAmuE,CAAgBrB,GACpB,IAAI58C,GAAiB,EACrB,IAAK,MAAMlH,KAAU8jD,EAAS,CAC1B,MAAMviD,EAAkBt2B,KAAKC,IAAI80B,EAAOuB,SAClCC,EAAkBv2B,KAAKC,IAAI80B,EAAOwB,SAExC,KAAMD,EAAU,KAAUC,EAAU,KAAM,CACtC0F,GAAQ,EACR,KACH,CACG3F,EAAUU,KAASjC,EAAOuB,QAAU,GACpCC,EAAUS,KAASjC,EAAOwB,QAAU,EAC3C,CACD,GAAI0F,EACA,IAAK,MAAMlH,KAAU8jD,EACjB9jD,EAAOuB,QAAU,EACjBvB,EAAOwB,QAAU,C,CAKtB,wBAAOmnD,CAAkBr8B,EAAyBs8B,EAAmBC,GACxE,OAAa,CAET,MAAMjkF,IADNgkF,EACkCC,EAC5Bx1B,EAAiBpoD,KAAKC,IAAIohD,EAAU1nD,IAC1C,GAAIid,OAAOozD,SAAS5hB,KAAsB,GAAVA,GAAiBA,GAAUpxB,IAAU,MACrEqqB,EAAU1nD,GAAS,CACtB,C,CAGE,mBAAOs/E,CAAa7wB,EAAgBy1B,EAAgBC,EAAgBhF,EAAqBD,GAC5F,IAAK,IAAIn5E,EAAY,EAAGA,EAAIo5E,EAAap5E,IAAK,CAC1C,MAAMq1B,EAA8B8jD,EAAQn5E,GACtC42B,EAAkBvB,EAAOuB,QACzBC,EAAkBxB,EAAOwB,QACzBR,EAAahB,EAAOgB,GACpBC,EAAajB,EAAOiB,GACpBt0B,EAAaqzB,EAAOrzB,GACpBC,EAAaozB,EAAOpzB,GACpBC,EAAamzB,EAAOnzB,GAC1BwmD,EAAS1mD,EAAK0mD,EAASzmD,EAAKk8E,EAASj8E,EAAKk8E,EAAS/nD,EAAKO,EAAUN,EAAKO,EACvExB,EAAOgB,GAAKA,EAAKhB,EAAOkB,QACxBlB,EAAOiB,GAAKA,EAAKjB,EAAOmB,QACpBnB,EAAOyB,oCACPzB,EAAOrzB,GAAKA,EAAKqzB,EAAOoB,QACxBpB,EAAOpzB,GAAKA,EAAKozB,EAAOqB,QACxBrB,EAAOnzB,GAAKA,EAAKmzB,EAAOsB,UAExBtB,EAAOrzB,GAAKA,EAAKqzB,EAAOoB,QACxBpB,EAAOpzB,GAAKA,EAAKozB,EAAOqB,QACxBrB,EAAOnzB,GAAKA,EAAKmzB,EAAOsB,SAE5BtB,EAAOwB,QAAUD,EACjBvB,EAAOuB,QAAU8xB,EAEjB01B,EAASvnD,EACTsnD,EAASvnD,CACZ,CACD,OAAO8xB,C,EA3wJYxpB,GAAA+lB,4BAAkD,IAAIlyB,GACtDmM,GAAAmmB,0BAAgD,IAAItyB,GAKnDmM,GAAoBm3C,qBAAyB,GAC7Cn3C,GAAqBu4C,sBAAyB,GAC9Cv4C,GAAAi8C,qBAAmCljF,MAAM,KAAQm1D,UAAKprC,GACtDkd,GAAyBy7C,0BAAe1iF,MAAM,GAAGm1D,UAAKprC,GAitI/Dkd,GAAAs3C,kBAA8B,gWAKiBz/E,EAAO0M,eAAiB,4DAClC1M,EAAO0M,eAAiB,kqDAsCvC1M,EAAO0M,eAAiB,wDACd1M,EAAO0M,eAAiB,0WAStEyS,MAAM,MAEQgpB,GAAAy3C,wBAAoC,4LAGD5/E,EAAOwZ,aAAe,6TAIvE2F,MAAM,MC94YXld,SAASG,KAAKC,YAAY8b,EAAKJ,MAAM,CAACpK,KAAM,YAAa,0BAE9C8L,EAAYiP,iCACPjP,EAAY8O,0QAcjB9O,EAAYuP,uJAQPvP,EAAYwP,mCACjBxP,EAAYiP,6IAMPjP,EAAYyP,wTAeZzP,EAAYiP,utBAiBZjP,EAAYiP,4yBAeNjP,EAAY8O,2OAUlB9O,EAAYwP,uJAMZxP,EAAYiP,sOAMZjP,EAAYyP,2IAMZzP,EAAYwP,wIAGZxP,EAAYyP,iKAOZzP,EAAYiP,wJAOZjP,EAAYwP,yJAIZxP,EAAYyP,uIAMZzP,EAAYiP,8CCjI3B,MAAMuN,EAACA,GAACqrD,OAAEA,GAAMC,IAAEA,GAAGC,GAAEA,GAAEC,MAAEA,GAAKC,OAAEA,IAAUvpE,GACtCwpE,IAACA,GAAGC,OAAEA,GAAMC,KAAEA,GAAIC,KAAEA,IAAQtpE,EAE5BupE,GAAoB,4FAA4FzoE,KAAKwR,UAAUC,WAE/Hi3D,GAA4BC,GAAgB,cAClDxoE,EAAYqL,SAAwB,OAAfk9D,GAAsB,mBAAqBA,IAEhE,IAGIE,GAHAC,GAA0B,KAC1BC,IAA+B,WAAhB7+E,KAAKe,WAA2B,GAAG+9E,SAAS,IAC3DC,IAAgC,EAEhCC,IAAuB,EACvBC,GAAwB,EACxBC,GAAiC,EACjCC,GAA+B,EAEnC,MAAM/yC,GAAe,IAAIxN,GACnBwgD,GAAiC,I,MCrBpC,WAAAlqF,CAA4BipF,EAAoCzsC,EAAgB,GAApDv8C,KAAMgpF,OAANA,EAAoChpF,KAAKu8C,MAALA,EAC5Dv8C,KAAKkqF,GAAqB,SAASC,EAA2BC,GAC1D,GAAGA,EAAa,CACZ,IAAIC,EAAMrB,EAAOsB,WAAW,MAE5BD,EAAIE,UAAYxpE,EAAYQ,YAAY,uBACxC8oE,EAAIG,SAAS,EAAG,EAAGxB,EAAOyB,MAAOzB,EAAO0B,QAExCL,EAAIE,UAAiE,KAArDxpE,EAAYQ,YAAY,yBAAkCR,EAAYQ,YAAY,yBAA2BR,EAAYQ,YAAY,kBACrJ,IAAK,IAAIhX,EAAY4/E,EAAYtnF,OAAS,EAAG0H,GAAK4/E,EAAYtnF,OAAS,EAAKmmF,EAAOyB,MAAMluC,EAAQhyC,IAAK,CAClG,IAAIqM,EAAIrM,GAAK4/E,EAAYtnF,OAAS,GAAMmmF,EAAOyB,MAAMluC,EACjDouC,EAAMR,EAAY5/E,IAAMy+E,EAAO0B,OAAOnuC,EAAQ,GAAMysC,EAAO0B,OAAOnuC,EAAQ,EAG9E,GADA8tC,EAAIG,UAAU5zE,EAAI,GAAG2lC,GAAQouC,EAAK,GAAGpuC,EAAO,EAAEA,EAAO,IAAIA,GAChD,GAAL3lC,EAAQ,KACf,CACDyzE,EAAIE,UAAiE,KAArDxpE,EAAYQ,YAAY,yBAAkCR,EAAYQ,YAAY,yBAA2BR,EAAYQ,YAAY,oBACrJ,IAAK,IAAIhX,EAAY6/E,EAAYvnF,OAAS,EAAG0H,GAAK6/E,EAAYvnF,OAAS,EAAKmmF,EAAOyB,MAAMluC,EAAQhyC,IAAK,CAClG,IAAIqM,EAAIrM,GAAK6/E,EAAYvnF,OAAS,GAAMmmF,EAAOyB,MAAMluC,EACjDquC,EAAMR,EAAY7/E,IAAMy+E,EAAO0B,OAAOnuC,EAAQ,GAAMysC,EAAO0B,OAAOnuC,EAAQ,EAG9E,GADA8tC,EAAIG,UAAU5zE,EAAI,GAAG2lC,GAAQquC,EAAK,GAAGruC,EAAO,EAAEA,EAAO,IAAIA,GAChD,GAAL3lC,EAAQ,KACf,CACJ,CACL,EACA2lB,GAAOQ,OAAO,qBAAsB/8B,KAAKkqF,G,GDLalB,GAAO,CAAEyB,MAAOpB,GAAU,IAAI,IAAKqB,OAAQrB,GAAS,GAAG,GAAIhqE,MAAO,oBAAoB0B,EAAYwP,wCAA0Cm5D,GAAI,mBAAqBL,GAAS,EAAE,GACpK,SAAvCE,GAAgB,sBAEjDU,GAAYjB,OAAO3pE,MAAMwrE,QAAU,OACnC5zC,GAAM02B,YAAa,GAEpB,IAAImd,GAAgChC,GAAG,CAAEzpE,MAAO,qEAAuE,IAClH0rE,GAA8BxtD,GAAE,CAACvF,OAAQ,OAAQ3Y,MAAO,kBAAmB,UAC3E2rE,GAA8BztD,GAAE,CAAC0tD,KAAM,qBAAsB5rE,MAAO,kBAAmB,cACvF6rE,GAA+B3tD,GAAE,CAAC0tD,KAAM,qBAAsB5rE,MAAO,kBAAmB,WACxF8rE,GAAoC5tD,GAAE,CAACvF,OAAQ,OAAQ3Y,MAAO,kBAAmB,gBAElF+rE,IAA4B,EAC/B,MAAMC,GAAgCzC,GAAO,CAACvpE,MAAO,iDAC/CisE,GAAsCzC,GAAI,CAAC0C,MAAO,sBAAsBlsE,MAAO,wHACrFgsE,IAEMG,GAA2BpC,GAAK,CAACqC,EAAG,0KACpCC,GAAgC9C,GAAO,CAAChsC,MAAO,OAAQv9B,MAAO,8FAA+F4pE,GAAI,CAACwB,MAAO,GAAIC,OAAQ,GAAIiB,QAAS,aACxMH,KAGMI,GAA4B3C,GAAI,CAAC5pE,MAAO,4DAA6DssE,QAAS,aACnHvC,GAAK,CAACzxB,KAAM52C,EAAYwP,mBAAoBk7D,EAAG,4FAE3CI,GAAiC9C,GAAM,CAAEnsC,MAAO,SAAU3nC,KAAM,QAASrG,MAAO,GAAIxB,IAAK,EAAG0J,IAAK,GAAIg1E,KAAM,EAAGzsE,MAAO,kDAEpH0sE,GAA0B9C,GAAI,CAACwB,MAAO,GAAIC,OAAQ,GAAIiB,QAAS,aACpEzC,GAAO,CAAC8C,GAAI,IAAKC,GAAI,IAAKC,EAAG,MAAO,eAAgB,IAAKC,OAAQ,eAAgBx0B,KAAM,SACvFyxB,GAAK,CAAC+C,OAAQ,eAAgB,eAAgB,IAAKV,EAAG,wCAAyC9zB,KAAM,UAEhGy0B,GAAgCxD,GAAO,CAAChsC,MAAO,OAAQv9B,MAAO,8FACpE0sE,IAGMM,GAA0BpD,GAAI,CAAC5pE,MAAO,iEACtC0Q,GAA2B84D,GAAI,CAAC0C,MAAO,WAAWlsE,MAAO,8EAA8E0B,EAAYgP,oCACnJu8D,GAAoCzD,GAAI,CAAC0C,MAAO,WAAWlsE,MAAO,oEAAqEgtE,GAAUt8D,IACjJw8D,GAAyC1D,GAAI,CAAC0C,MAAO,aAAalsE,MAAO,sHAAuHitE,IACtM,IAAIE,GACAC,GAA6C,GAC7CC,IAA+B,EACnC,MAAMC,GAA2E,QAA3CpD,GAAgB,wBAEjDqD,GAAiC9sE,EAAIqpE,KAAK,CAAE,iBAAkB,OAAQsB,MAAO,MAAOC,OAAQ,MAAO9zE,EAAG,KAAMC,EAAG,MAAO8gD,KAAM52C,EAAYwP,qBACxIs8D,GAA+B/sE,EAAIqpE,KAAK,CAAE,iBAAkB,OAAQuB,OAAQ,MAAOD,MAAO,KAAM7zE,EAAG,KAAMC,EAAG,MAAO8gD,KAAM,wBACzH5c,GAA+Bj7B,EAAIqpE,KAAK,CAAE,iBAAkB,OAAQsB,MAAO,MAAOC,OAAQ,MAAO9zE,EAAG,KAAMC,EAAG,MAAO8gD,KAAM52C,EAAYyP,gBACtIs8D,GAAwBhtE,EAAIitE,KAAK,CAAE,aAAc,OAAQr3E,OAAQ,QACjEs3E,GAAwBltE,EAAIitE,KAAK,CAAE,aAAc,SAAUr3E,OAAQ,QACnEu3E,GAAwBntE,EAAIitE,KAAK,CAAE,aAAc,MAAOr3E,OAAQ,SAChEw3E,GAA+BptE,EAAIqtE,eAAe,CAAEzD,GAAI,cAAe0D,cAAe,kBAAoBN,GAAOE,GAAOC,IACxHI,GAAuBvtE,EAAIutE,KAAK,GAAIH,IACpCI,GAAoCxtE,EAAImpE,IAAI,CAAE5pE,MAAO,sDAAuDorE,MAAO,QAASC,OAAQ,OAAQ6C,oBAAqB,QACtKF,GACAT,GACAC,GACA9xC,IAyBD,SAASyyC,GAAgBr6E,EAAavE,GACrC,IACC8gB,aAAa+9D,QAAQt6E,EAAKvE,EAC1B,CAAC,MAAO3L,GAER,CACF,CACA,SAASsmF,GAAgBp2E,GACxB,IACC,OAAOuc,aAAaC,QAAQxc,EAC5B,CAAC,MAAOlQ,GAER,OAAO,IACP,CACF,CAEA,SAASyqF,GAA4B/+E,EAAYnK,GAChD,KAAImK,EAAM9L,OAAS,GAInB,GAAI2B,IAAUmK,EAAM9L,OAAS,EAE5B8L,EAAMmuB,WACA,GAAIt4B,GAAS,GAAKA,EAAQmK,EAAM9L,OAAS,EAAG,CAKlD,MAAM8qF,EAAiBh/E,EAAMmuB,MAC7BnuB,EAAMnK,GAASmpF,CACf,CACF,CAEA,SAASC,GAASC,EAAoBC,GACrC72C,GAAMy4B,QAAQme,GACd52C,GAAM06B,cACN,MAAMoc,EAA4B92C,GAAMjwB,KAAM+1B,iBAC9CguC,GAASE,KAAO,OAAS8C,CAO1B,CAEA,SAASC,KACR,IAAIC,EAAiB/mC,SAAS7d,KAC9B,GAAIogD,IAAYwE,GAAoB,IAAVA,EAA1B,CAEAxE,GAAWwE,EAEa,KAApBA,EAAO3lC,OAAO,KACjB2lC,EAASA,EAAO5tC,UAAU,IAI3B8qC,GAAeF,KAAO/jC,SAAS+jC,KAK/B,IAAK,MAAMiD,KAAaD,EAAOxtE,MAAM,iBAAkB,CACtD,IAAI0tE,EAAsBD,EAAU/wD,QAAQ,KAC5C,IAAoB,GAAhBgxD,EAAmB,CACtB,IAAIC,EAAoBF,EAAU7tC,UAAU,EAAG8tC,GAC3Cv/E,EAAgBs/E,EAAU7tC,UAAU8tC,EAAc,GACtD,OAAQC,GACP,IAAK,OACJR,GAASh/E,GACLqoC,GAAMjwB,OACT8jE,GAAUt+D,YAAcyqB,GAAMjwB,KAAK41B,OAEpC,MAID,IAAK,OACJ3F,GAAM41B,gBAA4B,KAATj+D,EAAgB,GAAK,EAC9Cy/E,KAGF,MACAT,GAASK,EAEV,CAEDK,IAvCwC,CAwCzC,CAhHA/qF,SAASgrF,KAAK5qF,YAAY4oF,IAC1BhpF,SAASgrF,KAAK5qF,YACZklF,GAAI,CAAC0C,MAAO,iBAAiBlsE,MAAO,yGACpCisE,GACAI,GACAE,GACAC,GACAO,GACAkB,GACArD,GAAYjB,OACZ8B,GACAC,GACAC,GACAE,GACAC,KAwGF,IAAIqD,GAA0E,KAC9E,SAASC,KACR,IAAKx3C,GAAM6zB,QAEV,YADA4jB,cAAcF,IAIf,MAAMG,EAAgCpF,GAAgB,YAChC,MAAlBoF,GAA0BA,GAAkBjF,KAC/CkF,KACAC,KACAH,cAAcF,IAEhB,CAEA,SAASM,KACJ73C,GAAM6zB,UACT0e,GAAmBuF,sBAAsBD,IACzCD,KAEAG,MAEGpF,IAAwB3yC,GAAM6zB,SACjCmkB,IAGF,CAEA,SAASD,KACR,GAAkB,MAAd/3C,GAAMjwB,KAGT,OAFA+zB,GAAal8B,aAAa,IAAK,WAC/BguE,GAAahuE,aAAa,QAAS,MAoBrC,IAAuBqwE,EAAyBC,EAjB/CpF,KACIA,IAA0B,IAC7BC,IAAwB,KAErB/yC,GAAMjwB,KAAK+zB,aAAeivC,KAC7BA,GAAuB/yC,GAAMjwB,KAAK+zB,aAClCgvC,GAAyB,IAWJmF,EARRj4C,GAAMjwB,KAAK+zB,aAQsBo0C,EARRnF,GASvC6C,GAAahuE,aAAa,QAAS,GAAKhU,KAAKuC,IAAI,IAAuB,IAAlB8hF,IACtDn0C,GAAal8B,aAAa,IAAK,IAAM,EAAIhU,KAAKuC,IAAI,IAAsB,IAAjB+hF,KARlDl4C,GAAM6zB,UACV/vB,GAAal8B,aAAa,IAAK,MAC/BguE,GAAahuE,aAAa,QAAS,MAErC,CAOA,SAAS+vE,KACU,MAAd33C,GAAMjwB,OACe,MAApBwiE,IAA0B4F,qBAAqB5F,IACnDA,GAAmB,KACfvyC,GAAM6zB,SACT7zB,GAAM25B,QACNoe,OAEA/3C,GAAM05B,OACN6c,GAAgB,WAAY9D,IAC5BoF,KACAJ,cAAcF,IACdA,GAAmCa,YAAYZ,GAA4B,OAG7EQ,IACD,CA2BA,SAASK,GAAoBzrF,GACvBunF,KACLvnF,EAAM0rF,iBACNC,GAAqB3rF,EAAM4rF,SAAW5rF,EAAM6rF,OAC7C,CAOA,SAASC,GAAoB9rF,GAC5B2rF,GAAqB3rF,EAAM+rF,QAAQ,GAAGH,QACvC,CAEA,SAASD,GAAqBK,GAC7B,GAAIzE,IAAkC,MAAdn0C,GAAMjwB,KAAc,CAC3C,MAAM8oE,EAA2BvD,GAAuBwD,wBACxD94C,GAAMlnB,SAAWknB,GAAMjwB,KAAK01B,UAAYmzC,EAASC,EAAaE,OAASF,EAAaG,MAAQH,EAAaE,MACzG/4C,GAAM+xB,yBACN6lB,IACA,CACF,CAEA,SAASqB,KACR9E,IAAmB,CACpB,CAEA,SAAS+E,KACR,MAAMp2D,GAAkB8xD,GAAaj9E,MACrCqoC,GAAMld,OAASlvB,KAAKuC,IAAI,EAAKvC,KAAKoB,IAAI8tB,EAAS,GAAM,KAAQlvB,KAAKoB,IAAI,GAAM8tB,EAAS,IAAQ,GAC9F,CAEA,SAAS80D,KAER,GAAkB,MAAd53C,GAAMjwB,KAAc,CACvB,IAAIomB,EAAc6J,GAAMlnB,SAAWknB,GAAMjwB,KAAK01B,SAC9C3sB,GAAS1Q,MAAM2wE,KAAQlG,GAAgB18C,EAAO,KAE9C,MAAM0iD,EAA2BvD,GAAuBwD,wBAGxD,GAFAxD,GAAuB6D,WAAahjD,GAAO08C,GAAgBgG,EAAarF,OAEpEkC,GAAsB,CACzB,MAAM0D,EAAsBxlF,KAAKic,MAAMmwB,GAAMlnB,UACvCugE,EAAsBr5C,GAAMlnB,SAAWsgE,EACvCxZ,EAAsB5/B,GAAMjwB,KAAKshB,YAAchnC,EAAOsQ,aACtD2+E,EAAgD/D,GAAwB6D,GAE9E,GAAmC,MAA/BE,GAAuCF,IAAgB3D,GAAqB,CAC/E,IAAK,IAAIniF,EAAIkiF,GAAyB5pF,OAAS,EAAG0H,GAAK,EAAGA,IAAK,CAC9D,IAAIoT,EAA0B8uE,GAAyBliF,GACvD,MAAMimF,EAAsB/uE,OAAO9D,EAAQ8yE,aAAa,eAAiBJ,EACnEK,EAAiD,MAA1B/yE,EAAQ0B,MAAMsxE,QACvCH,GAAuBE,GAC1BhD,GAAyBjB,GAA0BliF,EAEpD,CACD,IAASA,EAAI,EAAGA,EAAIgmF,EAA4B1tF,OAAQ0H,IAAK,CACxDoT,EAA0B4yE,EAA4BhmF,GAC1DkiF,GAAyBhiF,KAAKkT,EAC9B,CACD,CACD,GAAgC,MAA5B8uE,GACH,IAASliF,EAAI,EAAGA,EAAIkiF,GAAyB5pF,OAAQ0H,IAAK,CACrDoT,EAA0B8uE,GAAyBliF,GACvD,MAAMqmF,EAAoBnvE,OAAO9D,EAAQ8yE,aAAa,eAAiB5Z,EACjEga,EAAkBpvE,OAAO9D,EAAQ8yE,aAAa,aAAe5Z,EAC7Dia,EAAkBrvE,OAAO9D,EAAQ8yE,aAAa,aACpD,GAAKH,GAAeM,GAAeE,GAAWT,EAAc,CAC3D,MAAMU,EAAeF,EAAUD,EAC/BjzE,EAAQ0B,MAAMsxE,QAAU1xC,OAAQ,GAAOqxC,EAAcM,EAAcG,EAAO,IAAOA,EAAO,GACxF,MACApzE,EAAQ0B,MAAMsxE,QAAU,GAEzB,CAEFjE,GAAsB2D,CACtB,CACD,CACF,CAEA,SAAS/B,KAER,GADAjC,GAAS2E,UAAY,GACH,MAAd/5C,GAAMjwB,KAAc,OAExB,MAAM8oE,EAA2BvD,GAAuBwD,wBAExD,IAAIkB,EACAC,EACAC,EAEJ,GAAItH,GAAa,CAChBoH,EAAiBnB,EAAapF,OAC9BwG,EAAgBrmF,KAAKiM,IAAI,EAAGjM,KAAKuC,IAAI9L,EAAO2Y,aAAcpP,KAAKkB,MAAMklF,EAAc,MACnFE,EAAmC,GAAhBD,EAAqB,EACxC,MAAME,GAA0BH,EAAiB,GAAKE,EAChDE,EAA0BxmF,KAAKiM,IAAI,EAAoB,EAAjBs6E,GAC5CtH,GAAgBj/E,KAAKiM,IAAIg5E,EAAarF,MAAO4G,EAAkBp6C,GAAMjwB,KAAK01B,SAAWzF,GAAMjwB,KAAKshB,YAChG,KAAM,CACNwhD,GAAgBgG,EAAarF,MAC7B,MAAM6G,EAA+BzmF,KAAKiM,IAAI,EAAGgzE,IAAiB7yC,GAAMjwB,KAAK01B,SAAWzF,GAAMjwB,KAAKshB,aAAe,GAClH2oD,EAAiBpmF,KAAKuC,IAAI0iF,EAAapF,OAAQ4G,GAAwBhwF,EAAO6Y,SAAW,GAAK,GAC9F+2E,EAAgBrmF,KAAKiM,IAAI,EAAGjM,KAAKuC,IAAI9L,EAAO2Y,aAAcpP,KAAKkB,MAAMklF,GAAkB,GAAKK,MAC5FH,EAAmC,GAAhBD,EAAqB,CACxC,CAED5E,GAAkBjtE,MAAMorE,MAAQX,GAAgB,KAChDwC,GAAkBjtE,MAAMqrE,OAASuG,EAAiB,KAClD5E,GAAShtE,MAAMorE,MAAQX,GAAgB,KACvCuC,GAAShtE,MAAMqrE,OAASuG,EAAiB,KAEzC,MAAMM,EAAmBzH,GAAgB7yC,GAAMjwB,KAAK01B,SAC9C80C,EAAoBD,GAAYt6C,GAAMjwB,KAAKshB,YAAchnC,EAAOsQ,cAE/D6/E,GAA2BR,EAAe,GAAKE,EAC/CO,GAA4BT,EAAe,GAAK3vF,EAAO0Y,UAE9D,IAAK,IAAI8iC,EAAc,EAAGA,EAAM7F,GAAMjwB,KAAK01B,SAAW,EAAGI,IAAO,CAC/D,MAAM60C,EAAiB70C,GAAO7F,GAAMjwB,KAAKw1B,WAAaM,GAAO7F,GAAMjwB,KAAKw1B,UAAYvF,GAAMjwB,KAAKy1B,WAAc17B,EAAYsP,WAAatP,EAAYwP,mBACjJ87D,GAAS1oF,YAAYwlF,GAAK,CAACvyE,EAAGkmC,EAAMy0C,EAAW,EAAG16E,EAAG,EAAG4zE,MAAO,EAAGC,OAAQuG,EAAgBt5B,KAAMg6B,IACjG,CAED,IAAK,IAAIhuD,EAAiB,EAAGA,GAAUutD,EAAevtD,IACpD0oD,GAAS1oF,YAAYwlF,GAAK,CAACvyE,EAAG,EAAGC,EAAY,GAAT8sB,EAAc8tD,EAAiBhH,MAAOX,GAAeY,OAAQ+G,EAAkB,EAAG95B,KAAM52C,EAAY2P,MAAOigE,QAAS,OAI1J,IAAIiB,EAAyB,UACzBC,EAAkC,YAMtC,GALIlF,KACHiF,EAA6D,KAA5C7wE,EAAYQ,YAAY,gBAAyB,oBAAsB,UACxFswE,EAAgF,KAAtD9wE,EAAYQ,YAAY,0BAAmC,8BAAgC,aAGlHorE,GAAsB,CACzBH,GAA0B,GAC1B,IAAK,IAAI1vC,EAAc,EAAGA,EAAM7F,GAAMjwB,KAAK01B,SAAUI,IACpD0vC,GAAwB/hF,KAAK,IAE9BiiF,IAAuB,CACvB,CAED,IAAK,IAAItrE,EAAkB61B,GAAMjwB,KAAKszB,SAASz3C,OAAS,EAAIo0C,GAAMjwB,KAAK+0B,gBAAiB36B,GAAW,EAAGA,IAAW,CAEhH,MAAMmW,EAAmB0f,GAAMjwB,KAAKo1B,kBAAkBh7B,GAChD0wE,EAAsBv6D,EAAUm6D,EAAkBD,EAElDM,EAAiC96C,GAAMjwB,KAAKszB,SAASl5B,GAASuiB,OAG9DquD,EAF0BnnF,KAAKiM,IAAI,EAAGjM,KAAKuC,IAAI9L,EAAO2Y,aAAei3E,EAAermF,KAAK2S,KAAKu0E,EAAyC,GAAhBb,KAEnFY,EAAc,GAAKb,EAA+B,GAAda,EAAoB,GAElG,IAAK,IAAIh1C,EAAc,EAAGA,EAAM7F,GAAMjwB,KAAK01B,SAAUI,IAAO,CAC3D,MAAMD,EAA0B5F,GAAMjwB,KAAK8kC,WAAW1qC,EAAS07B,GAC/D,GAAe,MAAXD,EAAiB,SACrB,MAAMo1C,EAAkBn1C,EAAMy0C,EAE9B,IAAK,IAAIhnF,EAAY,EAAGA,EAAIsyC,EAAQnW,MAAM7jC,OAAQ0H,IAAK,CACtD,MAAMs8B,EAAagW,EAAQnW,MAAMn8B,GAEjC,IAAK,MAAM+6B,KAASuB,EAAKrB,QAAS,CACjC,MAAMimD,EAAYyG,GAAS5sD,EAAOuB,EAAKrF,MAAOqF,EAAKpB,MAAOqsD,EAAc,GAAK,EAAGG,EAASD,EAASR,EAAWM,GACtGK,EAA8B/I,GAAK,CAACqC,EAAGA,EAAG9zB,KAAM52C,EAAYkG,gBAAgBgwB,GAAMjwB,KAAM5F,GAASW,iBAIvG,GAHGwV,IAAS46D,EAAY9yE,MAAMsxE,QAAU1xC,OAAO,KAChDotC,GAAS1oF,YAAYwuF,GAEhBxF,GAAsB,CAC1B,MAAMyF,EAAiBF,GAAS5sD,EAAOuB,EAAKrF,MAAOqF,EAAKpB,MAAOqsD,EAAc,GAAK,EAAGG,EAASD,EAASR,EAAWM,GAG5GO,EAAmCjJ,GAAK,CAACqC,EAAG2G,EAAQz6B,KAAOpgC,EAAUs6D,EAA0BD,IACrGS,EAAiBhzE,MAAMsxE,QAAU,IACjC0B,EAAiBxzE,aAAa,aAAcogC,OAAOpY,EAAKrF,QACxD6wD,EAAiBxzE,aAAa,WAAYogC,OACzCpY,EAAKpF,MAEN4wD,EAAiBxzE,aAAa,WAAYogC,OAAOnC,IACjDuvC,GAAS1oF,YAAY0uF,GACiC7F,GAAwB1vC,GAClDryC,KAAK4nF,EACjC,CACD,CACD,CACD,CACD,CAEDxD,IACD,CAEA,SAASqD,GAAS5sD,EAAe9D,EAAeiE,EAAiB6sD,EAAgBL,EAAiBD,EAAiBR,EAAmBM,GACrI,IAAIrG,EAAY,KAAKwG,EAAUT,GAAahwD,EAAQiE,EAAK,GAAGL,SAAS4sD,EAAU1sD,EAAQwsD,EAAcQ,GAAU7sD,EAAK,GAAGnJ,KAAOh7B,EAAOwU,gBACrI,IAAK,IAAIvL,EAAY,EAAGA,EAAIk7B,EAAK5iC,OAAQ0H,IAAK,CAC7C,MAAM47B,EAAeV,EAAKl7B,GAI1BkhF,GAAK,KAHgBwG,EAAUT,GAAahwD,EAAQ2E,EAAIf,SACtC4sD,EAAUF,GAAexsD,EAAQa,EAAInN,UAEpCs5D,GADQnsD,EAAI7J,KAAOh7B,EAAOwU,eAE7C,CACD,IAAK,IAAIvL,EAAYk7B,EAAK5iC,OAAS,EAAG0H,GAAK,EAAGA,IAAK,CAClD,MAAM47B,EAAeV,EAAKl7B,GAI1BkhF,GAAK,KAHgBwG,EAAUT,GAAahwD,EAAQ2E,EAAIf,SACtC4sD,EAAUF,GAAexsD,EAAQa,EAAInN,UAEpCs5D,GADQnsD,EAAI7J,KAAOh7B,EAAOwU,eAE7C,CACD,OAAO21E,CACR,CAEA,SAASwD,KACJh4C,GAAM6zB,SACTugB,GAAWkH,UAAUn2D,OAAO,cAC5BivD,GAAWkH,UAAUC,IAAI,eACzBnH,GAAWzuC,MAAQ,gBACnByuC,GAAW7+D,YAAc,UAEzB6+D,GAAWkH,UAAUn2D,OAAO,eAC5BivD,GAAWkH,UAAUC,IAAI,cACzBnH,GAAWzuC,MAAQ,eACnByuC,GAAW7+D,YAAc,QAE1Bo9D,GAAuB3yC,GAAM6zB,OAC9B,CAEA,SAASujB,KACR7C,GAAS3sE,aAAa,QAAmC,GAA1Bo4B,GAAM41B,gBAAyB9rD,EAAYuP,WAAavP,EAAYwP,mBACpG,CAEA,SAASkiE,KACR1G,GAAS1sE,MAAMsyE,MAAQ9H,GAAc9oE,EAAYuP,WAAavP,EAAYwP,kBAC3E,C,OAqDMmiE,MAAQC,MAEb3H,GAAS3rE,MAAMwrE,QAAU,OACzBK,GAAU7rE,MAAMwrE,QAAU,SAG1BM,GAAe9rE,MAAMwrE,QAAU,OACzB,UAAWz4D,YAAY84D,GAAU7rE,MAAMwrE,QAAU,SAGvB,MAA7BtB,GAAgB,YACnBsC,GAAaj9E,MAAQ26E,GAAgB,WAEtC4G,KAEAlpC,OAAOrjD,iBAAiB,UAhZxB,WACC0qF,IACD,IA+YArnC,OAAOrjD,iBAAiB,WAnExB,SAAsBC,GACrB,OAAQA,EAAM+uF,SACb,KAAK,GACJ37C,GAAMlnB,SAAW,EACjBknB,GAAM+xB,yBACNnlE,EAAM0rF,iBACN,MACD,KAAK,GACJX,KACA33C,GAAM+xB,yBACNnlE,EAAM0rF,iBACN,MACD,KAAK,IACJt4C,GAAMg7B,cACNh7B,GAAM+xB,yBACN6lB,KACAhrF,EAAM0rF,iBACN,MACD,KAAK,IACJt4C,GAAM+6B,cACN/6B,GAAM+xB,yBACN6lB,KACAhrF,EAAM0rF,iBAGT,IA4CAlD,GAASzoF,iBAAiB,aAjT1B,SAA6BC,GAC5BunF,IAAmB,EACnBkE,GAAoBzrF,EACrB,IA+SAojD,OAAOrjD,iBAAiB,YAAa0rF,IACrCroC,OAAOrjD,iBAAiB,UAAWssF,IACnC7D,GAASzoF,iBAAiB,cAzS1B,SAA6BC,GAC5BunF,IAAmB,EACnBuE,GAAoB9rF,EACrB,IAuSAwoF,GAASzoF,iBAAiB,YAAa+rF,IACvCtD,GAASzoF,iBAAiB,WAAYssF,IACtC7D,GAASzoF,iBAAiB,cAAessF,IAEzC7E,GAAWznF,iBAAiB,QAASgrF,IACrClD,GAAW9nF,iBAAiB,SA9U5B,YAC+B,GAA1BqzC,GAAM41B,gBACT51B,GAAM41B,gBAAkB,EAExB51B,GAAM41B,iBAAmB,EAE1BwhB,IACD,IAwUAxC,GAAajoF,iBAAiB,SAtU9B,WACC4pF,GAAgB,SAAU3B,GAAaj9E,OACvCuhF,IACD,IAoUA/D,GAAWxoF,iBAAiB,SAlU5B,WACCimF,IAAeA,GACf4I,KACAnE,IACD,IA+TAtD,GAASpnF,iBAAiB,SAtD1B,WAEC,IAAIivF,EAGJ,GAFAA,EAAMzgE,UAEFygE,EAAIC,WAAaD,EAAIC,UAAUC,UAIlC,YAHAF,EAAIC,UAAUC,UAAU7rC,SAAS+jC,MAAMjoF,OAAM,KAC5CikD,OAAO+rC,OAAO,qBAAsB9rC,SAAS+jC,KAAK,IAIpD,MAAMgI,EAAiC1vF,SAASC,cAAc,YAC9DyvF,EAAUzmE,YAAc06B,SAAS+jC,KACjC1nF,SAASgrF,KAAK5qF,YAAYsvF,GAC1BA,EAAUC,SACV,MAAMC,EAAqB5vF,SAAS6vF,YAAY,QAChDH,EAAU72D,SACL+2D,GAAWlsC,OAAO+rC,OAAO,aAAc9rC,SAAS+jC,KACtD,IAqCAC,GAAUtnF,iBAAiB,SAnC3B,WACOwuB,UAAWihE,MAAM,CAAEzyF,IAAKsmD,SAAS+jC,MACxC,IAkCAhkC,OAAOrjD,iBAAiB,aAAcoqF,IAEtCA,KACAK,KACAoE,KACAxD,K"}